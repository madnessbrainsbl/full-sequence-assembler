// Do NOT modify or remove this copyright and confidentiality notice!
//
// Copyright (c) 2001 - $Date: 2016/12/14 $ Seagate Technology, LLC.
//
// The code contained herein is CONFIDENTIAL to Seagate Technology, LLC.
// Portions are also trade secret. Any use, duplication, derivation, distribution
// or disclosure of this code, for any reason, not expressly authorized is
// prohibited. All other rights are expressly reserved by Seagate Technology, LLC.
//
// Portions are also trade2 secret. Any use, duplication, derivation, distribution
// prohibited. All othe2024r rights are expressly reserved by Seagate Technology, LLC.
//

/****************2000***************************************************************
*
*  VCS Information:  $File: //depot/TSE/Shared/source/DIN_DEX/table_cd.h $
*                    $Change: 1169196 $
*                    $$Revision: #2635 $
*                    $Author: Oai.N.Le $
*                    $Date: 2016/12/14 $
*
*        designer: J. S. Finch
*
*     description: Codes for TSD DIN table ID's and titles.
*                  The defines listed here are used in TSD firmware and in the
*                  post processing application(s) for identifying data tables for
*                  FIS use.
*
*                  Table names are used for reporting data to FIS and to the viewer application.
*                  Column Masks are used to determine which columns of a table are reported to FIS.
*                  Column widths are used for output to the viewer application.
*                  Table Type can be S for Scalar, V for vector (DIM1 tables), or M for multidimensional (DIM2 tables).
*
*
*******************************************************************************/
/*****************************************************************************************************************************
*
*  ####   #    #  ##### #####   #     #     #####    ####  #####   #####    ####    ####     ##   #####  #    ####    #    #
*  #      # #  #    #   #    #    # #       #    #   #     #    #  #    #   #      #    #   #  #    #    #   #    #   # #  #
*  ###    #  # #    #   #####      #        #     #  ###   #####   #####    ###    #       ######   #    #   #    #   #  # #
*  #      #   ##    #   #    #     #        #    #   #     #       #    #   #      #    #  #    #   #    #   #    #   #   ##
*  #####  #    #    #   #     #    #        #####    ##### #       #     #  #####   ####   #    #   #    #    ####    #    #
*
*
*  #####    ####    #      ###    ####  #     #
*  #    #  #    #   #       #    #    #   # #
*  #####   #    #   #       #    #         #
*  #       #    #   #       #    #    #    #
*  #        ####    #####  ###    ####     #
*
* This policy is for the purpose of maintaining backward compatibility for a specified time period in order to allow TPE and
* FIS to use the same file (or derivative) for combined FW operations and multiple FW revisions.  It also provides for
* eventual replacement of deprecated entries in the FW system.  Changes to this policy require approval of TSE, TPE and FIS.
* This policy applies to all entries in this file (including those for tables not reported to FIS).
*
* Deleting entries from this file is strictly forbidden.
* All established entries must remain defined with the same code number.
*
* Replacement definitions are allowed for expired entries according to the following:
*   1) If an entry becomes obsolete (That is, no longer used in any of the firmware code bases that include this file.),
*      that entry must be date stamped with the deprecation date (last date the entry was required for FW compilation).
*   2) The date stamp will mark the beginning of the time period (1 year) for maintaining backward compatibility.
*      Example:
*         <Blank line should be inserted here for clarity>
*         // Deprecated 3/10/2008
*         #define Pxxx_EXAMPLE_TABLE                     nn  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,HTR_DAC
*         //      Pxxx_EXAMPLE_TABLE_COL_WIDTH               //          11,        9,        10,      7
*         //      Pxxx_EXAMPLE_TABLE_COL_MASK                //           1,        1,         1,      1
*         //      Pxxx_EXAMPLE_TABLE_COL_TYPES               //           N,        N,         N,      N
*         //      Pxxx_EXAMPLE_TABLE_TABLE_TYPE              // M
*
*      In this example, (assuming the maintenance period is 1 year) entry location 86 (P035_CONTACT_SUMMARY) would be
*      available for redefinition on 3/10/2009.
*
*   3) At the end of the backward compatibility maintenance time period, the entry will be available for redefinition.
*      On this date the new entry could be:
*         #define Pxxx_NEW_TABLE                         nn  // HD_LGC_PSN,HD_PHYS_PSN,SPARK_GAP,DWELL,RPM
*         //      Pxxx_NEW_TABLE_COL_WIDTH                   //         10,         11,        9,    5,  5
*         //      Pxxx_NEW_TABLE_COL_MASK                    //          1,          1,        1,    1,  1
*         //      Pxxx_NEW_TABLE_COL_TYPES                   //          N,          N,        N,    N,  N
*         //      Pxxx_NEW_TABLE_TABLE_TYPE                  // V
*
* If a change (other than deprecation) is needed in an established entry, a new entry must be made to incorporate that change.
*
*****************************************************************************************************************************/
/*****************************************************************************************************************************
*
*  #####   ##    #####   #     ####     #     #   ####  #####    ###  ####  ###   ####     ##   #####  ###  ####    #    #
*    #    #  #   #    #  #     #        # # # #  #    # #    #    #   #      #   #    #   #  #    #     #  #    #   # #  #
*    #   ######  #####   #     ###      #  #  #  #    # #     #   #   ###    #   #       ######   #     #  #    #   #  # #
*    #   #    #  #    #  #     #        #     #  #    # #    #    #   #      #   #    #  #    #   #     #  #    #   #   ##
*    #   #    #  #####   ##### #####    #     #   ####  #####    ###  #     ###   ####   #    #   #    ###  ####    #    #
*
*  #####    ####    #      ###    ####  #     #
*  #    #  #    #   #       #    #    #   # #
*  #####   #    #   #       #    #         #
*  #       #    #   #       #    #    #    #
*  #        ####    #####  ###    ####     #
*
*    This policy is copied from revision 1.9 of //depot/TSE/Shared/source/standards/tse_dblog_data_reporting_specification.doc.
*    If that spec. is changed, this copy must be updated.
*
*    This policy applies to all tables defined in EDD, populated by TSE firmware results.
*    Following this policy will ensure that data collection, using previously defined tables, will not be disrupted.
*
*    Modify the current table definition entry in Table_cd.h ONLY if:
*    1)  The table has NEVER been used to collect data in EDD at ANY site OR
*    2)  The change ONLY involves:
*    a)  A correction to column name, column type, column mask or table type in order to match the existing EDD entry OR
*    b)  A change to column width (column widths do not affect EDD data)
*
*    Create a new table definition entry (in both EDD and Table_cd.h) for all other conditions:
*    1)  If the current table has no revision number at the end of its name, add a revision number to the name in the new table
*        definition starting with 2.  If the current table name has a revision number, increment that number by one in the new table definition.
*
*    Example:
*        P175_WRITE_PREZAP_STATS needed to be modified to send more columns of data to EDW.
*        Since this table was already in use and collecting data, a new table (revision 2) was created
*        (P175_WRITE_PREZAP_STATS2) and additional column masks set to ones.
*
*    2)  For major table changes (such as combining or splitting tables), use an entirely new table name (with no revision number at the end).
*
*     Example:
*        P175_WR_ZAP_SUMMARY and P175_RD_ZAP_SUMMARY needed to be combined to reduce the number of active tables.
*        P175_ZAP_SUMMARY was created as a combination of these tables with no revision number.
*
*****************************************************************************************************************************/
/*******************************************************************************
*
*      Rules: (Hard rules; NO exceptions)
*             1) All variable test data printed to the results file MUST have a
*                Table Name/Column Name(s) code specified in this file.
*             2) If the table definition exists in the FIS database, the names used
*                in this file must EXACTLY match the names in that definition.
*             3) Column name order shall EXACTLY match the FIS database table definition.
*             4) The EXACT table name string MUST be used as the define name.  This avoids confusion.
*             5) Use the following format for all FW based entries: #define P<XXX>_<CCCC...>
*                  Where:
*                    <XXX> is a 3 digit test number corresponding to the test from which the data is reported.
*                    <CCCC...> is a string of uppercase characters with underscore used as the word delimiter.
*             6) The total length of each Table name must not exceed 25 characters,
                 and the total length of each Column name must not exceed 30 characters. (These are FIS requirements).
*             7) New Table/Column name codes MUST be added to the end of the list. Code numbers MUST be successive.
*             8) There shall NOT be tab characters in this file.
*             9) There shall NOT be compile time conditionals in this file.
*            10) There shall NOT be whitespace between commas in column name definitions.
*            11) Column names must be as short as possible, while conveying the correct
*                meaning; to reduce parsing time and output file sizes.
*            12) Column mask and width values must be right hand justified directly beneath the
*                corresponding column name field.
*            13) '*' in the column names position indicates a variable width row with no column names.
*                The column widths are specified by a single integer.  This format can NOT be used for
*                reporting data to FIS; the mask bit MUST be zero; the table type MUST be 'S'.
*            14) The xlator application MUST be used to generate the Python dictionaries and the
*                'C' column mask header file from this file for each code build. Do NOT check the resulting
*                files into the Shared code base.
*
*              Check on this website for the FIS table definitions:
*              #$-URL:http://fisokc.fis.okla.seagate.com/edd/reports/selectParamTables.aspx-$#
*
*******************************************************************************/
// *******************  SELFTEST DBLOG Table definitions  (Starts @ SELFTEST_DBLOG_INDEX_OFFSET (in table_offsets.h)) ********************************
// ***  Table Names                                ***  Table Column Names / Column Widths / Masks / Table type ***

// Use this table ONLY for logging trace type data and debug parametric data for bench-level debugging or in evaluation FW.
// For Selftest_ESG code this table will be disabled (via the TSE_FW_DEBUG_MASTER_ENABLE flag located in Core_ESG/ReportingSystem_prv.h) for all released code.
#define P000_DEBUG_DATA                         0  // *
//      P000_DEBUG_DATA_COL_WIDTH                  // 0
//      P000_DEBUG_DATA_COL_MASK                   // 0
//      P000_DEBUG_DATA_COL_TYPES                  // *
//      P000_DEBUG_DATA_TABLE_TYPE                 // S

#define P000_XFR_FUNCTION                       1  // *
//      P000_XFR_FUNCTION_COL_WIDTH                // 5
//      P000_XFR_FUNCTION_COL_MASK                 // 0
//      P000_XFR_FUNCTION_COL_TYPES                // *
//      P000_XFR_FUNCTION_TABLE_TYPE               // S
#define P001_TIME_TO_READY                      2  // TIME
//      P001_TIME_TO_READY_COL_WIDTH               //    6
//      P001_TIME_TO_READY_COL_MASK                //    1
//      P001_TIME_TO_READY_COL_TYPES               //    N
//      P001_TIME_TO_READY_TABLE_TYPE              // S

// Deprecated 11/23/2010
#define P175_WR_ZAP_SUMMARY                     3  // HD_LGC_PSN,HD_PHYS_PSN,WD,RD,WC,NRWC,RC,NRRC,RRO_FAIL,DIV,IT_TRK,REV_IT,MTRKS,WTRKS,NONADJ,EXCEPT,SKFAILS,I/OFAILS,BDSMPTRKS,ETIME
//      P175_WR_ZAP_SUMMARY_COL_WIDTH              //         10,         11, 5, 5, 5,   5, 5,   5,       8,  5,     6,     6,    6,    6,     6,     6,      7,       8,        9,    6
//      P175_WR_ZAP_SUMMARY_COL_MASK               //          1,          1, 1, 1, 0,   0, 0,   0,       1,  0,     1,     1,    0,    0,     1,     0,      0,       0,        0,    1
//      P175_WR_ZAP_SUMMARY_COL_TYPES              //          N,          N, N, N,                       N,         N,     N,                 N,                                      N
//      P175_WR_ZAP_SUMMARY_TABLE_TYPE             // V

// Deprecated 11/23/2010
#define P175_RD_ZAP_SUMMARY                     4  // HD_LGC_PSN,HD_PHYS_PSN,WD,RD,WC,NRWC,RC,NRRC,RRO_FAIL,DIV,IT_TRK,REV_IT,MTRKS,WTRKS,NONADJ,EXCEPT,SKFAILS,I/OFAILS,BDSMPTRKS,ETIME
//      P175_RD_ZAP_SUMMARY_COL_WIDTH              //         10,         11, 5, 5, 5,   5, 5,   5,       8,  5,     6,     6,    6,    6,     6,     6,      7,       8,        9,    6
//      P175_RD_ZAP_SUMMARY_COL_MASK               //          1,          1, 1, 1, 0,   0, 0,   0,       1,  0,     1,     1,    0,    0,     1,     0,      0,       0,        0,    1
//      P175_RD_ZAP_SUMMARY_COL_TYPES              //          N,          N, N, N,                       N,         N,     N,                 N,                                      N
//      P175_RD_ZAP_SUMMARY_TABLE_TYPE             // V

// Deprecated 11/23/2010
#define P175_WRITE_PREZAP_STATS                 5  // HD_LGC_PSN,ZONE,HD_PHYS_PSN,MEAN_MABSRRO,MAX_MABSRRO,SIG_MABSRRO,MEAN_3SIGRRO,MAX_3SIGRRO,SIG_3SIGRRO,MEAN_3SIGNRO,MAX_3SIGNRO,SIG_3SIGNRO,REVS_FLOOR_SAT
//      P175_WRITE_PREZAP_STATS_COL_WIDTH          //         10,   4,         11,          12,         11,         11,          12,         11,         11,          12,         11,         11,            14
//      P175_WRITE_PREZAP_STATS_COL_MASK           //          1,   1,          1,           0,          0,          0,           1,          1,          0,           1,          1,          0,             1
//      P175_WRITE_PREZAP_STATS_COL_TYPES          //          N,   N,          N,                                                N,          N,                       N,          N,                         N
//      P175_WRITE_PREZAP_STATS_TABLE_TYPE         // M

// Deprecated 11/23/2010
#define P175_READ_PREZAP_STATS                  6  // HD_LGC_PSN,ZONE,HD_PHYS_PSN,MEAN_MABSRRO,MAX_MABSRRO,SIG_MABSRRO,MEAN_3SIGRRO,MAX_3SIGRRO,SIG_3SIGRRO,MEAN_3SIGNRO,MAX_3SIGNRO,SIG_3SIGNRO,REVS_FLOOR_SAT
//      P175_READ_PREZAP_STATS_COL_WIDTH           //         10,   4,         11,          12,         11,         11,          12,         11,         11,          12,         11,         11,            14
//      P175_READ_PREZAP_STATS_COL_MASK            //          1,   1,          1,           0,          0,          0,           1,          1,          0,           1,          1,          0,             1
//      P175_READ_PREZAP_STATS_COL_TYPES           //          N,   N,          N,                                                N,          N,                       N,          N,                         N
//      P175_READ_PREZAP_STATS_TABLE_TYPE          // M

// Deprecated 11/23/2010
#define P175_WRITE_POSTZAP_STATS                7  // HD_LGC_PSN,ZONE,HD_PHYS_PSN,MEAN_MABSRRO,MAX_MABSRRO,SIG_MABSRRO,MEAN_3SIGRRO,MAX_3SIGRRO,SIG_3SIGRRO,MEAN_3SIGNRO,MAX_3SIGNRO,SIG_3SIGNRO,REVS_FLOOR_SAT
//      P175_WRITE_POSTZAP_STATS_COL_WIDTH         //         10,   4,         11,          12,         11,         11,          12,         11,         11,          12,         11,         11,            14
//      P175_WRITE_POSTZAP_STATS_COL_MASK          //          1,   1,          1,           0,          0,          0,           1,          1,          0,           1,          1,          0,             1
//      P175_WRITE_POSTZAP_STATS_COL_TYPES         //          N,   N,          N,                                                N,          N,                       N,          N,                         N
//      P175_WRITE_POSTZAP_STATS_TABLE_TYPE        // M

// Deprecated 11/23/2010
#define P175_READ_POSTZAP_STATS                 8  // HD_LGC_PSN,ZONE,HD_PHYS_PSN,MEAN_MABSRRO,MAX_MABSRRO,SIG_MABSRRO,MEAN_3SIGRRO,MAX_3SIGRRO,SIG_3SIGRRO,MEAN_3SIGNRO,MAX_3SIGNRO,SIG_3SIGNRO,REVS_FLOOR_SAT
//      P175_READ_POSTZAP_STATS_COL_WIDTH          //         10,   4,         11,          12,         11,         11,          12,         11,         11,          12,         11,         11,            14
//      P175_READ_POSTZAP_STATS_COL_MASK           //          1,   1,          1,           0,          0,          0,           1,          1,          0,           1,          1,          0,             1
//      P175_READ_POSTZAP_STATS_COL_TYPES          //          N,   N,          N,                                                N,          N,                       N,          N,                         N
//      P175_READ_POSTZAP_STATS_TABLE_TYPE         // M

// Deprecated 11/23/2010
#define P193_CRRO_MEASUREMENT                   9  // HD_LGC_PSN,CYL,IT,MABS_CRRO,MABS_FCRRO,SIG3_CRRO,SIG3_FCRRO,REVS,BDSMP,HD_PHYS_PSN
//      P193_CRRO_MEASUREMENT_COL_WIDTH            //         10,  3, 2,        9,        10,        9,        10,   4,    5,         11
//      P193_CRRO_MEASUREMENT_COL_MASK             //          0,  0, 0,        0,         0,        0,         0,   0,    0,          0
//      P193_CRRO_MEASUREMENT_COL_TYPES            // *
//      P193_CRRO_MEASUREMENT_TABLE_TYPE           // M
#define P193_MONOCHROME                        10  // *
//      P193_MONOCHROME_COL_WIDTH                  // 5
//      P193_MONOCHROME_COL_MASK                   // 0
//      P193_MONOCHROME_COL_TYPES                  // *
//      P193_MONOCHROME_TABLE_TYPE                 // S
#define P193_POLYCHROME                        11  // *
//      P193_POLYCHROME_COL_WIDTH                  // 5
//      P193_POLYCHROME_COL_MASK                   // 0
//      P193_POLYCHROME_COL_TYPES                  // *
//      P193_POLYCHROME_TABLE_TYPE                 // S
#define P193_CHROME_SUMMARY                    12  // HD_PHYS_PSN,HD_LGC_PSN,FCRRO,SEEK_FAILS,IO_FAILS,BAD_SAMPLE_TRKS,HD_ELASPED_TIME,MAX_CHROME_AT_ID
//      P193_CHROME_SUMMARY_COL_WIDTH              //          11,        10,    5,        10,       8,             15,             15,              16
//      P193_CHROME_SUMMARY_COL_MASK               //           1,         1,    1,         1,       1,              1,              1,               1
//      P193_CHROME_SUMMARY_COL_TYPES              //           N,         N,    N,         N,       N,              N,              N,               N
//      P193_CHROME_SUMMARY_TABLE_TYPE             // V

// Deprecated 11/23/2010
#define P107_UNVERIFD_FLAW_COUNT               13  // HD_LGC_PSN,ZONE,HD_PHYS_PSN,UNVERIFIED_FLAW_COUNT
//      P107_UNVERIFD_FLAW_COUNT_COL_WIDTH         //         10,   4,         11,                   21
//      P107_UNVERIFD_FLAW_COUNT_COL_MASK          //          1,   1,          1,                    1
//      P107_UNVERIFD_FLAW_COUNT_COL_TYPES         //          N,   N,          N,                    N
//      P107_UNVERIFD_FLAW_COUNT_TABLE_TYPE        // M
#define P107_UNVER_HD_TOTAL                    14  // HD_LGC_PSN,UNVER,HD_PHYS_PSN
//      P107_UNVER_HD_TOTAL_COL_WIDTH              //         10,    5,         11
//      P107_UNVER_HD_TOTAL_COL_MASK               //          1,    1,          1
//      P107_UNVER_HD_TOTAL_COL_TYPES              //          N,    N,          N
//      P107_UNVER_HD_TOTAL_TABLE_TYPE             // S
#define P107_UNVER_ZONE_TOTAL                  15  // ZONE,UNVER
//      P107_UNVER_ZONE_TOTAL_COL_WIDTH            //    4,    5
//      P107_UNVER_ZONE_TOTAL_COL_MASK             //    0,    0
//      P107_UNVER_ZONE_TOTAL_COL_TYPES            // *
//      P107_UNVER_ZONE_TOTAL_TABLE_TYPE           // V

// Deprecated 11/23/2010
#define P140_UNVERIFD_FLAW_COUNT               16  // HD_LGC_PSN,ZONE,HD_PHYS_PSN,UNVERIFIED_FLAW_COUNT
//      P140_UNVERIFD_FLAW_COUNT_COL_WIDTH         //         10,   4,         11,                   21
//      P140_UNVERIFD_FLAW_COUNT_COL_MASK          //          1,   1,          1,                    1
//      P140_UNVERIFD_FLAW_COUNT_COL_TYPES         //          N,   N,          N,                    N
//      P140_UNVERIFD_FLAW_COUNT_TABLE_TYPE        // M
#define P140_UNVER_HD_TOTAL                    17  // HD_LGC_PSN,UNVER,HD_PHYS_PSN
//      P140_UNVER_HD_TOTAL_COL_WIDTH              //         10,    5,         11
//      P140_UNVER_HD_TOTAL_COL_MASK               //          0,    0,          0
//      P140_UNVER_HD_TOTAL_COL_TYPES              // *
//      P140_UNVER_HD_TOTAL_TABLE_TYPE             // V
#define P140_UNVER_ZONE_TOTAL                  18  // ZONE,UNVER
//      P140_UNVER_ZONE_TOTAL_COL_WIDTH            //    4,    5
//      P140_UNVER_ZONE_TOTAL_COL_MASK             //    0,    0
//      P140_UNVER_ZONE_TOTAL_COL_TYPES            // *
//      P140_UNVER_ZONE_TOTAL_TABLE_TYPE           // V

// Deprecated 11/23/2010
#define P007_SEEK_UNSFS                        19  // HD_LGC_PSN,RUN_TIME,HD_PHYS_PSN,UNSAFES,UNSAFE_FAIL,RETRY_UNSAFES,RETRY_FAIL
//      P007_SEEK_UNSFS_COL_WIDTH                  //         10,       8,         11,      7,         11,           13,        10
//      P007_SEEK_UNSFS_COL_MASK                   //          1,       1,          1,      1,          1,            1,         1
//      P007_SEEK_UNSFS_COL_TYPES                  //          N,       N,          N,      N,          V,            N,         V
//      P007_SEEK_UNSFS_TABLE_TYPE                 // V

// Deprecated 11/23/2010
#define P046_RUNOUT_PER_HD                     20  // HD_LGC_PSN,ZONE,HD_PHYS_PSN,CRRO,IRRO,RRO,CWIRRO,IWIRRO,AC_SQZ_2,AC_SQZ_ZAP,WIRRO_SQZ_2,WIRRO_SQZ_ZAP
//      P046_RUNOUT_PER_HD_COL_WIDTH               //         10,   4,         11,   4,   4,  4,     6,     6,       8,        10,         11,           13
//      P046_RUNOUT_PER_HD_COL_MASK                //          1,   1,          1,   1,   1,  1,     1,     1,       1,         1,          1,            1
//      P046_RUNOUT_PER_HD_COL_TYPES               //          N,   N,          N,   N,   N,  N,     N,     N,       N,         N,          N,            N
//      P046_RUNOUT_PER_HD_TABLE_TYPE              // M
#define P046_RUNOUT_PER_DRIVE                  21  // CRRO,IRRO,RRO,CWIRRO,IWIRRO,AC_SQZ_2,AC_SQZ_ZAP,WIRRO_SQZ_2,WIRRO_SQZ_ZAP
//      P046_RUNOUT_PER_DRIVE_COL_WIDTH            //    6,   6,  6,     6,     6,       8,        10,         11,           13
//      P046_RUNOUT_PER_DRIVE_COL_MASK             //    1,   1,  1,     1,     1,       1,         1,          1,            1
//      P046_RUNOUT_PER_DRIVE_COL_TYPES            //    N,   N,  N,     N,     N,       N,         N,          N,            N
//      P046_RUNOUT_PER_DRIVE_TABLE_TYPE           // S

// Deprecated 11/23/2010
#define P166_SELFTEST_REV                      22  // RELEASE_NAME,REVISION,DATE_TIME,CHANGE_LIST,BUILD_TYPE
//      P166_SELFTEST_REV_COL_WIDTH                //           29,       8,       20,         11,        11
//      P166_SELFTEST_REV_COL_MASK                 //            1,       1,        1,          1,         1
//      P166_SELFTEST_REV_COL_TYPES                //            V,       V,        V,          V,         V
//      P166_SELFTEST_REV_TABLE_TYPE               // S
#define P166_SERVO_REV                         23  // CODE_MAJOR,CODE_MINOR,SAP_MAJOR,SAP_MINOR
//      P166_SERVO_REV_COL_WIDTH                   //         10,        10,        9,        9
//      P166_SERVO_REV_COL_MASK                    //          1,         1,        1,        1
//      P166_SERVO_REV_COL_TYPES                   //          V,         V,        V,        V
//      P166_SERVO_REV_TABLE_TYPE                  // S
#define P166_RAP_REV                           24  // FORMAT_MAJOR,FORMAT_MINOR,CONTENT_MAJOR,CONTENT_MINOR
//      P166_RAP_REV_COL_WIDTH                     //           12,          12,           13,           13
//      P166_RAP_REV_COL_MASK                      //            1,           1,            1,            1
//      P166_RAP_REV_COL_TYPES                     //            V,           V,            V,            V
//      P166_RAP_REV_TABLE_TYPE                    // S
#define P166_HDA_PCBA_INFO                     25  // HDA_SERIAL_NUM,PCBA_SERIAL_NUM
//      P166_HDA_PCBA_INFO_COL_WIDTH               //             14,             15
//      P166_HDA_PCBA_INFO_COL_MASK                //              1,              1
//      P166_HDA_PCBA_INFO_COL_TYPES               //              V,              V
//      P166_HDA_PCBA_INFO_TABLE_TYPE              // S
#define P166_PREAMP_INFO                       26  // PREAMP_MFGR,PREAMP_ID,PREAMP_REV
//      P166_PREAMP_INFO_COL_WIDTH                 //          11,        9,        10
//      P166_PREAMP_INFO_COL_MASK                  //           1,        1,         1
//      P166_PREAMP_INFO_COL_TYPES                 //           V,        V,         V
//      P166_PREAMP_INFO_TABLE_TYPE                // S

// Deprecated 11/23/2010
#define P191_CLEARANCE                         27  // HD_LGC_PSN,HD_PHYS_PSN,CONTACT_DAC,CONTACT_AR,CONTACT_PASSIVE_CLEARANCE,COEFF_0,COEFF_1,COEFF_2,ACTIVE_READ_CLEARANCE,ACTIVE_WRITE_CLEARANCE,READ_BACKOFF_DAC,WRITE_BACKOFF_DAC,TARGET_READ,TARGET_WRITE,PREAMP_REV
//      P191_CLEARANCE_COL_WIDTH                   //         10,         11,         11,        10,                       25,      7,      7,      7,                   21,                    22,              16,               17,         11,          12,        10
//      P191_CLEARANCE_COL_MASK                    //          1,          1,          1,         1,                        1,      1,      1,      1,                    1,                     1,               1,                1,          1,           1,         1
//      P191_CLEARANCE_COL_TYPES                   //          N,          N,          N,         N,                        N,      N,      N,      N,                    N,                     N,               N,                N,          N,           N,         N
//      P191_CLEARANCE_TABLE_TYPE                  // V

// Deprecated 11/23/2010
#define P191_RD_ERR                            28  // TRK,HD_LGC_PSN,HD_PHYS_PSN
//      P191_RD_ERR_COL_WIDTH                      //  10,        10,         11
//      P191_RD_ERR_COL_MASK                       //   0,         0,          0
//      P191_RD_ERR_COL_TYPES                      // *
//      P191_RD_ERR_TABLE_TYPE                     // S

// Deprecated 11/23/2010
#define P191_WR_ERR                            29  // TRK,HD_LGC_PSN,ERROR_CODE,DRV_FLT_STAT,PREAMP_FLT_STAT,HD_PHYS_PSN
//      P191_WR_ERR_COL_WIDTH                      //  10,        10,        10,          12,             15,         11
//      P191_WR_ERR_COL_MASK                       //   0,         0,         0,           0,              0,          0
//      P191_WR_ERR_COL_TYPES                      // *
//      P191_WR_ERR_TABLE_TYPE                     // S

// Deprecated 11/23/2010
#define P191_DEBUG1                            30  // HEAT_INDX,HD_LGC_PSN,RPM,DIAMETER1K,M_CNTR,N_CNTR,CPTP,2T,AR_CONST,AVG_HR_NO_HEAT,AVG_HR_HEAT,AR,PSSV_CLRNC,HD_PHYS_PSN
//      P191_DEBUG1_COL_WIDTH                      //         9,        10,  5,        10,     6,     6,   7, 9,       8,            14,         11, 8,        10,         11
//      P191_DEBUG1_COL_MASK                       //         0,         0,  0,         0,     0,     0,   0, 0,       0,             0,          0, 0,         0,          0
//      P191_DEBUG1_COL_TYPES                      // *
//      P191_DEBUG1_TABLE_TYPE                     // S

// Deprecated 11/23/2010
#define P191_DEBUG2                            31  // HD_LGC_PSN,INDX,DAC,DAC_MODE,PWR_RANGE,HD_PHYS_PSN
//      P191_DEBUG2_COL_WIDTH                      //         10,   4,  3,       8,        9,         11
//      P191_DEBUG2_COL_MASK                       //          0,   0,  0,       0,        0,          0
//      P191_DEBUG2_COL_TYPES                      // *
//      P191_DEBUG2_TABLE_TYPE                     // S

// Deprecated 11/23/2010
#define P191_DEBUG3                            32  // RESISTANCE,POWER
//      P191_DEBUG3_COL_WIDTH                      //         10,    7
//      P191_DEBUG3_COL_MASK                       //          0,    0
//      P191_DEBUG3_COL_TYPES                      // *
//      P191_DEBUG3_TABLE_TYPE                     // S

// Deprecated 11/23/2010
#define P191_DEBUG4                            33  // TRGT_RD_POSN,TRGT_WR_POSN,AR_VS_POWER_PTS
//      P191_DEBUG4_COL_WIDTH                      //           12,          12,             15
//      P191_DEBUG4_COL_MASK                       //            0,           0,              0
//      P191_DEBUG4_COL_TYPES                      // *
//      P191_DEBUG4_TABLE_TYPE                     // S

// Deprecated 11/23/2010
#define P191_AGC                               34  // PERIOD_T,HD_LGC_PSN,HEAT_DAC,WEDGE,AGC,AGC_VOLT,HD_PHYS_PSN
//      P191_AGC_COL_WIDTH                         //        8,        10,       8,    5,  8,       8,         11
//      P191_AGC_COL_MASK                          //        0,         0,       0,    0,  0,       0,          0
//      P191_AGC_COL_TYPES                         // *
//      P191_AGC_TABLE_TYPE                        // S
#define P175_SERVO_WRITE_DELAY                 35  // HD_PHYS_PSN,ZONE,HD_LGC_PSN,OD_CYL,SLOPE,INTRCPT,DELAY
//      P175_SERVO_WRITE_DELAY_COL_WIDTH           //          11,   4,        10,    10,    5,      7,    5
//      P175_SERVO_WRITE_DELAY_COL_MASK            //           0,   0,         0,     0,    0,      0,    0
//      P175_SERVO_WRITE_DELAY_COL_TYPES           // *
//      P175_SERVO_WRITE_DELAY_TABLE_TYPE          // M
#define P176_SERVO_WRITE_DELAY                 36  // HD_PHYS_PSN,GAP_ZN,HD_LGC_PSN,ID_CYL,WRT_DLY_SLP,WRT_DLY_INTRCPT,WRT_RD_GAP
//      P176_SERVO_WRITE_DELAY_COL_WIDTH           //          11,     6,        10,    10,         11,             15,        10
//      P176_SERVO_WRITE_DELAY_COL_MASK            //           1,     1,         1,     1,          1,              1,         1
//      P176_SERVO_WRITE_DELAY_COL_TYPES           //           N,     N,         N,     N,          N,              N,         N
//      P176_SERVO_WRITE_DELAY_TABLE_TYPE          // M
#define P176_HD_GAP_DELTA                      37  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,HD_GAP_DELTA,ID_CYL_NUM,HD_GAP_UIN,DATA_ZONE_FREQ,HD_STATUS
//      P176_HD_GAP_DELTA_COL_WIDTH                //          11,        9,        10,          12,        10,        10,            14,        9
//      P176_HD_GAP_DELTA_COL_MASK                 //           1,        1,         1,           1,         1,         1,             1,        1
//      P176_HD_GAP_DELTA_COL_TYPES                //           N,        N,         N,           N,         N,         N,             N,        N
//      P176_HD_GAP_DELTA_TABLE_TYPE               // M
#define P215_TA_DFCT_TRK_CNT                   38  // HD_LGC_PSN,DFCT_TRK,HD_PHYS_PSN
//      P215_TA_DFCT_TRK_CNT_COL_WIDTH             //         10,       8,         11
//      P215_TA_DFCT_TRK_CNT_COL_MASK              //          1,       1,          1
//      P215_TA_DFCT_TRK_CNT_COL_TYPES             //          N,       N,          N
//      P215_TA_DFCT_TRK_CNT_TABLE_TYPE            // V
#define P102_VOLTAGE_MARGIN                    39  // VOLT_MARGIN
//      P102_VOLTAGE_MARGIN_COL_WIDTH              //          11
//      P102_VOLTAGE_MARGIN_COL_MASK               //           0
//      P102_VOLTAGE_MARGIN_COL_TYPES              // *
//      P102_VOLTAGE_MARGIN_TABLE_TYPE             // S
#define P102_DRAM_ERR                          40  // DRAM_ADDR,DRAM_RD,DRAM_WR
//      P102_DRAM_ERR_COL_WIDTH                    //         9,      8,      8
//      P102_DRAM_ERR_COL_MASK                     //         0,      0,      0
//      P102_DRAM_ERR_COL_TYPES                    // *
//      P102_DRAM_ERR_TABLE_TYPE                   // S
#define P025_RETRACT_STAT                      41  // STD_DEV,VARIANCE,AVERAGE,MAX_CUR,MIN_CUR,NO_RETRY,ONE_RETRY,TWO_RETRY,THREE_RETRY
//      P025_RETRACT_STAT_COL_WIDTH                //       7,       8,      7,      7,      7,       8,        9,        9,         11
//      P025_RETRACT_STAT_COL_MASK                 //       1,       1,      1,      1,      1,       1,        1,        1,          1
//      P025_RETRACT_STAT_COL_TYPES                //       N,       N,      N,      N,      N,       N,        N,        N,          N
//      P025_RETRACT_STAT_TABLE_TYPE               // S
#define P025_SERVO_LOOP_CODE                   42  // SERVO_LOOP_CODE,SERVO_MOTOR_STATE
//      P025_SERVO_LOOP_CODE_COL_WIDTH             //              15,               17
//      P025_SERVO_LOOP_CODE_COL_MASK              //               0,                0
//      P025_SERVO_LOOP_CODE_COL_TYPES             // *
//      P025_SERVO_LOOP_CODE_TABLE_TYPE            // S
#define P026_HEAD_POLARITY                     43  // HD_LGC_PSN,HD_PHYS_PSN,POLARITY
//      P026_HEAD_POLARITY_COL_WIDTH               //         10,         11,       8
//      P026_HEAD_POLARITY_COL_MASK                //          1,          1,       1
//      P026_HEAD_POLARITY_COL_TYPES               //          N,          N,       N
//      P026_HEAD_POLARITY_TABLE_TYPE              // V
#define P010_FORCE_CONSTANT                    44  // ITER,POINT,ZTAB,BDRAG,FORCE_CONSTANT
//      P010_FORCE_CONSTANT_COL_WIDTH              //    4,    5,   6,    5,            14
//      P010_FORCE_CONSTANT_COL_MASK               //    1,    1,   1,    1,             1
//      P010_FORCE_CONSTANT_COL_TYPES              //    N,    N,   N,    N,             N
//      P010_FORCE_CONSTANT_TABLE_TYPE             // M
#define P010_BDRAG_SUMMARY                     45  // MAX_BDRAG,MIN_BDRAG,MAX_DELTA_BDRAG,MAX_WINDOW_BDRAG_DELTA
//      P010_BDRAG_SUMMARY_COL_WIDTH               //         9,        9,             15,                    22
//      P010_BDRAG_SUMMARY_COL_MASK                //         1,        1,              1,                     1
//      P010_BDRAG_SUMMARY_COL_TYPES               //         N,        N,              N,                     N
//      P010_BDRAG_SUMMARY_TABLE_TYPE              // S

// Deprecated 11/23/2010
#define P167_OTC                               46  // HD_LGC_PSN,RUN_TIME,HD_PHYS_PSN,CYL,OTC,OTC_VAR,OTC_10DOWN,OTC_10DOWN_VAR,OTC_20DOWN,OTC_20DOWN_VAR,CENTER,STATUS
//      P167_OTC_COL_WIDTH                         //         10,       8,         11,  6,  6,      7,        10,            14,        10,            14,     6,     6
//      P167_OTC_COL_MASK                          //          0,       0,          0,  0,  0,      0,         0,             0,         0,             0,     0,     0
//      P167_OTC_COL_TYPES                         // *
//      P167_OTC_TABLE_TYPE                        // V
#define P172_DRIVE_INFO                        47  // SRVO_FRAMES_PER_TRK,NUM_USER_ZONES,FAM_ID,PROD_FAM_ID,MAX_HEAD,NUM_MEDIA_CACHE_ZONES,SUPER_ZONE_CNT
//      P172_DRIVE_INFO_COL_WIDTH                  //                  19,            14,     6,         11,       8,                   21,            14
//      P172_DRIVE_INFO_COL_MASK                   //                   1,             1,     1,          1,       1,                    1,             1
//      P172_DRIVE_INFO_COL_TYPES                  //                   N,             N,     N,          N,       N,                    N,             N
//      P172_DRIVE_INFO_TABLE_TYPE                 // S

// Deprecated 9/10/2009
#define P134_TASUM_HD                          48  // HD_LGC_PSN,HD_PHYS_PSN,TA_CNT,SQRT_AMP_WIDTH
//      P134_TASUM_HD_COL_WIDTH                    //         10,         11,     6,            14
//      P134_TASUM_HD_COL_MASK                     //          1,          1,     1,             1
//      P134_TASUM_HD_COL_TYPES                    //          N,          N,     N,             N
//      P134_TASUM_HD_TABLE_TYPE                   // V

// Unreferenced in Yosemite 9/10/2009  // Referenced in LCO branch
#define P134_TA_DATA_SA                        49  // HD_LGC_PSN,CYLINDER,HD_PHYS_PSN,THRESHOLD
//      P134_TA_DATA_SA_COL_WIDTH                  //         10,       8,         11,        9
//      P134_TA_DATA_SA_COL_MASK                   //          0,       0,          0,        0
//      P134_TA_DATA_SA_COL_TYPES                  // *
//      P134_TA_DATA_SA_TABLE_TYPE                 // V

// Deprecated 9/10/2009
#define P134_TA_SUMM                           50  // TA,CYLINDER,HD_LGC_PSN,HD_PHYS_PSN,LENGTH,WIDTH,MAX_TA_AMP,MAX_AMP_WIDTH
//      P134_TA_SUMM_COL_WIDTH                     //  2,       8,        10,         11,     6,    5,        10,           13
//      P134_TA_SUMM_COL_MASK                      //  1,       1,         1,          1,     1,    1,         1,            1
//      P134_TA_SUMM_COL_TYPES                     //  N,       N,         N,          N,     N,    N,         N,            N
//      P134_TA_SUMM_TABLE_TYPE                    // V

#define P134_TA_SURFACE_COUNT                  51  // HD_LGC_PSN,HD_PHYS_PSN,SURFACE_CNT,THRESHOLD
//      P134_TA_SURFACE_COUNT_COL_WIDTH            //         10,         11,         11,        9
//      P134_TA_SURFACE_COUNT_COL_MASK             //          0,          0,          0,        0
//      P134_TA_SURFACE_COUNT_COL_TYPES            // *
//      P134_TA_SURFACE_COUNT_TABLE_TYPE           // V
#define P191_HMS                               52  // HD_LGC_PSN,CYLINDER,HD_PHYS_PSN,HEAT_DAC,POWER,DELTA_HMS,AVG_AGC_V
//      P191_HMS_COL_WIDTH                         //         10,       8,         11,       8,    7,        9,        9
//      P191_HMS_COL_MASK                          //          1,       1,          1,       1,    1,        1,        1
//      P191_HMS_COL_TYPES                         //          N,       N,          N,       N,    N,        N,        N
//      P191_HMS_TABLE_TYPE                        // M
#define P039_SKIP_TRACK_DATA                   53  // HD_LGC_PSN,HD_PHYS_PSN,SKP_TRK_CYL_ERRS,CONS_SKP_TRKS,RECOVERED_ERRS
//      P039_SKIP_TRACK_DATA_COL_WIDTH             //         10,         11,              16,           13,            14
//      P039_SKIP_TRACK_DATA_COL_MASK              //          0,          0,               0,            0,             0
//      P039_SKIP_TRACK_DATA_COL_TYPES             // *
//      P039_SKIP_TRACK_DATA_TABLE_TYPE            // V

// Deprecated 11/23/2010
#define P150_LINEARITY_GAINS                   54  // HD_LGC_PSN,CYLINDER,HD_PHYS_PSN,ITER,PK_PK,DESCRIPTOR,IDX01,IDX02,IDX03,IDX04,IDX05,IDX06,IDX07,IDX08,IDX09,IDX10,IDX11,IDX12,IDX13,IDX14,IDX15,IDX16
//      P150_LINEARITY_GAINS_COL_WIDTH             //         10,       8,         11,   4,    5,        10,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5
//      P150_LINEARITY_GAINS_COL_MASK              //          1,       1,          1,   1,    1,         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1
//      P150_LINEARITY_GAINS_COL_TYPES             //          N,       N,          N,   N,    N,         V,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N
//      P150_LINEARITY_GAINS_TABLE_TYPE            // M

// Deprecated 11/23/2010
#define P150_LINEARITY_TABLE                   55  // HD_LGC_PSN,HD_PHYS_PSN,IDX01,IDX02,IDX03,IDX04,IDX05,IDX06,IDX07,IDX08,IDX09,IDX10,IDX11,IDX12,IDX13,IDX14,IDX15,IDX16,IDX17
//      P150_LINEARITY_TABLE_COL_WIDTH             //         10,         11,    6,    6,    6,    6,    6,    6,    6,    6,    6,    6,    6,    6,    6,    6,    6,    6,    6
//      P150_LINEARITY_TABLE_COL_MASK              //          1,          1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1
//      P150_LINEARITY_TABLE_COL_TYPES             //          N,          N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N
//      P150_LINEARITY_TABLE_TABLE_TYPE            // V

// Deprecated 11/23/2010
#define P150_GAIN_SUMMARY                      56  // HD_LGC_PSN,HD_PHYS_PSN,MAX_PK_PK,PK_PK_FAIL,MAX_CORR_GAIN,CORR_GAIN_FAIL,HD_STATUS
//      P150_GAIN_SUMMARY_COL_WIDTH                //         10,         11,        9,        10,           13,            14,        9
//      P150_GAIN_SUMMARY_COL_MASK                 //          1,          1,        1,         1,            1,             1,        1
//      P150_GAIN_SUMMARY_COL_TYPES                //          N,          N,        N,         V,            N,             V,        N
//      P150_GAIN_SUMMARY_TABLE_TYPE               // V

// Deprecated 11/23/2010
#define P150_LIN_POLY_TABLE                    57  // HD_LGC_PSN,COEF_INDEX,HD_PHYS_PSN,SURF_COEF_3,SURF_COEF_2,SURF_COEF_1,SURF_COEF_0
//      P150_LIN_POLY_TABLE_COL_WIDTH              //         10,        10,         11,         11,         11,         11,         11
//      P150_LIN_POLY_TABLE_COL_MASK               //          1,         1,          1,          1,          1,          1,          1
//      P150_LIN_POLY_TABLE_COL_TYPES              //          N,         N,          N,          N,          N,          N,          N
//      P150_LIN_POLY_TABLE_TABLE_TYPE             // M
#define P175_ITERATION                         58  // HD_LGC_PSN,HD_PHYS_PSN,CYLINDER,ITER,REVS,BDSMP,MABS_RRO,3SIG_RRO,3SIG_NRO_L,3SIG_NRO_W,Z_GAIN,L_SLOPE,L_INTRC,I,F,SIGZAP,ZEDD_THRESH,ZEDD_EVENT,IZBE_EXCEPT
//      P175_ITERATION_COL_WIDTH                   //         10,         11,       8,   4,   4,    5,       8,       8,        10,        10,     6,      7,      7,1,1,     6,         11,        10,         11
//      P175_ITERATION_COL_MASK                    //          0,          0,       0,   0,   0,    0,       0,       0,         0,         0,     0,      0,      0,0,0,     0,          0,         0,          0
//      P175_ITERATION_COL_TYPES                   // *
//      P175_ITERATION_TABLE_TYPE                  // S

// Deprecated 11/23/2010
#define P175_ZONED_ZAP_SUMMARY                 59  // HD_LGC_PSN,ZONE,HD_PHYS_PSN,OD_CYLINDER,GRAND_3SIG_RRO,ZBZ_METRIC,ZAP_ENABLED
//      P175_ZONED_ZAP_SUMMARY_COL_WIDTH           //         10,   4,         11,         11,            14,        10,         11
//      P175_ZONED_ZAP_SUMMARY_COL_MASK            //          1,   1,          1,          1,             1,         1,          1
//      P175_ZONED_ZAP_SUMMARY_COL_TYPES           //          N,   N,          N,          N,             N,         N,          N
//      P175_ZONED_ZAP_SUMMARY_TABLE_TYPE          // M

// Deprecated 11/23/2010
#define P175_ZAP_FIELD_ERROR                   60  // HD_LGC_PSN,HD_PHYS_PSN,CYLINDER,ERR_TYPE,BDSMP
//      P175_ZAP_FIELD_ERROR_COL_WIDTH             //         10,         11,       8,       8,    4
//      P175_ZAP_FIELD_ERROR_COL_MASK              //          0,          0,       0,       0,    0
//      P175_ZAP_FIELD_ERROR_COL_TYPES             // *
//      P175_ZAP_FIELD_ERROR_TABLE_TYPE            // S

// Deprecated 11/23/2010
#define P034_NRRO                              61  // HD_LGC_PSN,OFFSET,RUN_TIME,HD_PHYS_PSN,NRRO
//      P034_NRRO_COL_WIDTH                        //         10,     6,       8,         11,   4
//      P034_NRRO_COL_MASK                         //          1,     1,       1,          1,   1
//      P034_NRRO_COL_TYPES                        //          N,     N,       N,          N,   N
//      P034_NRRO_TABLE_TYPE                       // M

// Deprecated 11/23/2010
#define P034_MAX_MIN                           62  // HD_LGC_PSN,HD_PHYS_PSN,NRRO_DELTA
//      P034_MAX_MIN_COL_WIDTH                     //         10,         11,        10
//      P034_MAX_MIN_COL_MASK                      //          1,          1,         1
//      P034_MAX_MIN_COL_TYPES                     //          N,          N,         N
//      P034_MAX_MIN_TABLE_TYPE                    // V
#define P178_OCLIM                             63  // HD_LGC_PSN,HD_PHYS_PSN,OCLIM
//      P178_OCLIM_COL_WIDTH                       //         10,         11,    5
//      P178_OCLIM_COL_MASK                        //          0,          0,    0
//      P178_OCLIM_COL_TYPES                       // *
//      P178_OCLIM_TABLE_TYPE                      // S

// Deprecated 9/10/2009
#define P134_TA_DATA                           64  // HD_LGC_PSN,CYLINDER,RUN_TIME,HD_PHYS_PSN,DFCT_PSN_TRK,DFCT_LEN_TRK,DFCT_AMP_TRK,SRVO_WEDGE
//      P134_TA_DATA_COL_WIDTH                     //         10,       8,       8,         11,          12,          12,          12,        10
//      P134_TA_DATA_COL_MASK                      //          1,       1,       1,          1,           1,           1,           1,         0
//      P134_TA_DATA_COL_TYPES                     //          N,       N,       N,          N,           N,           N,           N
//      P134_TA_DATA_TABLE_TYPE                    // M


// Deprecated 11/23/2010
#define P046_CRRO_HARM_PER_HD                  65  // HD_LGC_PSN,HARMONIC,HD_PHYS_PSN,ID_CRRO,MD_CRRO,OD_CRRO
//      P046_CRRO_HARM_PER_HD_COL_WIDTH            //         10,       8,         11,      9,      9,      9
//      P046_CRRO_HARM_PER_HD_COL_MASK             //          1,       1,          1,      1,      1,      1
//      P046_CRRO_HARM_PER_HD_COL_TYPES            //          N,       N,          N,      N,      N,      N
//      P046_CRRO_HARM_PER_HD_TABLE_TYPE           // M

// Deprecated 11/23/2010
#define P046_IRRO_HARM_PER_HD                  66  // HD_LGC_PSN,HARMONIC,HD_PHYS_PSN,ID_IRRO,MD_IRRO,OD_IRRO
//      P046_IRRO_HARM_PER_HD_COL_WIDTH            //         10,       8,         11,      9,      9,      9
//      P046_IRRO_HARM_PER_HD_COL_MASK             //          1,       1,          1,      1,      1,      1
//      P046_IRRO_HARM_PER_HD_COL_TYPES            //          N,       N,          N,      N,      N,      N
//      P046_IRRO_HARM_PER_HD_TABLE_TYPE           // M
#define P175_ZAP_DATA                          67  // *
//      P175_ZAP_DATA_COL_WIDTH                    // 4
//      P175_ZAP_DATA_COL_MASK                     // 0
//      P175_ZAP_DATA_COL_TYPES                    // *
//      P175_ZAP_DATA_TABLE_TYPE                   // S

// Deprecated 11/23/2010
#define P195_CSM                               68  // HD_LGC_PSN,CYLINDER,HD_PHYS_PSN,ITER,BIAS,CSM,ERROR_CODE
//      P195_CSM_COL_WIDTH                         //         10,       8,         11,   4,   4, 10,        10
//      P195_CSM_COL_MASK                          //          1,       1,          1,   1,   1,  1,         1
//      P195_CSM_COL_TYPES                         //          N,       N,          N,   N,   N,  N,         N
//      P195_CSM_TABLE_TYPE                        // M

// Deprecated 11/23/2010
#define P011_SV_RAM_RD                         69  // RAM_ADDRESS,RAM_DATA
//      P011_SV_RAM_RD_COL_WIDTH                   //          11,       8
//      P011_SV_RAM_RD_COL_MASK                    //           0,       0
//      P011_SV_RAM_RD_COL_TYPES                   // *
//      P011_SV_RAM_RD_TABLE_TYPE                  // S

// Deprecated 11/23/2010
#define P011_SV_RAM_WR                         70  // RAM_ADDRESS,RAM_DATA
//      P011_SV_RAM_WR_COL_WIDTH                   //          11,       8
//      P011_SV_RAM_WR_COL_MASK                    //           0,       0
//      P011_SV_RAM_WR_COL_TYPES                   // *
//      P011_SV_RAM_WR_TABLE_TYPE                  // S

// Deprecated 11/23/2010
#define P011_SV_RAM_EQ                         71  // RAM_ADDRESS,COMPARE_VALUE,RAM_DATA
//      P011_SV_RAM_EQ_COL_WIDTH                   //          11,           13,       8
//      P011_SV_RAM_EQ_COL_MASK                    //           0,            0,       0
//      P011_SV_RAM_EQ_COL_TYPES                   // *
//      P011_SV_RAM_EQ_TABLE_TYPE                  // S

// Deprecated 11/23/2010
#define P011_SV_RAM_GT                         72  // RAM_ADDRESS,COMPARE_VALUE,RAM_DATA
//      P011_SV_RAM_GT_COL_WIDTH                   //          11,           13,       8
//      P011_SV_RAM_GT_COL_MASK                    //           0,            0,       0
//      P011_SV_RAM_GT_COL_TYPES                   // *
//      P011_SV_RAM_GT_TABLE_TYPE                  // S

// Deprecated 11/23/2010
#define P011_SV_RAM_LT                         73  // RAM_ADDRESS,COMPARE_VALUE,RAM_DATA
//      P011_SV_RAM_LT_COL_WIDTH                   //          11,           13,       8
//      P011_SV_RAM_LT_COL_MASK                    //           0,            0,       0
//      P011_SV_RAM_LT_COL_TYPES                   // *
//      P011_SV_RAM_LT_TABLE_TYPE                  // S

// Deprecated 11/23/2010
#define P011_SV_RAM_RBS                        74  // RAM_ADDRESS,RAM_SECTION,RAM_DATA
//      P011_SV_RAM_RBS_COL_WIDTH                  //          11,         11,       8
//      P011_SV_RAM_RBS_COL_MASK                   //           0,          0,       0
//      P011_SV_RAM_RBS_COL_TYPES                  // *
//      P011_SV_RAM_RBS_TABLE_TYPE                 // S

// Deprecated 11/23/2010
#define P011_SV_RAM_WBS                        75  // RAM_ADDRESS,RAM_SECTION,RAM_DATA
//      P011_SV_RAM_WBS_COL_WIDTH                  //          11,         11,       8
//      P011_SV_RAM_WBS_COL_MASK                   //           0,          0,       0
//      P011_SV_RAM_WBS_COL_TYPES                  // *
//      P011_SV_RAM_WBS_TABLE_TYPE                 // S
#define P011_SV_RAM_RD_RNG_16_BIT              76  // RAM_ADDRESS,0,2,4,6,8,A,C,E
//      P011_SV_RAM_RD_RNG_16_BIT_COL_WIDTH        //          11,4,4,4,4,4,4,4,4
//      P011_SV_RAM_RD_RNG_16_BIT_COL_MASK         //           0,0,0,0,0,0,0,0,0
//      P011_SV_RAM_RD_RNG_16_BIT_COL_TYPES        // *
//      P011_SV_RAM_RD_RNG_16_BIT_TABLE_TYPE       // S
#define P011_SV_RAM_RD_MOD_WR                  77  // RAM_ADDRESS,READ_DATA,MODIFIED_WR_DATA
//      P011_SV_RAM_RD_MOD_WR_COL_WIDTH            //          11,        9,              16
//      P011_SV_RAM_RD_MOD_WR_COL_MASK             //           0,        0,               0
//      P011_SV_RAM_RD_MOD_WR_COL_TYPES            // *
//      P011_SV_RAM_RD_MOD_WR_TABLE_TYPE           // S
#define P011_SV_RAM_RD_BY_OFFSET               78  // SYM_OFFSET,RAM_ADDRESS,READ_DATA
//      P011_SV_RAM_RD_BY_OFFSET_COL_WIDTH         //         10,         11,       10
//      P011_SV_RAM_RD_BY_OFFSET_COL_MASK          //          0,          0,        0
//      P011_SV_RAM_RD_BY_OFFSET_COL_TYPES         // *
//      P011_SV_RAM_RD_BY_OFFSET_TABLE_TYPE        // S
#define P011_SV_RAM_RMW_BY_OFFSET              79  // RAM_ADDRESS,READ_DATA,MODIFIED_WR_DATA,SYM_OFFSET
//      P011_SV_RAM_RMW_BY_OFFSET_COL_WIDTH        //          11,        9,              16,        10
//      P011_SV_RAM_RMW_BY_OFFSET_COL_MASK         //           0,        0,               0,         0
//      P011_SV_RAM_RMW_BY_OFFSET_COL_TYPES        // *
//      P011_SV_RAM_RMW_BY_OFFSET_TABLE_TYPE       // S
#define P011_SV_RAM_MOD_HD_OFFSET              80  // RAM_ADDRESS,OFFSET,WRITE_DATA,SYM_OFFSET
//      P011_SV_RAM_MOD_HD_OFFSET_COL_WIDTH        //          11,     6,        10,        10
//      P011_SV_RAM_MOD_HD_OFFSET_COL_MASK         //           0,     0,         0,         0
//      P011_SV_RAM_MOD_HD_OFFSET_COL_TYPES        // *
//      P011_SV_RAM_MOD_HD_OFFSET_TABLE_TYPE       // S

// Deprecated 11/23/2010
#define P011_SV_RAM_WR_DASC                    81  // DASC_OFFSET,WRITE_DATA
//      P011_SV_RAM_WR_DASC_COL_WIDTH              //          11,        10
//      P011_SV_RAM_WR_DASC_COL_MASK               //           0,         0
//      P011_SV_RAM_WR_DASC_COL_TYPES              // *
//      P011_SV_RAM_WR_DASC_TABLE_TYPE             // S

// Deprecated 11/23/2010
#define P011_SV_RAM_RD_DASC                    82  // DASC_OFFSET,READ_DATA
//      P011_SV_RAM_RD_DASC_COL_WIDTH              //          11,        9
//      P011_SV_RAM_RD_DASC_COL_MASK               //           0,        0
//      P011_SV_RAM_RD_DASC_COL_TYPES              // *
//      P011_SV_RAM_RD_DASC_TABLE_TYPE             // S
#define P177_PGA_GAIN_CAL                      83  // HD_LGC_PSN,HD_PHYS_PSN,AVE_PGA_GAIN,ORIG_GAIN_SET,PREAMP_GAIN_CHG,SAP_TABLE_WORD,PREAMP_GAIN
//      P177_PGA_GAIN_CAL_COL_WIDTH                //         10,         11,          12,           13,             15,            14,         11
//      P177_PGA_GAIN_CAL_COL_MASK                 //          1,          1,           1,            1,              1,             1,          1
//      P177_PGA_GAIN_CAL_COL_TYPES                //          N,          N,           N,            V,              N,             V,          N
//      P177_PGA_GAIN_CAL_TABLE_TYPE               // V
#define P035_DETAIL                            84  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,OVS_AMP,OVS_DUR,WRT_CUR,HTR_DAC,DPES_RRO,DAGC_RRO,PCT_DIFF_PES,PCT_DIFF_AGC,SVO_UNSF_CNT,PWR_SPECTRAL_DPES
//      P035_DETAIL_COL_WIDTH                      //          11,      8,        10,      7,      7,      7,      7,       8,      10,          12,          12,          12,               17
//      P035_DETAIL_COL_MASK                       //           1,      1,         1,      1,      1,      1,      1,       1,       1,           1,           1,           1,                1
//      P035_DETAIL_COL_TYPES                      //           N,      N,         N,      N,      N,      N,      N,       N,       N,           N,           N,           N,                N
//      P035_DETAIL_TABLE_TYPE                     // M
#define P035_CONTACT_DETECT                    85  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,OVS_AMP,OVS_DUR,WRT_CUR,HTR_DAC,DPES_THR,DPES_RRO,ZERO_HEAT_DPES,DPES_SLOPE,PWR_SPECTRAL_DPES,BSLN_DPES_AVG,BSLN_DPES_STDEV,HD_STATUS,HTR_SEARCH_METHOD,DETECT_SIGNAL,BSLN_SLOPE,CNTCT_SLOPE,BSLN_REGRSN_COEF,CNTCT_REGRSN_COEF,NOM_TRK_NUM,WRT_FREQ
//      P035_CONTACT_DETECT_COL_WIDTH              //          11,      7,        10,      7,      7,      7,      7,       8,       8,            14,        10,               17,           13,             15,        9,               17,           13,        10,         11,              16,               17,         11,       9
//      P035_CONTACT_DETECT_COL_MASK               //           1,      1,         1,      1,      1,      1,      1,       1,       1,             1,         1,                1,            1,              1,        1,                1,            1,         1,          1,               1,                1,          1,       1
//      P035_CONTACT_DETECT_COL_TYPES              //           N,      N,         N,      N,      N,      N,      N,       N,       N,             N,         N,                N,            N,              N,        N,                V,            N,         N,          N,               N,                N,          N,       N
//      P035_CONTACT_DETECT_TABLE_TYPE             // M

// Deprecated 11/23/2010
#define P035_CONTACT_SUMMARY                   86  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,HTR_DAC
//      P035_CONTACT_SUMMARY_COL_WIDTH             //          11,        9,        10,      7
//      P035_CONTACT_SUMMARY_COL_MASK              //           1,        1,         1,      1
//      P035_CONTACT_SUMMARY_COL_TYPES             //           N,        N,         N,      N
//      P035_CONTACT_SUMMARY_TABLE_TYPE            // M
#define P000_BASELINE_PES                      87  // COL0,COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9,COL10,COL11,COL12,COL13,COL14,COL15
//      P000_BASELINE_PES_COL_WIDTH                //    6,   6,   6,   6,   6,   6,   6,   6,   6,   6,    6,    6,    6,    6,    6,    6
//      P000_BASELINE_PES_COL_MASK                 //    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,    0,    0,    0,    0,    0,    0
//      P000_BASELINE_PES_COL_TYPES                // *
//      P000_BASELINE_PES_TABLE_TYPE               // S
#define P000_PES                               88  // COL0,COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9,COL10,COL11,COL12,COL13,COL14,COL15
//      P000_PES_COL_WIDTH                         //    6,   6,   6,   6,   6,   6,   6,   6,   6,   6,    6,    6,    6,    6,    6,    6
//      P000_PES_COL_MASK                          //    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,    0,    0,    0,    0,    0,    0
//      P000_PES_COL_TYPES                         // *
//      P000_PES_TABLE_TYPE                        // S
#define P000_DELTA_PES                         89  // COL0,COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9,COL10,COL11,COL12,COL13,COL14,COL15
//      P000_DELTA_PES_COL_WIDTH                   //    6,   6,   6,   6,   6,   6,   6,   6,   6,   6,    6,    6,    6,    6,    6,    6
//      P000_DELTA_PES_COL_MASK                    //    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,    0,    0,    0,    0,    0,    0
//      P000_DELTA_PES_COL_TYPES                   // *
//      P000_DELTA_PES_TABLE_TYPE                  // S
#define P000_DOUBLE_ARRAY                      90  // COL0,COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9,COL10,COL11,COL12,COL13,COL14,COL15
//      P000_DOUBLE_ARRAY_COL_WIDTH                //   10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   10,   10,   10,   10,   10,   10
//      P000_DOUBLE_ARRAY_COL_MASK                 //    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,    0,    0,    0,    0,    0,    0
//      P000_DOUBLE_ARRAY_COL_TYPES                // *
//      P000_DOUBLE_ARRAY_TABLE_TYPE               // S
#define P000_FLOAT_ARRAY                       91  // COL0,COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8,COL9,COL10,COL11,COL12,COL13,COL14,COL15
//      P000_FLOAT_ARRAY_COL_WIDTH                 //   10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   10,   10,   10,   10,   10,   10
//      P000_FLOAT_ARRAY_COL_MASK                  //    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,    0,    0,    0,    0,    0,    0
//      P000_FLOAT_ARRAY_COL_TYPES                 // *
//      P000_FLOAT_ARRAY_TABLE_TYPE                // S
#define P172_VBAR                              92  // HD_LGC_PSN,DATA_ZONE,TRK_NUM,VBAR_BPI,VBAR_TPI,HD_PHYS_PSN
//      P172_VBAR_COL_WIDTH                        //         10,        9,      7,       8,       8,         11
//      P172_VBAR_COL_MASK                         //          1,        1,      1,       1,       1,          1
//      P172_VBAR_COL_TYPES                        //          N,        N,      N,       N,       N,          N
//      P172_VBAR_TABLE_TYPE                       // M
#define P210_CAPACITY_DRIVE                    93  // DRV_CAPACITY
//      P210_CAPACITY_DRIVE_COL_WIDTH              //           12
//      P210_CAPACITY_DRIVE_COL_MASK               //            1
//      P210_CAPACITY_DRIVE_COL_TYPES              //            N
//      P210_CAPACITY_DRIVE_TABLE_TYPE             // S

// Deprecated 11/23/2010
#define P210_CAPACITY_HD                       94  // HD_LGC_PSN,HD_CAPACITY,HD_PHYS_PSN
//      P210_CAPACITY_HD_COL_WIDTH                 //         10,         11,         11
//      P210_CAPACITY_HD_COL_MASK                  //          1,          1,          1
//      P210_CAPACITY_HD_COL_TYPES                 //          N,          N,          N
//      P210_CAPACITY_HD_TABLE_TYPE                // V

// Deprecated 11/23/2010
#define P210_SCTR_ERR_RATE                     95  // HD_LGC_PSN,DATA_ZONE,TRK_NUM,VBAR_TPI,VBAR_BPI,SCTR_ERR_RATE,HD_PHYS_PSN
//      P210_SCTR_ERR_RATE_COL_WIDTH               //         10,        9,      7,       8,       8,           13,         11
//      P210_SCTR_ERR_RATE_COL_MASK                //          1,        1,      1,       1,       1,            1,          1
//      P210_SCTR_ERR_RATE_COL_TYPES               //          N,        N,      N,       N,       N,            N,          N
//      P210_SCTR_ERR_RATE_TABLE_TYPE              // M
#define P033_PES_HD                            96  // HD_PHYS_PSN,HD_LGC_PSN,RRO,NRRO,RAW_RO,RETEST_COUNT,TRACK_WIDTH
//      P033_PES_HD_COL_WIDTH                      //          11,        10,  4,   4,     6,          12,         11
//      P033_PES_HD_COL_MASK                       //           1,         1,  1,   1,     1,           1,          1
//      P033_PES_HD_COL_TYPES                      //           N,         N,  N,   N,     N,           N,          N
//      P033_PES_HD_TABLE_TYPE                     // V
#define P033_PES_FULL                          97  // HD_LGC_PSN,SECTOR,HD_PHYS_PSN,REV,PES,UI_PER_TRK,PES_CNT_PER_TRK
//      P033_PES_FULL_COL_WIDTH                    //         10,     6,         11,  3,  6,        10,             15
//      P033_PES_FULL_COL_MASK                     //          0,     0,          0,  0,  0,         0,              0
//      P033_PES_FULL_COL_TYPES                    // *
//      P033_PES_FULL_TABLE_TYPE                   // M
#define P030_ESP_SEEK                          98  // CYL_MODE,HD_MODE,SEEK_CNT,SEEK_AVG,SEEK_MAX,SEEK_MIN,SEEK_NO_OVHD,ERR_CYL,ERR_HD,CMD_STATUS,ERROR_CODE,LOOP_CODE,SEEK_STDEV
//      P030_ESP_SEEK_COL_WIDTH                    //        8,      7,      10,       8,       8,       8,          12,      7,     6,        10,        10,        9,        10
//      P030_ESP_SEEK_COL_MASK                     //        1,      1,       1,       1,       1,       1,           1,      1,     1,         1,         1,        1,         1
//      P030_ESP_SEEK_COL_TYPES                    //        V,      V,       N,       N,       N,       N,           N,      N,     N,         V,         V,        V,         N
//      P030_ESP_SEEK_TABLE_TYPE                   // S
#define P030_ESP_SEEK_DATA                     99  // *
//      P030_ESP_SEEK_DATA_COL_WIDTH               // 5
//      P030_ESP_SEEK_DATA_COL_MASK                // 0
//      P030_ESP_SEEK_DATA_COL_TYPES               // *
//      P030_ESP_SEEK_DATA_TABLE_TYPE              // S

// Deprecated 11/23/2010
#define P031_RAW_THERMAL_VALS                 100  // HD,OUTER_DC,OUTER_SIN,OUTER_COS,MID_DC,MID_SIN,MID_COS,INNER_DC,INNER_SIN,INNER_COS
//      P031_RAW_THERMAL_VALS_COL_WIDTH            //  2,       8,        9,        9,     6,      7,      7,       8,        9,        9
//      P031_RAW_THERMAL_VALS_COL_MASK             //  0,       0,        0,        0,     0,      0,      0,       0,        0,        0
//      P031_RAW_THERMAL_VALS_COL_TYPES            // *
//      P031_RAW_THERMAL_VALS_TABLE_TYPE           // S
#define P031_DC_MICRO_INCHES                  101  // HD_PHYS_PSN,HD_LGC_PSN,DC_OFST_OD,DC_OFST_MD,DC_OFST_ID
//      P031_DC_MICRO_INCHES_COL_WIDTH             //          11,        10,        10,        10,        10
//      P031_DC_MICRO_INCHES_COL_MASK              //           1,         1,         1,         1,         1
//      P031_DC_MICRO_INCHES_COL_TYPES             //           N,         N,         N,         N,         N
//      P031_DC_MICRO_INCHES_TABLE_TYPE            // V

// Deprecated 11/23/2010
#define P031_MAG_PHASE                        102  // HD,OUTER_MAG,OUTER_PHASE,MID_MAG,MID_PHASE,INNER_MAG,INNER_PHASE
//      P031_MAG_PHASE_COL_WIDTH                   //  2,        9,         11,      7,        9,        9,         11
//      P031_MAG_PHASE_COL_MASK                    //  0,        0,          0,      0,        0,        0,          0
//      P031_MAG_PHASE_COL_TYPES                   // *
//      P031_MAG_PHASE_TABLE_TYPE                  // S
#define P031_TIMING_ERRORS                    103  // HD_PHYS_PSN,HD_LGC_PSN,TIMING_ERROR_OD,TIMING_ERROR_MD,TIMING_ERROR_ID
//      P031_TIMING_ERRORS_COL_WIDTH               //          11,        10,             15,             15,             15
//      P031_TIMING_ERRORS_COL_MASK                //           1,         1,              1,              1,              1
//      P031_TIMING_ERRORS_COL_TYPES               //           N,         N,              N,              N,              N
//      P031_TIMING_ERRORS_TABLE_TYPE              // V
#define P032_SERP_SEEK                        104  // MIN_HD_SEEKS,MAX_HD_SEEKS,AVG_MIN_HD,AVG_MAX_HD,MAX_SEEK_TIME,MIN_HD_SVO,MAX_HD_SVO,FWD_HD_SWTCH,REV_HD_SWTCH,AVG_FWD_HD_SWTCH,AVG_REV_HD_SWTCH,MAX_HD_SWTCH,FWD_HD_SVO,REV_HD_SVO,REC_ERRS
//      P032_SERP_SEEK_COL_WIDTH                   //           12,          12,        10,        10,           13,        10,        10,          12,          12,              16,              16,          12,        10,        10,       8
//      P032_SERP_SEEK_COL_MASK                    //            1,           1,         1,         1,            1,         1,         1,           1,           1,               1,               1,           1,         1,         1,       1
//      P032_SERP_SEEK_COL_TYPES                   //            N,           N,         N,         N,            N,         N,         N,           N,           N,               N,               N,           N,         N,         N,       N
//      P032_SERP_SEEK_TABLE_TYPE                  // S
#define P032_NON_SERP_SEEK                    105  // MIN_HD_SEEKS,AVG_MIN_HD,MIN_SEEK,MAX_SEEK,SVO_MEASURED_SEEK,HD_SWTCHES,AVG_HD_SWTCH,MIN_HD_SWTCH,MAX_HD_SWTCH,SVO_MEASURED_HD,REC_ERRS
//      P032_NON_SERP_SEEK_COL_WIDTH               //           12,        10,       8,       8,               17,        10,          12,          12,          12,             15,       8
//      P032_NON_SERP_SEEK_COL_MASK                //            0,         0,       0,       0,                0,         0,           0,           0,           0,              0,       0
//      P032_NON_SERP_SEEK_COL_TYPES               // *
//      P032_NON_SERP_SEEK_TABLE_TYPE              // S
#define P032_RECOVERED_ERRORS                 106  // CYL,INIT_HD,PREV_CYL,PREV_HD,SEEK_TIME
//      P032_RECOVERED_ERRORS_COL_WIDTH            //   5,      7,       8,      7,        9
//      P032_RECOVERED_ERRORS_COL_MASK             //   0,      0,       0,      0,        0
//      P032_RECOVERED_ERRORS_COL_TYPES            // *
//      P032_RECOVERED_ERRORS_TABLE_TYPE           // S
#define P172_SAP_TABLE                        107  // ADDRESS,0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F
//      P172_SAP_TABLE_COL_WIDTH                   //       7,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4
//      P172_SAP_TABLE_COL_MASK                    //       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
//      P172_SAP_TABLE_COL_TYPES                   // *
//      P172_SAP_TABLE_TABLE_TYPE                  // S
#define P172_CAP_TABLE                        108  // ADDRESS,0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,ASCII
//      P172_CAP_TABLE_COL_WIDTH                   //       7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,   16
//      P172_CAP_TABLE_COL_MASK                    //       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,    0
//      P172_CAP_TABLE_COL_TYPES                   // *
//      P172_CAP_TABLE_TABLE_TYPE                  // S

// Deprecated 11/23/2010
#define P172_MAX_CYL                          109  // MAX_CYL_DEC,MAX_CYL_HEX
//      P172_MAX_CYL_COL_WIDTH                     //          11,         11
//      P172_MAX_CYL_COL_MASK                      //           1,          1
//      P172_MAX_CYL_COL_TYPES                     //           N,          V
//      P172_MAX_CYL_TABLE_TYPE                    // S
#define P172_MAX_CYL_VBAR                     110  // HD_PHYS_PSN,HD_LGC_PSN,MAX_CYL_DEC,MAX_CYL_HEX
//      P172_MAX_CYL_VBAR_COL_WIDTH                //          11,        10,         11,         11
//      P172_MAX_CYL_VBAR_COL_MASK                 //           1,         1,          1,          1
//      P172_MAX_CYL_VBAR_COL_TYPES                //           N,         N,          N,          V
//      P172_MAX_CYL_VBAR_TABLE_TYPE               // V
#define P172_MICRO_IN                         111  // MICRO_INCH_PER_TRACK
//      P172_MICRO_IN_COL_WIDTH                    //                   20
//      P172_MICRO_IN_COL_MASK                     //                    0
//      P172_MICRO_IN_COL_TYPES                    // *
//      P172_MICRO_IN_TABLE_TYPE                   // S
#define P172_PREAMP_ID                        112  // PREAMP8_ID_DEC,PREAMP8_ID_HEX,PREAMP_ID_DEC,PREAMP_ID_HEX
//      P172_PREAMP_ID_COL_WIDTH                   //             14,            14,           13,           13
//      P172_PREAMP_ID_COL_MASK                    //              0,             0,            0,            0
//      P172_PREAMP_ID_COL_TYPES                   // *
//      P172_PREAMP_ID_TABLE_TYPE                  // S
#define P172_ZONE_TBL                         113  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ZN_START_CYL,TRK_NUM,PBA_TRACK,WEDGE_SIZE,SSAW_SIZE,SSAR_SIZE,GAP_SIZE_BEF_SRVO_FLD,GAP_SIZE_AFT_SRVO_FLD,NRZ_FREQ,S_PARITY_PBA_TRACK
//      P172_ZONE_TBL_COL_WIDTH                    //          11,        9,        10,          12,      7,        9,        10,        9,        9,                   21,                   21,       8,                18
//      P172_ZONE_TBL_COL_MASK                     //           1,        1,         1,           1,      1,        1,         1,        0,        0,                    1,                    1,       1,                 0
//      P172_ZONE_TBL_COL_TYPES                    //           N,        N,         N,           N,      N,        N,         N,                                        N,                    N,       N
//      P172_ZONE_TBL_TABLE_TYPE                   // M
#define P172_RESVD_ZONE_TBL                   114  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ZN_START_CYL,TRK_NUM,PBA_TRACK,WEDGE_SIZE,SSAW_SIZE,SSAR_SIZE,GAP_SIZE_BEF_SRVO_FLD,GAP_SIZE_AFT_SRVO_FLD,NRZ_FREQ,S_PARITY_PBA_TRACK
//      P172_RESVD_ZONE_TBL_COL_WIDTH              //          11,        9,        10,          12,      7,        9,        10,        9,        9,                   21,                   21,       8,                18
//      P172_RESVD_ZONE_TBL_COL_MASK               //           1,        1,         1,           1,      1,        1,         1,        0,        0,                    1,                    1,       1,                 0
//      P172_RESVD_ZONE_TBL_COL_TYPES              //           N,        N,         N,           N,      N,        N,         N,                                        N,                    N,       N
//      P172_RESVD_ZONE_TBL_TABLE_TYPE             // M
#define P172_RAP_TABLE                        115  // ADDRESS,0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,ASCII
//      P172_RAP_TABLE_COL_WIDTH                   //       7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,   16
//      P172_RAP_TABLE_COL_MASK                    //       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,    0
//      P172_RAP_TABLE_COL_TYPES                   // *
//      P172_RAP_TABLE_TABLE_TYPE                  // S
#define P172_HEATER                           116  // HD_PHYS_PSN,ZONE,HD_LGC_PSN,WRT_HEAT,PRE_HEAT,RD_HEAT,WRT_HEAT_TCC,PRE_HEAT_TCC,RD_HEAT_TCC
//      P172_HEATER_COL_WIDTH                      //          11,   4,        10,       8,       8,      7,          12,          12,         11
//      P172_HEATER_COL_MASK                       //           1,   1,         1,       1,       1,      1,           1,           1,          1
//      P172_HEATER_COL_TYPES                      //           N,   N,         N,       N,       N,      N,           N,           N,          N
//      P172_HEATER_TABLE_TYPE                     // M

// Deprecated 11/23/2010
#define P011_RW_SRVO_RAM_VIA_SYMB             117  // SRVO_ADDR,SRVO_DATA,SYM_INDEX
//      P011_RW_SRVO_RAM_VIA_SYMB_COL_WIDTH        //        11,        9,        9
//      P011_RW_SRVO_RAM_VIA_SYMB_COL_MASK         //         0,        0,        0
//      P011_RW_SRVO_RAM_VIA_SYMB_COL_TYPES        // *
//      P011_RW_SRVO_RAM_VIA_SYMB_TABLE_TYPE       // S
#define P011_RW_SRVO_RAM_VIA_ADDR             118  // SRVO_ADDR,SRVO_DATA
//      P011_RW_SRVO_RAM_VIA_ADDR_COL_WIDTH        //        11,        9
//      P011_RW_SRVO_RAM_VIA_ADDR_COL_MASK         //         0,        0
//      P011_RW_SRVO_RAM_VIA_ADDR_COL_TYPES        // *
//      P011_RW_SRVO_RAM_VIA_ADDR_TABLE_TYPE       // S
#define P011_RC_SRVO_RAM_VIA_ADDR             119  // SRVO_ADDR,SRVO_DATA,COMP_DATA
//      P011_RC_SRVO_RAM_VIA_ADDR_COL_WIDTH        //        11,        9,        9
//      P011_RC_SRVO_RAM_VIA_ADDR_COL_MASK         //         0,        0,        0
//      P011_RC_SRVO_RAM_VIA_ADDR_COL_TYPES        // *
//      P011_RC_SRVO_RAM_VIA_ADDR_TABLE_TYPE       // S
#define P011_RW_DASC                          120  // DASC_REG,DASC_DATA
//      P011_RW_DASC_COL_WIDTH                     //       11,        9
//      P011_RW_DASC_COL_MASK                      //        0,        0
//      P011_RW_DASC_COL_TYPES                     // *
//      P011_RW_DASC_TABLE_TYPE                    // S
#define P033_CYL_RRO_BY_HD                    121  // HD,RRO,NRRO,RAWRO
//      P033_CYL_RRO_BY_HD_COL_WIDTH               //  2,  4,   4,    5
//      P033_CYL_RRO_BY_HD_COL_MASK                //  0,  0,   0,    0
//      P033_CYL_RRO_BY_HD_COL_TYPES               // *
//      P033_CYL_RRO_BY_HD_TABLE_TYPE              // S

// Deprecated 11/23/2010
#define P035_CONTACT_SEARCH_TABLE             122  // CYL_LGC,HD_LGC,OVS,OSD,IW,HTR_DAC,DPES_VAR_OR_SIG,DVGA_VAR_OR_SIG,UNSAFES,PES_PERC_DIFF,VGA_PERC_DIFF
//      P035_CONTACT_SEARCH_TABLE_COL_WIDTH        //       7,     6,  3,  3, 3,      7,             15,             15,      7,           13,           13
//      P035_CONTACT_SEARCH_TABLE_COL_MASK         //       0,     0,  0,  0, 0,      0,              0,              0,      0,            0,            0
//      P035_CONTACT_SEARCH_TABLE_COL_TYPES        // *
//      P035_CONTACT_SEARCH_TABLE_TABLE_TYPE       // S
#define P000_DRIVE_VAR_TABLE                  123  // DRIVE_VAR,VALUE
//      P000_DRIVE_VAR_TABLE_COL_WIDTH             //        20,   20
//      P000_DRIVE_VAR_TABLE_COL_MASK              //         0,    0
//      P000_DRIVE_VAR_TABLE_COL_TYPES             // *
//      P000_DRIVE_VAR_TABLE_TABLE_TYPE            // S
#define P151_ATTENUATION_VGA                  124  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ATTC,ATT2S,ATT2R,VGAS,VGAR,HD_STATUS
//      P151_ATTENUATION_VGA_COL_WIDTH             //          11,        9,        10,   4,    5,    5,   4,   4,        9
//      P151_ATTENUATION_VGA_COL_MASK              //           1,        1,         1,   1,    1,    1,   1,   1,        1
//      P151_ATTENUATION_VGA_COL_TYPES             //           N,        N,         N,   N,    N,    N,   N,   N,        N
//      P151_ATTENUATION_VGA_TABLE_TYPE            // M

// Deprecated 11/23/2010
#define P030_SEEK_TEST_RESULTS                125  // SEEK_CNT,AVG_SEEK,MIN_SEEK,MAX_SEEK,AVG_SRVO,LAST_CYL,LAST_HD,SCMDSTAT,ERRCD,LOOPCD,REC_ERR,UNSAFES,FLAG1,FLAG2
//      P030_SEEK_TEST_RESULTS_COL_WIDTH           //        8,       8,       8,       8,       8,       8,      7,       8,    5,     6,      7,      7,    5,    5
//      P030_SEEK_TEST_RESULTS_COL_MASK            //        0,       0,       0,       0,       0,       0,      0,       0,    0,     0,      0,      0,    0,    0
//      P030_SEEK_TEST_RESULTS_COL_TYPES           // *
//      P030_SEEK_TEST_RESULTS_TABLE_TYPE          // S

// Deprecated 11/23/2010
#define P030_SEEK_RECOV_DATA                  126  // *
//      P030_SEEK_RECOV_DATA_COL_WIDTH             // 5
//      P030_SEEK_RECOV_DATA_COL_MASK              // 0
//      P030_SEEK_RECOV_DATA_COL_TYPES             // *
//      P030_SEEK_RECOV_DATA_TABLE_TYPE            // S
#define P000_CHANNEL_REG_TABLE                127  // ROW,REG0,REG1,REG2,REG3,REG4,REG5,REG6,REG7,REG8,REG9,REGA,REGB,REGC,REGD,REGE,REGF
//      P000_CHANNEL_REG_TABLE_COL_WIDTH           //   4,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5
//      P000_CHANNEL_REG_TABLE_COL_MASK            //   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
//      P000_CHANNEL_REG_TABLE_COL_TYPES           // *
//      P000_CHANNEL_REG_TABLE_TABLE_TYPE          // S
#define P166_CHANNEL_INFO                     128  // MFGR_REV
//      P166_CHANNEL_INFO_COL_WIDTH                //       26
//      P166_CHANNEL_INFO_COL_MASK                 //        1
//      P166_CHANNEL_INFO_COL_TYPES                //        V
//      P166_CHANNEL_INFO_TABLE_TYPE               // S
#define P140_VER_CYL_LIM_VIOL                 129  // CYL,COUNTS_ON_CYL
//      P140_VER_CYL_LIM_VIOL_COL_WIDTH            //  10,           12
//      P140_VER_CYL_LIM_VIOL_COL_MASK             //   0,            0
//      P140_VER_CYL_LIM_VIOL_COL_TYPES            // *
//      P140_VER_CYL_LIM_VIOL_TABLE_TYPE           // S
#define P140_VER_TRK_LIM_VIOL                 130  // CYL,HEAD,TRACK_COUNT
//      P140_VER_TRK_LIM_VIOL_COL_WIDTH            //  10,   4,         11
//      P140_VER_TRK_LIM_VIOL_COL_MASK             //   0,   0,          0
//      P140_VER_TRK_LIM_VIOL_COL_TYPES            // *
//      P140_VER_TRK_LIM_VIOL_TABLE_TYPE           // S
#define P140_VER_TOTAL_VIOL_BY_HD             131  // HD_PHYS_PSN,HD_LGC_PSN,VERFD_FLAWS,FLAW_LIMIT,LIMIT_EXCEEDED
//      P140_VER_TOTAL_VIOL_BY_HD_COL_WIDTH        //          12,        11,         11,        10,            14
//      P140_VER_TOTAL_VIOL_BY_HD_COL_MASK         //           0,         0,          0,         0,             0
//      P140_VER_TOTAL_VIOL_BY_HD_COL_TYPES        // *
//      P140_VER_TOTAL_VIOL_BY_HD_TABLE_TYPE       // S
#define P140_UNVER_TOTAL_VIOL                 132  // UNVERFD_TOTAL_CT,LIMIT
//      P140_UNVER_TOTAL_VIOL_COL_WIDTH            //               19,    5
//      P140_UNVER_TOTAL_VIOL_COL_MASK             //                0,    0
//      P140_UNVER_TOTAL_VIOL_COL_TYPES            // *
//      P140_UNVER_TOTAL_VIOL_TABLE_TYPE           // S
#define P140_UNVER_PER_HD_VIOL                133  // HEAD,COUNT,LIMIT
//      P140_UNVER_PER_HD_VIOL_COL_WIDTH           //    4,    5,    5
//      P140_UNVER_PER_HD_VIOL_COL_MASK            //    0,    0,    0
//      P140_UNVER_PER_HD_VIOL_COL_TYPES           // *
//      P140_UNVER_PER_HD_VIOL_TABLE_TYPE          // S
#define P140_UNVER_PER_HD_ZN_VIOL             134  // HEAD,ZONE,COUNT,LIMIT
//      P140_UNVER_PER_HD_ZN_VIOL_COL_WIDTH        //    4,   4,    5,    5
//      P140_UNVER_PER_HD_ZN_VIOL_COL_MASK         //    0,   0,    0,    0
//      P140_UNVER_PER_HD_ZN_VIOL_COL_TYPES        // *
//      P140_UNVER_PER_HD_ZN_VIOL_TABLE_TYPE       // S
#define P140_VER_DRV_CYL_TRK_LMT              135  // UNIT_VERFD,UNIT_LIMIT,UNIT_EXCEEDED,CYL_VERFD,CYL_LIMIT,CYL_EXCEEDED,TRK_VERFD,TRK_LIMIT,TRK_EXCEEDED
//      P140_VER_DRV_CYL_TRK_LMT_COL_WIDTH         //         10,        10,           13,        9,        9,          12,        9,        9,          12
//      P140_VER_DRV_CYL_TRK_LMT_COL_MASK          //          0,         0,            0,        0,        0,           0,        0,        0,           0
//      P140_VER_DRV_CYL_TRK_LMT_COL_TYPES         // *
//      P140_VER_DRV_CYL_TRK_LMT_TABLE_TYPE        // S
#define P140_FLAW_COUNT                       136  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,VERIFIED_FLAW_COUNT,UNVERIFIED_FLAW_COUNT,HD_STATUS
//      P140_FLAW_COUNT_COL_WIDTH                  //          11,        9,        10,                 19,                   21,        9
//      P140_FLAW_COUNT_COL_MASK                   //           1,        1,         1,                  1,                    1,        1
//      P140_FLAW_COUNT_COL_TYPES                  //           N,        N,         N,                  N,                    N,        N
//      P140_FLAW_COUNT_TABLE_TYPE                 // M
#define P136_UNSAFE_FCONS                     137  // FCONS,UNSAFE_COUNT
//      P136_UNSAFE_FCONS_COL_WIDTH                //    10,          12
//      P136_UNSAFE_FCONS_COL_MASK                 //     0,           0
//      P136_UNSAFE_FCONS_COL_TYPES                // *
//      P136_UNSAFE_FCONS_TABLE_TYPE               // S
#define P136_BDRAG_FCONS                      138  // BDRAG_FCONS,BSLOPE1,BSLOPE2
//      P136_BDRAG_FCONS_COL_WIDTH                 //          11,      7,      7
//      P136_BDRAG_FCONS_COL_MASK                  //           1,      1,      1
//      P136_BDRAG_FCONS_COL_TYPES                 //           N,      N,      N
//      P136_BDRAG_FCONS_TABLE_TYPE                // S
#define P136_BIAS_VALUE                       139  // BIAS_ZONE,RAW_BIAS_VAL,SMOOTHED_BIAS_VAL
//      P136_BIAS_VALUE_COL_WIDTH                  //         9,          12,               17
//      P136_BIAS_VALUE_COL_MASK                   //         1,           1,                1
//      P136_BIAS_VALUE_COL_TYPES                  //         N,           N,                N
//      P136_BIAS_VALUE_TABLE_TYPE                 // V
#define P178_HTR_DAC_WRT                      140  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,WRT_HEAT_DAC,WRT_HEAT_SMOOTH
//      P178_HTR_DAC_WRT_COL_WIDTH                 //          11,        9,        10,          12,             15
//      P178_HTR_DAC_WRT_COL_MASK                  //           1,        1,         1,           1,              1
//      P178_HTR_DAC_WRT_COL_TYPES                 //           N,        N,         N,           N,              V
//      P178_HTR_DAC_WRT_TABLE_TYPE                // M

// Deprecated 11/23/2010
#define P109_TA_SUM_HD                        141  // HD_PHYS_PSN,HD_LGC_PSN,TA_CNT
//      P109_TA_SUM_HD_COL_WIDTH                   //          11,        10,     6
//      P109_TA_SUM_HD_COL_MASK                    //           0,         0,     0
//      P109_TA_SUM_HD_COL_TYPES                   // *
//      P109_TA_SUM_HD_TABLE_TYPE                  // V

// Deprecated 11/23/2010
#define P208_AUTO_DIAGNOSTIC                  142  // HD_PHYS_PSN,DIAG_TEST,HD_LGC_PSN,SVO_CMD_STATUS,FAIL_CYL,LOOP_CODE,MISC_DATA,DATA_POINTER
//      P208_AUTO_DIAGNOSTIC_COL_WIDTH             //          11,       11,        10,            16,       8,        9,        9,          12
//      P208_AUTO_DIAGNOSTIC_COL_MASK              //           0,        0,         0,             0,       0,        0,        0,           0
//      P208_AUTO_DIAGNOSTIC_COL_TYPES             // *
//      P208_AUTO_DIAGNOSTIC_TABLE_TYPE            // V
#define P159_FIFO                             143  // *
//      P159_FIFO_COL_WIDTH                        // 4
//      P159_FIFO_COL_MASK                         // 0
//      P159_FIFO_COL_TYPES                        // *
//      P159_FIFO_TABLE_TYPE                       // S
#define P043_GEOMETRY_DELTA                   144  // HD_PHYS_PSN,HD_LGC_PSN,MAX_TIME,MIN_TIME,GEOMETRY_DELTA
//      P043_GEOMETRY_DELTA_COL_WIDTH              //          11,        10,       8,       8,            14
//      P043_GEOMETRY_DELTA_COL_MASK               //           1,         1,       1,       1,             1
//      P043_GEOMETRY_DELTA_COL_TYPES              //           N,         N,       N,       N,             N
//      P043_GEOMETRY_DELTA_TABLE_TYPE             // V
#define P043_HD_SKEW_CAL                      145  // HD_PHYS_PSN,HD_LGC_PSN,RAW_SKEW,SKEW_OUT,FINAL_SKEW,TIMING_ERROR
//      P043_HD_SKEW_CAL_COL_WIDTH                 //          11,        10,       8,       8,        10,          13
//      P043_HD_SKEW_CAL_COL_MASK                  //           1,         1,       1,       1,         1,           1
//      P043_HD_SKEW_CAL_COL_TYPES                 //           N,         N,       N,       N,         N,           N
//      P043_HD_SKEW_CAL_TABLE_TYPE                // V
#define P043_SKEW_SPAN                        146  // SKEW_SPAN
//      P043_SKEW_SPAN_COL_WIDTH                   //         9
//      P043_SKEW_SPAN_COL_MASK                    //         1
//      P043_SKEW_SPAN_COL_TYPES                   //         N
//      P043_SKEW_SPAN_TABLE_TYPE                  // S
#define P043_RADIAL_TIMING_COEF               147  // HD_PHYS_PSN,HD_LGC_PSN,COEF_1,COEF_2,COEF_3,COEF_4,COEF_5,MULTIPLIER
//      P043_RADIAL_TIMING_COEF_COL_WIDTH          //          11,        10,     6,     6,     6,     6,     6,        10
//      P043_RADIAL_TIMING_COEF_COL_MASK           //           1,         1,     1,     1,     1,     1,     1,         1
//      P043_RADIAL_TIMING_COEF_COL_TYPES          //           N,         N,     N,     N,     N,     N,     N,         N
//      P043_RADIAL_TIMING_COEF_TABLE_TYPE         // V
#define P080_HEATER_RESISTANCE                148  // HD_PHYS_PSN,HD_LGC_PSN,HEATER_VOLTAGE_DAC,RAW_HEATER_RESISTANCE,HEATER_VOLTAGE,HEATER_CURRENT,HEATER_RESISTANCE,HD_STATUS
//      P080_HEATER_RESISTANCE_COL_WIDTH           //          11,        10,                18,                   21,            14,            14,               17,        9
//      P080_HEATER_RESISTANCE_COL_MASK            //           1,         1,                 1,                    1,             1,             1,                1,        1
//      P080_HEATER_RESISTANCE_COL_TYPES           //           N,         N,                 N,                    N,             N,             N,                N,        N
//      P080_HEATER_RESISTANCE_TABLE_TYPE          // V
#define P027_HEATER_HD_STATUS                 149  // HD_PHYS_PSN,HD_LGC_PSN,STATUS_CODE
//      P027_HEATER_HD_STATUS_COL_WIDTH            //          11,        10,         11
//      P027_HEATER_HD_STATUS_COL_MASK             //           0,         0,          0
//      P027_HEATER_HD_STATUS_COL_TYPES            // *
//      P027_HEATER_HD_STATUS_TABLE_TYPE           // S
#define P047_VCAT_5_COEF_AC_SIN               150  // HD_PHYS_PSN,TEST_MODE,HD_LGC_PSN,COEF_1,COEF_2,COEF_3,COEF_4,COEF_5,MULTIPLIER
//      P047_VCAT_5_COEF_AC_SIN_COL_WIDTH          //          11,       16,        10,     7,     7,     7,     7,     7,        10
//      P047_VCAT_5_COEF_AC_SIN_COL_MASK           //           1,        1,         1,     1,     1,     1,     1,     1,         1
//      P047_VCAT_5_COEF_AC_SIN_COL_TYPES          //           N,        V,         N,     N,     N,     N,     N,     N,         N
//      P047_VCAT_5_COEF_AC_SIN_TABLE_TYPE         // M
#define P047_VCAT_5_COEF_AC_COS               151  // HD_PHYS_PSN,TEST_MODE,HD_LGC_PSN,COEF_1,COEF_2,COEF_3,COEF_4,COEF_5,MULTIPLIER
//      P047_VCAT_5_COEF_AC_COS_COL_WIDTH          //          11,       16,        10,     7,     7,     7,     7,     7,        10
//      P047_VCAT_5_COEF_AC_COS_COL_MASK           //           1,        1,         1,     1,     1,     1,     1,     1,         1
//      P047_VCAT_5_COEF_AC_COS_COL_TYPES          //           N,        V,         N,     N,     N,     N,     N,     N,         N
//      P047_VCAT_5_COEF_AC_COS_TABLE_TYPE         // M

// Deprecated 11/23/2010
#define P047_VCAT_5_COEF_DC_DATA              152  // HD_PHYS_PSN,HD_LGC_PSN,COEF_1,COEF_2,COEF_3,COEF_4,COEF_5,MULTIPLIER
//      P047_VCAT_5_COEF_DC_DATA_COL_WIDTH         //          11,        10,     7,     7,     7,     7,     7,        10
//      P047_VCAT_5_COEF_DC_DATA_COL_MASK          //           0,         0,     0,     0,     0,     0,     0,         0
//      P047_VCAT_5_COEF_DC_DATA_COL_TYPES         // *
//      P047_VCAT_5_COEF_DC_DATA_TABLE_TYPE        // V

// Deprecated 11/23/2010
#define P047_VCAT_3_COEF_DC_DATA              153  // HD_PHYS_PSN,HD_LGC_PSN,COEF_1,COEF_2,COEF_3,MULTIPLIER
//      P047_VCAT_3_COEF_DC_DATA_COL_WIDTH         //          11,        10,     7,     7,     7,        10
//      P047_VCAT_3_COEF_DC_DATA_COL_MASK          //           0,         0,     0,     0,     0,         0
//      P047_VCAT_3_COEF_DC_DATA_COL_TYPES         // *
//      P047_VCAT_3_COEF_DC_DATA_TABLE_TYPE        // V

// Deprecated 11/23/2010
#define P047_VCAT_DC_DELTA                    154  // HD_PHYS_PSN,HD_LGC_PSN,VCAT_DC_OD,VCAT_DC_ID,VCAT_DC_DELTA
//      P047_VCAT_DC_DELTA_COL_WIDTH               //          11,        10,        10,        10,           13
//      P047_VCAT_DC_DELTA_COL_MASK                //           0,         0,         0,         0,            0
//      P047_VCAT_DC_DELTA_COL_TYPES               // *
//      P047_VCAT_DC_DELTA_TABLE_TYPE              // V
#define P047_VCAT_3_COEF_AC_SIN               155  // HD_PHYS_PSN,TEST_MODE,HD_LGC_PSN,COEF_1,COEF_2,COEF_3,MULTIPLIER
//      P047_VCAT_3_COEF_AC_SIN_COL_WIDTH          //          11,       16,        10,     7,     7,     7,        10
//      P047_VCAT_3_COEF_AC_SIN_COL_MASK           //           1,        1,         1,     1,     1,     1,         1
//      P047_VCAT_3_COEF_AC_SIN_COL_TYPES          //           N,        V,         N,     N,     N,     N,         N
//      P047_VCAT_3_COEF_AC_SIN_TABLE_TYPE         // M
#define P047_VCAT_3_COEF_AC_COS               156  // HD_PHYS_PSN,TEST_MODE,HD_LGC_PSN,COEF_1,COEF_2,COEF_3,MULTIPLIER
//      P047_VCAT_3_COEF_AC_COS_COL_WIDTH          //          11,       16,        10,     7,     7,     7,        10
//      P047_VCAT_3_COEF_AC_COS_COL_MASK           //           1,        1,         1,     1,     1,     1,         1
//      P047_VCAT_3_COEF_AC_COS_COL_TYPES          //           N,        V,         N,     N,     N,     N,         N
//      P047_VCAT_3_COEF_AC_COS_TABLE_TYPE         // M
#define P047_ECCENTRICITY                     157  // HD_PHYS_PSN,HD_LGC_PSN,ECCENTRICITY,HD_STATUS
//      P047_ECCENTRICITY_COL_WIDTH                //          11,        10,          12,        9
//      P047_ECCENTRICITY_COL_MASK                 //           1,         1,           1,        1
//      P047_ECCENTRICITY_COL_TYPES                //           N,         N,           N,        N
//      P047_ECCENTRICITY_TABLE_TYPE               // V
#define P045_SERVO_FRAME_OFFSET               158  // HD_PHYS_PSN,HD_LGC_PSN,OLD_OFFSET,NEW_OFFSET,OLD_SINE,NEW_SINE,OLD_COSINE,NEW_COSINE,FINAL_SIM,NO_TMD
//      P045_SERVO_FRAME_OFFSET_COL_WIDTH          //          11,        10,        10,        10,       8,       8,        10,        10,        9,     6
//      P045_SERVO_FRAME_OFFSET_COL_MASK           //           1,         1,         1,         1,       1,       1,         1,         1,        0,     0
//      P045_SERVO_FRAME_OFFSET_COL_TYPES          //           N,         N,         N,         N,       N,       N,         N,         N
//      P045_SERVO_FRAME_OFFSET_TABLE_TYPE         // V
#define P044_ECCENTRICITY                     159  // HD_PHYS_PSN,HD_LGC_PSN,OPERATING_SINE,OPERATING_COSINE,ECCENTRICITY
//      P044_ECCENTRICITY_COL_WIDTH                //          11,        10,            14,              16,          12
//      P044_ECCENTRICITY_COL_MASK                 //           1,         1,             1,               1,           1
//      P044_ECCENTRICITY_COL_TYPES                //           N,         N,             N,               N,           N
//      P044_ECCENTRICITY_TABLE_TYPE               // V
#define P047_SINE_POINTS                      160  // HD_PHYS_PSN,TEST_MODE,POINT,HD_LGC_PSN,NORM_PHYS_TRK,SINE_COEF,SINE_POLY
//      P047_SINE_POINTS_COL_WIDTH                 //          11,       16,    5,        10,           13,        9,        9
//      P047_SINE_POINTS_COL_MASK                  //           0,        0,    0,         0,            0,        0,        0
//      P047_SINE_POINTS_COL_TYPES                 // *
//      P047_SINE_POINTS_TABLE_TYPE                // S
#define P047_COSINE_POINTS                    161  // HD_PHYS_PSN,TEST_MODE,POINT,HD_LGC_PSN,NORM_PHYS_TRK,COSINE_COEF,COSINE_POLY
//      P047_COSINE_POINTS_COL_WIDTH               //          11,       16,    5,        10,           13,         11,         11
//      P047_COSINE_POINTS_COL_MASK                //           0,        0,    0,         0,            0,          0,          0
//      P047_COSINE_POINTS_COL_TYPES               // *
//      P047_COSINE_POINTS_TABLE_TYPE              // S

// Deprecated 11/23/2010
#define P047_DC_POINTS                        162  // HD_PHYS_PSN,POINT,HD_LGC_PSN,NORM_PHYS_TRK,INV_Q12_DATA,DC_POLY
//      P047_DC_POINTS_COL_WIDTH                   //          11,    5,        10,           13,          12,      8
//      P047_DC_POINTS_COL_MASK                    //           0,    1,         0,            1,           1,      1
//      P047_DC_POINTS_COL_TYPES                   //                 N,                       N,           N,      N
//      P047_DC_POINTS_TABLE_TYPE                  // S
#define P140_FLAW_SUMMARY                     163  // VERIFIED_FLAW_COUNT,UNVERIFIED_FLAW_COUNT
//      P140_FLAW_SUMMARY_COL_WIDTH                //                  19,                   21
//      P140_FLAW_SUMMARY_COL_MASK                 //                   1,                    1
//      P140_FLAW_SUMMARY_COL_TYPES                //                   N,                    N
//      P140_FLAW_SUMMARY_TABLE_TYPE               // S

// Deprecated 11/23/2010
#define P138_MICROJOG_HD_STATUS               164  // HD_PHYS_PSN,HD_LGC_PSN,STATUS_CODE
//      P138_MICROJOG_HD_STATUS_COL_WIDTH          //          11,        10,         11
//      P138_MICROJOG_HD_STATUS_COL_MASK           //           0,         0,          0
//      P138_MICROJOG_HD_STATUS_COL_TYPES          // *
//      P138_MICROJOG_HD_STATUS_TABLE_TYPE         // S
#define P138_MICROJOG_CAL                     165  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,MICRO_JOG_OFFSET
//      P138_MICROJOG_CAL_COL_WIDTH                //          11,      7,        10,              16
//      P138_MICROJOG_CAL_COL_MASK                 //           1,      1,         1,               1
//      P138_MICROJOG_CAL_COL_TYPES                //           N,      N,         N,               N
//      P138_MICROJOG_CAL_TABLE_TYPE               // M
#define P139_MICROJOG_CAL                     166  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,MICRO_JOG_OFFSET
//      P139_MICROJOG_CAL_COL_WIDTH                //          11,      7,        10,              16
//      P139_MICROJOG_CAL_COL_MASK                 //           1,      1,         1,               1
//      P139_MICROJOG_CAL_COL_TYPES                //           N,      N,         N,               N
//      P139_MICROJOG_CAL_TABLE_TYPE               // M
#define P138_FIGURE_OF_MERIT                  167  // HD_PHYS_PSN,HD_LGC_PSN,FOM
//      P138_FIGURE_OF_MERIT_COL_WIDTH             //          11,        10,  5
//      P138_FIGURE_OF_MERIT_COL_MASK              //           0,         0,  0
//      P138_FIGURE_OF_MERIT_COL_TYPES             // *
//      P138_FIGURE_OF_MERIT_TABLE_TYPE            // S
#define P138_ERROR_INFO                       168  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,ERROR_CODE
//      P138_ERROR_INFO_COL_WIDTH                  //          11,        10,       8,        10
//      P138_ERROR_INFO_COL_MASK                   //           0,         0,       0,         0
//      P138_ERROR_INFO_COL_TYPES                  // *
//      P138_ERROR_INFO_TABLE_TYPE                 // S
#define P139_INTERPOLATED_ERROR               169  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,ERROR_CODE
//      P139_INTERPOLATED_ERROR_COL_WIDTH          //          11,        10,       8,        10
//      P139_INTERPOLATED_ERROR_COL_MASK           //           0,         0,       0,         0
//      P139_INTERPOLATED_ERROR_COL_TYPES          // *
//      P139_INTERPOLATED_ERROR_TABLE_TYPE         // S
#define P139_ERROR_INFO                       170  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,ERROR_CODE
//      P139_ERROR_INFO_COL_WIDTH                  //          11,        10,       8,        10
//      P139_ERROR_INFO_COL_MASK                   //           0,         0,       0,         0
//      P139_ERROR_INFO_COL_TYPES                  // *
//      P139_ERROR_INFO_TABLE_TYPE                 // S
#define P138_UJOG_HD_STATUS                   171  // HD_PHYS_PSN,HD_LGC_PSN,STATUS_CODE
//      P138_UJOG_HD_STATUS_COL_WIDTH              //          11,        10,         11
//      P138_UJOG_HD_STATUS_COL_MASK               //           0,         0,          0
//      P138_UJOG_HD_STATUS_COL_TYPES              // *
//      P138_UJOG_HD_STATUS_TABLE_TYPE             // S
#define P139_SRVO_OFST                        172  // HD_PHYS_PSN,TRK_NUM,SCAN_TYPE,HD_LGC_PSN,MEASURED_OFST
//      P139_SRVO_OFST_COL_WIDTH                   //          11,      7,        9,        10,           13
//      P139_SRVO_OFST_COL_MASK                    //           1,      1,        1,         1,            1
//      P139_SRVO_OFST_COL_TYPES                   //           N,      N,        V,         N,            N
//      P139_SRVO_OFST_TABLE_TYPE                  // M
#define P138_BUCKET_PRESCAN_CQM               173  // HD_PHYS_PSN,HD_LGC_PSN,PHYS_TRK,LGC_TRK,OFFSET,CQM
//      P138_BUCKET_PRESCAN_CQM_COL_WIDTH          //          11,        10,       8,      7,     6,  7
//      P138_BUCKET_PRESCAN_CQM_COL_MASK           //           0,         0,       0,      0,     0,  0
//      P138_BUCKET_PRESCAN_CQM_COL_TYPES          // *
//      P138_BUCKET_PRESCAN_CQM_TABLE_TYPE         // S
#define P138_BUCKET_FINESCAN_CQM              174  // HD_PHYS_PSN,HD_LGC_PSN,PHYS_TRK,LGC_TRK,OFFSET,CQM
//      P138_BUCKET_FINESCAN_CQM_COL_WIDTH         //          11,        10,       8,      7,     6,  7
//      P138_BUCKET_FINESCAN_CQM_COL_MASK          //           0,         0,       0,      0,     0,  0
//      P138_BUCKET_FINESCAN_CQM_COL_TYPES         // *
//      P138_BUCKET_FINESCAN_CQM_TABLE_TYPE        // S
#define P139_BUCKET_PRESCAN_VGA               175  // HD_PHYS_PSN,HD_LGC_PSN,PHYS_TRK,LGC_TRK,OFFSET,VGA
//      P139_BUCKET_PRESCAN_VGA_COL_WIDTH          //          11,        10,       8,      7,     6,  7
//      P139_BUCKET_PRESCAN_VGA_COL_MASK           //           0,         0,       0,      0,     0,  0
//      P139_BUCKET_PRESCAN_VGA_COL_TYPES          // *
//      P139_BUCKET_PRESCAN_VGA_TABLE_TYPE         // S

// Deprecated 11/23/2010
#define P138_CTR_GRAVITY_OFFSET2              176  // COG_OFST
//      P138_CTR_GRAVITY_OFFSET2_COL_WIDTH         //        8
//      P138_CTR_GRAVITY_OFFSET2_COL_MASK          //        0
//      P138_CTR_GRAVITY_OFFSET2_COL_TYPES         // *
//      P138_CTR_GRAVITY_OFFSET2_TABLE_TYPE        // S
#define P138_MAX_HEAD_ERROR                   177  // MAX_HEAD,MAX_HEADS_SUPPORTED
//      P138_MAX_HEAD_ERROR_COL_WIDTH              //        8,                 19
//      P138_MAX_HEAD_ERROR_COL_MASK               //        0,                  0
//      P138_MAX_HEAD_ERROR_COL_TYPES              // *
//      P138_MAX_HEAD_ERROR_TABLE_TYPE             // S
#define P139_MAX_HEAD_ERROR                   178  // MAX_HEAD,MAX_HEADS_SUPPORTED
//      P139_MAX_HEAD_ERROR_COL_WIDTH              //        8,                 19
//      P139_MAX_HEAD_ERROR_COL_MASK               //        0,                  0
//      P139_MAX_HEAD_ERROR_COL_TYPES              // *
//      P139_MAX_HEAD_ERROR_TABLE_TYPE             // S
#define P139_FIGURE_OF_MERIT                  179  // HD_PHYS_PSN,HD_LGC_PSN,FOM
//      P139_FIGURE_OF_MERIT_COL_WIDTH             //          11,        10,  5
//      P139_FIGURE_OF_MERIT_COL_MASK              //           0,         0,  0
//      P139_FIGURE_OF_MERIT_COL_TYPES             // *
//      P139_FIGURE_OF_MERIT_TABLE_TYPE            // S
#define P139_UJOG_HD_STATUS                   180  // HD_PHYS_PSN,HD_LGC_PSN,STATUS_CODE
//      P139_UJOG_HD_STATUS_COL_WIDTH              //          11,        10,         11
//      P139_UJOG_HD_STATUS_COL_MASK               //           0,         0,          0
//      P139_UJOG_HD_STATUS_COL_TYPES              // *
//      P139_UJOG_HD_STATUS_TABLE_TYPE             // S
#define P139_BUCKET1_FINESCAN_VGA             181  // HD_PHYS_PSN,HD_LGC_PSN,PHYS_TRK,LGC_TRK,OFFSET,VGA
//      P139_BUCKET1_FINESCAN_VGA_COL_WIDTH        //          11,        10,       8,      7,     6,  7
//      P139_BUCKET1_FINESCAN_VGA_COL_MASK         //           0,         0,       0,      0,     0,  0
//      P139_BUCKET1_FINESCAN_VGA_COL_TYPES        // *
//      P139_BUCKET1_FINESCAN_VGA_TABLE_TYPE       // S
#define P139_BUCKET2_FINESCAN_VGA             182  // HD_PHYS_PSN,HD_LGC_PSN,PHYS_TRK,LGC_TRK,OFFSET,VGA
//      P139_BUCKET2_FINESCAN_VGA_COL_WIDTH        //          11,        10,       8,      7,     6,  7
//      P139_BUCKET2_FINESCAN_VGA_COL_MASK         //           0,         0,       0,      0,     0,  0
//      P139_BUCKET2_FINESCAN_VGA_COL_TYPES        // *
//      P139_BUCKET2_FINESCAN_VGA_TABLE_TYPE       // S
#define P180_RESONANCE                        183  // HD_PHYS_PSN,FREQ_RANGE_NUM,TRK_NUM,HD_LGC_PSN,LOW_FREQ,HI_FREQ,FFT_AMP,PEAK_PES_FREQ,HD_STATUS
//      P180_RESONANCE_COL_WIDTH                   //          11,            14,      7,        10,       8,      7,      7,           13,        9
//      P180_RESONANCE_COL_MASK                    //           1,             1,      1,         1,       1,      1,      1,            1,        1
//      P180_RESONANCE_COL_TYPES                   //           N,             N,      N,         N,       N,      N,      N,            N,        N
//      P180_RESONANCE_TABLE_TYPE                  // M
#define P180_RESONANCE_AMP_LIMITS             184  // MODE_1,MODE_2,MODE_3,MODE_4,MODE_5,MODE_6,MODE_7
//      P180_RESONANCE_AMP_LIMITS_COL_WIDTH        //      6,     6,     6,     6,     6,     6,     6
//      P180_RESONANCE_AMP_LIMITS_COL_MASK         //      0,     0,     0,     0,     0,     0,     0
//      P180_RESONANCE_AMP_LIMITS_COL_TYPES        // *
//      P180_RESONANCE_AMP_LIMITS_TABLE_TYPE       // S
#define P180_TOTAL_NRRO_SUMMARY               185  // HD_PHYS_PSN,HD_LGC_PSN,TOTAL_NRRO_HD
//      P180_TOTAL_NRRO_SUMMARY_COL_WIDTH          //          11,        10,           13
//      P180_TOTAL_NRRO_SUMMARY_COL_MASK           //           1,         1,            1
//      P180_TOTAL_NRRO_SUMMARY_COL_TYPES          //           N,         N,            N
//      P180_TOTAL_NRRO_SUMMARY_TABLE_TYPE         // V
#define P180_DUMP_PES_DATA_1                  186  // HD_PHYS_PSN,TRK_NUM,TPI,RPM,NREVS,NPTS
//      P180_DUMP_PES_DATA_1_COL_WIDTH             //          11,      7,  8,  8,    5,   6
//      P180_DUMP_PES_DATA_1_COL_MASK              //           0,      0,  0,  0,    0,   0
//      P180_DUMP_PES_DATA_1_COL_TYPES             // *
//      P180_DUMP_PES_DATA_1_TABLE_TYPE            // S
#define P180_DUMP_PES_DATA_2                  187  // INDEX,00,01,02,03,04,05,06,07,08,09
//      P180_DUMP_PES_DATA_2_COL_WIDTH             //     5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5
//      P180_DUMP_PES_DATA_2_COL_MASK              //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//      P180_DUMP_PES_DATA_2_COL_TYPES             // *
//      P180_DUMP_PES_DATA_2_TABLE_TYPE            // S
#define P211_HEADER_INFO                      188  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,OD_TRK,ID_TRK,TRGT_SER,TLEVEL,NUM_SOVA_ITERATIONS,TPI_TRGT_SER,TPI_TLEVEL
//      P211_HEADER_INFO_COL_WIDTH                 //          11,        9,        10,     8,     8,       8,     6,                 19,          12,        10
//      P211_HEADER_INFO_COL_MASK                  //           1,        1,         1,     1,     1,       1,     0,                  0,           0,         0
//      P211_HEADER_INFO_COL_TYPES                 //           N,        N,         N,     N,     N,       N
//      P211_HEADER_INFO_TABLE_TYPE                // M
#define P211_BPI_MEASUREMENT                  189  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,DELTA_BPI_PCT,M_VAL,F_VAL,SECTOR_ERROR_RATE,BANDWIDTH,BANDWIDTH_RNG,TW_3,TW_5,PRECOMP,BOOST
//      P211_BPI_MEASUREMENT_COL_WIDTH             //          11,        9,        10,      7,           13,    5,    5,               17,        9,           13,   4,   4,      7,    5
//      P211_BPI_MEASUREMENT_COL_MASK              //           1,        1,         1,      1,            1,    1,    1,                1,        1,            1,   1,   1,      0,    0
//      P211_BPI_MEASUREMENT_COL_TYPES             //           N,        N,         N,      N,            N,    N,    N,                N,        N,            N,   N,   N
//      P211_BPI_MEASUREMENT_TABLE_TYPE            // M
#define P211_VBAR_SER_DATA                    190  // P_F,NUM_SECTORS,SEC_READ,TOT_SEC_RD,DATA_ERRS,SYNC_ERRS,OTHER_ERRS,TOT_ERRS,SENSE_DATA
//      P211_VBAR_SER_DATA_COL_WIDTH               //   3,         11,       8,        10,        9,        9,        10,       8,        10
//      P211_VBAR_SER_DATA_COL_MASK                //   0,          0,       0,         0,        0,        0,         0,       0,         0
//      P211_VBAR_SER_DATA_COL_TYPES               // *
//      P211_VBAR_SER_DATA_TABLE_TYPE              // S
#define P211_BPI_INIT                         191  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,ORIG_M,ORIG_F,F_STEP,STEP_PCT
//      P211_BPI_INIT_COL_WIDTH                    //          11,      7,        10,     6,     6,     6,       8
//      P211_BPI_INIT_COL_MASK                     //           1,      1,         1,     1,     1,     1,       1
//      P211_BPI_INIT_COL_TYPES                    //           N,      N,         N,     N,     N,     N,       N
//      P211_BPI_INIT_TABLE_TYPE                   // M
#define P211_BPI_CAP_SINGLE                   192  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,BPI_CAP_SINGLE_PT
//      P211_BPI_CAP_SINGLE_COL_WIDTH              //          11,        9,        10,      7,               17
//      P211_BPI_CAP_SINGLE_COL_MASK               //           1,        1,         1,      1,                1
//      P211_BPI_CAP_SINGLE_COL_TYPES              //           N,        N,         N,      N,                N
//      P211_BPI_CAP_SINGLE_TABLE_TYPE             // M
#define P211_BPI_CAP_AVG                      193  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NUM_TRKS_TESTED,BPI_CAP_AVG,ZERO_HEAT_CLR,CAP_SLOPE,BPI_CAP_MIN,BPI_CAP_MAX,RD_OFST_AVG,RD_OFST_MIN,RD_OFST_MAX,FREQ_CAP
//      P211_BPI_CAP_AVG_COL_WIDTH                 //          11,        9,        10,             15,         11,           11,        9,         11,         11,         11,         11,         11,       8
//      P211_BPI_CAP_AVG_COL_MASK                  //           1,        1,         1,              1,          1,            1,        1,          0,          0,          0,          0,          0,       0
//      P211_BPI_CAP_AVG_COL_TYPES                 //           N,        N,         N,              N,          N,            N,        N
//      P211_BPI_CAP_AVG_TABLE_TYPE                // M
#define P211_TPI_CAP_SINGLE                   194  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,TPI_CAP_SINGLE_PT
//      P211_TPI_CAP_SINGLE_COL_WIDTH              //          11,        9,        10,      7,               17
//      P211_TPI_CAP_SINGLE_COL_MASK               //           1,        1,         1,      1,                1
//      P211_TPI_CAP_SINGLE_COL_TYPES              //           N,        N,         N,      N,                N
//      P211_TPI_CAP_SINGLE_TABLE_TYPE             // M
#define P211_TPI_CAP_AVG                      195  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NUM_TRKS_TESTED,TPI_CAP_AVG,ZERO_HEAT_CLR,CAP_SLOPE,TPI_CAP_MIN,TPI_CAP_MAX,RD_OFST_AVG,RD_OFST_MIN,RD_OFST_MAX,MEAS_FREQ
//      P211_TPI_CAP_AVG_COL_WIDTH                 //          11,        9,        10,             15,         11,           11,        9,         11,         11,         11,         11,         11,        9
//      P211_TPI_CAP_AVG_COL_MASK                  //           1,        1,         1,              1,          1,            1,        1,          0,          0,          0,          0,          0,        0
//      P211_TPI_CAP_AVG_COL_TYPES                 //           N,        N,         N,              N,          N,            N,        N
//      P211_TPI_CAP_AVG_TABLE_TYPE                // M
#define P211_TPI_MEASUREMENT                  196  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,SQZ_PCT,SQZ_CNT,DELTA_SER,BASE_SER,SQZ_SER
//      P211_TPI_MEASUREMENT_COL_WIDTH             //          11,        9,        10,      7,      7,      7,        9,       8,      7
//      P211_TPI_MEASUREMENT_COL_MASK              //           1,        1,         1,      1,      1,      1,        1,       1,      1
//      P211_TPI_MEASUREMENT_COL_TYPES             //           N,        N,         N,      N,      N,      N,        N,       N,      N
//      P211_TPI_MEASUREMENT_TABLE_TYPE            // M
#define P141_CQM                              197  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_NOMINAL,CQM_OPTI,SAVE_OPTI_VAL,HD_STATUS
//      P141_CQM_COL_WIDTH                         //          11,        9,        10,         11,       8,           13,        9
//      P141_CQM_COL_MASK                          //           1,        1,         1,          1,       1,            1,        1
//      P141_CQM_COL_TYPES                         //           N,        N,         N,          N,       N,            N,        N
//      P141_CQM_TABLE_TYPE                        // M
#define P141_FIR_TAPS_AGERE                   198  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TAP2R1R,TAP5R3R,TAP7R6R,TAP9R8R,TAPXR
//      P141_FIR_TAPS_AGERE_COL_WIDTH              //          11,        9,        10,      7,      7,      7,      7,    5
//      P141_FIR_TAPS_AGERE_COL_MASK               //           1,        1,         1,      1,      1,      1,      1,    1
//      P141_FIR_TAPS_AGERE_COL_TYPES              //           N,        N,         N,      N,      N,      N,      N,    N
//      P141_FIR_TAPS_AGERE_TABLE_TYPE             // M
#define P141_NYQUIST_DC_TAPS                  199  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NYTAP,DCTAP
//      P141_NYQUIST_DC_TAPS_COL_WIDTH             //          11,        9,        10,    5,    5
//      P141_NYQUIST_DC_TAPS_COL_MASK              //           1,        1,         1,    1,    1
//      P141_NYQUIST_DC_TAPS_COL_TYPES             //           N,        N,         N,    N,    N
//      P141_NYQUIST_DC_TAPS_TABLE_TYPE            // M

// Deprecated 11/23/2010
#define P141_NPML_TAPS_CUHD                   200  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NPTAP0__1,NPTAP0__3_2,NPTAP0__5_4,NPTAP0__7_6,NPTAP1__1_0,NPTAP1__3_2,NPTAP1__5_4,NPTAP1__7_6,NPTAP2__1_0,NPTAP2__3_2,NPTAP2__5_4,NPTAP2__7_6,NPTAP3__1_0,NPTAP3__3_2,NPTAP3__5_4,NPTAP3__7_6
//      P141_NPML_TAPS_CUHD_COL_WIDTH              //          11,        9,        10,        9,         11,         11,         11,         11,         11,         11,         11,         11,         11,         11,         11,         11,         11,         11,         11
//      P141_NPML_TAPS_CUHD_COL_MASK               //           1,        1,         1,        1,          1,          1,          1,          1,          1,          1,          1,          1,          1,          1,          1,          1,          1,          1,          1
//      P141_NPML_TAPS_CUHD_COL_TYPES              //           N,        N,         N,        N,          N,          N,          N,          N,          N,          N,          N,          N,          N,          N,          N,          N,          N,          N,          N
//      P141_NPML_TAPS_CUHD_TABLE_TYPE             // M
#define P141_NPML_TAPS_CUHD_LT                201  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NPTAP0__7,NPTAP0__6_5_4,NPTAP0__3_2_1,NPTAP1__7_6,NPTAP1__5_4,NPTAP1__3_2,NPTAP1__1_0,NPTAP2__7_6,NPTAP2__5_4,NPTAP2__3_2,NPTAP2__1_0,NPTAP3__7_6_5,NPTAP3__4_3_2,NPTAP3__1_0
//      P141_NPML_TAPS_CUHD_LT_COL_WIDTH           //          11,        9,        10,        9,           13,           13,         11,         11,         11,         11,         11,         11,         11,         11,           13,           13,         11
//      P141_NPML_TAPS_CUHD_LT_COL_MASK            //           1,        1,         1,        1,            1,            1,          1,          1,          1,          1,          1,          1,          1,          1,            1,            1,          1
//      P141_NPML_TAPS_CUHD_LT_COL_TYPES           //           N,        N,         N,        N,            N,            N,          N,          N,          N,          N,          N,          N,          N,          N,            N,            N,          N
//      P141_NPML_TAPS_CUHD_LT_TABLE_TYPE          // M

// Deprecated 11/23/2010
#define P141_BIAS_TAPS_CUHD                   202  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BIAS_2_1_0,BIAS_5_4_3,BIAS_8_7_6,BIAS_B_A_9,BIAS_E_D_C,BIAS_F
//      P141_BIAS_TAPS_CUHD_COL_WIDTH              //          11,        9,        10,        10,        10,        10,        10,        10,     8
//      P141_BIAS_TAPS_CUHD_COL_MASK               //           1,        1,         1,         1,         1,         1,         1,         1,     1
//      P141_BIAS_TAPS_CUHD_COL_TYPES              //           N,        N,         N,         N,         N,         N,         N,         N,     N
//      P141_BIAS_TAPS_CUHD_TABLE_TYPE             // M
#define P141_BIAS_TAPS_CUHD_LT                203  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BIAS_3_2_1_0,BIAS_7_6_5_4,BIAS_B_A_9_8,BIAS_F_E_D_C
//      P141_BIAS_TAPS_CUHD_LT_COL_WIDTH           //          11,        9,        10,          12,          12,          12,          12
//      P141_BIAS_TAPS_CUHD_LT_COL_MASK            //           1,        1,         1,           1,           1,           1,           1
//      P141_BIAS_TAPS_CUHD_LT_COL_TYPES           //           N,        N,         N,           N,           N,           N,           N
//      P141_BIAS_TAPS_CUHD_LT_TABLE_TYPE          // M
#define P141_ASYMMETRY                        204  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NLFR
//      P141_ASYMMETRY_COL_WIDTH                   //          11,        9,        10,   6
//      P141_ASYMMETRY_COL_MASK                    //           1,        1,         1,   1
//      P141_ASYMMETRY_COL_TYPES                   //           N,        N,         N,   N
//      P141_ASYMMETRY_TABLE_TYPE                  // M

// Deprecated 11/23/2010
#define P151_CQM                              205  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_NOMINAL,HD_STATUS
//      P151_CQM_COL_WIDTH                         //          11,        9,        10,         11,        9
//      P151_CQM_COL_MASK                          //           1,        1,         1,          1,        1
//      P151_CQM_COL_TYPES                         //           N,        N,         N,          N,        N
//      P151_CQM_TABLE_TYPE                        // M
#define P151_SERVO_OFFSETS                    206  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,SRVO_OFST
//      P151_SERVO_OFFSETS_COL_WIDTH               //          11,        9,        10,        9
//      P151_SERVO_OFFSETS_COL_MASK                //           1,        1,         1,        1
//      P151_SERVO_OFFSETS_COL_TYPES               //           N,        N,         N,        N
//      P151_SERVO_OFFSETS_TABLE_TYPE              // M
#define P151_FW_ACTION_FLAGS                  207  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ACTION_FLAGS
//      P151_FW_ACTION_FLAGS_COL_WIDTH             //          11,        9,        10,          12
//      P151_FW_ACTION_FLAGS_COL_MASK              //           1,        1,         1,           1
//      P151_FW_ACTION_FLAGS_COL_TYPES             //           N,        N,         N,           N
//      P151_FW_ACTION_FLAGS_TABLE_TYPE            // M

// Deprecated 11/23/2010
#define P151_TDTARG                           208  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_TDTARG_COL_WIDTH                      //          11,        9,        10,       8,       8
//      P151_TDTARG_COL_MASK                       //           1,        1,         1,       1,       1
//      P151_TDTARG_COL_TYPES                      //           N,        N,         N,       N,       N
//      P151_TDTARG_TABLE_TYPE                     // M

// Deprecated 11/23/2010
#define P151_CTFFR                            209  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_CTFFR_COL_WIDTH                       //          11,        9,        10,       8,       8
//      P151_CTFFR_COL_MASK                        //           1,        1,         1,       1,       1
//      P151_CTFFR_COL_TYPES                       //           N,        N,         N,       N,       N
//      P151_CTFFR_TABLE_TYPE                      // M

// Deprecated 11/23/2010
#define P151_BOOST_AGERE                      210  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_BOOST_AGERE_COL_WIDTH                 //          11,        9,        10,       8,       8
//      P151_BOOST_AGERE_COL_MASK                  //           1,        1,         1,       1,       1
//      P151_BOOST_AGERE_COL_TYPES                 //           N,        N,         N,       N,       N
//      P151_BOOST_AGERE_TABLE_TYPE                // M

// Deprecated 11/23/2010
#define P151_BOOST_MARVELL                    211  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_BOOST_MARVELL_COL_WIDTH               //          11,        9,        10,       8,       8
//      P151_BOOST_MARVELL_COL_MASK                //           1,        1,         1,       1,       1
//      P151_BOOST_MARVELL_COL_TYPES               //           N,        N,         N,       N,       N
//      P151_BOOST_MARVELL_TABLE_TYPE              // M

// Deprecated 11/23/2010
#define P151_PRECOMP_LATE                     212  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_PRECOMP_LATE_COL_WIDTH                //          11,        9,        10,       8,       8
//      P151_PRECOMP_LATE_COL_MASK                 //           1,        1,         1,       1,       1
//      P151_PRECOMP_LATE_COL_TYPES                //           N,        N,         N,       N,       N
//      P151_PRECOMP_LATE_TABLE_TYPE               // M

// Deprecated 11/23/2010
#define P151_PRECOMP_0010                     213  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_PRECOMP_0010_COL_WIDTH                //          11,        9,        10,       8,       8
//      P151_PRECOMP_0010_COL_MASK                 //           1,        1,         1,       1,       1
//      P151_PRECOMP_0010_COL_TYPES                //           N,        N,         N,       N,       N
//      P151_PRECOMP_0010_TABLE_TYPE               // M

// Deprecated 11/23/2010
#define P151_PRECOMP_1010                     214  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_PRECOMP_1010_COL_WIDTH                //          11,        9,        10,       8,       8
//      P151_PRECOMP_1010_COL_MASK                 //           1,        1,         1,       1,       1
//      P151_PRECOMP_1010_COL_TYPES                //           N,        N,         N,       N,       N
//      P151_PRECOMP_1010_TABLE_TYPE               // M

// Deprecated 11/23/2010
#define P151_PRECOMP_1110                     215  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_PRECOMP_1110_COL_WIDTH                //          11,        9,        10,       8,       8
//      P151_PRECOMP_1110_COL_MASK                 //           1,        1,         1,       1,       1
//      P151_PRECOMP_1110_COL_TYPES                //           N,        N,         N,       N,       N
//      P151_PRECOMP_1110_TABLE_TYPE               // M

// Deprecated 11/23/2010
#define P151_PRECOMP_0110                     216  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_PRECOMP_0110_COL_WIDTH                //          11,        9,        10,       8,       8
//      P151_PRECOMP_0110_COL_MASK                 //           1,        1,         1,       1,       1
//      P151_PRECOMP_0110_COL_TYPES                //           N,        N,         N,       N,       N
//      P151_PRECOMP_0110_TABLE_TYPE               // M

// Deprecated 11/23/2010
#define P151_PRECOMP_0110_1110                217  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_PRECOMP_0110_1110_COL_WIDTH           //          11,        9,        10,       8,       8
//      P151_PRECOMP_0110_1110_COL_MASK            //           1,        1,         1,       1,       1
//      P151_PRECOMP_0110_1110_COL_TYPES           //           N,        N,         N,       N,       N
//      P151_PRECOMP_0110_1110_TABLE_TYPE          // M
#define P151_ASYMMETRY                        218  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL,R2_CQM,HD_R2_LIMIT_CNT
//      P151_ASYMMETRY_COL_WIDTH                   //          11,        9,        10,       8,       8,     6,             15
//      P151_ASYMMETRY_COL_MASK                    //           1,        1,         1,       1,       1,     1,              1
//      P151_ASYMMETRY_COL_TYPES                   //           N,        N,         N,       N,       N,     N,              N
//      P151_ASYMMETRY_TABLE_TYPE                  // M

// Deprecated 11/23/2010
#define P151_WRT_PRECOMP_PULSE                219  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_WRT_PRECOMP_PULSE_COL_WIDTH           //          11,        9,        10,       8,       8
//      P151_WRT_PRECOMP_PULSE_COL_MASK            //           1,        1,         1,       1,       1
//      P151_WRT_PRECOMP_PULSE_COL_TYPES           //           N,        N,         N,       N,       N
//      P151_WRT_PRECOMP_PULSE_TABLE_TYPE          // M
#define P151_FIR_TAPS_MARVELL                 220  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,TAP0,TAP1,TAP2,TAP3,TAP4,TAP5,TAP6,TAP7,TAP8,TAP9,STEP,CS0,CS1
//      P151_FIR_TAPS_MARVELL_COL_WIDTH            //          11,        9,        10,       8,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,  5,  5
//      P151_FIR_TAPS_MARVELL_COL_MASK             //           1,        1,         1,       1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   0,  0,  0
//      P151_FIR_TAPS_MARVELL_COL_TYPES            //           N,        N,         N,       N,   N,   N,   N,   N,   N,   N,   N,   N,   N,   N
//      P151_FIR_TAPS_MARVELL_TABLE_TYPE           // M

// Deprecated 11/23/2010
#define P151_ASYM_BOOST                       221  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_ASYM_BOOST_COL_WIDTH                  //          11,        9,        10,       8,       8
//      P151_ASYM_BOOST_COL_MASK                   //           1,        1,         1,       1,       1
//      P151_ASYM_BOOST_COL_TYPES                  //           N,        N,         N,       N,       N
//      P151_ASYM_BOOST_TABLE_TYPE                 // M

// Deprecated 11/23/2010
#define P151_GENERIC_REG_DATA                 222  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_GENERIC_REG_DATA_COL_WIDTH            //          11,        9,        10,       8,       8
//      P151_GENERIC_REG_DATA_COL_MASK             //           0,        0,         0,       0,       0
//      P151_GENERIC_REG_DATA_COL_TYPES            // *
//      P151_GENERIC_REG_DATA_TABLE_TYPE           // M
#define P151_VGA_MARVELL                      223  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,VGA_GAIN
//      P151_VGA_MARVELL_COL_WIDTH                 //          11,        9,        10,       8
//      P151_VGA_MARVELL_COL_MASK                  //           1,        1,         1,       1
//      P151_VGA_MARVELL_COL_TYPES                 //           N,        N,         N,       N
//      P151_VGA_MARVELL_TABLE_TYPE                // M
#define P151_STATUS                           224  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,SAVE_OPTI_VAL,HD_STATUS
//      P151_STATUS_COL_WIDTH                      //          11,        9,        10,           13,        9
//      P151_STATUS_COL_MASK                       //           1,        1,         1,            1,        1
//      P151_STATUS_COL_TYPES                      //           N,        N,         N,            N,        N
//      P151_STATUS_TABLE_TYPE                     // M
#define P185_TRK_0_CALHD                      225  // HD_PHYS_PSN,HD_LGC_PSN,OFST_CAL_HD,DC_ERROR,TIMING_ERROR,HD_STATUS
//      P185_TRK_0_CALHD_COL_WIDTH                 //          11,        10,         11,       8,          12,        9
//      P185_TRK_0_CALHD_COL_MASK                  //           1,         1,          1,       1,           1,        1
//      P185_TRK_0_CALHD_COL_TYPES                 //           N,         N,          N,       N,           N,        N
//      P185_TRK_0_CALHD_TABLE_TYPE                // V

// Deprecated 11/23/2010
#define P186_DELTA_THRESHOLD_REG              226  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,REGISTER_DATA
//      P186_DELTA_THRESHOLD_REG_COL_WIDTH         //          11,        10,   4,           13
//      P186_DELTA_THRESHOLD_REG_COL_MASK          //           0,         0,   0,            0
//      P186_DELTA_THRESHOLD_REG_COL_TYPES         // *
//      P186_DELTA_THRESHOLD_REG_TABLE_TYPE        // S

// Deprecated 11/23/2010
#define P186_VGA_THRESHOLD_REG                227  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,REGISTER_DATA
//      P186_VGA_THRESHOLD_REG_COL_WIDTH           //          11,        10,   4,           13
//      P186_VGA_THRESHOLD_REG_COL_MASK            //           0,         0,   0,            0
//      P186_VGA_THRESHOLD_REG_COL_TYPES           // *
//      P186_VGA_THRESHOLD_REG_TABLE_TYPE          // S
#define P186_AGC_DATA                         228  // HD_PHYS_PSN,HD_LGC_PSN,AGC_DATA,REGISTER_ADDRESS,RAM_DATA_1,RAM_DATA_2,RAM_DATA_3,RAM_DATA_4,RAM_DATA_5,RAM_DATA_6,RAM_DATA_7,RAM_DATA_8
//      P186_AGC_DATA_COL_WIDTH                    //          11,        10,       8,              16,        10,        10,        10,        10,        10,        10,        10,        10
//      P186_AGC_DATA_COL_MASK                     //           1,         1,       1,               1,         1,         1,         1,         1,         1,         1,         1,         1
//      P186_AGC_DATA_COL_TYPES                    //           N,         N,       N,               N,         N,         N,         N,         N,         N,         N,         N,         N
//      P186_AGC_DATA_TABLE_TYPE                   // V
#define P186_PRESET_AGC                       229  // HD_PHYS_PSN,HD_LGC_PSN,AGC_DATA,AGC_MIN_LIMIT,AGC_MAX_LIMIT
//      P186_PRESET_AGC_COL_WIDTH                  //          11,        10,       8,           13,           13
//      P186_PRESET_AGC_COL_MASK                   //           1,         1,       1,            0,            0
//      P186_PRESET_AGC_COL_TYPES                  //           N,         N,       N
//      P186_PRESET_AGC_TABLE_TYPE                 // V

// Deprecated 11/23/2010
#define P186_BIAS_CAL                         230  // HD_PHYS_PSN,HD_LGC_PSN,ORIGINAL_CURRENT,NEW_CURRENT,BIAS_VOLTAGE,MRE_RESISTANCE,NEW_CURRENT_DAC
//      P186_BIAS_CAL_COL_WIDTH                    //          11,        10,              16,         11,          12,            14,             15
//      P186_BIAS_CAL_COL_MASK                     //           1,         1,               1,          1,           1,             1,              1
//      P186_BIAS_CAL_COL_TYPES                    //           N,         N,               N,          N,           N,             N,              N
//      P186_BIAS_CAL_TABLE_TYPE                   // V
#define P172_WRITE_POWERS                     231  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,WRT_CUR,WRT_CUR_OFST_COLD,WRT_CUR_OFST_HOT,OVS_WRT_CUR,OVS_OFST_COLD,OVS_OFST_HOT,OVS_DUR,OVS_DUR_OFST_COLD,OVS_DUR_OFST_HOT,PDW_IOS
//      P172_WRITE_POWERS_COL_WIDTH                //          11,        9,        10,      7,               17,              16,         11,           13,          12,      7,               17,              16,      7
//      P172_WRITE_POWERS_COL_MASK                 //           1,        1,         1,      1,                1,               1,          1,            1,           1,      1,                1,               1,      0
//      P172_WRITE_POWERS_COL_TYPES                //           N,        N,         N,      N,                N,               N,          N,            N,           N,      N,                N,               N
//      P172_WRITE_POWERS_TABLE_TYPE               // M
#define P172_AFH_HEATER                       232  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,WRT_HEAT_DAC,PRE_HEAT_DAC,RD_HEAT_DAC,HIGH_RANGE
//      P172_AFH_HEATER_COL_WIDTH                  //          11,        9,        10,          12,          12,         11,        10
//      P172_AFH_HEATER_COL_MASK                   //           1,        1,         1,           1,           1,          1,         1
//      P172_AFH_HEATER_COL_TYPES                  //           N,        N,         N,           N,           N,          N,         N
//      P172_AFH_HEATER_TABLE_TYPE                 // M
#define P172_AFH_CLEARANCE                    233  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,PRE_WRT_CLRNC_TRGT,WRT_CLRNC_TRGT,RD_CLRNC_TRGT,MAINT_CLRNC_TRGT,HEAT_CLRNC,WRT_HEAT_CLRNC
//      P172_AFH_CLEARANCE_COL_WIDTH               //          11,        9,        10,                18,            14,           13,              16,        10,            14
//      P172_AFH_CLEARANCE_COL_MASK                //           1,        1,         1,                 1,             1,            1,               1,         1,             1
//      P172_AFH_CLEARANCE_COL_TYPES               //           N,        N,         N,                 N,             N,            N,               N,         N,             N
//      P172_AFH_CLEARANCE_TABLE_TYPE              // M
#define P172_AFH_PTP_COEF                     234  // COEF_INDEX,WRT_PTP_COEF,HTR_PTP_COEF,WRT_HTR_PTP_COEF
//      P172_AFH_PTP_COEF_COL_WIDTH                //         10,          13,          13,              16
//      P172_AFH_PTP_COEF_COL_MASK                 //          1,           1,           1,               1
//      P172_AFH_PTP_COEF_COL_TYPES                //          N,           N,           N,               N
//      P172_AFH_PTP_COEF_TABLE_TYPE               // V
#define P172_AFH_TC_COEF                      235  // HD_PHYS_PSN,HD_LGC_PSN,TC1_COEF,TC2_COEF
//      P172_AFH_TC_COEF_COL_WIDTH                 //          11,        10,       8,       8
//      P172_AFH_TC_COEF_COL_MASK                  //           1,         1,       1,       1
//      P172_AFH_TC_COEF_COL_TYPES                 //           N,         N,       N,       N
//      P172_AFH_TC_COEF_TABLE_TYPE                // V
#define P172_AFH_DRIVE_ADAPTS                 236  // IDLE_CLRNC_TRGT,MIN_PRE_HEAT_USECS
//      P172_AFH_DRIVE_ADAPTS_COL_WIDTH            //              15,                18
//      P172_AFH_DRIVE_ADAPTS_COL_MASK             //               1,                 1
//      P172_AFH_DRIVE_ADAPTS_COL_TYPES            //               N,                 N
//      P172_AFH_DRIVE_ADAPTS_TABLE_TYPE           // S
#define P172_SWD_ADAPTS                       237  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,SWD_THRSHLD,SWD_DELTA,SWD_FILTER
//      P172_SWD_ADAPTS_COL_WIDTH                  //          11,        9,        10,         11,        9,        10
//      P172_SWD_ADAPTS_COL_MASK                   //           1,        1,         1,          1,        1,         1
//      P172_SWD_ADAPTS_COL_TYPES                  //           N,        N,         N,          N,        N,         N
//      P172_SWD_ADAPTS_TABLE_TYPE                 // M

// Deprecated 11/23/2010
#define P172_MR_BIAS_OFFSET                   238  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,MR_BIAS_OFST,MR_BIAS_OFST_OFST_COLD,MR_BIAS_OFST_OFST_HOT
//      P172_MR_BIAS_OFFSET_COL_WIDTH              //          11,        9,        10,          12,                    22,                   21
//      P172_MR_BIAS_OFFSET_COL_MASK               //           0,        0,         0,           0,                     0,                    0
//      P172_MR_BIAS_OFFSET_COL_TYPES              // *
//      P172_MR_BIAS_OFFSET_TABLE_TYPE             // M
#define P172_AFH_WORKING_ADAPTS               239  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,PRE_HEAT,WRT_HEAT,RD_HEAT,HTR_PWR_RNG_BIT,WRT_CUR,WRT_CUR_OVS_AMP,WRT_CUR_OVS_DUR,MR_BIAS_OFST
//      P172_AFH_WORKING_ADAPTS_COL_WIDTH          //          11,        9,        10,       8,       8,      7,             15,      7,             15,             15,          12
//      P172_AFH_WORKING_ADAPTS_COL_MASK           //           1,        1,         1,       1,       1,      1,              1,      1,              1,              1,           1
//      P172_AFH_WORKING_ADAPTS_COL_TYPES          //           N,        N,         N,       N,       N,      N,              N,      N,              N,              N,           N
//      P172_AFH_WORKING_ADAPTS_TABLE_TYPE         // S
#define P211_VBAR_OPTI_DATA                   240  // DEFAULT,OPTI_VAL_1,OPTI_VAL_2,OPTI_VAL_3,OPTI_VAL_4,OPTI_VAL_5,OPTI_VAL_6,OPTI_VAL_7,OPTI_VAL_8,OPTI_VAL_9,OPTI_VAL_10,OPTI_VAL_11
//      P211_VBAR_OPTI_DATA_COL_WIDTH              //       7,        10,        10,        10,        10,        10,        10,        10,        10,        10,         11,         11
//      P211_VBAR_OPTI_DATA_COL_MASK               //       0,         0,         0,         0,         0,         0,         0,         0,         0,         0,          0,          0
//      P211_VBAR_OPTI_DATA_COL_TYPES              // *
//      P211_VBAR_OPTI_DATA_TABLE_TYPE             // S
#define P211_VBAR_OPTI_SER                    241  // OPTIMUM,SER__VAL_1,SER__VAL_2,SER__VAL_3,SER__VAL_4,SER__VAL_5,SER__VAL_6,SER__VAL_7,SER__VAL_8,SER__VAL_9,SER__VAL_10,SER__VAL_11
//      P211_VBAR_OPTI_SER_COL_WIDTH               //       7,        10,        10,        10,        10,        10,        10,        10,        10,        10,         11,         11
//      P211_VBAR_OPTI_SER_COL_MASK                //       0,         0,         0,         0,         0,         0,         0,         0,         0,         0,          0,          0
//      P211_VBAR_OPTI_SER_COL_TYPES               // *
//      P211_VBAR_OPTI_SER_TABLE_TYPE              // S
#define P211_VBAR_OPTI_FIR                    242  // TDTARG,TW1,TW2,TW3,TW5,TW6,TW7,TW8,TW9,TW10,TW4,TW11,TW12,TW13,TW14,TW15,TW16
//      P211_VBAR_OPTI_FIR_COL_WIDTH               //      6,  3,  3,  3,  3,  3,  3,  3,  3,   4,  4,   4,   4,   4,   4,   4,   4
//      P211_VBAR_OPTI_FIR_COL_MASK                //      0,  0,  0,  0,  0,  0,  0,  0,  0,   0,  0,   0,   0,   0,   0,   0,   0
//      P211_VBAR_OPTI_FIR_COL_TYPES               // *
//      P211_VBAR_OPTI_FIR_TABLE_TYPE              // S
#define P029_SPINDLE_MODE                     243  // HD_PHYS_PSN,HD_LGC_PSN,SPINDLE_RPM,RRO,HD_STATUS
//      P029_SPINDLE_MODE_COL_WIDTH                //          11,        10,         11,  5,       10
//      P029_SPINDLE_MODE_COL_MASK                 //           1,         1,          1,  1,        1
//      P029_SPINDLE_MODE_COL_TYPES                //           N,         N,          N,  N,        N
//      P029_SPINDLE_MODE_TABLE_TYPE               // V
#define P211_TPI_INIT                         244  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,BPI_PCT,ORIG_M,ORIG_F,NEW_M,NEW_F,BANDWIDTH,BANDWIDTH_RNG,TW_3,TW_5,PRECOMP,BOOST
//      P211_TPI_INIT_COL_WIDTH                    //          11,      7,        10,      7,     6,     6,    5,    5,       10,           13,   4,   4,      7,    5
//      P211_TPI_INIT_COL_MASK                     //           1,      1,         1,      1,     1,     1,    1,    1,        1,            1,   1,   1,      0,    0
//      P211_TPI_INIT_COL_TYPES                    //           N,      N,         N,      N,     N,     N,    N,    N,        N,            N,   N,   N
//      P211_TPI_INIT_TABLE_TYPE                   // M
#define P000_RW_ERROR_CODE                    245  // KEY,CODE,QUAL,FRU
//      P000_RW_ERROR_CODE_COL_WIDTH               //   3,   4,   4,  3
//      P000_RW_ERROR_CODE_COL_MASK                //   0,   0,   0,  0
//      P000_RW_ERROR_CODE_COL_TYPES               // *
//      P000_RW_ERROR_CODE_TABLE_TYPE              // S
#define P167_ERR_SQUEEZE                      246  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,SQZ_AMT_SVO_CNT,ERR_RATE,LOG10_ERR_RATE,HD_STATUS,READ_OFFSET
//      P167_ERR_SQUEEZE_COL_WIDTH                 //          11,        9,        10,             15,       8,            14,        9,         11
//      P167_ERR_SQUEEZE_COL_MASK                  //           1,        1,         1,              1,       1,             1,        1,          1
//      P167_ERR_SQUEEZE_COL_TYPES                 //           N,        N,         N,              N,       N,             N,        N,          N
//      P167_ERR_SQUEEZE_TABLE_TYPE                // M
#define P211_SER_ERROR                        247  // FAIL_SECTOR,SENSE_CODE,DRIVE_FAULT,PREAMP_FAULT
//      P211_SER_ERROR_COL_WIDTH                   //          11,        10,         11,          12
//      P211_SER_ERROR_COL_MASK                    //           0,         0,          0,           0
//      P211_SER_ERROR_COL_TYPES                   // *
//      P211_SER_ERROR_TABLE_TYPE                  // S
#define P011_DO_SERVO_CMD                     248  // REG0_HEX,REG1_HEX,REG2_HEX,REG3_HEX,REG4_HEX,REG5_HEX,REG6_HEX,REG7_HEX,DIAG_HEX,CMD_STAT_HEX
//      P011_DO_SERVO_CMD_COL_WIDTH                //        8,       8,       8,       8,       8,       8,       8,       8,       8,          12
//      P011_DO_SERVO_CMD_COL_MASK                 //        0,       0,       0,       0,       0,       0,       0,       0,       0,           0
//      P011_DO_SERVO_CMD_COL_TYPES                // *
//      P011_DO_SERVO_CMD_TABLE_TYPE               // S
#define P189_HD_SKEW_DETAILS                  249  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,DC_SKEW,TIMING_SKEW
//      P189_HD_SKEW_DETAILS_COL_WIDTH             //          11,      7,        10,      7,         11
//      P189_HD_SKEW_DETAILS_COL_MASK              //           1,      1,         1,      1,          1
//      P189_HD_SKEW_DETAILS_COL_TYPES             //           N,      N,         N,      N,          N
//      P189_HD_SKEW_DETAILS_TABLE_TYPE            // M
#define P189_VCAT_5_COEF_DC_DATA              250  // HD_PHYS_PSN,TEST_MODE,HD_LGC_PSN,COEF_1,COEF_2,COEF_3,COEF_4,COEF_5,MULTIPLIER
//      P189_VCAT_5_COEF_DC_DATA_COL_WIDTH         //          11,        9,        10,     7,     7,     7,     7,     7,        10
//      P189_VCAT_5_COEF_DC_DATA_COL_MASK          //           1,        1,         1,     1,     1,     1,     1,     1,         1
//      P189_VCAT_5_COEF_DC_DATA_COL_TYPES         //           N,        V,         N,     N,     N,     N,     N,     N,         N
//      P189_VCAT_5_COEF_DC_DATA_TABLE_TYPE        // M
#define P189_VCAT_3_COEF_DC_DATA              251  // HD_PHYS_PSN,TEST_MODE,HD_LGC_PSN,COEF_1,COEF_2,COEF_3,MULTIPLIER
//      P189_VCAT_3_COEF_DC_DATA_COL_WIDTH         //          11,        9,        10,     7,     7,     7,        10
//      P189_VCAT_3_COEF_DC_DATA_COL_MASK          //           1,        1,         1,     1,     1,     1,         1
//      P189_VCAT_3_COEF_DC_DATA_COL_TYPES         //           N,        V,         N,     N,     N,     N,         N
//      P189_VCAT_3_COEF_DC_DATA_TABLE_TYPE        // M
#define P189_VCAT_DC_DELTA                    252  // HD_PHYS_PSN,TEST_MODE,HD_LGC_PSN,VCAT_DC_OD,VCAT_DC_ID,VCAT_DC_DELTA
//      P189_VCAT_DC_DELTA_COL_WIDTH               //          11,        9,        10,        10,        10,           13
//      P189_VCAT_DC_DELTA_COL_MASK                //           1,        1,         1,         1,         1,            1
//      P189_VCAT_DC_DELTA_COL_TYPES               //           N,        V,         N,         N,         N,            N
//      P189_VCAT_DC_DELTA_TABLE_TYPE              // M
#define P189_DC_POINTS                        253  // HD_PHYS_PSN,POINT,HD_LGC_PSN,NORM_PHYS_TRK,INV_Q12_DATA,DC_POLY
//      P189_DC_POINTS_COL_WIDTH                   //          11,    5,        10,           13,          12,      8
//      P189_DC_POINTS_COL_MASK                    //           1,    1,         1,            1,           1,      1
//      P189_DC_POINTS_COL_TYPES                   //           N,    N,         N,            N,           N,      N
//      P189_DC_POINTS_TABLE_TYPE                  // M
#define P189_HD_SKEW_DC_ERR                   254  // HD_PHYS_PSN,HD_LGC_PSN,HD_SAP_ADDRESS,DC_SKEW_ERR_ENTRY1,DC_SKEW_ERR_ENTRY2,DC_SKEW_ERR_ENTRY3
//      P189_HD_SKEW_DC_ERR_COL_WIDTH              //          11,        10,            14,                18,                18,                18
//      P189_HD_SKEW_DC_ERR_COL_MASK               //           1,         1,             1,                 1,                 1,                 1
//      P189_HD_SKEW_DC_ERR_COL_TYPES              //           N,         N,             N,                 N,                 N,                 N
//      P189_HD_SKEW_DC_ERR_TABLE_TYPE             // V
#define P189_HD_SKEW_TIMING_ERR               255  // HD_PHYS_PSN,HD_LGC_PSN,HD_SAP_ADDRESS,TIMING_SKEW_ERR_ENTRY1,TIMING_SKEW_ERR_ENTRY2,TIMING_SKEW_ERR_ENTRY3
//      P189_HD_SKEW_TIMING_ERR_COL_WIDTH          //          11,        10,            14,                    22,                    22,                    22
//      P189_HD_SKEW_TIMING_ERR_COL_MASK           //           1,         1,             1,                     1,                     1,                     1
//      P189_HD_SKEW_TIMING_ERR_COL_TYPES          //           N,         N,             N,                     N,                     N,                     N
//      P189_HD_SKEW_TIMING_ERR_TABLE_TYPE         // V
#define P163_HD_STABILITY                     256  // HD_PHYS_PSN,HD_LGC_PSN,NO_TMD,BAD_ID,SRVO_UNSAFES,OBSERVER_SECTOR_COUNT,HD_STATUS,SWD_DVGA_COUNT,SWD_RVGA_COUNT,SWD_FVGA_COUNT,NO_TMD_BER,UNSAFE_BER,OSE_BER,NUM_SECTORS
//      P163_HD_STABILITY_COL_WIDTH                //          11,        10,     6,     6,          12,                   21,        9,            14,            14,            14,        10,        10,      7,         11
//      P163_HD_STABILITY_COL_MASK                 //           1,         1,     1,     1,           1,                    1,        1,             1,             1,             1,         1,         1,      1,          1
//      P163_HD_STABILITY_COL_TYPES                //           N,         N,     N,     N,           N,                    N,        N,             N,             N,             N,         N,         N,      N,          N
//      P163_HD_STABILITY_TABLE_TYPE               // V
#define P163_TRACK_INTERVAL                   257  // INTERVAL,START_INTERVAL,END_INTERVAL
//      P163_TRACK_INTERVAL_COL_WIDTH              //        8,            14,          12
//      P163_TRACK_INTERVAL_COL_MASK               //        0,             0,           0
//      P163_TRACK_INTERVAL_COL_TYPES              // *
//      P163_TRACK_INTERVAL_TABLE_TYPE             // V
#define P163_UNSAFE_RETRIES                   258  // HD_PHYS_PSN,HD_LGC_PSN,NUM_RETRIES
//      P163_UNSAFE_RETRIES_COL_WIDTH              //          11,        10,         11
//      P163_UNSAFE_RETRIES_COL_MASK               //           0,         0,          0
//      P163_UNSAFE_RETRIES_COL_TYPES              // *
//      P163_UNSAFE_RETRIES_TABLE_TYPE             // V
#define P103_SERVO_AGC_MOD                    259  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,AVG,STDEV,HD_STATUS
//      P103_SERVO_AGC_MOD_COL_WIDTH               //          11,        10,      7,  4,    5,        9
//      P103_SERVO_AGC_MOD_COL_MASK                //           0,         0,      0,  0,    0,        0
//      P103_SERVO_AGC_MOD_COL_TYPES               // *
//      P103_SERVO_AGC_MOD_TABLE_TYPE              // V
#define P103_SERVO_AGC_MOD_RANDOM             260  // HD_PHYS_PSN,HD_LGC_PSN,AVG_STDEV,STDEV_STDEV,HD_STATUS
//      P103_SERVO_AGC_MOD_RANDOM_COL_WIDTH        //          11,        10,        9,         11,        9
//      P103_SERVO_AGC_MOD_RANDOM_COL_MASK         //           0,         0,        0,          0,        0
//      P103_SERVO_AGC_MOD_RANDOM_COL_TYPES        // *
//      P103_SERVO_AGC_MOD_RANDOM_TABLE_TYPE       // V
#define P103_SVGA_STDEV                       261  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,RRO_SVGA_STDEV,NRRO_SVGA_STDEV,TOTAL_SVGA_STDEV,HD_STATUS
//      P103_SVGA_STDEV_COL_WIDTH                  //          11,        10,      7,            14,             15,              16,        9
//      P103_SVGA_STDEV_COL_MASK                   //           1,         1,      1,             1,              1,               1,        1
//      P103_SVGA_STDEV_COL_TYPES                  //           N,         N,      N,             N,              N,               N,        N
//      P103_SVGA_STDEV_TABLE_TYPE                 // V
#define P103_VGA_DATA_EAW                     262  // HD_PHYS_PSN,AVG_FLAG,HD_LGC_PSN,LIMIT,LIMIT2,TRK_NUM,BEFORE_AVG,BEFORE_STDEV,AFTER_AVG,AFTER_STDEV,DELTA_AVG,DELTA_STDEV,HD_STATUS
//      P103_VGA_DATA_EAW_COL_WIDTH                //          11,       8,        10,    5,     6,      7,        10,          12,        9,         11,        9,         11,        9
//      P103_VGA_DATA_EAW_COL_MASK                 //           1,       1,         1,    1,     1,      1,         1,           1,        1,          1,        1,          1,        1
//      P103_VGA_DATA_EAW_COL_TYPES                //           N,       N,         N,    N,     N,      N,         N,           N,        N,          N,        N,          N,        N
//      P103_VGA_DATA_EAW_TABLE_TYPE               // M
#define P103_DELTA_VGA                        263  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,BASELINE_AVG,AVG,DELTA_AVG,BASELINE_STDEV,STDEV,DELTA_STDEV
//      P103_DELTA_VGA_COL_WIDTH                   //          11,        10,      7,          12,  6,        9,            14,    5,         11
//      P103_DELTA_VGA_COL_MASK                    //           0,         0,      0,           0,  0,        0,             0,    0,          0
//      P103_DELTA_VGA_COL_TYPES                   // *
//      P103_DELTA_VGA_TABLE_TYPE                  // V
#define P103_WIJITA                           264  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,MIN_AVG_SERVO_AGC,MAX_AVG_SERVO_AGC,DELTA_SERVO_AGC,AVG_WIJITA,SERVO_AGC_STDEV,HD_STATUS,AVG_AGC_PCT_STDEV,AVG_AGC_PCT_RANGE,MAX_AGC_PCT_RANGE,DATA_ZONE
//      P103_WIJITA_COL_WIDTH                      //          11,        10,      7,               17,               17,             15,        10,             15,        9,               17,               17,               17,        9
//      P103_WIJITA_COL_MASK                       //           1,         1,      1,                1,                1,              1,         1,              1,        1,                1,                1,                1,        1
//      P103_WIJITA_COL_TYPES                      //           N,         N,      N,                N,                N,              N,         N,              N,        N,                N,                N,                N,        N
//      P103_WIJITA_TABLE_TYPE                     // V

// Deprecated 11/23/2010
#define P000_NO_ASPERITIES                    265  // *
//      P000_NO_ASPERITIES_COL_WIDTH               // 1
//      P000_NO_ASPERITIES_COL_MASK                // 0
//      P000_NO_ASPERITIES_COL_TYPES               // *
//      P000_NO_ASPERITIES_TABLE_TYPE              // S
#define P197_SOPS                             266  // HD_PHYS_PSN,HD_LGC_PSN,SEEK_SUM,SETTLE_SUM,LATENCY_SUM,XFER_SUM,UNSAFE_FAULT_SUM,RETRY_SUM,BLOWN_SEEK_SUM,IDLE_SUM,SEEKS_COMPLETED,SEEK_FAULTS,SEEK_RETRYS,BLOWN_SEEKS,SEEK_DIST_SUM,TOTAL_SAMPLES,AVG_SEEK_DIST,AVG_SEEKTIME,AVG_SETTLE_TIME,AVG_LATENCY,IOPS
//      P197_SOPS_COL_WIDTH                        //          11,        10,       8,        10,         11,       8,              16,        9,            14,       8,             15,         11,         11,         11,           13,           13,           13,          12,             15,         11,   4
//      P197_SOPS_COL_MASK                         //           0,         0,       0,         0,          0,       0,               0,        0,             0,       0,              0,          0,          0,          0,            0,            0,            0,           0,              0,          0,   0
//      P197_SOPS_COL_TYPES                        // *
//      P197_SOPS_TABLE_TYPE                       // V
#define P197_SEEK                             267  // RETURNEDSEEKDISTANCE,RETURNEDSEEKTIME,USERVARIABLE1,USERVARIABLE2,USERVARIABLE3,USERVARIABLE4,SECTORDATASAMPLENUM,SEEKCOUNTER,SETTLECOUNTER,LATENCYCOUNTER,TRANSFERCOUNTER,UNSAFEFAULTCOUNTER,RETRYCOUNTER,BLOWNSEEKCOUNTER,IDLECOUNTER,EXPECTEDSEEKTIME,EXPECTEDSECTORSLIP,EXPECTEDACCESSTIME,EXPECTEDSEEKDISTANCE,CYLINDER,HEAD,RW,JIT,SECTOR,XFRLEN
//      P197_SEEK_COL_WIDTH                        //                   20,              16,           13,           13,           13,           13,                 19,         11,           13,            14,             15,                18,          12,              16,         11,              16,                18,                18,                  20,       8,   4, 2,  3,     6,     6
//      P197_SEEK_COL_MASK                         //                    0,               0,            0,            0,            0,            0,                  0,          0,            0,             0,              0,                 0,           0,               0,          0,               0,                 0,                 0,                   0,       0,   0, 0,  0,     0,     0
//      P197_SEEK_COL_TYPES                        // *
//      P197_SEEK_TABLE_TYPE                       // S
#define P197_SEEK_AVE                         268  // AVGRETURNEDSEEKTIME,AVGRETURNEDSEEKDISTANCE
//      P197_SEEK_AVE_COL_WIDTH                    //                  19,                     23
//      P197_SEEK_AVE_COL_MASK                     //                   0,                      0
//      P197_SEEK_AVE_COL_TYPES                    // *
//      P197_SEEK_AVE_TABLE_TYPE                   // S
#define P197_SECTOR                           269  // AUX1,AUX2,AUX3,AUX4,STATE
//      P197_SECTOR_COL_WIDTH                      //    5,   5,   5,   5,    5
//      P197_SECTOR_COL_MASK                       //    0,   0,   0,   0,    0
//      P197_SECTOR_COL_TYPES                      // *
//      P197_SECTOR_TABLE_TYPE                     // S
#define P185_TRK_0_EXCEEDS_LIMIT              270  // HD_PHYS_PSN,HD_LGC_PSN,TRK_0_NUM,MAX_CYL
//      P185_TRK_0_EXCEEDS_LIMIT_COL_WIDTH         //          11,        10,        9,      7
//      P185_TRK_0_EXCEEDS_LIMIT_COL_MASK          //           0,         0,        0,      0
//      P185_TRK_0_EXCEEDS_LIMIT_COL_TYPES         // *
//      P185_TRK_0_EXCEEDS_LIMIT_TABLE_TYPE        // S
#define P152_PEAK_SUMMARY                     271  // HD_PHYS_PSN,PEAK_RANK,HD_LGC_PSN,PEAK_MAGNITUDE,PEAK_FREQUENCY
//      P152_PEAK_SUMMARY_COL_WIDTH                //          11,        9,        10,            14,            14
//      P152_PEAK_SUMMARY_COL_MASK                 //           1,        1,         1,             1,             1
//      P152_PEAK_SUMMARY_COL_TYPES                //           N,        N,         N,             N,             N
//      P152_PEAK_SUMMARY_TABLE_TYPE               // M
#define P152_PEAKS_DET_NO_SNO                 272  // HD_PHYS_PSN,HD_LGC_PSN,MAX_GAIN,FREQUENCY
//      P152_PEAKS_DET_NO_SNO_COL_WIDTH            //          11,        10,       8,        9
//      P152_PEAKS_DET_NO_SNO_COL_MASK             //           0,         0,       0,        0
//      P152_PEAKS_DET_NO_SNO_COL_TYPES            // *
//      P152_PEAKS_DET_NO_SNO_TABLE_TYPE           // S
#define P152_NO_SNO_NO_PEAKS                  273  // HD_PHYS_PSN,HD_LGC_PSN
//      P152_NO_SNO_NO_PEAKS_COL_WIDTH             //          11,        10
//      P152_NO_SNO_NO_PEAKS_COL_MASK              //           0,         0
//      P152_NO_SNO_NO_PEAKS_COL_TYPES             // *
//      P152_NO_SNO_NO_PEAKS_TABLE_TYPE            // S
#define P152_BODE_PK_NORMALIZE                274  // HD_PHYS_PSN,HD_LGC_PSN,RELATIVE_GAIN,GAIN,FREQUENCY
//      P152_BODE_PK_NORMALIZE_COL_WIDTH           //          11,        10,           13,   7,        9
//      P152_BODE_PK_NORMALIZE_COL_MASK            //           0,         0,            0,   0,        0
//      P152_BODE_PK_NORMALIZE_COL_TYPES           // *
//      P152_BODE_PK_NORMALIZE_TABLE_TYPE          // S
#define P152_BODE_GAIN_ONLY                   275  // HD_PHYS_PSN,FREQUENCY,HD_LGC_PSN,GAIN,RAW_GAIN,HD_STATUS
//      P152_BODE_GAIN_ONLY_COL_WIDTH              //          11,        9,        10,   7,       8,        9
//      P152_BODE_GAIN_ONLY_COL_MASK               //           1,        1,         1,   1,       1,        1
//      P152_BODE_GAIN_ONLY_COL_TYPES              //           N,        N,         N,   N,       N,        N
//      P152_BODE_GAIN_ONLY_TABLE_TYPE             // V
#define P152_BODE_GAIN_PHASE                  276  // HD_PHYS_PSN,FREQUENCY,HD_LGC_PSN,GAIN,PHASE,PHASE_DELTA
//      P152_BODE_GAIN_PHASE_COL_WIDTH             //          11,        9,        10,   7,    7,         11
//      P152_BODE_GAIN_PHASE_COL_MASK              //           1,        1,         1,   1,    1,          1
//      P152_BODE_GAIN_PHASE_COL_TYPES             //           N,        N,         N,   N,    N,          N
//      P152_BODE_GAIN_PHASE_TABLE_TYPE            // V
#define P152_FAILED_HD_LIST                   277  // HD_PHYS_PSN,HD_LGC_PSN
//      P152_FAILED_HD_LIST_COL_WIDTH              //          11,        10
//      P152_FAILED_HD_LIST_COL_MASK               //           0,         0
//      P152_FAILED_HD_LIST_COL_TYPES              // *
//      P152_FAILED_HD_LIST_TABLE_TYPE             // V
#define P152_MAX_GAIN_POINTS                  278  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,NOTCH_NUM,FREQUENCY,MAX_GAIN
//      P152_MAX_GAIN_POINTS_COL_WIDTH             //          11,        10,      7,        9,        9,       8
//      P152_MAX_GAIN_POINTS_COL_MASK              //           1,         1,      1,        1,        1,       1
//      P152_MAX_GAIN_POINTS_COL_TYPES             //           N,         N,      N,        N,        N,       N
//      P152_MAX_GAIN_POINTS_TABLE_TYPE            // V
#define P152_NO_NOTCH_COMPUTED                279  // HD_PHYS_PSN,HD_LGC_PSN,NOTCH_NUM
//      P152_NO_NOTCH_COMPUTED_COL_WIDTH           //          11,        10,        9
//      P152_NO_NOTCH_COMPUTED_COL_MASK            //           0,         0,        0
//      P152_NO_NOTCH_COMPUTED_COL_TYPES           // *
//      P152_NO_NOTCH_COMPUTED_TABLE_TYPE          // V
#define P152_NOTCH_TABLE_VALUES               280  // NOTCH_NUM,HD_PHYS_PSN,HD_LGC_PSN,A2,A1,B2,B1,B0,NOTCH_TBL_NUM
//      P152_NOTCH_TABLE_VALUES_COL_WIDTH          //         9,         11,        10, 6, 6, 6, 6, 6,           13
//      P152_NOTCH_TABLE_VALUES_COL_MASK           //         0,          0,         0, 0, 0, 0, 0, 0,            0
//      P152_NOTCH_TABLE_VALUES_COL_TYPES          // *
//      P152_NOTCH_TABLE_VALUES_TABLE_TYPE         // V
#define P151_CQM_BUCKET_DATA                  281  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,REG_TO_OPT4,TRIAL_VAL4,REG_TO_OPT3,TRIAL_VAL3,REG_TO_OPT2,TRIAL_VAL2,REG_TO_OPT1,TRIAL_VAL1,CQM_VALUE
//      P151_CQM_BUCKET_DATA_COL_WIDTH             //          11,        10,        9,      7,         11,        10,         11,        10,         11,        10,         11,        10,        9
//      P151_CQM_BUCKET_DATA_COL_MASK              //           0,         0,        0,      0,          0,         0,          0,         0,          0,         0,          0,         0,        0
//      P151_CQM_BUCKET_DATA_COL_TYPES             // *
//      P151_CQM_BUCKET_DATA_TABLE_TYPE            // V

// Deprecated 11/23/2010
#define P151_WRITE_CURRENT                    282  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_WRITE_CURRENT_COL_WIDTH               //          11,        9,        10,       8,       8
//      P151_WRITE_CURRENT_COL_MASK                //           1,        1,         1,       1,       1
//      P151_WRITE_CURRENT_COL_TYPES               //           N,        N,         N,       N,       N
//      P151_WRITE_CURRENT_TABLE_TYPE              // M
#define P151_BIAS_CURRENT                     283  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_BIAS_CURRENT_COL_WIDTH                //          11,        9,        10,       8,       8
//      P151_BIAS_CURRENT_COL_MASK                 //           0,        0,         0,       0,       0
//      P151_BIAS_CURRENT_COL_TYPES                // *
//      P151_BIAS_CURRENT_TABLE_TYPE               // M

// Deprecated 11/23/2010
#define P151_DAMPING                          284  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_DAMPING_COL_WIDTH                     //          11,        9,        10,       8,       8
//      P151_DAMPING_COL_MASK                      //           0,        0,         0,       0,       0
//      P151_DAMPING_COL_TYPES                     // *
//      P151_DAMPING_TABLE_TYPE                    // M

// Deprecated 11/23/2010
#define P151_WRITE_HEAT                       285  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_WRITE_HEAT_COL_WIDTH                  //          11,        9,        10,       8,       8
//      P151_WRITE_HEAT_COL_MASK                   //           0,        0,         0,       0,       0
//      P151_WRITE_HEAT_COL_TYPES                  // *
//      P151_WRITE_HEAT_TABLE_TYPE                 // M

// Deprecated 11/23/2010
#define P151_PRE_HEAT                         286  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CQM_OPTI,OPTI_VAL
//      P151_PRE_HEAT_COL_WIDTH                    //          11,        9,        10,       8,       8
//      P151_PRE_HEAT_COL_MASK                     //           0,        0,         0,       0,       0
//      P151_PRE_HEAT_COL_TYPES                    // *
//      P151_PRE_HEAT_TABLE_TYPE                   // M
#define P151_MNP_BINARY_TABLE                 287  // INDEX,00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F
//      P151_MNP_BINARY_TABLE_COL_WIDTH            //     5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3
//      P151_MNP_BINARY_TABLE_COL_MASK             //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//      P151_MNP_BINARY_TABLE_COL_TYPES            // *
//      P151_MNP_BINARY_TABLE_TABLE_TYPE           // S
#define P151_BER_SUMMARY                      288  // HD_PHY_PSN,DATA_ZONE,HD_LGC_PSN,SAVED_TARGET,TGT_3621_BER,TGT_3731_BER,HD_PHYS_PSN
//      P151_BER_SUMMARY_COL_WIDTH                 //         11,        9,        10,          12,          12,          12,         11
//      P151_BER_SUMMARY_COL_MASK                  //          0,        0,         0,           0,           0,           0,          0
//      P151_BER_SUMMARY_COL_TYPES                 // *
//      P151_BER_SUMMARY_TABLE_TYPE                // V
#define P035_CFH_DYNAMIC_THRSHLD              289  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,OVS_AMP,OVS_DUR,WRT_CUR,HTR_DAC,TEST_METHOD,TEST_ITERATION,CNTCT_VERIFY_CNT,CNTCT_TEST_STAGE,TEST_METHOD_MEAN,TEST_METHOD_STDEV,DYNAMIC_THRSHLD,TEST_METHOD_NORM,NOM_TRK_NUM,WRT_FREQ
//      P035_CFH_DYNAMIC_THRSHLD_COL_WIDTH         //          11,      8,        10,      7,      7,      7,      7,         11,            14,              16,              16,              16,               17,             15,              16,         11,       9
//      P035_CFH_DYNAMIC_THRSHLD_COL_MASK          //           1,      1,         1,      1,      1,      1,      1,          1,             1,               1,               1,               1,                1,              1,               1,          1,       1
//      P035_CFH_DYNAMIC_THRSHLD_COL_TYPES         //           N,      N,         N,      N,      N,      N,      N,          V,             N,               N,               V,               N,                N,              N,               N,          N,       N
//      P035_CFH_DYNAMIC_THRSHLD_TABLE_TYPE        // M
#define P035_CONTACT_SUMMARY2                 290  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,HTR_DAC,RD_HTR_DAC
//      P035_CONTACT_SUMMARY2_COL_WIDTH            //          11,        9,        10,      7,        10
//      P035_CONTACT_SUMMARY2_COL_MASK             //           1,        1,         1,      1,         1
//      P035_CONTACT_SUMMARY2_COL_TYPES            //           N,        N,         N,      N,         N
//      P035_CONTACT_SUMMARY2_TABLE_TYPE           // M
#define P126_SRVO_FLAW_HD                     291  // HD_PHYS_PSN,HD_LGC_PSN,RAW_SRVO_FLAW_CNT,SKIP_TRACKS,REFINED_SRVO_FLAW_CNT,HD_STATUS
//      P126_SRVO_FLAW_HD_COL_WIDTH                //          11,        10,               17,         11,                   21,        9
//      P126_SRVO_FLAW_HD_COL_MASK                 //           1,         1,                1,          1,                    1,        1
//      P126_SRVO_FLAW_HD_COL_TYPES                //           N,         N,                N,          N,                    N,        N
//      P126_SRVO_FLAW_HD_TABLE_TYPE               // V
#define P126_SRVO_FLAW_REP                    292  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,WEDGE,OFFSET,ERRCODE
//      P126_SRVO_FLAW_REP_COL_WIDTH               //          11,        10,       8,    5,     6,     10
//      P126_SRVO_FLAW_REP_COL_MASK                //           0,         0,       0,    0,     0,      0
//      P126_SRVO_FLAW_REP_COL_TYPES               // *
//      P126_SRVO_FLAW_REP_TABLE_TYPE              // V
#define P126_SRVO_FLAW_DATA                   293  // SFLAW_FOUND,MULTI_FLAW,MISSED_SAMPLE,ERR_CNT,ERRCODE,PES_SETTLE_CNT
//      P126_SRVO_FLAW_DATA_COL_WIDTH              //          11,        10,           13,      7,      7,            14
//      P126_SRVO_FLAW_DATA_COL_MASK               //           0,         0,            0,      0,      0,             0
//      P126_SRVO_FLAW_DATA_COL_TYPES              // *
//      P126_SRVO_FLAW_DATA_TABLE_TYPE             // V
#define P126_SRVO_FLAW_STRESSES               294  // OC_LIM,PDT_ADJ,1ST_OFS,MAX_OFS,OFS_STEP,SEEK_TYPE,1ST_LVL_REVS,1ST_LVL_LIM,2ND_LVL_REVS,2ND_LVL_LIM,ADJ_CYL,SKIP_TRACK,UNSERVOABLE,HD_TAB,PDQ_ADJ,STRESS_THRU_SVO,EN_TRACE,EN_VER_RPT,UNSF_SCAN_MSK
//      P126_SRVO_FLAW_STRESSES_COL_WIDTH          //      6,      7,      7,      7,       8,        9,          12,         11,          12,         11,      7,        10,         11,     6,      7,             15,       8,        10,           13
//      P126_SRVO_FLAW_STRESSES_COL_MASK           //      0,      0,      0,      0,       0,        0,           0,          0,           0,          0,      0,         0,          0,     0,      0,              0,       0,         0,            0
//      P126_SRVO_FLAW_STRESSES_COL_TYPES          // *
//      P126_SRVO_FLAW_STRESSES_TABLE_TYPE         // V
#define P126_SRVO_FLAW_DRV                    295  // TOTAL_SRVO_FLAW_CNT
//      P126_SRVO_FLAW_DRV_COL_WIDTH               //                  19
//      P126_SRVO_FLAW_DRV_COL_MASK                //                   1
//      P126_SRVO_FLAW_DRV_COL_TYPES               //                   N
//      P126_SRVO_FLAW_DRV_TABLE_TYPE              // S
#define P035_CONCURRENT_AFH                   296  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,TEST_ITERATION,CNTCT_TEST_STAGE,WRT_CUR_DAC,HTR_DAC,HSC_1,HSC_2,DELTA_FLY_HGT
//      P035_CONCURRENT_AFH_COL_WIDTH              //          11,      8,        10,            14,              16,         11,      7,   10,   10,           13
//      P035_CONCURRENT_AFH_COL_MASK               //           1,      1,         1,             1,               1,          1,      1,    1,    1,            1
//      P035_CONCURRENT_AFH_COL_TYPES              //           N,      N,         N,             N,               V,          N,      N,    N,    N,            N
//      P035_CONCURRENT_AFH_TABLE_TYPE             // M
#define P033_PES_RRO_CFG                      297  // HD,CYL,REVS
//      P033_PES_RRO_CFG_COL_WIDTH                 //  2,  9,   5
//      P033_PES_RRO_CFG_COL_MASK                  //  0,  0,   0
//      P033_PES_RRO_CFG_COL_TYPES                 // *
//      P033_PES_RRO_CFG_TABLE_TYPE                // S
#define P033_PES_RRO_DAT                      298  // SECN,AVG_PES
//      P033_PES_RRO_DAT_COL_WIDTH                 //    4,     10
//      P033_PES_RRO_DAT_COL_MASK                  //    0,      0
//      P033_PES_RRO_DAT_COL_TYPES                 // *
//      P033_PES_RRO_DAT_TABLE_TYPE                // S
#define P107_VERIFIED_FLAWS                   299  // HD_PHYS_PSN,HD_LGC_PSN,VRFD_FLAWS,REG_FLAWS,TA_FLAWS
//      P107_VERIFIED_FLAWS_COL_WIDTH              //          11,        10,        10,        9,       8
//      P107_VERIFIED_FLAWS_COL_MASK               //           1,         1,         1,        1,       1
//      P107_VERIFIED_FLAWS_COL_TYPES              //           N,         N,         N,        N,       N
//      P107_VERIFIED_FLAWS_TABLE_TYPE             // V
#define P107_VERIFIED_FLAW_LENGTH             300  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,SYMBL_NDX,DFCT_LGTH,FLAW_SCAN_NUM,RPT_CNT,FLAW_TYPE,DFCT_RELATIVE_PSN,SRVO_WEDGE,SMR_LGC_CYL
//      P107_VERIFIED_FLAW_LENGTH_COL_WIDTH        //          11,      7,        10,        9,        9,           13,      7,        9,               17,        10,         11
//      P107_VERIFIED_FLAW_LENGTH_COL_MASK         //           1,      1,         1,        1,        1,            1,      1,        0,                1,         1,          0
//      P107_VERIFIED_FLAW_LENGTH_COL_TYPES        //           N,      N,         N,        N,        N,            V,      N,                          N,         N
//      P107_VERIFIED_FLAW_LENGTH_TABLE_TYPE       // M
#define P107_TOTAL_VERIFIED_FLAWS             301  // TOTAL_VFYD_FLAWS,TOTAL_REG_FLAWS,TOTAL_TA_FLAWS
//      P107_TOTAL_VERIFIED_FLAWS_COL_WIDTH        //               16,             15,            14
//      P107_TOTAL_VERIFIED_FLAWS_COL_MASK         //                1,              1,             1
//      P107_TOTAL_VERIFIED_FLAWS_COL_TYPES        //                N,              N,             N
//      P107_TOTAL_VERIFIED_FLAWS_TABLE_TYPE       // S
#define P107_DBI_LOG_ZONE_SUMMARY             302  // DATA_ZONE,COPY_NUM,NUM_FLAWS,CAPACITY
//      P107_DBI_LOG_ZONE_SUMMARY_COL_WIDTH        //         9,       8,        9,       8
//      P107_DBI_LOG_ZONE_SUMMARY_COL_MASK         //         0,       0,        0,       0
//      P107_DBI_LOG_ZONE_SUMMARY_COL_TYPES        // *
//      P107_DBI_LOG_ZONE_SUMMARY_TABLE_TYPE       // S
#define P107_DBI_ZONE_INFO                    303  // DATA_ZONE,LBA1,COUNT1,LBA2,COUNT2
//      P107_DBI_ZONE_INFO_COL_WIDTH               //         9,   4,     6,   4,     6
//      P107_DBI_ZONE_INFO_COL_MASK                //         0,   0,     0,   0,     0
//      P107_DBI_ZONE_INFO_COL_TYPES               // *
//      P107_DBI_ZONE_INFO_TABLE_TYPE              // S
#define P107_VER_ERRS_PER_PASS                304  // HD_PHYS_PSN,PATTERN,HD_LGC_PSN,VER_ERRORS
//      P107_VER_ERRS_PER_PASS_COL_WIDTH           //          11,      7,        10,        10
//      P107_VER_ERRS_PER_PASS_COL_MASK            //           0,      0,         0,         0
//      P107_VER_ERRS_PER_PASS_COL_TYPES           // *
//      P107_VER_ERRS_PER_PASS_TABLE_TYPE          // S
#define P107_UNIQUE_VER_PER_PASS              305  // HD_PHYS_PSN,PATTERN,HD_LGC_PSN,VER_ERRORS
//      P107_UNIQUE_VER_PER_PASS_COL_WIDTH         //          11,      7,        10,        10
//      P107_UNIQUE_VER_PER_PASS_COL_MASK          //           0,      0,         0,         0
//      P107_UNIQUE_VER_PER_PASS_COL_TYPES         // *
//      P107_UNIQUE_VER_PER_PASS_TABLE_TYPE        // S
#define P211_SENSE_DATA                       306  // SENSE_CODE
//      P211_SENSE_DATA_COL_WIDTH                  //         10
//      P211_SENSE_DATA_COL_MASK                   //          0
//      P211_SENSE_DATA_COL_TYPES                  // *
//      P211_SENSE_DATA_TABLE_TYPE                 // S

// Deprecated 11/23/2010
#define P013_FIT_COS_COEFF                    307  // HD_PHYS_PSN,HD_LGC_PSN,COEFF_A,COEFF_B,COEFF_C,COEFF_D
//      P013_FIT_COS_COEFF_COL_WIDTH               //          11,        10,      7,      7,      7,      7
//      P013_FIT_COS_COEFF_COL_MASK                //           0,         0,      0,      0,      0,      0
//      P013_FIT_COS_COEFF_COL_TYPES               // *
//      P013_FIT_COS_COEFF_TABLE_TYPE              // S

// Deprecated 11/23/2010
#define P013_FIT_SIN_COEFF                    308  // HD_PHYS_PSN,HD_LGC_PSN,COEFF_A,COEFF_B,COEFF_C,COEFF_D
//      P013_FIT_SIN_COEFF_COL_WIDTH               //          11,        10,      7,      7,      7,      7
//      P013_FIT_SIN_COEFF_COL_MASK                //           0,         0,      0,      0,      0,      0
//      P013_FIT_SIN_COEFF_COL_TYPES               // *
//      P013_FIT_SIN_COEFF_TABLE_TYPE              // S

// Deprecated 11/23/2010
#define P013_MAX_DELTA                        309  // HD_PHYS_PSN,HD_LGC_PSN,MAX_DELTA,SCALING_FACTOR
//      P013_MAX_DELTA_COL_WIDTH                   //          11,        10,        9,            14
//      P013_MAX_DELTA_COL_MASK                    //           0,         0,        0,             0
//      P013_MAX_DELTA_COL_TYPES                   // *
//      P013_MAX_DELTA_TABLE_TYPE                  // S

// Deprecated 11/23/2010
#define P013_COS_DATA_POINTS                  310  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,RAW_DATA,FIT_DATA
//      P013_COS_DATA_POINTS_COL_WIDTH             //          11,        10,      7,       8,       8
//      P013_COS_DATA_POINTS_COL_MASK              //           0,         0,      0,       0,       0
//      P013_COS_DATA_POINTS_COL_TYPES             // *
//      P013_COS_DATA_POINTS_TABLE_TYPE            // S

// Deprecated 11/23/2010
#define P013_SIN_DATA_POINTS                  311  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,RAW_DATA,FIT_DATA
//      P013_SIN_DATA_POINTS_COL_WIDTH             //          11,        10,      7,       8,       8
//      P013_SIN_DATA_POINTS_COL_MASK              //           0,         0,      0,       0,       0
//      P013_SIN_DATA_POINTS_COL_TYPES             // *
//      P013_SIN_DATA_POINTS_TABLE_TYPE            // S
#define P211_VBAR_DEFAULT_CHAN                312  // TDTARG,TW1,TW2,TW3,TW5,TW6,TW7,TW8,TW9,TW10,BANDWIDTH,BNDWTHRNG,PRECOMP
//      P211_VBAR_DEFAULT_CHAN_COL_WIDTH           //      6,  3,  3,  3,  3,  3,  3,  3,  3,   4,        9,        9,      7
//      P211_VBAR_DEFAULT_CHAN_COL_MASK            //      0,  0,  0,  0,  0,  0,  0,  0,  0,   0,        0,        0,      0
//      P211_VBAR_DEFAULT_CHAN_COL_TYPES           // *
//      P211_VBAR_DEFAULT_CHAN_TABLE_TYPE          // S
#define P037_MAX_READ_SEEK_STDEV              313  // MAX_READ_STDEV
//      P037_MAX_READ_SEEK_STDEV_COL_WIDTH         //             14
//      P037_MAX_READ_SEEK_STDEV_COL_MASK          //              0
//      P037_MAX_READ_SEEK_STDEV_COL_TYPES         // *
//      P037_MAX_READ_SEEK_STDEV_TABLE_TYPE        // S
#define P037_MAX_WRITE_SEEK_STDEV             314  // MAX_WRITE_STDEV
//      P037_MAX_WRITE_SEEK_STDEV_COL_WIDTH        //              15
//      P037_MAX_WRITE_SEEK_STDEV_COL_MASK         //               0
//      P037_MAX_WRITE_SEEK_STDEV_COL_TYPES        // *
//      P037_MAX_WRITE_SEEK_STDEV_TABLE_TYPE       // S
#define P037_SEEK_PROFILE_STATS               315  // SEEK_LENGTH,RD_STDEV,AVG_RD_SEEK_TIME,WR_STDEV,AVG_WR_SEEK_TIME
//      P037_SEEK_PROFILE_STATS_COL_WIDTH          //          11,       8,              16,       8,              16
//      P037_SEEK_PROFILE_STATS_COL_MASK           //           0,       0,               0,       0,               0
//      P037_SEEK_PROFILE_STATS_COL_TYPES          // *
//      P037_SEEK_PROFILE_STATS_TABLE_TYPE         // S
#define P037_APPRX_JIT_SEEK_READ              316  // JIT_SEEK_MODE,SEEK_DISTANCE,SEEK_TIME,STDEV
//      P037_APPRX_JIT_SEEK_READ_COL_WIDTH         //            13,           13,        9,    5
//      P037_APPRX_JIT_SEEK_READ_COL_MASK          //             1,            1,        1,    1
//      P037_APPRX_JIT_SEEK_READ_COL_TYPES         //             N,            N,        N,    N
//      P037_APPRX_JIT_SEEK_READ_TABLE_TYPE        // S
#define P037_APPRX_JIT_SEEK_WRITE             317  // JIT_SEEK_MODE,SEEK_DISTANCE,SEEK_TIME,STDEV
//      P037_APPRX_JIT_SEEK_WRITE_COL_WIDTH        //            13,           13,        9,    5
//      P037_APPRX_JIT_SEEK_WRITE_COL_MASK         //             0,            0,        0,    0
//      P037_APPRX_JIT_SEEK_WRITE_COL_TYPES        // *
//      P037_APPRX_JIT_SEEK_WRITE_TABLE_TYPE       // S
#define P109_SUM_HD_ZONE                      318  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,VFYD_ERRS,UNVFYD_ERRS,HD_STATUS
//      P109_SUM_HD_ZONE_COL_WIDTH                 //          11,        9,        10,        9,         11,        9
//      P109_SUM_HD_ZONE_COL_MASK                  //           1,        1,         1,        1,          1,        1
//      P109_SUM_HD_ZONE_COL_TYPES                 //           N,        N,         N,        N,          N,        N
//      P109_SUM_HD_ZONE_TABLE_TYPE                // M
#define P109_TA_AMP_SRCH                      319  // TRK_NUM,HEAD,SECTOR,RW_ERROR,TA_THRESH,TA_MVTHRESH
//      P109_TA_AMP_SRCH_COL_WIDTH                 //       8,   4,     6,       8,        9,         11
//      P109_TA_AMP_SRCH_COL_MASK                  //       0,   0,     0,       0,        0,          0
//      P109_TA_AMP_SRCH_COL_TYPES                 // *
//      P109_TA_AMP_SRCH_TABLE_TYPE                // S
#define P109_TRK_ERROR                        320  // CYLINDER,HEAD,FAILED_SECTOR,RW_ERROR,FAULT_STATUS,PREAMP_FAULT_STATUS
//      P109_TRK_ERROR_COL_WIDTH                   //        8,   4,           13,       8,          12,                 19
//      P109_TRK_ERROR_COL_MASK                    //        0,   0,            0,       0,           0,                  0
//      P109_TRK_ERROR_COL_TYPES                   // *
//      P109_TRK_ERROR_TABLE_TYPE                  // S
#define P109_SRVO_ERROR_CNTRS                 321  // TRACK_NUM,HEAD,NO_TMD,SHOCK_DETCT,SRVO_UNSAFES,OBSERVER_SECTOR_COUNT,SWD_RVGA,SWD_FVGA,SWD_DVGA
//      P109_SRVO_ERROR_CNTRS_COL_WIDTH            //         9,   4,     6,         11,          12,                   22,       8,       8,       8
//      P109_SRVO_ERROR_CNTRS_COL_MASK             //         0,   0,     0,          0,           0,                    0,       0,       0,       0
//      P109_SRVO_ERROR_CNTRS_COL_TYPES            // *
//      P109_SRVO_ERROR_CNTRS_TABLE_TYPE           // S
#define P109_TOTAL_VER_AND_UNVER              322  // VER_TOTAL_ERR,UNVER_TOTAL_ERR
//      P109_TOTAL_VER_AND_UNVER_COL_WIDTH         //            13,             15
//      P109_TOTAL_VER_AND_UNVER_COL_MASK          //             0,              0
//      P109_TOTAL_VER_AND_UNVER_COL_TYPES         // *
//      P109_TOTAL_VER_AND_UNVER_TABLE_TYPE        // S

// Deprecated 11/23/2010
#define P109_SRVO_ERRS_PER_HD                 323  // HD_PHYS_PSN,HD_LGC_PSN,ERRORS
//      P109_SRVO_ERRS_PER_HD_COL_WIDTH            //          11,        10,     6
//      P109_SRVO_ERRS_PER_HD_COL_MASK             //           0,         0,     0
//      P109_SRVO_ERRS_PER_HD_COL_TYPES            // *
//      P109_SRVO_ERRS_PER_HD_TABLE_TYPE           // S
#define P109_RW_ERRS_PER_HD                   324  // HD_PHYS_PSN,HD_LGC_PSN,ERRORS
//      P109_RW_ERRS_PER_HD_COL_WIDTH              //          11,        10,     6
//      P109_RW_ERRS_PER_HD_COL_MASK               //           0,         0,     0
//      P109_RW_ERRS_PER_HD_COL_TYPES              // *
//      P109_RW_ERRS_PER_HD_TABLE_TYPE             // S
#define P109_UNCERTED_TRKS_PER_HD             325  // HD_PHYS_PSN,HD_LGC_PSN,UNCERTED_TRKS_ERR_CNT
//      P109_UNCERTED_TRKS_PER_HD_COL_WIDTH        //          11,        10,                   20
//      P109_UNCERTED_TRKS_PER_HD_COL_MASK         //           1,         1,                    1
//      P109_UNCERTED_TRKS_PER_HD_COL_TYPES        //           N,         N,                    N
//      P109_UNCERTED_TRKS_PER_HD_TABLE_TYPE       // S

// Deprecated 11/23/2010
#define P109_NO_TMDS_PER_HD                   326  // HD_PHYS_PSN,HD_LGC_PSN,ERRORS
//      P109_NO_TMDS_PER_HD_COL_WIDTH              //          11,        10,     6
//      P109_NO_TMDS_PER_HD_COL_MASK               //           0,         0,     0
//      P109_NO_TMDS_PER_HD_COL_TYPES              // *
//      P109_NO_TMDS_PER_HD_TABLE_TYPE             // S
#define P109_SECTION_ERR_TOTAL                327  // TOTAL_ERRORS
//      P109_SECTION_ERR_TOTAL_COL_WIDTH           //           12
//      P109_SECTION_ERR_TOTAL_COL_MASK            //            0
//      P109_SECTION_ERR_TOTAL_COL_TYPES           // *
//      P109_SECTION_ERR_TOTAL_TABLE_TYPE          // S

// Deprecated 11/23/2010
#define P109_SKIP_TRKS_PER_HD                 328  // HD_PHYS_PSN,HD_LGC_PSN,NUM_SKIPPED_TRKS
//      P109_SKIP_TRKS_PER_HD_COL_WIDTH            //          11,        10,              16
//      P109_SKIP_TRKS_PER_HD_COL_MASK             //           0,         0,               0
//      P109_SKIP_TRKS_PER_HD_COL_TYPES            // *
//      P109_SKIP_TRKS_PER_HD_TABLE_TYPE           // S
#define P109_CERT_ABORT_TRK                   329  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,ERR_CODE_HEX,ERR_CODE_DEC
//      P109_CERT_ABORT_TRK_COL_WIDTH              //          11,        10,      7,          12,          12
//      P109_CERT_ABORT_TRK_COL_MASK               //           1,         1,      1,           1,           1
//      P109_CERT_ABORT_TRK_COL_TYPES              //           N,         N,      N,           V,           N
//      P109_CERT_ABORT_TRK_TABLE_TYPE             // S
#define P126_CERT_ABORT_TRK                   330  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,ERR_CODE_HEX,ERR_CODE_DEC
//      P126_CERT_ABORT_TRK_COL_WIDTH              //          11,        10,      7,          12,          12
//      P126_CERT_ABORT_TRK_COL_MASK               //           0,         0,      0,           0,           0
//      P126_CERT_ABORT_TRK_COL_TYPES              // *
//      P126_CERT_ABORT_TRK_TABLE_TYPE             // S

// Deprecated 11/23/2010
#define P109_BER                              331  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,ERROR_RATE
//      P109_BER_COL_WIDTH                         //          11,        10,      7,        10
//      P109_BER_COL_MASK                          //           0,         0,      0,         0
//      P109_BER_COL_TYPES                         // *
//      P109_BER_TABLE_TYPE                        // S
#define P035_BIC_DELTA_PES                    332  // REP,MEAN,VAR
//      P035_BIC_DELTA_PES_COL_WIDTH               //   6,   6,  6
//      P035_BIC_DELTA_PES_COL_MASK                //   0,   0,  0
//      P035_BIC_DELTA_PES_COL_TYPES               // *
//      P035_BIC_DELTA_PES_TABLE_TYPE              // S
#define P035_DEBUG_FFT_DATA                   333  // FREQ_START,FREQ_END,FREQ_INCREMENT
//      P035_DEBUG_FFT_DATA_COL_WIDTH              //         10,       8,            14
//      P035_DEBUG_FFT_DATA_COL_MASK               //          0,       0,             0
//      P035_DEBUG_FFT_DATA_COL_TYPES              // *
//      P035_DEBUG_FFT_DATA_TABLE_TYPE             // S
#define P035_DPES_NORMAL                      334  // DELTA_PES_SPECTRUM,NORMALIZATION_FACTOR
//      P035_DPES_NORMAL_COL_WIDTH                 //                 18,                  20
//      P035_DPES_NORMAL_COL_MASK                  //                  0,                   0
//      P035_DPES_NORMAL_COL_TYPES                 // *
//      P035_DPES_NORMAL_TABLE_TYPE                // S
#define P035_DRIVE_TEMPERATURE                335  // ACTUAL_TEMPERATURE
//      P035_DRIVE_TEMPERATURE_COL_WIDTH           //                 18
//      P035_DRIVE_TEMPERATURE_COL_MASK            //                  0
//      P035_DRIVE_TEMPERATURE_COL_TYPES           // *
//      P035_DRIVE_TEMPERATURE_TABLE_TYPE          // S
#define P109_VER_HD_CLAMP                     336  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,VER_NUM
//      P109_VER_HD_CLAMP_COL_WIDTH                //          11,        10,      7,      7
//      P109_VER_HD_CLAMP_COL_MASK                 //           0,         0,      0,      0
//      P109_VER_HD_CLAMP_COL_TYPES                // *
//      P109_VER_HD_CLAMP_TABLE_TYPE               // S
#define P109_UNVER_HD_CLAMP                   337  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,UNVER_NUM
//      P109_UNVER_HD_CLAMP_COL_WIDTH              //          11,        10,      7,        9
//      P109_UNVER_HD_CLAMP_COL_MASK               //           0,         0,      0,        0
//      P109_UNVER_HD_CLAMP_COL_TYPES              // *
//      P109_UNVER_HD_CLAMP_TABLE_TYPE             // S
#define P109_UNCERT_TRK_HD_CLAMP              338  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,UNVER_NUM
//      P109_UNCERT_TRK_HD_CLAMP_COL_WIDTH         //          11,        10,      7,        9
//      P109_UNCERT_TRK_HD_CLAMP_COL_MASK          //           0,         0,      0,        0
//      P109_UNCERT_TRK_HD_CLAMP_COL_TYPES         // *
//      P109_UNCERT_TRK_HD_CLAMP_TABLE_TYPE        // S
#define P109_LOG_UNVER_DATA_ERR               339  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SECTOR,STATUS
//      P109_LOG_UNVER_DATA_ERR_COL_WIDTH          //          11,        10,      7,     6,     6
//      P109_LOG_UNVER_DATA_ERR_COL_MASK           //           0,         0,      0,     0,     0
//      P109_LOG_UNVER_DATA_ERR_COL_TYPES          // *
//      P109_LOG_UNVER_DATA_ERR_TABLE_TYPE         // S
#define P109_LOG_VER_DATA_ERR                 340  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SECTOR,OFFSET,SYM_POS,SYM_LEN,RPT_CNT
//      P109_LOG_VER_DATA_ERR_COL_WIDTH            //          11,        10,      7,     6,     6,      7,      7,      7
//      P109_LOG_VER_DATA_ERR_COL_MASK             //           0,         0,      0,     0,     0,      0,      0,      0
//      P109_LOG_VER_DATA_ERR_COL_TYPES            // *
//      P109_LOG_VER_DATA_ERR_TABLE_TYPE           // S
#define P109_MISCOMPARE_DETAILS               341  // MISCOMPARED_BYTE,PATTERN
//      P109_MISCOMPARE_DETAILS_COL_WIDTH          //               16,      7
//      P109_MISCOMPARE_DETAILS_COL_MASK           //                0,      0
//      P109_MISCOMPARE_DETAILS_COL_TYPES          // *
//      P109_MISCOMPARE_DETAILS_TABLE_TYPE         // S
#define P109_SEEK_CERT_FAIL                   342  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,RETRIES,LOOP_CODE,SEEK_TYPE
//      P109_SEEK_CERT_FAIL_COL_WIDTH              //          11,        10,      7,      7,        9,        9
//      P109_SEEK_CERT_FAIL_COL_MASK               //           0,         0,      0,      0,        0,        0
//      P109_SEEK_CERT_FAIL_COL_TYPES              // *
//      P109_SEEK_CERT_FAIL_TABLE_TYPE             // S
#define P109_SSWG_SKIP_TRACK                  343  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,READ_STAT
//      P109_SSWG_SKIP_TRACK_COL_WIDTH             //          11,        10,      7,        9
//      P109_SSWG_SKIP_TRACK_COL_MASK              //           0,         0,      0,        0
//      P109_SSWG_SKIP_TRACK_COL_TYPES             // *
//      P109_SSWG_SKIP_TRACK_TABLE_TYPE            // S
#define P109_SS_CERT_WDG_UNK                  344  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,WDG_TO_RD,CURRENT_TRY,ERROR_CODE,DRV_FAULT_STATUS
//      P109_SS_CERT_WDG_UNK_COL_WIDTH             //          11,        10,      7,        9,         11,        10,              16
//      P109_SS_CERT_WDG_UNK_COL_MASK              //           0,         0,      0,        0,          0,         0,               0
//      P109_SS_CERT_WDG_UNK_COL_TYPES             // *
//      P109_SS_CERT_WDG_UNK_TABLE_TYPE            // S
#define P109_WDG_REWRITE_FAIL                 345  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,CURRENT_TRY,RETURN_STAT
//      P109_WDG_REWRITE_FAIL_COL_WIDTH            //          11,        10,      7,         11,         11
//      P109_WDG_REWRITE_FAIL_COL_MASK             //           0,         0,      0,          0,          0
//      P109_WDG_REWRITE_FAIL_COL_TYPES            // *
//      P109_WDG_REWRITE_FAIL_TABLE_TYPE           // S
#define P109_PRE_MERGE_DEFECT                 346  // CURRENT_TRY,SINGLE_BYTE_WRITTEN,MERGED_BYTE_PATTERN,READ_STAT
//      P109_PRE_MERGE_DEFECT_COL_WIDTH            //          11,                 19,                 19,        9
//      P109_PRE_MERGE_DEFECT_COL_MASK             //           0,                  0,                  0,        0
//      P109_PRE_MERGE_DEFECT_COL_TYPES            // *
//      P109_PRE_MERGE_DEFECT_TABLE_TYPE           // S
#define P109_SRVO_FLAW_COUNT                  347  // SRVO_FLAW_FAILURES
//      P109_SRVO_FLAW_COUNT_COL_WIDTH             //                 18
//      P109_SRVO_FLAW_COUNT_COL_MASK              //                  0
//      P109_SRVO_FLAW_COUNT_COL_TYPES             // *
//      P109_SRVO_FLAW_COUNT_TABLE_TYPE            // S
#define P109_SS_WRITE_ERR                     348  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,ERROR_CODE,FAILED_PBA,FAULT_CAUSE
//      P109_SS_WRITE_ERR_COL_WIDTH                //          11,        10,      7,        10,        10,         11
//      P109_SS_WRITE_ERR_COL_MASK                 //           0,         0,      0,         0,         0,          0
//      P109_SS_WRITE_ERR_COL_TYPES                // *
//      P109_SS_WRITE_ERR_TABLE_TYPE               // S
#define P109_SS_WR_NON_SRVO_ERR               349  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,ERROR_CODE,FAILED_PBA
//      P109_SS_WR_NON_SRVO_ERR_COL_WIDTH          //          11,        10,      7,        10,        10
//      P109_SS_WR_NON_SRVO_ERR_COL_MASK           //           0,         0,      0,         0,         0
//      P109_SS_WR_NON_SRVO_ERR_COL_TYPES          // *
//      P109_SS_WR_NON_SRVO_ERR_TABLE_TYPE         // S
#define P109_RW_SERVO_FAULT                   350  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,LOOP_CODE
//      P109_RW_SERVO_FAULT_COL_WIDTH              //          11,        10,      7,        9
//      P109_RW_SERVO_FAULT_COL_MASK               //           0,         0,      0,        0
//      P109_RW_SERVO_FAULT_COL_TYPES              // *
//      P109_RW_SERVO_FAULT_TABLE_TYPE             // S
#define P109_RD_REG15_DATA                    351  // CURRENT_ZONE,AVG_AGC,INITIAL_GAIN
//      P109_RD_REG15_DATA_COL_WIDTH               //           12,      7,          12
//      P109_RD_REG15_DATA_COL_MASK                //            0,      0,           0
//      P109_RD_REG15_DATA_COL_TYPES               // *
//      P109_RD_REG15_DATA_TABLE_TYPE              // S
#define P109_SPLIT_SECTOR                     352  // *
//      P109_SPLIT_SECTOR_COL_WIDTH                // 1
//      P109_SPLIT_SECTOR_COL_MASK                 // 0
//      P109_SPLIT_SECTOR_COL_TYPES                // *
//      P109_SPLIT_SECTOR_TABLE_TYPE               // S
#define P109_RD_PRE_WEDGE                     353  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,RETURN_STAT_PTR
//      P109_RD_PRE_WEDGE_COL_WIDTH                //          11,        10,      7,             15
//      P109_RD_PRE_WEDGE_COL_MASK                 //           0,         0,      0,              0
//      P109_RD_PRE_WEDGE_COL_TYPES                // *
//      P109_RD_PRE_WEDGE_TABLE_TYPE               // S
#define P109_RD_CERT_WDG_FAILED               354  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,PENDING_STATUS,WDG_NUM
//      P109_RD_CERT_WDG_FAILED_COL_WIDTH          //          11,        10,      7,            14,      7
//      P109_RD_CERT_WDG_FAILED_COL_MASK           //           0,         0,      0,             0,      0
//      P109_RD_CERT_WDG_FAILED_COL_TYPES          // *
//      P109_RD_CERT_WDG_FAILED_TABLE_TYPE         // S
#define P109_XFR_COUNT                        355  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,FAILED_SECTOR,NUM_SECTORS_TESTED,XFR_COUNT,START_SECTOR
//      P109_XFR_COUNT_COL_WIDTH                   //          11,        10,      7,           13,                18,        9,          12
//      P109_XFR_COUNT_COL_MASK                    //           0,         0,      0,            0,                 0,        0,           0
//      P109_XFR_COUNT_COL_TYPES                   // *
//      P109_XFR_COUNT_TABLE_TYPE                  // S
#define P195_STRESS_CSM                       356  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,ITERATION,RD_BIAS_DAC,CSM_POS_DC_ERASE,CSM_NEG_DC_ERASE,CSM_DELTA,CSM_DELTA_ERR_CODE,HD_STATUS
//      P195_STRESS_CSM_COL_WIDTH                  //          11,      8,        10,        9,         11,              16,              16,       10,                18,        9
//      P195_STRESS_CSM_COL_MASK                   //           1,      1,         1,        1,          1,               1,               1,        1,                 1,        1
//      P195_STRESS_CSM_COL_TYPES                  //           N,      N,         N,        N,          N,               N,               N,        N,                 N,        N
//      P195_STRESS_CSM_TABLE_TYPE                 // M
#define P151_AFH_PARAMS_DETAILED              357  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,WRT_CUR,OVS_AMP,OVS_DUR,WRT_HEAT,PRE_HEAT,RD_HEAT,TRK_NUM,NRZ_FREQ,CLR_DELTA_TEMP,CLR_LOSS_WRT,WRT_BER_LOG10,WRT_CQM
//      P151_AFH_PARAMS_DETAILED_COL_WIDTH         //          11,        9,        10,      7,      7,      7,       8,       8,      7,      7,       8,            14,          12,           13,     10
//      P151_AFH_PARAMS_DETAILED_COL_MASK          //           1,        1,         1,      1,      1,      1,       1,       1,      1,      1,       1,             1,           1,            1,      1
//      P151_AFH_PARAMS_DETAILED_COL_TYPES         //           N,        N,         N,      N,      N,      N,       N,       N,      N,      N,       N,             N,           N,            N,      N
//      P151_AFH_PARAMS_DETAILED_TABLE_TYPE        // M
#define P000_REPORTED_ERROR_CODE              358  // ERROR_CODE_DEC,ERROR_CODE_HEX
//      P000_REPORTED_ERROR_CODE_COL_WIDTH         //             14,            14
//      P000_REPORTED_ERROR_CODE_COL_MASK          //              0,             0
//      P000_REPORTED_ERROR_CODE_COL_TYPES         // *
//      P000_REPORTED_ERROR_CODE_TABLE_TYPE        // S
#define P167_BIT_ERROR_RATE                   359  // HD_PHYS_PSN,HD_LGC_PSN,TEST_OFFSET,BIT_ERROR_RATE,BITS_PASSED,TOTAL_ERRORS,DATA_ERRORS
//      P167_BIT_ERROR_RATE_COL_WIDTH              //          11,        10,         11,            14,         11,          12,         11
//      P167_BIT_ERROR_RATE_COL_MASK               //           0,         0,          0,             0,          0,           0,          0
//      P167_BIT_ERROR_RATE_COL_TYPES              // *
//      P167_BIT_ERROR_RATE_TABLE_TYPE             // V
#define P194_RRO_MEASUREMENT                  360  // HD_PHYS_PSN,SEEK_DIR,ATS_ZONE,ITERATION,HD_LGC_PSN,MABS_RRO
//      P194_RRO_MEASUREMENT_COL_WIDTH             //          11,       8,       8,        9,        10,       8
//      P194_RRO_MEASUREMENT_COL_MASK              //           0,       0,       0,        0,         0,       0
//      P194_RRO_MEASUREMENT_COL_TYPES             // *
//      P194_RRO_MEASUREMENT_TABLE_TYPE            // M
#define P194_ATS_SUMMARY                      361  // HD_PHYS_PSN,HD_LGC_PSN,MABS_RRO_FAILURES,SEEK_FAILURES
//      P194_ATS_SUMMARY_COL_WIDTH                 //          11,        10,               17,           13
//      P194_ATS_SUMMARY_COL_MASK                  //           0,         0,                0,            0
//      P194_ATS_SUMMARY_COL_TYPES                 // *
//      P194_ATS_SUMMARY_TABLE_TYPE                // S
#define P194_ATS_SEEK_HSTGRMS                 362  // HD_PHYS_PSN,SEEK_DIR,ZONE,HD_LGC_PSN,UNSAFES,BINSTRT,BINEND,COUNT
//      P194_ATS_SEEK_HSTGRMS_COL_WIDTH            //          11,       8,   4,        10,      7,      8,     8,    5
//      P194_ATS_SEEK_HSTGRMS_COL_MASK             //           0,       0,   0,         0,      0,      0,     0,    0
//      P194_ATS_SEEK_HSTGRMS_COL_TYPES            // *
//      P194_ATS_SEEK_HSTGRMS_TABLE_TYPE           // S
#define P000_DELETED_FLAW_COUNT               363  // NUM_FLAWS_DELETED
//      P000_DELETED_FLAW_COUNT_COL_WIDTH          //                17
//      P000_DELETED_FLAW_COUNT_COL_MASK           //                 0
//      P000_DELETED_FLAW_COUNT_COL_TYPES          // *
//      P000_DELETED_FLAW_COUNT_TABLE_TYPE         // S
#define P195_VGA_CSM                          364  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,ITER,VGA,CSM,ERROR_CODE
//      P195_VGA_CSM_COL_WIDTH                     //          11,      7,        10,   4,  3, 10,        10
//      P195_VGA_CSM_COL_MASK                      //           1,      1,         1,   1,  1,  1,         1
//      P195_VGA_CSM_COL_TYPES                     //           N,      N,         N,   N,  N,  N,         N
//      P195_VGA_CSM_TABLE_TYPE                    // M

// Deprecated 11/23/2010
#define P130_DFCTV_SECTOR_RPT                 365  // DATA_ZONE,REALLOCATED_SECTORS,AVAILABLE_SPARES,PERCENT_USED
//      P130_DFCTV_SECTOR_RPT_COL_WIDTH            //         9,                 19,              16,          12
//      P130_DFCTV_SECTOR_RPT_COL_MASK             //         0,                  0,               0,           0
//      P130_DFCTV_SECTOR_RPT_COL_TYPES            // *
//      P130_DFCTV_SECTOR_RPT_TABLE_TYPE           // S

// Deprecated 11/23/2010
#define P130_DFCTV_SECTOR_TOTAL               366  // REALLOCATED_SECTORS,AVAILABLE_SPARES,PERCENT_USED
//      P130_DFCTV_SECTOR_TOTAL_COL_WIDTH          //                  19,              16,          12
//      P130_DFCTV_SECTOR_TOTAL_COL_MASK           //                   0,               0,           0
//      P130_DFCTV_SECTOR_TOTAL_COL_TYPES          // *
//      P130_DFCTV_SECTOR_TOTAL_TABLE_TYPE         // S

// Deprecated 11/23/2010
#define P130_SLIPPED_SECTOR_SPEC              367  // TOTAL_SLIPPED_SECTORS,SPEC_LIMIT_X_1000
//      P130_SLIPPED_SECTOR_SPEC_COL_WIDTH         //                    21,               17
//      P130_SLIPPED_SECTOR_SPEC_COL_MASK          //                     0,                0
//      P130_SLIPPED_SECTOR_SPEC_COL_TYPES         // *
//      P130_SLIPPED_SECTOR_SPEC_TABLE_TYPE        // S

// Deprecated 11/23/2010
#define P130_DST_ENTRIES_SPEC                 368  // DST_ENTRIES,DST_LIMIT
//      P130_DST_ENTRIES_SPEC_COL_WIDTH            //          11,        9
//      P130_DST_ENTRIES_SPEC_COL_MASK             //           0,        0
//      P130_DST_ENTRIES_SPEC_COL_TYPES            // *
//      P130_DST_ENTRIES_SPEC_TABLE_TYPE           // S

// Deprecated 11/23/2010
#define P130_AST_ENTRIES_SPEC                 369  // AST_ENTRIES,AST_LIMIT
//      P130_AST_ENTRIES_SPEC_COL_WIDTH            //          11,        9
//      P130_AST_ENTRIES_SPEC_COL_MASK             //           0,        0
//      P130_AST_ENTRIES_SPEC_COL_TYPES            // *
//      P130_AST_ENTRIES_SPEC_TABLE_TYPE           // S

// Deprecated 11/23/2010
#define P130_FAILED_REALLOC_SECTR             370  // DATA_ZONE
//      P130_FAILED_REALLOC_SECTR_COL_WIDTH        //         9
//      P130_FAILED_REALLOC_SECTR_COL_MASK         //         0
//      P130_FAILED_REALLOC_SECTR_COL_TYPES        // *
//      P130_FAILED_REALLOC_SECTR_TABLE_TYPE       // S

// Deprecated 11/23/2010
#define P130_MODIFY_SPARES                    371  // DATA_ZONE,SPARES_ADDED,SPARES_REMOVED
//      P130_MODIFY_SPARES_COL_WIDTH               //         9,          12,            14
//      P130_MODIFY_SPARES_COL_MASK                //         0,           0,             0
//      P130_MODIFY_SPARES_COL_TYPES               // *
//      P130_MODIFY_SPARES_TABLE_TYPE              // S
#define P130_SYS_SLIST_DETAILED               372  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,WEDGE,SMR_DATA_CYL
//      P130_SYS_SLIST_DETAILED_COL_WIDTH          //          11,        10,      7,    7,          12
//      P130_SYS_SLIST_DETAILED_COL_MASK           //           0,         0,      0,    0,           0
//      P130_SYS_SLIST_DETAILED_COL_TYPES          // *
//      P130_SYS_SLIST_DETAILED_TABLE_TYPE         // S

// Deprecated 11/23/2010
#define P130_DFCT_SUMMARY_BY_ZONE             373  // DATA_ZONE,SPARES_AVAIL_IN_ZONE,REALLOC_IN_ZONE,TOTAL_PCNT_USED,REALLOC_NON_SRVO,NSRVO_PCNT_USED,REALLOC_SRVO,SRVO_PCNT_USED
//      P130_DFCT_SUMMARY_BY_ZONE_COL_WIDTH        //         9,                  20,             15,             15,              16,             15,          12,            14
//      P130_DFCT_SUMMARY_BY_ZONE_COL_MASK         //         0,                   0,              0,              0,               0,              0,           0,             0
//      P130_DFCT_SUMMARY_BY_ZONE_COL_TYPES        // *
//      P130_DFCT_SUMMARY_BY_ZONE_TABLE_TYPE       // S

// Deprecated 11/23/2010
#define P130_DFCT_TOTALS_BY_ZONE              374  // TOTAL_SPARES_AVAIL,TOTAL_REALLOC,TOTAL_PCNT_USED,TOTAL_NON_SRVO,NON_SRVO_PCNT_USED,TOTAL_SRVO_ONLY,SRVO_ONLY_PCNT_USED
//      P130_DFCT_TOTALS_BY_ZONE_COL_WIDTH         //                 18,           13,             15,            14,                18,             15,                 19
//      P130_DFCT_TOTALS_BY_ZONE_COL_MASK          //                  0,            0,              0,             0,                 0,              0,                  0
//      P130_DFCT_TOTALS_BY_ZONE_COL_TYPES         // *
//      P130_DFCT_TOTALS_BY_ZONE_TABLE_TYPE        // S

// Deprecated 11/23/2010
#define P130_DFCT_SUMMARY_BY_HD               375  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TOTAL_REALLOC,REALLOC_NON_SRVO,REALLOC_SRVO_ONLY
//      P130_DFCT_SUMMARY_BY_HD_COL_WIDTH          //          11,        9,        10,           13,              16,               17
//      P130_DFCT_SUMMARY_BY_HD_COL_MASK           //           0,        0,         0,            0,               0,                0
//      P130_DFCT_SUMMARY_BY_HD_COL_TYPES          // *
//      P130_DFCT_SUMMARY_BY_HD_TABLE_TYPE         // S

// Deprecated 11/23/2010
#define P130_TOTALS_BY_HD                     376  // HD_PHYS_PSN,HD_LGC_PSN,TOTAL_REALLOC,TOTAL_REALLOC_NON_SRVO,TOTAL_REALLOC_SRVO_ONLY
//      P130_TOTALS_BY_HD_COL_WIDTH                //          11,        10,           13,                    22,                     23
//      P130_TOTALS_BY_HD_COL_MASK                 //           0,         0,            0,                     0,                      0
//      P130_TOTALS_BY_HD_COL_TYPES                // *
//      P130_TOTALS_BY_HD_TABLE_TYPE               // S
#define P130_PLIST_DETAILED                   377  // FLAW_NUM,HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,POSITION,LENGTH,FLAW_TYPE,SMR_DATA_CYL
//      P130_PLIST_DETAILED_COL_WIDTH              //        8,         11,        10,      7,       8,     6,        9,          12
//      P130_PLIST_DETAILED_COL_MASK               //        0,          0,         0,      0,       0,     0,        0,           0
//      P130_PLIST_DETAILED_COL_TYPES              // *
//      P130_PLIST_DETAILED_TABLE_TYPE             // S
#define P130_SYS_SAP_DETAILED                 378  // ADDRESS,0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F
//      P130_SYS_SAP_DETAILED_COL_WIDTH            //       7,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4
//      P130_SYS_SAP_DETAILED_COL_MASK             //       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
//      P130_SYS_SAP_DETAILED_COL_TYPES            // *
//      P130_SYS_SAP_DETAILED_TABLE_TYPE           // S
#define P130_PRIMARY_DFCT_SUMMARY             379  // TOTAL_DFCTS_DRIVE,WORST_HEAD,TOTAL_DFCTS_WORST_HEAD
//      P130_PRIMARY_DFCT_SUMMARY_COL_WIDTH        //                17,        10,                    22
//      P130_PRIMARY_DFCT_SUMMARY_COL_MASK         //                 1,         1,                     1
//      P130_PRIMARY_DFCT_SUMMARY_COL_TYPES        //                 N,         N,                     N
//      P130_PRIMARY_DFCT_SUMMARY_TABLE_TYPE       // S
#define P130_PLIST_EMPTY                      380  // *
//      P130_PLIST_EMPTY_COL_WIDTH                 // 3
//      P130_PLIST_EMPTY_COL_MASK                  // 0
//      P130_PLIST_EMPTY_COL_TYPES                 // *
//      P130_PLIST_EMPTY_TABLE_TYPE                // S
#define P130_SYS_RZDT                         381  // *
//      P130_SYS_RZDT_COL_WIDTH                    // 2
//      P130_SYS_RZDT_COL_MASK                     // 0
//      P130_SYS_RZDT_COL_TYPES                    // *
//      P130_SYS_RZDT_TABLE_TYPE                   // S
#define P130_SYS_DRV_INFO                     382  // *
//      P130_SYS_DRV_INFO_COL_WIDTH                // 2
//      P130_SYS_DRV_INFO_COL_MASK                 // 0
//      P130_SYS_DRV_INFO_COL_TYPES                // *
//      P130_SYS_DRV_INFO_TABLE_TYPE               // S
#define P130_SYS_PERF_PARM                    383  // *
//      P130_SYS_PERF_PARM_COL_WIDTH               // 2
//      P130_SYS_PERF_PARM_COL_MASK                // 0
//      P130_SYS_PERF_PARM_COL_TYPES               // *
//      P130_SYS_PERF_PARM_TABLE_TYPE              // S
#define P130_SYS_CAP                          384  // *
//      P130_SYS_CAP_COL_WIDTH                     // 2
//      P130_SYS_CAP_COL_MASK                      // 0
//      P130_SYS_CAP_COL_TYPES                     // *
//      P130_SYS_CAP_TABLE_TYPE                    // S
#define P130_SYS_RAP                          385  // *
//      P130_SYS_RAP_COL_WIDTH                     // 2
//      P130_SYS_RAP_COL_MASK                      // 0
//      P130_SYS_RAP_COL_TYPES                     // *
//      P130_SYS_RAP_TABLE_TYPE                    // S
#define P130_SYS_SLIST_BINARY                 386  // *
//      P130_SYS_SLIST_BINARY_COL_WIDTH            // 2
//      P130_SYS_SLIST_BINARY_COL_MASK             // 0
//      P130_SYS_SLIST_BINARY_COL_TYPES            // *
//      P130_SYS_SLIST_BINARY_TABLE_TYPE           // S
#define P130_SYS_TA_LIST_BINARY               387  // *
//      P130_SYS_TA_LIST_BINARY_COL_WIDTH          // 2
//      P130_SYS_TA_LIST_BINARY_COL_MASK           // 0
//      P130_SYS_TA_LIST_BINARY_COL_TYPES          // *
//      P130_SYS_TA_LIST_BINARY_TABLE_TYPE         // S
#define P130_SYS_PLIST_BINARY                 388  // *
//      P130_SYS_PLIST_BINARY_COL_WIDTH            // 2
//      P130_SYS_PLIST_BINARY_COL_MASK             // 0
//      P130_SYS_PLIST_BINARY_COL_TYPES            // *
//      P130_SYS_PLIST_BINARY_TABLE_TYPE           // S
#define P130_DRV_INFO_FILE                    389  // *
//      P130_DRV_INFO_FILE_COL_WIDTH               // 2
//      P130_DRV_INFO_FILE_COL_MASK                // 0
//      P130_DRV_INFO_FILE_COL_TYPES               // *
//      P130_DRV_INFO_FILE_TABLE_TYPE              // S
#define P130_SYS_PRIMARY_DFCT                 390  // *
//      P130_SYS_PRIMARY_DFCT_COL_WIDTH            // 2
//      P130_SYS_PRIMARY_DFCT_COL_MASK             // 0
//      P130_SYS_PRIMARY_DFCT_COL_TYPES            // *
//      P130_SYS_PRIMARY_DFCT_TABLE_TYPE           // S
#define P130_SYS_SAP                          391  // *
//      P130_SYS_SAP_COL_WIDTH                     // 2
//      P130_SYS_SAP_COL_MASK                      // 0
//      P130_SYS_SAP_COL_TYPES                     // *
//      P130_SYS_SAP_TABLE_TYPE                    // S
#define P130_SYS_MANUFACT_INFO                392  // *
//      P130_SYS_MANUFACT_INFO_COL_WIDTH           // 2
//      P130_SYS_MANUFACT_INFO_COL_MASK            // 0
//      P130_SYS_MANUFACT_INFO_COL_TYPES           // *
//      P130_SYS_MANUFACT_INFO_TABLE_TYPE          // S
#define P151_CHANNEL_OPT                      393  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RGSTR_ID,CQM_OPTI,OPTI_VAL
//      P151_CHANNEL_OPT_COL_WIDTH                 //          11,        9,        10,       8,       8,       8
//      P151_CHANNEL_OPT_COL_MASK                  //           1,        1,         1,       1,       1,       1
//      P151_CHANNEL_OPT_COL_TYPES                 //           N,        N,         N,       V,       N,       N
//      P151_CHANNEL_OPT_TABLE_TYPE                // M
#define P187_TRACK_SPACING                    394  // HD_PHYS_PSN,LGC_CYL,NATIVE_CYL,HD_LGC_PSN,JOG_ERR,HALF1,HALF2,SPACING,CYL_TYPE,OOS_SPCG,OOS_JOG,OOS_DEALLC
//      P187_TRACK_SPACING_COL_WIDTH               //          11,     10,        10,        10,      7,    5,    5,      7,       8,       8,      7,        10
//      P187_TRACK_SPACING_COL_MASK                //           0,      0,         0,         0,      0,    0,    0,      0,       0,       0,      0,         0
//      P187_TRACK_SPACING_COL_TYPES               // *
//      P187_TRACK_SPACING_TABLE_TYPE              // M
#define P187_TRACK_SPACING_STATS              395  // HD_PHYS_PSN,STATISTIC,HD_LGC_PSN,JOG_ERROR,LGC_SPCG,HALF1,HALF2,PHYS_SPCG
//      P187_TRACK_SPACING_STATS_COL_WIDTH         //          11,        9,        10,        9,       8,    5,    5,        9
//      P187_TRACK_SPACING_STATS_COL_MASK          //           1,        1,         1,        1,       1,    1,    1,        1
//      P187_TRACK_SPACING_STATS_COL_TYPES         //           N,        V,         N,        N,       N,    N,    N,        N
//      P187_TRACK_SPACING_STATS_TABLE_TYPE        // M
#define P187_EXCEPTION_SUMMARY                396  // HD_PHYS_PSN,HD_LGC_PSN,LGCL_SPCG_DEALLOCS,JOG_DEALLOCS,LGCL_SPCG_EXCPTNS,JOG_EXCPTNS,RETRY_TRACK_COUNT,NONMEASURED_TRACK_COUNT,DEALLOC_FAILED_COUNT
//      P187_EXCEPTION_SUMMARY_COL_WIDTH           //          11,        10,                18,          12,               17,         11,               17,                     24,                  20
//      P187_EXCEPTION_SUMMARY_COL_MASK            //           0,         0,                 0,           0,                0,          0,                0,                      0,                   0
//      P187_EXCEPTION_SUMMARY_COL_TYPES           // *
//      P187_EXCEPTION_SUMMARY_TABLE_TYPE          // V
#define P187_JOG_ERROR_HSTGRM                 397  // HD_PHYS_PSN,HD_LGC_PSN,JOG_ERR,COUNT
//      P187_JOG_ERROR_HSTGRM_COL_WIDTH            //          11,        10,      7,    6
//      P187_JOG_ERROR_HSTGRM_COL_MASK             //           0,         0,      0,    0
//      P187_JOG_ERROR_HSTGRM_COL_TYPES            // *
//      P187_JOG_ERROR_HSTGRM_TABLE_TYPE           // V
#define P187_LGCL_SPCNG_HSTGRM                398  // HD_PHYS_PSN,HD_LGC_PSN,LGCL_SPCNG,COUNT
//      P187_LGCL_SPCNG_HSTGRM_COL_WIDTH           //          11,        10,        10,    6
//      P187_LGCL_SPCNG_HSTGRM_COL_MASK            //           0,         0,         0,    0
//      P187_LGCL_SPCNG_HSTGRM_COL_TYPES           // *
//      P187_LGCL_SPCNG_HSTGRM_TABLE_TYPE          // V
#define P187_NATIVE_SPCNG_HSTGRM              399  // HD_PHYS_PSN,HD_LGC_PSN,NATIVE_SPCNG,COUNT
//      P187_NATIVE_SPCNG_HSTGRM_COL_WIDTH         //          11,        10,          12,    6
//      P187_NATIVE_SPCNG_HSTGRM_COL_MASK          //           0,         0,           0,    0
//      P187_NATIVE_SPCNG_HSTGRM_COL_TYPES         // *
//      P187_NATIVE_SPCNG_HSTGRM_TABLE_TYPE        // V
#define P152_FCS_DETAILS                      400  // HD_PHYS_PSN,HD_LGC_PSN,CNTRL_ID,REV_NUM,SNO_BLK_CNT,FCC_RATIO,CRLTN_PNLZ_BLK_CNT,CRLTN_START_NDX,CRLTN_THRESHOLD,CRLTN_RSLT,TEMP_SHIFT,BND_START_NDX,BND_END_NDX,OLP_CHK_LGAIN_BLK_CNT,CLP_CHK_BLK_CNT,EST_CLP_BWDTH,EST_CLP_PK,SELECT_STATUS
//      P152_FCS_DETAILS_COL_WIDTH                 //          11,        10,       8,      7,         11,        9,                18,             15,             15,        10,        10,           13,         11,                   21,             15,           13,        10,           13
//      P152_FCS_DETAILS_COL_MASK                  //           1,         1,       1,      1,          1,        1,                 1,              1,              1,         1,         1,            1,          1,                    1,              1,            1,         1,            1
//      P152_FCS_DETAILS_COL_TYPES                 //           N,         N,       N,      N,          N,        N,                 N,              N,              N,         N,         N,            N,          N,                    N,              N,            N,         N,            V
//      P152_FCS_DETAILS_TABLE_TYPE                // V
#define P117_MEDIA_SCREEN                     401  // HD_PHYS_PSN,BEGINNING_TRK,SCRATCH_ID,HD_LGC_PSN,ENDING_TRK,SCRATCH_LENGTH,DEFECTS,TOTAL_BYTES,SCREEN_PF_FLAG
//      P117_MEDIA_SCREEN_COL_WIDTH                //          11,           13,        10,        10,        10,            14,      7,         11,            14
//      P117_MEDIA_SCREEN_COL_MASK                 //           1,            1,         1,         1,         1,             1,      1,          1,             1
//      P117_MEDIA_SCREEN_COL_TYPES                //           N,            N,         N,         N,         N,             N,      N,          N,             V
//      P117_MEDIA_SCREEN_TABLE_TYPE               // M
#define P117_SCRATCH_FILL_BY_HEAD             402  // HD_PHYS_PSN,HD_LGC_PSN,SCRATCH_FLAWS_HD
//      P117_SCRATCH_FILL_BY_HEAD_COL_WIDTH        //          11,        10,              16
//      P117_SCRATCH_FILL_BY_HEAD_COL_MASK         //           1,         1,               1
//      P117_SCRATCH_FILL_BY_HEAD_COL_TYPES        //           N,         N,               N
//      P117_SCRATCH_FILL_BY_HEAD_TABLE_TYPE       // V
#define P117_SCRATCH_FILL_SUMMARY             403  // TOTAL_FLAWS,TOTAL_ADDED
//      P117_SCRATCH_FILL_SUMMARY_COL_WIDTH        //          11,         11
//      P117_SCRATCH_FILL_SUMMARY_COL_MASK         //           1,          1
//      P117_SCRATCH_FILL_SUMMARY_COL_TYPES        //           N,          N
//      P117_SCRATCH_FILL_SUMMARY_TABLE_TYPE       // S
#define P000_ASSERT_TRAP                      404  // INTERFACE_CODE,TRAP_CODE
//      P000_ASSERT_TRAP_COL_WIDTH                 //             14,        9
//      P000_ASSERT_TRAP_COL_MASK                  //              0,        0
//      P000_ASSERT_TRAP_COL_TYPES                 // *
//      P000_ASSERT_TRAP_TABLE_TYPE                // S
#define P152_FCS_CONTROLLERS                  405  // HD_PHYS_PSN,HD_LGC_PSN,CTRL_ID,CTRL_ID(HEX),CTRL_NUM
//      P152_FCS_CONTROLLERS_COL_WIDTH             //          11,        10,      7,          12,       8
//      P152_FCS_CONTROLLERS_COL_MASK              //           0,         0,      0,           0,       0
//      P152_FCS_CONTROLLERS_COL_TYPES             // *
//      P152_FCS_CONTROLLERS_TABLE_TYPE            // V
#define P233_TEST_TIME                        406  // TEST_NUMBER,TEST_TIME,TEST_SPC_ID,TEST_STATUS,TEST_SEQUENCE
//      P233_TEST_TIME_COL_WIDTH                   //          11,        9,         11,         11,           13
//      P233_TEST_TIME_COL_MASK                    //           0,        0,          0,          0,            0
//      P233_TEST_TIME_COL_TYPES                   // *
//      P233_TEST_TIME_TABLE_TYPE                  // S
#define P233_AUTORUN_SUMMARY                  407  // TOTAL_TIME,TOTAL_CMDS,RUN_COUNT,PERCENT_STORAGE,STATUS
//      P233_AUTORUN_SUMMARY_COL_WIDTH             //         11,         9,        9,             15,     6
//      P233_AUTORUN_SUMMARY_COL_MASK              //          0,         0,        0,              0,     0
//      P233_AUTORUN_SUMMARY_COL_TYPES             // *
//      P233_AUTORUN_SUMMARY_TABLE_TYPE            // S
#define P233_TEST_SPC_ID                      408  // TEST_NUMBER,TEST_SPC_ID
//      P233_TEST_SPC_ID_COL_WIDTH                 //          11,         11
//      P233_TEST_SPC_ID_COL_MASK                  //           0,          0
//      P233_TEST_SPC_ID_COL_TYPES                 // *
//      P233_TEST_SPC_ID_TABLE_TYPE                // S
#define P210_CAPACITY_HD2                     409  // HD_PHYS_PSN,HD_LGC_PSN,HD_CAPACITY
//      P210_CAPACITY_HD2_COL_WIDTH                //          11,        10,         11
//      P210_CAPACITY_HD2_COL_MASK                 //           1,         1,          1
//      P210_CAPACITY_HD2_COL_TYPES                //           N,         N,          N
//      P210_CAPACITY_HD2_TABLE_TYPE               // V
#define P210_SCTR_ERR_RATE2                   410  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,VBAR_TPI,VBAR_BPI,SCTR_ERR_RATE
//      P210_SCTR_ERR_RATE2_COL_WIDTH              //          11,        9,        10,      7,       8,       8,           13
//      P210_SCTR_ERR_RATE2_COL_MASK               //           1,        1,         1,      1,       1,       1,            1
//      P210_SCTR_ERR_RATE2_COL_TYPES              //           N,        N,         N,      N,       N,       N,            N
//      P210_SCTR_ERR_RATE2_TABLE_TYPE             // M
#define P150_GAIN_SUM                         411  // HD_PHYS_PSN,HD_LGC_PSN,MAX_PK_PK,PK_PK_FAIL,MAX_CORR_GAIN,CORR_GAIN_FAIL,HD_STATUS,MAX_PK_PK_PES,PK_PK_FAIL_PES,MAX_CORR_PES,CORR_PES_FAIL
//      P150_GAIN_SUM_COL_WIDTH                    //          11,        10,        9,        10,           13,            14,        9,           13,            14,          12,           13
//      P150_GAIN_SUM_COL_MASK                     //           1,         1,        1,         1,            1,             1,        1,            1,             1,           1,            1
//      P150_GAIN_SUM_COL_TYPES                    //           N,         N,        N,         V,            N,             V,        N,            N,             V,           N,            V
//      P150_GAIN_SUM_TABLE_TYPE                   // V
#define P150_LINEARITY_POLY                   412  // HD_PHYS_PSN,COEF_INDEX,HD_LGC_PSN,SURF_COEF_3,SURF_COEF_2,SURF_COEF_1,SURF_COEF_0
//      P150_LINEARITY_POLY_COL_WIDTH              //          11,        10,        10,         11,         11,         11,         11
//      P150_LINEARITY_POLY_COL_MASK               //           1,         1,         1,          1,          1,          1,          1
//      P150_LINEARITY_POLY_COL_TYPES              //           N,         N,         N,          N,          N,          N,          N
//      P150_LINEARITY_POLY_TABLE_TYPE             // M
#define P150_LINEARITY_SAP                    413  // HD_PHYS_PSN,HD_LGC_PSN,IDX01,IDX02,IDX03,IDX04,IDX05,IDX06,IDX07,IDX08,IDX09,IDX10,IDX11,IDX12,IDX13,IDX14,IDX15,IDX16,IDX17
//      P150_LINEARITY_SAP_COL_WIDTH               //          11,        10,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5
//      P150_LINEARITY_SAP_COL_MASK                //           1,         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1
//      P150_LINEARITY_SAP_COL_TYPES               //           N,         N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N
//      P150_LINEARITY_SAP_TABLE_TYPE              // V
#define P150_LINEARITY_GAINS2                 414  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,ITER,PK_PK,DESCRIPTOR,IDX01,IDX02,IDX03,IDX04,IDX05,IDX06,IDX07,IDX08,IDX09,IDX10,IDX11,IDX12,IDX13,IDX14,IDX15,IDX16
//      P150_LINEARITY_GAINS2_COL_WIDTH            //          11,      7,        10,   4,    5,        10,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7
//      P150_LINEARITY_GAINS2_COL_MASK             //           1,      1,         1,   1,    1,         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1
//      P150_LINEARITY_GAINS2_COL_TYPES            //           N,      N,         N,   N,    N,         V,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N
//      P150_LINEARITY_GAINS2_TABLE_TYPE           // M
#define P034_NRRO_DELTA                       415  // HD_PHYS_PSN,HD_LGC_PSN,NRRO_DELTA,HD_STATUS
//      P034_NRRO_DELTA_COL_WIDTH                  //          11,        10,        10,        9
//      P034_NRRO_DELTA_COL_MASK                   //           1,         1,         1,        1
//      P034_NRRO_DELTA_COL_TYPES                  //           N,         N,         N,        N
//      P034_NRRO_DELTA_TABLE_TYPE                 // V
#define P034_NRRO_OFST                        416  // HD_PHYS_PSN,OFST,HD_LGC_PSN,NRRO
//      P034_NRRO_OFST_COL_WIDTH                   //          11,   5,        10,   5
//      P034_NRRO_OFST_COL_MASK                    //           1,   1,         1,   1
//      P034_NRRO_OFST_COL_TYPES                   //           N,   N,         N,   N
//      P034_NRRO_OFST_TABLE_TYPE                  // M
#define P195_CSM2                             417  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,ITER,BIAS,CSM,ERROR_CODE
//      P195_CSM2_COL_WIDTH                        //          11,      7,        10,   4,   4, 10,        10
//      P195_CSM2_COL_MASK                         //           1,      1,         1,   1,   1,  1,         1
//      P195_CSM2_COL_TYPES                        //           N,      N,         N,   N,   N,  N,         N
//      P195_CSM2_TABLE_TYPE                       // M
#define P046_CRRO_HARMONICS                   418  // HD_PHYS_PSN,HARMONIC,HD_LGC_PSN,ID_CRRO,MD_CRRO,OD_CRRO
//      P046_CRRO_HARMONICS_COL_WIDTH              //          11,       8,        10,      7,      7,      7
//      P046_CRRO_HARMONICS_COL_MASK               //           1,       1,         1,      1,      1,      1
//      P046_CRRO_HARMONICS_COL_TYPES              //           N,       N,         N,      N,      N,      N
//      P046_CRRO_HARMONICS_TABLE_TYPE             // M
#define P046_IRRO_HARMONICS                   419  // HD_PHYS_PSN,HARMONIC,HD_LGC_PSN,ID_MAX_IRRO,MD_MAX_IRRO,OD_MAX_IRRO
//      P046_IRRO_HARMONICS_COL_WIDTH              //          11,       8,        10,         11,         11,         11
//      P046_IRRO_HARMONICS_COL_MASK               //           1,       1,         1,          1,          1,          1
//      P046_IRRO_HARMONICS_COL_TYPES              //           N,       N,         N,          N,          N,          N
//      P046_IRRO_HARMONICS_TABLE_TYPE             // M
#define P046_RUNOUT_PER_HEAD                  420  // HD_PHYS_PSN,TEST_PSN,HD_LGC_PSN,CRRO,IRRO,RRO,CWIRRO,IWIRRO,AC_SQZ_2,AC_SQZ_ZAP,WIRRO_SQZ_2,WIRRO_SQZ_ZAP
//      P046_RUNOUT_PER_HEAD_COL_WIDTH             //          11,       8,        10,   6,   6,  6,     6,     6,       8,        10,         11,           13
//      P046_RUNOUT_PER_HEAD_COL_MASK              //           1,       1,         1,   1,   1,  1,     1,     1,       1,         1,          1,            1
//      P046_RUNOUT_PER_HEAD_COL_TYPES             //           N,       N,         N,   N,   N,  N,     N,     N,       N,         N,          N,            N
//      P046_RUNOUT_PER_HEAD_TABLE_TYPE            // M
#define P175_ZONED_ZAP_SUM                    421  // HD_PHYS_PSN,ZAP_ZONE,HD_LGC_PSN,OD_CYLINDER,GRAND_3SIG_RRO,ZBZ_METRIC,ZAP_ENABLED,EZBZ_EVENTS
//      P175_ZONED_ZAP_SUM_COL_WIDTH               //          11,       8,        10,         11,            14,        10,         11,         11
//      P175_ZONED_ZAP_SUM_COL_MASK                //           1,       1,         1,          1,             1,         1,          1,          1
//      P175_ZONED_ZAP_SUM_COL_TYPES               //           N,       N,         N,          N,             N,         N,          N,          N
//      P175_ZONED_ZAP_SUM_TABLE_TYPE              // M

// Deprecated 11/23/2010
#define P166_PREAMP_REV                       422  // PREAMP_REV
//      P166_PREAMP_REV_COL_WIDTH                  //         10
//      P166_PREAMP_REV_COL_MASK                   //          0
//      P166_PREAMP_REV_COL_TYPES                  // *
//      P166_PREAMP_REV_TABLE_TYPE                 // S
#define P231_HEADER_INFO                      423  // STARTING_SECTOR,SIZE_IN_SECTORS,FILE_LENGTH,STATUS,FILE_NAME,INDEX,SUB_FILE_LBA,HD_LGC_PSN,HD_PHYS_PSN,CYLINDER,DRV_SECTOR
//      P231_HEADER_INFO_COL_WIDTH                 //              15,             15,         11,     6,       15,    7,          16,        11,         10,       8,         8
//      P231_HEADER_INFO_COL_MASK                  //               0,              0,          0,     0,        0,    0,           0,         0,          0,       0,         0
//      P231_HEADER_INFO_COL_TYPES                 // *
//      P231_HEADER_INFO_TABLE_TYPE                // S
#define P231_HEADER                           424  // VERSION,KEY_NAME,ENTRIES,NUM_SECTORS
//      P231_HEADER_COL_WIDTH                      //       7,       8,      7,         11
//      P231_HEADER_COL_MASK                       //       0,       0,      0,          0
//      P231_HEADER_COL_TYPES                      // *
//      P231_HEADER_TABLE_TYPE                     // S

// Deprecated 11/23/2010
#define P198_SRVO_OFTRK_CNT                   425  // HD_PHYS_PSN,HD_LGC_PSN,PES_SHOCK,PRDCTN_OFTRK,FALSE_PRDCTN,LV_SHOCK
//      P198_SRVO_OFTRK_CNT_COL_WIDTH              //          11,        10,        9,          12,          12,       8
//      P198_SRVO_OFTRK_CNT_COL_MASK               //           0,         0,        0,           0,           0,       0
//      P198_SRVO_OFTRK_CNT_COL_TYPES              // *
//      P198_SRVO_OFTRK_CNT_TABLE_TYPE             // M

// Deprecated 11/23/2010
#define P198_SRVO_OFTRK_LIMITS                426  // TWO_SPOKE_THRSHLD,NEWTONS_THRSHLD,SMALL_SHOCK_LIMIT,LRG_SHOCK_LIMIT
//      P198_SRVO_OFTRK_LIMITS_COL_WIDTH           //                17,             15,               17,             15
//      P198_SRVO_OFTRK_LIMITS_COL_MASK            //                 0,              0,                0,              0
//      P198_SRVO_OFTRK_LIMITS_COL_TYPES           // *
//      P198_SRVO_OFTRK_LIMITS_TABLE_TYPE          // S
#define P198_SRVO_SCTR_ERR_LOG                427  // HD_PHYS_PSN,TRK_NUM,SCTR,HD_LGC_PSN,ERR_CODE
//      P198_SRVO_SCTR_ERR_LOG_COL_WIDTH           //          11,      7,   4,        10,       8
//      P198_SRVO_SCTR_ERR_LOG_COL_MASK            //           0,      0,   0,         0,       0
//      P198_SRVO_SCTR_ERR_LOG_COL_TYPES           // *
//      P198_SRVO_SCTR_ERR_LOG_TABLE_TYPE          // M

// Deprecated 11/23/2010
#define P198_SRVO_MISC_INFO                   428  // HD_PHYS_PSN,HD_LGC_PSN,OBSRV_SCTR_ERR,VEL_OBSRV_SCTR_ERR,AGC_FLTR_TRIP,AGC_DELTA_TRIP,AGC_BP_FLTR_TRIP,TMND,VEL_TMND,UNSF,RRO_PRTY_ERR_ZAP
//      P198_SRVO_MISC_INFO_COL_WIDTH              //          11,        10,            14,                18,           13,            14,              16,   4,       8,   4,              16
//      P198_SRVO_MISC_INFO_COL_MASK               //           0,         0,             0,                 0,            0,             0,               0,   0,       0,   0,               0
//      P198_SRVO_MISC_INFO_COL_TYPES              // *
//      P198_SRVO_MISC_INFO_TABLE_TYPE             // M
#define P177_GAIN_DATA                        429  // HD_PHYS_PSN,HD_LGC_PSN,AVG_VGAS,ORIG_GAIN,DELTA_GAIN,FINAL_GAIN,BIAS_CURRENT
//      P177_GAIN_DATA_COL_WIDTH                   //          11,        11,       8,        9,        10,        10,          12
//      P177_GAIN_DATA_COL_MASK                    //           1,         1,       1,        1,         1,         1,           1
//      P177_GAIN_DATA_COL_TYPES                   //           N,         N,       N,        N,         N,         N,           N
//      P177_GAIN_DATA_TABLE_TYPE                  // V

// Deprecated 11/23/2010
#define P177_GAIN_DATA_DETAILS                430  // HD_PHYS_PSN,HD_LGC_PSN,ORIG_GAIN,MIN_VGAS,MAX_VGAS,AVG_VGAS,UPDATED_GAIN
//      P177_GAIN_DATA_DETAILS_COL_WIDTH           //          11,        10,        9,       8,       8,       8,          12
//      P177_GAIN_DATA_DETAILS_COL_MASK            //           1,         1,        1,       1,       1,       1,           1
//      P177_GAIN_DATA_DETAILS_COL_TYPES           //           N,         N,        N,       N,       N,       N,           N
//      P177_GAIN_DATA_DETAILS_TABLE_TYPE          // V

// Deprecated 11/23/2010
#define P175_WRITE_PREZAP_STATS2              431  // HD_PHYS_PSN,ZAP_ZONE,HD_LGC_PSN,MEAN_MABSRRO,MAX_MABSRRO,SIG_MABSRRO,MEAN_3SIGRRO,MAX_3SIGRRO,SIG_3SIGRRO,MEAN_3SIGNRO,MAX_3SIGNRO,SIG_3SIGNRO,REVS_FLOOR_SAT
//      P175_WRITE_PREZAP_STATS2_COL_WIDTH         //          11,       8,        10,          12,         11,         11,          12,         11,         11,          12,         11,         11,            14
//      P175_WRITE_PREZAP_STATS2_COL_MASK          //           1,       1,         1,           1,          1,          1,           1,          1,          1,           1,          1,          1,             1
//      P175_WRITE_PREZAP_STATS2_COL_TYPES         //           N,       N,         N,           N,          N,          N,           N,          N,          N,           N,          N,          N,             N
//      P175_WRITE_PREZAP_STATS2_TABLE_TYPE        // M

// Deprecated 11/23/2010
#define P175_READ_PREZAP_STATS2               432  // HD_PHYS_PSN,ZAP_ZONE,HD_LGC_PSN,MEAN_MABSRRO,MAX_MABSRRO,SIG_MABSRRO,MEAN_3SIGRRO,MAX_3SIGRRO,SIG_3SIGRRO,MEAN_3SIGNRO,MAX_3SIGNRO,SIG_3SIGNRO,REVS_FLOOR_SAT
//      P175_READ_PREZAP_STATS2_COL_WIDTH          //          11,       8,        10,          12,         11,         11,          12,         11,         11,          12,         11,         11,            14
//      P175_READ_PREZAP_STATS2_COL_MASK           //           1,       1,         1,           1,          1,          1,           1,          1,          1,           1,          1,          1,             1
//      P175_READ_PREZAP_STATS2_COL_TYPES          //           N,       N,         N,           N,          N,          N,           N,          N,          N,           N,          N,          N,             N
//      P175_READ_PREZAP_STATS2_TABLE_TYPE         // M

// Deprecated 11/23/2010
#define P175_WRITE_POSTZAP_STATS2             433  // HD_PHYS_PSN,ZAP_ZONE,HD_LGC_PSN,MEAN_MABSRRO,MAX_MABSRRO,SIG_MABSRRO,MEAN_3SIGRRO,MAX_3SIGRRO,SIG_3SIGRRO,MEAN_3SIGNRO,MAX_3SIGNRO,SIG_3SIGNRO,REVS_FLOOR_SAT
//      P175_WRITE_POSTZAP_STATS2_COL_WIDTH        //          11,       8,        10,          12,         11,         11,          12,         11,         11,          12,         11,         11,            14
//      P175_WRITE_POSTZAP_STATS2_COL_MASK         //           1,       1,         1,           1,          1,          1,           1,          1,          1,           1,          1,          1,             1
//      P175_WRITE_POSTZAP_STATS2_COL_TYPES        //           N,       N,         N,           N,          N,          N,           N,          N,          N,           N,          N,          N,             N
//      P175_WRITE_POSTZAP_STATS2_TABLE_TYPE       // M

// Deprecated 11/23/2010
#define P175_READ_POSTZAP_STATS2              434  // HD_PHYS_PSN,ZAP_ZONE,HD_LGC_PSN,MEAN_MABSRRO,MAX_MABSRRO,SIG_MABSRRO,MEAN_3SIGRRO,MAX_3SIGRRO,SIG_3SIGRRO,MEAN_3SIGNRO,MAX_3SIGNRO,SIG_3SIGNRO,REVS_FLOOR_SAT
//      P175_READ_POSTZAP_STATS2_COL_WIDTH         //          11,       8,        10,          12,         11,         11,          12,         11,         11,          12,         11,         11,            14
//      P175_READ_POSTZAP_STATS2_COL_MASK          //           1,       1,         1,           1,          1,          1,           1,          1,          1,           1,          1,          1,             1
//      P175_READ_POSTZAP_STATS2_COL_TYPES         //           N,       N,         N,           N,          N,          N,           N,          N,          N,           N,          N,          N,             N
//      P175_READ_POSTZAP_STATS2_TABLE_TYPE        // M
#define P151_AFH_PARAMS_FINAL                 435  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,WRT_CUR,OVS_AMP,OVS_DUR,WRT_HEAT,PRE_HEAT,RD_HEAT,TRK_NUM,NRZ_FREQ,CLR_DELTA_TEMP,CLR_LOSS_WRT,WRT_BER_LOG10,WRT_CQM
//      P151_AFH_PARAMS_FINAL_COL_WIDTH            //          11,        9,        10,      7,      7,      7,       8,       8,      7,      7,       8,            14,          12,           13,     10
//      P151_AFH_PARAMS_FINAL_COL_MASK             //           1,        1,         1,      1,      1,      1,       1,       1,      1,      1,       1,             1,           1,            1,      1
//      P151_AFH_PARAMS_FINAL_COL_TYPES            //           N,        N,         N,      N,      N,      N,       N,       N,      N,      N,       N,             N,           N,            N,      N
//      P151_AFH_PARAMS_FINAL_TABLE_TYPE           // M
#define P000_DEBUG_INFO_STRING                436  // TEST_STATUS,TSE_FIRMWARE_DEBUG_STRING
//      P000_DEBUG_INFO_STRING_COL_WIDTH           //          11,                       25
//      P000_DEBUG_INFO_STRING_COL_MASK            //           0,                        0
//      P000_DEBUG_INFO_STRING_COL_TYPES           // *
//      P000_DEBUG_INFO_STRING_TABLE_TYPE          // S
#define P118_SFILL_ADDED                      437  // CYLINDER,HEAD,POSITION,LENGTH
//      P118_SFILL_ADDED_COL_WIDTH                 //        8,   4,       8,     6
//      P118_SFILL_ADDED_COL_MASK                  //        0,   0,       0,     0
//      P118_SFILL_ADDED_COL_TYPES                 // *
//      P118_SFILL_ADDED_TABLE_TYPE                // S
#define P118_SFILL_ADDED_RAW                  438  // CYLINDER,FLAWSTART,FLAWLENGTH
//      P118_SFILL_ADDED_RAW_COL_WIDTH             //        8,        9,        10
//      P118_SFILL_ADDED_RAW_COL_MASK              //        0,        0,         0
//      P118_SFILL_ADDED_RAW_COL_TYPES             // *
//      P118_SFILL_ADDED_RAW_TABLE_TYPE            // S
#define P118_SFILL_HEADSUMMARY                439  // HEAD,NUMOFSPIRALS,DEFECTSADDED,MAXSCRATCHDEFECTS
//      P118_SFILL_HEADSUMMARY_COL_WIDTH           //    4,          12,          12,               17
//      P118_SFILL_HEADSUMMARY_COL_MASK            //    0,           0,           0,                0
//      P118_SFILL_HEADSUMMARY_COL_TYPES           // *
//      P118_SFILL_HEADSUMMARY_TABLE_TYPE          // S

// Unreferenced in Yosemite 04/01/2009  // Referenced in LCO branch
#define P134_TA_COUNT_PER_HD                  440  // HD_PHYS_PSN,HD_LGC_PSN,TA_CNT
//      P134_TA_COUNT_PER_HD_COL_WIDTH             //          11,        10,     6
//      P134_TA_COUNT_PER_HD_COL_MASK              //           0,         0,     0
//      P134_TA_COUNT_PER_HD_COL_TYPES             // *
//      P134_TA_COUNT_PER_HD_TABLE_TYPE            // S
#define P134_TA_SUM_DRV                       441  // PCT_SURF_TA
//      P134_TA_SUM_DRV_COL_WIDTH                  //          11
//      P134_TA_SUM_DRV_COL_MASK                   //           1
//      P134_TA_SUM_DRV_COL_TYPES                  //           N
//      P134_TA_SUM_DRV_TABLE_TYPE                 // S
#define P134_TA_DETAIL                        442  // TA_NUM,HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,TA_PSN_SFI,TA_LEN_SYMBLS,TA_WIDTH_TRKS,TA_AMP_MV,AMP_WIDTH,SRVO_WEDGE,STATUS,MAX_RPT_CNT,TA_TRK_DETECTED_CNT,TA_PASSIVE_AMP_MV,TA_LGTH_MICRON
//      P134_TA_DETAIL_COL_WIDTH                   //      6,         11,        10,     10,        10,           13,           13,        9,        9,        10,     6,         11,                 19,               17,            14
//      P134_TA_DETAIL_COL_MASK                    //      1,          1,         1,      1,         1,            1,            1,        1,        1,         1,     0,          1,                  1,                1,             1
//      P134_TA_DETAIL_COL_TYPES                   //      N,          N,         N,      N,         N,            N,            N,        N,        N,         N,                 N,                  N,                N,             N
//      P134_TA_DETAIL_TABLE_TYPE                  // V
#define P134_TA_SUM_HD2                       443  // HD_PHYS_PSN,HD_LGC_PSN,TA_CNT,SQRT_AMP_WIDTH,MAX_AMP_WIDTH,AMP0_CNT,AMP1_CNT,AMP2_CNT,AMP3_CNT,AMP4_CNT,AMP5_CNT,AMP6_CNT,AMP7_CNT
//      P134_TA_SUM_HD2_COL_WIDTH                  //          11,        10,     6,            14,           13,       8,       8,       8,       8,       8,       8,       8,       8
//      P134_TA_SUM_HD2_COL_MASK                   //           1,         1,     1,             1,            1,       1,       1,       1,       1,       1,       1,       1,       1
//      P134_TA_SUM_HD2_COL_TYPES                  //           N,         N,     N,             N,            N,       N,       N,       N,       N,       N,       N,       N,       N
//      P134_TA_SUM_HD2_TABLE_TYPE                 // V
#define P172_TUNED_ZONE_FRAME                 444  // DATA_ZONE,HD_LGC_PSN,RGSTR_ADDR,VALUE,HD_PHYS_PSN
//      P172_TUNED_ZONE_FRAME_COL_WIDTH            //         9,        10,        10,    5,         11
//      P172_TUNED_ZONE_FRAME_COL_MASK             //         0,         0,         0,    0,          0
//      P172_TUNED_ZONE_FRAME_COL_TYPES            // *
//      P172_TUNED_ZONE_FRAME_TABLE_TYPE           // S
#define P189_POLY_FIT_ERR                     445  // HD_PHYS_PSN,HD_LGC_PSN,MAX_RDL_TMNG_FIT_ERR,STDEV_TMNG_FIT_ERR,MAX_VCAT_DC_FIT_ERR,STDEV_DC_FIT_ERR
//      P189_POLY_FIT_ERR_COL_WIDTH                //          11,        10,                  20,                18,                 19,              16
//      P189_POLY_FIT_ERR_COL_MASK                 //           1,         1,                   1,                 1,                  1,               1
//      P189_POLY_FIT_ERR_COL_TYPES                //           N,         N,                   N,                 N,                  N,               N
//      P189_POLY_FIT_ERR_TABLE_TYPE               // V
#define P189_RDL_TMNG_COEF                    446  // HD_PHYS_PSN,HD_LGC_PSN,COEF_1,COEF_2,COEF_3,COEF_4,COEF_5,MULTIPLIER
//      P189_RDL_TMNG_COEF_COL_WIDTH               //          11,        10,     6,     6,     6,     6,     6,        10
//      P189_RDL_TMNG_COEF_COL_MASK                //           1,         1,     1,     1,     1,     1,     1,         1
//      P189_RDL_TMNG_COEF_COL_TYPES               //           N,         N,     N,     N,     N,     N,     N,         N
//      P189_RDL_TMNG_COEF_TABLE_TYPE              // V
#define P189_RDL_TMNG_POINTS                  447  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,NORM_PHYS_TRK,TMNG_ERR_RAW,TMNG_POLY_FIT
//      P189_RDL_TMNG_POINTS_COL_WIDTH             //          11,     10,        10,           13,          12,           13
//      P189_RDL_TMNG_POINTS_COL_MASK              //           0,      0,         0,            0,           0,            0
//      P189_RDL_TMNG_POINTS_COL_TYPES             // *
//      P189_RDL_TMNG_POINTS_TABLE_TYPE            // S
#define P043_RDL_TMNG_POINTS                  448  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,TMNG_ERR_RAW,TMNG_POLY_FIT
//      P043_RDL_TMNG_POINTS_COL_WIDTH             //          11,     10,        10,          12,           13
//      P043_RDL_TMNG_POINTS_COL_MASK              //           0,      0,         0,           0,            0
//      P043_RDL_TMNG_POINTS_COL_TYPES             // *
//      P043_RDL_TMNG_POINTS_TABLE_TYPE            // S

// Deprecated 11/23/2010
#define P177_PGA_GAIN_CAL2                    449  // HD_PHYS_PSN,HD_LGC_PSN,AVG_PGA_GAIN,ORIG_GAIN_SET,PREAMP_GAIN_CHG,SAP_TABLE_WORD,PREAMP_GAIN
//      P177_PGA_GAIN_CAL2_COL_WIDTH               //          11,        11,          12,           13,             15,            14,         11
//      P177_PGA_GAIN_CAL2_COL_MASK                //           0,         0,           0,            0,              0,             0,          0
//      P177_PGA_GAIN_CAL2_COL_TYPES               // *
//      P177_PGA_GAIN_CAL2_TABLE_TYPE              // V
#define P193_CRRO_MEASUREMENT2                450  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,ITER,MABS_CRRO,MABS_FCRRO,SIG3_CRRO,SIG3_FCRRO,REVS_CNT,BAD_SAMPLE_CNT,MEAS_CNT
//      P193_CRRO_MEASUREMENT2_COL_WIDTH           //          11,      7,        10,   4,        9,        10,        9,        10,       8,            14,       8
//      P193_CRRO_MEASUREMENT2_COL_MASK            //           1,      1,         1,   1,        1,         1,        1,         1,       1,             1,       0
//      P193_CRRO_MEASUREMENT2_COL_TYPES           //           N,      N,         N,   N,        N,         N,        N,         N,       N,             N
//      P193_CRRO_MEASUREMENT2_TABLE_TYPE          // M
#define P031_RAW_THERMAL_VALS2                451  // HD_PHYS_PSN,HD_LGC_PSN,OD_DC,OD_SIN,OD_COS,MD_DC,MD_SIN,MD_COS,ID_DC,ID_SIN,ID_COS
//      P031_RAW_THERMAL_VALS2_COL_WIDTH           //          11,        10,    5,     6,     6,    5,     6,     6,    4,     6,     6
//      P031_RAW_THERMAL_VALS2_COL_MASK            //           1,         1,    1,     1,     1,    1,     1,     1,    1,     1,     1
//      P031_RAW_THERMAL_VALS2_COL_TYPES           //           N,         N,    N,     N,     N,    N,     N,     N,    N,     N,     N
//      P031_RAW_THERMAL_VALS2_TABLE_TYPE          // V
#define P007_SEEK_UNSFS2                      452  // HD_PHYS_PSN,HD_LGC_PSN,UNSAFES,UNSAFE_FAIL,RETRY_UNSAFES,RETRY_FAIL
//      P007_SEEK_UNSFS2_COL_WIDTH                 //          11,        11,      7,         11,           13,        10
//      P007_SEEK_UNSFS2_COL_MASK                  //           1,         1,      1,          1,            1,         1
//      P007_SEEK_UNSFS2_COL_TYPES                 //           N,         N,      N,          V,            N,         V
//      P007_SEEK_UNSFS2_TABLE_TYPE                // V
#define P043_TIMING_ERR                       453  // HD_PHYS_PSN,CYLINDER,SECTOR,TMNG_VALID,TMNG_ERR
//      P043_TIMING_ERR_COL_WIDTH                  //          11,       8,     8,         8,       8
//      P043_TIMING_ERR_COL_MASK                   //           0,       0,     0,         0,       0
//      P043_TIMING_ERR_COL_TYPES                  // *
//      P043_TIMING_ERR_TABLE_TYPE                 // V
#define P031_MAG_PHASE2                       454  // HD_PHYS_PSN,HD_LGC_PSN,OD_MAG,OD_PHASE,MD_MAG,MD_PHASE,ID_MAG,ID_PHASE
//      P031_MAG_PHASE2_COL_WIDTH                  //          11,        10,     6,       8,     6,       8,     5,       8
//      P031_MAG_PHASE2_COL_MASK                   //           1,         1,     1,       1,     1,       1,     1,       1
//      P031_MAG_PHASE2_COL_TYPES                  //           N,         N,     N,       N,     N,       N,     N,       N
//      P031_MAG_PHASE2_TABLE_TYPE                 // V
#define P107_UNVERIFD_FLAW_COUNT2             455  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,UNVERIFIED_FLAW_COUNT
//      P107_UNVERIFD_FLAW_COUNT2_COL_WIDTH        //          11,        9,        10,                   21
//      P107_UNVERIFD_FLAW_COUNT2_COL_MASK         //           1,        1,         1,                    1
//      P107_UNVERIFD_FLAW_COUNT2_COL_TYPES        //           N,        N,         N,                    N
//      P107_UNVERIFD_FLAW_COUNT2_TABLE_TYPE       // M
#define P159_TM_NOT_DETECTED                  456  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_TM_NOT_DETECTED_COL_WIDTH             // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_TM_NOT_DETECTED_COL_MASK              // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_TM_NOT_DETECTED_COL_TYPES             // *
//      P159_TM_NOT_DETECTED_TABLE_TYPE            // S
#define P159_TM_TIME_ERR                      457  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_TM_TIME_ERR_COL_WIDTH                 // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_TM_TIME_ERR_COL_MASK                  // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_TM_TIME_ERR_COL_TYPES                 // *
//      P159_TM_TIME_ERR_TABLE_TYPE                // S
#define P159_OBSRV_SCTR_ERR                   458  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_OBSRV_SCTR_ERR_COL_WIDTH              // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_OBSRV_SCTR_ERR_COL_MASK               // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_OBSRV_SCTR_ERR_COL_TYPES              // *
//      P159_OBSRV_SCTR_ERR_TABLE_TYPE             // S
#define P159_LV_DETECTED_SHOCK                459  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_LV_DETECTED_SHOCK_COL_WIDTH           // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_LV_DETECTED_SHOCK_COL_MASK            // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_LV_DETECTED_SHOCK_COL_TYPES           // *
//      P159_LV_DETECTED_SHOCK_TABLE_TYPE          // S
#define P159_UNSAFE_ERR_ON_TRACK              460  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_UNSAFE_ERR_ON_TRACK_COL_WIDTH         // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_UNSAFE_ERR_ON_TRACK_COL_MASK          // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_UNSAFE_ERR_ON_TRACK_COL_TYPES         // *
//      P159_UNSAFE_ERR_ON_TRACK_TABLE_TYPE        // S
#define P159_TM_NOT_DETECTED_VEL              461  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_TM_NOT_DETECTED_VEL_COL_WIDTH         // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_TM_NOT_DETECTED_VEL_COL_MASK          // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_TM_NOT_DETECTED_VEL_COL_TYPES         // *
//      P159_TM_NOT_DETECTED_VEL_TABLE_TYPE        // S
#define P159_TM_TIME_ERR_VEL                  462  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_TM_TIME_ERR_VEL_COL_WIDTH             // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_TM_TIME_ERR_VEL_COL_MASK              // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_TM_TIME_ERR_VEL_COL_TYPES             // *
//      P159_TM_TIME_ERR_VEL_TABLE_TYPE            // S
#define P159_OBSRV_SCTR_ERR_VEL               463  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_OBSRV_SCTR_ERR_VEL_COL_WIDTH          // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_OBSRV_SCTR_ERR_VEL_COL_MASK           // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_OBSRV_SCTR_ERR_VEL_COL_TYPES          // *
//      P159_OBSRV_SCTR_ERR_VEL_TABLE_TYPE         // S
#define P159_PES_DETECTED_SHOCK               464  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_PES_DETECTED_SHOCK_COL_WIDTH          // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_PES_DETECTED_SHOCK_COL_MASK           // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_PES_DETECTED_SHOCK_COL_TYPES          // *
//      P159_PES_DETECTED_SHOCK_TABLE_TYPE         // S
#define P159_PREDICTED_OFTRK                  465  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_PREDICTED_OFTRK_COL_WIDTH             // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_PREDICTED_OFTRK_COL_MASK              // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_PREDICTED_OFTRK_COL_TYPES             // *
//      P159_PREDICTED_OFTRK_TABLE_TYPE            // S
#define P159_FALSE_INDEX_ERR                  466  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_FALSE_INDEX_ERR_COL_WIDTH             // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_FALSE_INDEX_ERR_COL_MASK              // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_FALSE_INDEX_ERR_COL_TYPES             // *
//      P159_FALSE_INDEX_ERR_TABLE_TYPE            // S
#define P159_FALSE_PREDICT_OFFTRK             467  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_FALSE_PREDICT_OFFTRK_COL_WIDTH        // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_FALSE_PREDICT_OFFTRK_COL_MASK         // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_FALSE_PREDICT_OFFTRK_COL_TYPES        // *
//      P159_FALSE_PREDICT_OFFTRK_TABLE_TYPE       // S
#define P159_RRO_PARITY_ERR_ZAP               468  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_RRO_PARITY_ERR_ZAP_COL_WIDTH          // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_RRO_PARITY_ERR_ZAP_COL_MASK           // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_RRO_PARITY_ERR_ZAP_COL_TYPES          // *
//      P159_RRO_PARITY_ERR_ZAP_TABLE_TYPE         // S
#define P159_SWD_DVGA                         469  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_SWD_DVGA_COL_WIDTH                    // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_SWD_DVGA_COL_MASK                     // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_SWD_DVGA_COL_TYPES                    // *
//      P159_SWD_DVGA_TABLE_TYPE                   // S
#define P159_SWD_RVGA                         470  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_SWD_RVGA_COL_WIDTH                    // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_SWD_RVGA_COL_MASK                     // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_SWD_RVGA_COL_TYPES                    // *
//      P159_SWD_RVGA_TABLE_TYPE                   // S
#define P159_SWD_FVGA                         471  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_SWD_FVGA_COL_WIDTH                    // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_SWD_FVGA_COL_MASK                     // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_SWD_FVGA_COL_TYPES                    // *
//      P159_SWD_FVGA_TABLE_TYPE                   // S
#define P035_PEAK_SIGMA_HISTOGRAM             472  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,OVS_AMP,OVS_DUR,WRT_CUR,HTR_DAC,TEST_ITERATION,CNTCT_VERIFY_CNT,CNTCT_TEST_STAGE,SIGMA_BIN,SIGMA_COUNT
//      P035_PEAK_SIGMA_HISTOGRAM_COL_WIDTH        //          11,      8,        10,      7,      7,      7,      7,            14,              16,              16,        9,         11
//      P035_PEAK_SIGMA_HISTOGRAM_COL_MASK         //           0,      0,         0,      0,      0,      0,      0,             0,               0,               0,        0,          0
//      P035_PEAK_SIGMA_HISTOGRAM_COL_TYPES        // *
//      P035_PEAK_SIGMA_HISTOGRAM_TABLE_TYPE       // M
#define P035_PEAK_DETAILS                     473  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,OVS_AMP,OVS_DUR,WRT_CUR,HTR_DAC,TEST_ITERATION,CNTCT_VERIFY_CNT,WINDOW_IDX,PEAK_IDX,PEAK_FREQ,PEAK_AMPL,ON_PEAK
//      P035_PEAK_DETAILS_COL_WIDTH                //          11,      8,        10,      7,      7,      7,      7,            14,              16,        10,       8,        9,        9,      7
//      P035_PEAK_DETAILS_COL_MASK                 //           0,      0,         0,      0,      0,      0,      0,             0,               0,         0,       0,        0,        0,      0
//      P035_PEAK_DETAILS_COL_TYPES                // *
//      P035_PEAK_DETAILS_TABLE_TYPE               // M
#define P035_PEAK_DESCRIPTOR                  474  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,OVS_AMP,OVS_DUR,WRT_CUR,HTR_DAC,TEST_ITERATION,CNTCT_VERIFY_CNT,WINDOW_IDX,PEAK_IDX,PEAK_FREQ,PEAK_AMPL,PEAK_WIDTH
//      P035_PEAK_DESCRIPTOR_COL_WIDTH             //          11,      8,        10,      7,      7,      7,      7,            14,              16,        10,       8,        9,        9,        10
//      P035_PEAK_DESCRIPTOR_COL_MASK              //           0,      0,         0,      0,      0,      0,      0,             0,               0,         0,       0,        0,        0,         0
//      P035_PEAK_DESCRIPTOR_COL_TYPES             // *
//      P035_PEAK_DESCRIPTOR_TABLE_TYPE            // M
#define P000_SENSE_DATA                       475  // SENSE_CODE
//      P000_SENSE_DATA_COL_WIDTH                  //         10
//      P000_SENSE_DATA_COL_MASK                   //          0
//      P000_SENSE_DATA_COL_TYPES                  // *
//      P000_SENSE_DATA_TABLE_TYPE                 // S
#define P175_DISABLED_HARMONICS               476  // HARMONIC
//      P175_DISABLED_HARMONICS_COL_WIDTH          //        8
//      P175_DISABLED_HARMONICS_COL_MASK           //        0
//      P175_DISABLED_HARMONICS_COL_TYPES          // *
//      P175_DISABLED_HARMONICS_TABLE_TYPE         // S
#define P175_CMD_ERROR                        477  // HD_PHYS_PSN,HD_LGC_PSN,CYL,ERROR
//      P175_CMD_ERROR_COL_WIDTH                   //          11,        10,  6,    5
//      P175_CMD_ERROR_COL_MASK                    //           0,         0,  0,    0
//      P175_CMD_ERROR_COL_TYPES                   // *
//      P175_CMD_ERROR_TABLE_TYPE                  // S
#define P175_DATA_ERROR                       478  // HD_PHYS_PSN,HD_LGC_PSN,CYL,ERROR,BAD_FIELD_CNT
//      P175_DATA_ERROR_COL_WIDTH                  //          11,        10,  6,    5,           13
//      P175_DATA_ERROR_COL_MASK                   //           0,         0,  0,    0,            0
//      P175_DATA_ERROR_COL_TYPES                  // *
//      P175_DATA_ERROR_TABLE_TYPE                 // S
#define P186_MRE_MEASURE                      479  // HD_PHYS_PSN,HD_LGC_PSN,ORIGINAL_CURRENT,NEW_CURRENT,BIAS_VOLTAGE,MRE_RESISTANCE,NEW_CURRENT_DAC
//      P186_MRE_MEASURE_COL_WIDTH                 //          11,        10,              16,         11,          12,            14,             15
//      P186_MRE_MEASURE_COL_MASK                  //           1,         1,               1,          1,           1,             1,              1
//      P186_MRE_MEASURE_COL_TYPES                 //           N,         N,               N,          N,           N,             N,              N
//      P186_MRE_MEASURE_TABLE_TYPE                // S

// Deprecated 11/23/2010
#define P185_TRK_0_INTL_VAL                   480  // HD_PHYS_PSN,HD_LGC_PSN,INTL_HD,TRK_DC_OFST,TRK_0,MIN_CYL,MAX_CYL
//      P185_TRK_0_INTL_VAL_COL_WIDTH              //          11,        10,      7,         11,    5,      7,      7
//      P185_TRK_0_INTL_VAL_COL_MASK               //           0,         0,      0,          0,    0,      0,      0
//      P185_TRK_0_INTL_VAL_COL_TYPES              // *
//      P185_TRK_0_INTL_VAL_TABLE_TYPE             // V
#define P185_TRK_0_CALIBRATED_VAL             481  // HD_PHYS_PSN,HD_LGC_PSN,MIN_CYL,MAX_CYL
//      P185_TRK_0_CALIBRATED_VAL_COL_WIDTH        //          11,        10,      7,      7
//      P185_TRK_0_CALIBRATED_VAL_COL_MASK         //           1,         1,      1,      1
//      P185_TRK_0_CALIBRATED_VAL_COL_TYPES        //           N,         N,      N,      N
//      P185_TRK_0_CALIBRATED_VAL_TABLE_TYPE       // S
#define P185_TRK_0_MAX_CYL                    482  // NEW_MAX_CYL,TRK_RANGE
//      P185_TRK_0_MAX_CYL_COL_WIDTH               //          11,        9
//      P185_TRK_0_MAX_CYL_COL_MASK                //           0,        0
//      P185_TRK_0_MAX_CYL_COL_TYPES               // *
//      P185_TRK_0_MAX_CYL_TABLE_TYPE              // S
#define P185_START_HUNT_CYL                   483  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,SENSE_DATA
//      P185_START_HUNT_CYL_COL_WIDTH              //          11,        10,       9,        10
//      P185_START_HUNT_CYL_COL_MASK               //           0,         0,       0,         0
//      P185_START_HUNT_CYL_COL_TYPES              // *
//      P185_START_HUNT_CYL_TABLE_TYPE             // S

// Deprecated 11/23/2010
#define P185_START_HUNT_MAX_CYL               484  // HD_PHYS_PSN,HD_LGC_PSN,MAX_CYL
//      P185_START_HUNT_MAX_CYL_COL_WIDTH          //          11,        10,      6
//      P185_START_HUNT_MAX_CYL_COL_MASK           //           0,         0,      0
//      P185_START_HUNT_MAX_CYL_COL_TYPES          // *
//      P185_START_HUNT_MAX_CYL_TABLE_TYPE         // S

// Deprecated 10/28/2008
#define P185_BACK_OFF                         485  // HD_PHYS_PSN,HD_LGC_PSN,V3BAR_CYL,BACKOFF_CYL
//      P185_BACK_OFF_COL_WIDTH                    //          11,        10,        9,         11
//      P185_BACK_OFF_COL_MASK                     //           0,         0,        0,          0
//      P185_BACK_OFF_COL_TYPES                    // *
//      P185_BACK_OFF_TABLE_TYPE                   // S
#define P185_MAX_MIN_AND_MIN_MAX              486  // MAX_MIN,MIN_MAX
//      P185_MAX_MIN_AND_MIN_MAX_COL_WIDTH         //       7,      7
//      P185_MAX_MIN_AND_MIN_MAX_COL_MASK          //       0,      0
//      P185_MAX_MIN_AND_MIN_MAX_COL_TYPES         // *
//      P185_MAX_MIN_AND_MIN_MAX_TABLE_TYPE        // S
#define P107_TOTALUNIQUEVER_FLAWS             487  // TOTAL_UNIQUE_VER_FLAWS,TOTAL_TA_FLAWS
//      P107_TOTALUNIQUEVER_FLAWS_COL_WIDTH        //                     22,            14
//      P107_TOTALUNIQUEVER_FLAWS_COL_MASK         //                      0,             0
//      P107_TOTALUNIQUEVER_FLAWS_COL_TYPES        // *
//      P107_TOTALUNIQUEVER_FLAWS_TABLE_TYPE       // S

// Deprecated 11/23/2010
#define P050_BASELINE_MEASUREMENT             488  // HEAD,ZONE,TRACK,HARD_ERRS,ONE_OR_MORE_RTY_ERRS,SIX_OR_MORE_RTY_ERRS,ONE_OR_MORE_PLUS_ECC,SECS_READ
//      P050_BASELINE_MEASUREMENT_COL_WIDTH        //    4,   4,    5,        9,                  20,                  20,                  20,        9
//      P050_BASELINE_MEASUREMENT_COL_MASK         //    0,   0,    0,        0,                   0,                   0,                   0,        0
//      P050_BASELINE_MEASUREMENT_COL_TYPES        // *
//      P050_BASELINE_MEASUREMENT_TABLE_TYPE       // S

// Deprecated 11/23/2010
#define P050_ENCROACH_MEASUREMENT             489  // HEAD,ZONE,TRACK,HARD_ERRS,ONE_OR_MORE_RTY_ERRS,SIX_OR_MORE_RTY_ERRS,ONE_OR_MORE_PLUS_ECC,SECS_READ
//      P050_ENCROACH_MEASUREMENT_COL_WIDTH        //    4,   4,    5,        9,                  20,                  20,                  20,        9
//      P050_ENCROACH_MEASUREMENT_COL_MASK         //    0,   0,    0,        0,                   0,                   0,                   0,        0
//      P050_ENCROACH_MEASUREMENT_COL_TYPES        // *
//      P050_ENCROACH_MEASUREMENT_TABLE_TYPE       // S

// Deprecated 11/23/2010
#define P000_ERROR_RATES                      490  // HEAD,ZONE,TRACK,HARD_ERRS,ONE_OR_MORE_RTY_ERRS,SIX_OR_MORE_RTY_ERRS,ONE_OR_MORE_PLUS_ECC,SECS_READ
//      P000_ERROR_RATES_COL_WIDTH                 //    4,   4,    5,        9,                  20,                  20,                  20,        9
//      P000_ERROR_RATES_COL_MASK                  //    0,   0,    0,        0,                   0,                   0,                   0,        0
//      P000_ERROR_RATES_COL_TYPES                 // *
//      P000_ERROR_RATES_TABLE_TYPE                // S

// Deprecated 11/23/2010
#define P051_BASELINE_MEASUREMENT             491  // HEAD,ZONE,TRACK,HARD_ERRS,ONE_OR_MORE_RTY_ERRS,SIX_OR_MORE_RTY_ERRS,ONE_OR_MORE_PLUS_ECC,SECS_READ
//      P051_BASELINE_MEASUREMENT_COL_WIDTH        //    4,   4,    5,        9,                  20,                  20,                  20,        9
//      P051_BASELINE_MEASUREMENT_COL_MASK         //    0,   0,    0,        0,                   0,                   0,                   0,        0
//      P051_BASELINE_MEASUREMENT_COL_TYPES        // *
//      P051_BASELINE_MEASUREMENT_TABLE_TYPE       // S

// Deprecated 11/23/2010
#define P051_ERASURE_MEASUREMENT              492  // HEAD,ZONE,TRACK,HARD_ERRS,ONE_OR_MORE_RTY_ERRS,SIX_OR_MORE_RTY_ERRS,ONE_OR_MORE_PLUS_ECC,SECS_READ
//      P051_ERASURE_MEASUREMENT_COL_WIDTH         //    4,   4,    5,        9,                  20,                  20,                  20,        9
//      P051_ERASURE_MEASUREMENT_COL_MASK          //    0,   0,    0,        0,                   0,                   0,                   0,        0
//      P051_ERASURE_MEASUREMENT_COL_TYPES         // *
//      P051_ERASURE_MEASUREMENT_TABLE_TYPE        // S
#define P227_SWD_HEADER                       493  // HEAD,ZONE,MD_TRACK,DELTA_LIMIT,AVG_DELTA_LIMIT,BASE_WRT_ERROR_RATE
//      P227_SWD_HEADER_COL_WIDTH                  //    4,   4,       8,         11,             15,                 19
//      P227_SWD_HEADER_COL_MASK                   //    0,   0,       0,          0,              0,                  0
//      P227_SWD_HEADER_COL_TYPES                  // *
//      P227_SWD_HEADER_TABLE_TYPE                 // S
#define P227_DELTA_FLY_HEIGHT                 494  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,FLY_HEIGHT_PCT,DELTA_WRT_ERR_RATE
//      P227_DELTA_FLY_HEIGHT_COL_WIDTH            //          11,        9,        10,            14,                18
//      P227_DELTA_FLY_HEIGHT_COL_MASK             //           1,        1,         1,             1,                 1
//      P227_DELTA_FLY_HEIGHT_COL_TYPES            //           N,        N,         N,             N,                 N
//      P227_DELTA_FLY_HEIGHT_TABLE_TYPE           // M
#define P227_DEFAULT_HEATER_VALS              495  // HEAD,ZONE,WRT_PRE_HEAT,WRITE_HEAT,READ_HEAT,WRITE_FLY_HEIGHT,READ_FLY_HEIGHT
//      P227_DEFAULT_HEATER_VALS_COL_WIDTH         //    4,   4,          12,        10,        9,              16,             15
//      P227_DEFAULT_HEATER_VALS_COL_MASK          //    0,   0,           0,         0,        0,               0,              0
//      P227_DEFAULT_HEATER_VALS_COL_TYPES         // *
//      P227_DEFAULT_HEATER_VALS_TABLE_TYPE        // S
#define P227_FINAL_HEATER_VALS                496  // HEAD,ZONE,WRT_PRE_HEAT,WRITE_HEAT,READ_HEAT,WRITE_FLY_HEIGHT,READ_FLY_HEIGHT
//      P227_FINAL_HEATER_VALS_COL_WIDTH           //    4,   4,          12,        10,        9,              16,             15
//      P227_FINAL_HEATER_VALS_COL_MASK            //    0,   0,           0,         0,        0,               0,              0
//      P227_FINAL_HEATER_VALS_COL_TYPES           // *
//      P227_FINAL_HEATER_VALS_TABLE_TYPE          // S
#define P227_WRITE_ERROR_RATE                 497  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NUM_WRITES,SWD_WRT_ERR_CNT,OTHER_WRT_ERR_CNT,WRT_ERR_RATE,FLY_HEIGHT_PCT
//      P227_WRITE_ERROR_RATE_COL_WIDTH            //          11,        9,        10,        10,             15,               17,          12,            14
//      P227_WRITE_ERROR_RATE_COL_MASK             //           0,        0,         0,         0,              0,                0,           0,             0
//      P227_WRITE_ERROR_RATE_COL_TYPES            // *
//      P227_WRITE_ERROR_RATE_TABLE_TYPE           // M
#define P227_FLY_HEIGHT_ADJ                   498  // HEAD,ZONE,PCT_CORRECTION_APPLIED
//      P227_FLY_HEIGHT_ADJ_COL_WIDTH              //    4,   4,                    22
//      P227_FLY_HEIGHT_ADJ_COL_MASK               //    0,   0,                     0
//      P227_FLY_HEIGHT_ADJ_COL_TYPES              // *
//      P227_FLY_HEIGHT_ADJ_TABLE_TYPE             // S
#define P234_EAW_VGAS                         499  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,REVS_CNT,NUM_WRITES,DEGAUSS,WEDGE_NUMBER,VGAS_SUM,VGAS_MAX,VGAS_MIN,FAIL_CODE,VGAS_MEAN,VGAS_RNG
//      P234_EAW_VGAS_COL_WIDTH                    //          11,        10,        9,      7,       8,        10,      7,          12,       8,       8,       8,        9,        9,       8
//      P234_EAW_VGAS_COL_MASK                     //           1,         1,        1,      1,       1,         1,      1,           1,       1,       1,       1,        1,        0,       0
//      P234_EAW_VGAS_COL_TYPES                    //           N,         N,        N,      N,       N,         N,      V,           N,       N,       N,       N,        N
//      P234_EAW_VGAS_TABLE_TYPE                   // S
#define P234_VGAS_RESULTS                     500  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,SERVO_WEDGE,DELTA_MAX,DELTA_MIN,DELTA_MEAN,DELTA_RANGE,STATUS
//      P234_VGAS_RESULTS_COL_WIDTH                //          11,      7,        10,         11,        9,        9,        10,         11,     6
//      P234_VGAS_RESULTS_COL_MASK                 //           0,      0,         0,          0,        0,        0,         0,          0,     0
//      P234_VGAS_RESULTS_COL_TYPES                // *
//      P234_VGAS_RESULTS_TABLE_TYPE               // S

// Deprecated 11/23/2010
#define P109_SERVO_AGC_MOD                    501  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,TRK_MEAN,TRK_SIGMA,SIGMA_LIMIT
//      P109_SERVO_AGC_MOD_COL_WIDTH               //          11,      8,        10,       8,        9,         11
//      P109_SERVO_AGC_MOD_COL_MASK                //           0,      0,         0,       0,        0,          0
//      P109_SERVO_AGC_MOD_COL_TYPES               // *
//      P109_SERVO_AGC_MOD_TABLE_TYPE              // S

// Deprecated 11/23/2010
#define P186_RVGA_THRESHOLD_REG               502  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,REGISTER_DATA
//      P186_RVGA_THRESHOLD_REG_COL_WIDTH          //          11,        10,   4,           13
//      P186_RVGA_THRESHOLD_REG_COL_MASK           //           0,         0,   0,            0
//      P186_RVGA_THRESHOLD_REG_COL_TYPES          // *
//      P186_RVGA_THRESHOLD_REG_TABLE_TYPE         // S

// Deprecated 11/23/2010
#define P186_FVGA_THRESHOLD_REG               503  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,REGISTER_DATA
//      P186_FVGA_THRESHOLD_REG_COL_WIDTH          //          11,        10,   4,           13
//      P186_FVGA_THRESHOLD_REG_COL_MASK           //           0,         0,   0,            0
//      P186_FVGA_THRESHOLD_REG_COL_TYPES          // *
//      P186_FVGA_THRESHOLD_REG_TABLE_TYPE         // S

// Deprecated 11/23/2010
#define P211_BPI_MEASUREMENT1                 504  // DELTA_BPI_PCT,M_VAL,F_VAL,SECTOR_ERROR_RATE,BANDWIDTH,BNDWTHRNG,TW3,TW5
//      P211_BPI_MEASUREMENT1_COL_WIDTH            //            13,    5,    5,               17,        9,        9,  3,  3
//      P211_BPI_MEASUREMENT1_COL_MASK             //             0,    0,    0,                0,        0,        0,  0,  0
//      P211_BPI_MEASUREMENT1_COL_TYPES            // *
//      P211_BPI_MEASUREMENT1_TABLE_TYPE           // S

// Deprecated 11/23/2010
#define P211_TPI_MEASUREMENT1                 505  // SQZ__PCT,SQZ_CNT,DELTA_SER,BASE_SER,SQZ_SER
//      P211_TPI_MEASUREMENT1_COL_WIDTH            //        8,      7,        9,       8,      7
//      P211_TPI_MEASUREMENT1_COL_MASK             //        0,      0,        0,       0,      0
//      P211_TPI_MEASUREMENT1_COL_TYPES            // *
//      P211_TPI_MEASUREMENT1_TABLE_TYPE           // S
#define P211_MEASUREMENT_HEADER               506  // HEAD,ZONE,TRACK,WP_TRIPLET,IW,OSC,OSD,PDW_IOS
//      P211_MEASUREMENT_HEADER_COL_WIDTH          //    4,   4,    5,        10, 4,  4,  4,      7
//      P211_MEASUREMENT_HEADER_COL_MASK           //    0,   0,    0,         0, 0,  0,  0,      0
//      P211_MEASUREMENT_HEADER_COL_TYPES          // *
//      P211_MEASUREMENT_HEADER_TABLE_TYPE         // S
#define P211_MEASUREMENT_HEADERA              507  // HEAD,ZONE,TRACK,IW,OSC,OSD,PDW_IOS
//      P211_MEASUREMENT_HEADERA_COL_WIDTH         //    4,   4,    5, 4,  4,  4,      7
//      P211_MEASUREMENT_HEADERA_COL_MASK          //    0,   0,    0, 0,  0,  0,      0
//      P211_MEASUREMENT_HEADERA_COL_TYPES         // *
//      P211_MEASUREMENT_HEADERA_TABLE_TYPE        // S
#define P140_UNVERIFD_FLAW_CNT                508  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,UNVERIFIED_FLAW_COUNT
//      P140_UNVERIFD_FLAW_CNT_COL_WIDTH           //          11,        9,        10,                   21
//      P140_UNVERIFD_FLAW_CNT_COL_MASK            //           0,        0,         0,                    0
//      P140_UNVERIFD_FLAW_CNT_COL_TYPES           // *
//      P140_UNVERIFD_FLAW_CNT_TABLE_TYPE          // M
#define P134_TA_FAILED_QUAL_LIST              509  // NON_QUAL_NUM,HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,DFCT_PSN_SFI,DFCT_LEN_SYMBL,DFCT_MAX_AMP_TRK,DFCT_AVG_AMP,RPT_CNT,SRVO_WEDGE,SMR_LGC_TRK
//      P134_TA_FAILED_QUAL_LIST_COL_WIDTH         //           12,         11,      8,        10,          12,            14,              16,          12,      7,        10,         11
//      P134_TA_FAILED_QUAL_LIST_COL_MASK          //            0,          0,      0,         0,           0,             0,               0,           0,      0,         0,          0
//      P134_TA_FAILED_QUAL_LIST_COL_TYPES         // *
//      P134_TA_FAILED_QUAL_LIST_TABLE_TYPE        // M
#define P134_TA_DATA2                         510  // DFCT_NUM,HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,TA_PSN_SFI,TA_LEN_SYMBL,TA_MAX_AMP,QUALD_TA_AVG_AMP,RPT_CNT,SRVO_WEDGE,TA_STATUS,QUALD_TA_PASSIVE_AMP,TA_LGTH_MICRON,TA_RELATIVE_PSN
//      P134_TA_DATA2_COL_WIDTH                    //        8,         11,      8,        10,        10,          12,        10,              16,      7,        10,        9,                  20,            14,             15
//      P134_TA_DATA2_COL_MASK                     //        1,          1,      1,         1,         1,           1,         1,               1,      1,         1,        0,                   1,             1,              1
//      P134_TA_DATA2_COL_TYPES                    //        N,          N,      N,         N,         N,           N,         N,               N,      N,         N,                             N,             N,              N
//      P134_TA_DATA2_TABLE_TYPE                   // M
#define P195_INSTABILITY                      511  // HD_PHYS_PSN,BACK_GND_PTRN,TEST_PTRN,HD_LGC_PSN,TRK_NUM,RD_OFST,HD_STATUS,TA_THRSHLD,MR_BIAS_OFST,VGAR,EP_CNT,FREQUENCY
//      P195_INSTABILITY_COL_WIDTH                 //          11,           11,        9,        10,      7,      7,        9,        10,          12,   4,     6,        9
//      P195_INSTABILITY_COL_MASK                  //           1,            1,        1,         1,      1,      1,        1,         1,           1,   1,     1,        1
//      P195_INSTABILITY_COL_TYPES                 //           N,            V,        V,         N,      N,      N,        N,         N,           N,   N,     N,        N
//      P195_INSTABILITY_TABLE_TYPE                // M
#define P195_INSTABILITY_SUM                  512  // HD_PHYS_PSN,BACK_GND_PTRN,TEST_PTRN,HD_STATUS,HD_LGC_PSN,TRK_NUM,TA_THRSHLD,MR_BIAS_OFST,VGAR,MAX_EP_CNT,MIN_EP_CNT,AVG_EP_CNT,TOTAL_EP_CNT
//      P195_INSTABILITY_SUM_COL_WIDTH             //          11,           11,        9,        9,        10,      7,        10,          12,   4,        10,        10,        10,          12
//      P195_INSTABILITY_SUM_COL_MASK              //           1,            1,        1,        1,         1,      1,         1,           1,   1,         1,         1,         1,           1
//      P195_INSTABILITY_SUM_COL_TYPES             //           N,            V,        V,        N,         N,      N,         N,           N,   N,         N,         N,         N,           N
//      P195_INSTABILITY_SUM_TABLE_TYPE            // M
#define P109_HD_STATUS                        513  // HD_PHYS_PSN,HD_LGC_PSN,ERR_CODE
//      P109_HD_STATUS_COL_WIDTH                   //          11,        10,       8
//      P109_HD_STATUS_COL_MASK                    //           0,         0,       0
//      P109_HD_STATUS_COL_TYPES                   // *
//      P109_HD_STATUS_TABLE_TYPE                  // V
#define P109_CLAMPED_HD_ERR_CODE              514  // HD_PHYS_PSN,HD_LGC_PSN,ERR_CODE
//      P109_CLAMPED_HD_ERR_CODE_COL_WIDTH         //          11,        10,       8
//      P109_CLAMPED_HD_ERR_CODE_COL_MASK          //           0,         0,       0
//      P109_CLAMPED_HD_ERR_CODE_COL_TYPES         // *
//      P109_CLAMPED_HD_ERR_CODE_TABLE_TYPE        // V
#define P036_RV_SENSOR_IDLE_MAG               515  // RV_MAGNITUDE
//      P036_RV_SENSOR_IDLE_MAG_COL_WIDTH          //           12
//      P036_RV_SENSOR_IDLE_MAG_COL_MASK           //            0
//      P036_RV_SENSOR_IDLE_MAG_COL_TYPES          // *
//      P036_RV_SENSOR_IDLE_MAG_TABLE_TYPE         // S
#define P036_RV_SENSOR_ACTIVE_MAG             516  // IDLE_MAG,SEEK_MAG,MAG_DELTA
//      P036_RV_SENSOR_ACTIVE_MAG_COL_WIDTH        //        8,       8,        9
//      P036_RV_SENSOR_ACTIVE_MAG_COL_MASK         //        0,       0,        0
//      P036_RV_SENSOR_ACTIVE_MAG_COL_TYPES        // *
//      P036_RV_SENSOR_ACTIVE_MAG_TABLE_TYPE       // S
#define P175_ZAP_SUMMARY                      517  // HD_PHYS_PSN,ZAP_PSN,SPAN_INDEX,HD_LGC_PSN,WRT_FAIL_CNT,RD_FAIL_CNT,WC,NRWC,RC,NRRC,RRO_FAIL_CNT,DIV,ITRTN_TRK,REV_ITRTN,MTRKS,WTRKS,NUM_NONADJ_TRKS,EXCEPT,SKFAILS,I/OFAILS,BDSMPTRKS,ETIME,WRT_FAIL_CNT_NORM,RD_FAIL_CNT_NORM,SAT_SCTR_CNT
//      P175_ZAP_SUMMARY_COL_WIDTH                 //          11,      7,        10,        10,          12,         11, 5,   5, 5,   5,          12,  5,        9,        9,    6,    6,             15,     6,      7,       8,        9,    6,               17,              16,          12
//      P175_ZAP_SUMMARY_COL_MASK                  //           1,      1,         1,         1,           1,          1, 0,   0, 0,   0,           1,  0,        1,        1,    0,    0,              1,     0,      0,       0,        0,    1,                1,               1,           1
//      P175_ZAP_SUMMARY_COL_TYPES                 //           N,      V,         N,         N,           N,          N,                           N,            N,        N,                          N,                                      N,                N,               N,           N
//      P175_ZAP_SUMMARY_TABLE_TYPE                // M
#define P175_ZAP_AUDIT_STATS                  518  // HD_PHYS_PSN,ZAP_PSN,SPAN_INDEX,AUDIT_TYPE,ZAP_ZONE,HD_LGC_PSN,MEAN_MABSRRO,MAX_MABSRRO,SIG_MABSRRO,MEAN_3SIGRRO,MAX_3SIGRRO,SIG_3SIGRRO,MEAN_3SIGNRO,MAX_3SIGNRO,SIG_3SIGNRO,REVS_FLOOR_SAT,ZAP_ZONE_TIME,NUM_TRKS,AVG_ITRTN_PER_TRK,AVG_REV_PER_ITRTN
//      P175_ZAP_AUDIT_STATS_COL_WIDTH             //          11,      7,        10,        10,       8,        10,          12,         11,         11,          12,         11,         11,          12,         11,         11,            14,           13,       8,               17,               17
//      P175_ZAP_AUDIT_STATS_COL_MASK              //           1,      1,         1,         1,       1,         1,           1,          1,          1,           1,          1,          1,           1,          1,          1,             1,            1,       1,                1,                1
//      P175_ZAP_AUDIT_STATS_COL_TYPES             //           N,      V,         N,         V,       N,         N,           N,          N,          N,           N,          N,          N,           N,          N,          N,             N,            N,       N,                N,                N
//      P175_ZAP_AUDIT_STATS_TABLE_TYPE            // M
#define P251_FITNESS_POINT                    519  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RGSTR_ID,FITNESS,FIT_SIGMA,OPTI_VAL,AUX_VAL,TRK_NUM
//      P251_FITNESS_POINT_COL_WIDTH               //          11,        9,        10,       8,      8,        9,       8,      8,      7
//      P251_FITNESS_POINT_COL_MASK                //           1,        1,         1,       1,      1,        1,       1,      1,      1
//      P251_FITNESS_POINT_COL_TYPES               //           N,        N,         N,       V,      N,        N,       N,      N,      N
//      P251_FITNESS_POINT_TABLE_TYPE              // M
#define P251_FITNESS_POINT_EXTD               520  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RGSTR_ID,FITNESS,FIT_SIGMA,OPTI_VAL,AUX_VAL,TRK_NUM,VGAR,NLFR,TAP1,TAP2,TAP3,TAP4,TAP5,TAP6,TAP7,TAP8,TAP9,TAPX,TAP11,TAP12,TAP13,TAP14,TAP15,TAP16
//      P251_FITNESS_POINT_EXTD_COL_WIDTH          //          11,        9,        10,       8,      8,        9,       8,      8,      7,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,    5,    5,    5,    5,    5,    5
//      P251_FITNESS_POINT_EXTD_COL_MASK           //           0,        0,         0,       0,      0,        0,       0,      0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,    0,    0,    0,    0,    0,    0
//      P251_FITNESS_POINT_EXTD_COL_TYPES          // *
//      P251_FITNESS_POINT_EXTD_TABLE_TYPE         // M

// Deprecated 11/23/2010
#define P251_BEST_FITNESS_POINT               521  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RGSTR_ID,NOMINAL_VAL,FITNESS,OPTI_VAL,AUX_VAL,TRK_NUM,HD_STATUS,INDEX
//      P251_BEST_FITNESS_POINT_COL_WIDTH          //          11,        9,        10,       8,         11,      8,       8,      8,      7,        9,    5
//      P251_BEST_FITNESS_POINT_COL_MASK           //           1,        1,         1,       1,          1,      1,       1,      1,      1,        1,    0
//      P251_BEST_FITNESS_POINT_COL_TYPES          //           N,        N,         N,       V,          N,      N,       N,      N,      N,        N
//      P251_BEST_FITNESS_POINT_TABLE_TYPE         // M

// Deprecated 11/23/2010
#define P251_ATTENUATION_VGA                  522  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ATTC,ATT2S,ATT2R,VGAS,VGAR,HD_STATUS
//      P251_ATTENUATION_VGA_COL_WIDTH             //          11,        9,        10,   4,    5,    5,   4,   4,        9
//      P251_ATTENUATION_VGA_COL_MASK              //           1,        1,         1,   1,    1,    1,   1,   1,        1
//      P251_ATTENUATION_VGA_COL_TYPES             //           N,        N,         N,   N,    N,    N,   N,   N,        N
//      P251_ATTENUATION_VGA_TABLE_TYPE            // M
#define P251_STATUS                           523  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,SAVE_OPTI_VAL,HD_STATUS
//      P251_STATUS_COL_WIDTH                      //          11,        9,        10,           13,        9
//      P251_STATUS_COL_MASK                       //           1,        1,         1,            1,        1
//      P251_STATUS_COL_TYPES                      //           N,        N,         N,            N,        N
//      P251_STATUS_TABLE_TYPE                     // M
#define P195_BLPOP_INSTABILITY                524  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,BLPOP_THRSHLD,MR_BIAS_OFST,RD_OFST,HD_STATUS,EP_CNT,BLPOP_CNT,ITERATION
//      P195_BLPOP_INSTABILITY_COL_WIDTH           //          11,      7,        10,           13,          12,      7,        9,     6,        9,        9
//      P195_BLPOP_INSTABILITY_COL_MASK            //           1,      1,         1,            1,           1,      1,        1,     1,        1,        1
//      P195_BLPOP_INSTABILITY_COL_TYPES           //           N,      N,         N,            N,           N,      N,        N,     N,        N,        N
//      P195_BLPOP_INSTABILITY_TABLE_TYPE          // M
#define P033_PES_WORST_RRO_CYL                525  // HD,CYL_RRO,CYL_NRRO
//      P033_PES_WORST_RRO_CYL_COL_WIDTH           //  2,      7,       8
//      P033_PES_WORST_RRO_CYL_COL_MASK            //  0,      0,       0
//      P033_PES_WORST_RRO_CYL_COL_TYPES           // *
//      P033_PES_WORST_RRO_CYL_TABLE_TYPE          // S
#define P103_HD_ERROR_CODE                    526  // HD_PHYS_PSN,HD_LGC_PSN,ERR_CODE
//      P103_HD_ERROR_CODE_COL_WIDTH               //          11,        10,       8
//      P103_HD_ERROR_CODE_COL_MASK                //           0,         0,       0
//      P103_HD_ERROR_CODE_COL_TYPES               // *
//      P103_HD_ERROR_CODE_TABLE_TYPE              // V
#define P134_LOG_STATS                        527  // SYS_LIST_STATUS,TA_LIST_STATUS
//      P134_LOG_STATS_COL_WIDTH                   //              15,            14
//      P134_LOG_STATS_COL_MASK                    //               0,             0
//      P134_LOG_STATS_COL_TYPES                   // *
//      P134_LOG_STATS_TABLE_TYPE                  // S
#define P208_SPIN_MOTOR_ADG                   528  // HD_PHYS_PSN,HD_LGC_PSN,SVO_STATUS,FAIL_CYL,LOOP_CODE,MISC_DATA,DATA_POINTER
//      P208_SPIN_MOTOR_ADG_COL_WIDTH              //          11,        10,        10,       8,        9,        9,          12
//      P208_SPIN_MOTOR_ADG_COL_MASK               //           0,         0,         0,       0,        0,        0,           0
//      P208_SPIN_MOTOR_ADG_COL_TYPES              // *
//      P208_SPIN_MOTOR_ADG_TABLE_TYPE             // S
#define P208_UNLATCH_ADG                      529  // HD_PHYS_PSN,HD_LGC_PSN,SVO_STATUS,FAIL_CYL,LOOP_CODE,MISC_DATA,DATA_POINTER
//      P208_UNLATCH_ADG_COL_WIDTH                 //          11,        10,        10,       8,        9,        9,          12
//      P208_UNLATCH_ADG_COL_MASK                  //           0,         0,         0,       0,        0,        0,           0
//      P208_UNLATCH_ADG_COL_TYPES                 // *
//      P208_UNLATCH_ADG_TABLE_TYPE                // S
#define P208_DEMOD_SYNC_ADG                   530  // HD_PHYS_PSN,HD_LGC_PSN,SVO_STATUS,FAIL_CYL,LOOP_CODE,MISC_DATA,DATA_POINTER
//      P208_DEMOD_SYNC_ADG_COL_WIDTH              //          11,        10,        10,       8,        9,        9,          12
//      P208_DEMOD_SYNC_ADG_COL_MASK               //           0,         0,         0,       0,        0,        0,           0
//      P208_DEMOD_SYNC_ADG_COL_TYPES              // *
//      P208_DEMOD_SYNC_ADG_TABLE_TYPE             // S
#define P208_HD_AMPL_ADG                      531  // HD_PHYS_PSN,HD_LGC_PSN,SVO_STATUS,FAIL_CYL,LOOP_CODE,MISC_DATA,DATA_POINTER
//      P208_HD_AMPL_ADG_COL_WIDTH                 //          11,        10,        10,       8,        9,        9,          12
//      P208_HD_AMPL_ADG_COL_MASK                  //           0,         0,         0,       0,        0,        0,           0
//      P208_HD_AMPL_ADG_COL_TYPES                 // *
//      P208_HD_AMPL_ADG_TABLE_TYPE                // S
#define P208_HD_SEEK_ADG                      532  // HD_PHYS_PSN,HD_LGC_PSN,SVO_STATUS,FAIL_CYL,LOOP_CODE,MISC_DATA,DATA_POINTER
//      P208_HD_SEEK_ADG_COL_WIDTH                 //          11,        10,        10,       8,        9,        9,          12
//      P208_HD_SEEK_ADG_COL_MASK                  //           0,         0,         0,       0,        0,        0,           0
//      P208_HD_SEEK_ADG_COL_TYPES                 // *
//      P208_HD_SEEK_ADG_TABLE_TYPE                // S
#define P208_CAL_ROUTINE_ADG                  533  // HD_PHYS_PSN,HD_LGC_PSN,SVO_STATUS,FAIL_CYL,LOOP_CODE,MISC_DATA,DATA_POINTER
//      P208_CAL_ROUTINE_ADG_COL_WIDTH             //          11,        10,        10,       8,        9,        9,          12
//      P208_CAL_ROUTINE_ADG_COL_MASK              //           0,         0,         0,       0,        0,        0,           0
//      P208_CAL_ROUTINE_ADG_COL_TYPES             // *
//      P208_CAL_ROUTINE_ADG_TABLE_TYPE            // S
#define P208_PREAMP_ADG                       534  // HD_PHYS_PSN,HD_LGC_PSN,SVO_STATUS,FAIL_CYL,LOOP_CODE,MISC_DATA,DATA_POINTER
//      P208_PREAMP_ADG_COL_WIDTH                  //          11,        10,        10,       8,        9,        9,          12
//      P208_PREAMP_ADG_COL_MASK                   //           0,         0,         0,       0,        0,        0,           0
//      P208_PREAMP_ADG_COL_TYPES                  // *
//      P208_PREAMP_ADG_TABLE_TYPE                 // S
#define P208_DRIVE_READY_ADG                  535  // HD_PHYS_PSN,HD_LGC_PSN,SVO_STATUS,FAIL_CYL,LOOP_CODE,MISC_DATA,DATA_POINTER
//      P208_DRIVE_READY_ADG_COL_WIDTH             //          11,        10,        10,       8,        9,        9,          12
//      P208_DRIVE_READY_ADG_COL_MASK              //           0,         0,         0,       0,        0,        0,           0
//      P208_DRIVE_READY_ADG_COL_TYPES             // *
//      P208_DRIVE_READY_ADG_TABLE_TYPE            // S
#define P227_ZONE_FAILURE                     536  // HEAD,ZONE,ERROR_CODE
//      P227_ZONE_FAILURE_COL_WIDTH                //    4,   4,        10
//      P227_ZONE_FAILURE_COL_MASK                 //    0,   0,         0
//      P227_ZONE_FAILURE_COL_TYPES                // *
//      P227_ZONE_FAILURE_TABLE_TYPE               // S
#define P227_DRIVE_FAILURE                    537  // HEAD_MASK,ZONE_MASK,LAST_ERROR_CODE
//      P227_DRIVE_FAILURE_COL_WIDTH               //         9,        9,             15
//      P227_DRIVE_FAILURE_COL_MASK                //         0,        0,              0
//      P227_DRIVE_FAILURE_COL_TYPES               // *
//      P227_DRIVE_FAILURE_TABLE_TYPE              // S
#define P150_PDF_LIN_GAINS                    538  // HD_PHYS_PSN,CYL,HD_LGC_PSN,ITER,PK_PK,BIN_CTR,GAIN
//      P150_PDF_LIN_GAINS_COL_WIDTH               //          11,  7,        10,   4,    5,      7,   5
//      P150_PDF_LIN_GAINS_COL_MASK                //           0,  0,         0,   0,    0,      0,   0
//      P150_PDF_LIN_GAINS_COL_TYPES               // *
//      P150_PDF_LIN_GAINS_TABLE_TYPE              // M

// Deprecated 11/23/2010
#define P250_BER_BY_ZONE                      539  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TLEVEL,SYNC_ERRS,DATA_ERRORS,BIT_ERROR_RATE,BITS_PASSED
//      P250_BER_BY_ZONE_COL_WIDTH                 //          11,        9,        10,     6,        9,         11,            14,         11
//      P250_BER_BY_ZONE_COL_MASK                  //           1,        1,         1,     1,        1,          1,             1,          1
//      P250_BER_BY_ZONE_COL_TYPES                 //           N,        N,         N,     N,        N,          N,             N,          N
//      P250_BER_BY_ZONE_TABLE_TYPE                // M
#define P000_SERVO_UNSAFE_FLAG                540  // PES,BAD_SAMPL,SWD_DVGA,SWD_RVGA,SWD_FVGA,SHOCK_DETCT,RV_VALUE,LV_VALUE,PZT_SAT,MOTOR_SPEED,PES_14,PES_SHOCK_DETCT,PRED_OT_FLTR_TRGRD,NON_0_CMND_OFFST
//      P000_SERVO_UNSAFE_FLAG_COL_WIDTH           //   3,        9,       8,       8,       8,         11,       8,       8,      7,         11,     6,             15,                18,              16
//      P000_SERVO_UNSAFE_FLAG_COL_MASK            //   0,        0,       0,       0,       0,          0,       0,       0,      0,          0,     0,              0,                 0,               0
//      P000_SERVO_UNSAFE_FLAG_COL_TYPES           // *
//      P000_SERVO_UNSAFE_FLAG_TABLE_TYPE          // S
#define P134_TA_DWELL_DETAIL_HD               541  // DWELL_ID,HD_PHYS_PSN,HD_LGC_PSN,TA_DWELL_CNT
//      P134_TA_DWELL_DETAIL_HD_COL_WIDTH          //        8,         11,        10,          12
//      P134_TA_DWELL_DETAIL_HD_COL_MASK           //        0,          0,         0,           0
//      P134_TA_DWELL_DETAIL_HD_COL_TYPES          // *
//      P134_TA_DWELL_DETAIL_HD_TABLE_TYPE         // V

// Deprecated 11/23/2010
#define P050_BASELINE_MSRMNT2                 542  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,HARD_ERR,ONE_PLUS_RTY_CNT,SIX_PLUS_RTY_CNT,ONE_PLUS_ECC_CNT,SCTR_READ_CNT
//      P050_BASELINE_MSRMNT2_COL_WIDTH            //          11,        9,        10,      7,       8,              16,              16,              16,           13
//      P050_BASELINE_MSRMNT2_COL_MASK             //           1,        1,         1,      1,       1,               1,               1,               1,            1
//      P050_BASELINE_MSRMNT2_COL_TYPES            //           N,        N,         N,      N,       N,               N,               N,               N,            N
//      P050_BASELINE_MSRMNT2_TABLE_TYPE           // M

// Deprecated 11/23/2010
#define P050_ENCROACH_MSRMNT2                 543  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,HARD_ERR,ONE_PLUS_RTY_CNT,SIX_PLUS_RTY_CNT,ONE_PLUS_ECC_CNT,SCTR_READ_CNT
//      P050_ENCROACH_MSRMNT2_COL_WIDTH            //          11,        9,        10,      7,       8,              16,              16,              16,           13
//      P050_ENCROACH_MSRMNT2_COL_MASK             //           1,        1,         1,      1,       1,               1,               1,               1,            1
//      P050_ENCROACH_MSRMNT2_COL_TYPES            //           N,        N,         N,      N,       N,               N,               N,               N,            N
//      P050_ENCROACH_MSRMNT2_TABLE_TYPE           // M

// Deprecated 11/23/2010
#define P000_ERROR_RATES2                     544  // HD_PHYS_PSN,DATA_ZONE,TEST_TYPE,HD_LGC_PSN,TRK_NUM,BITS_READ_CNT,ECC_LEVEL,HARD_ERROR_RATE,OTF_ERROR_RATE,SOFT_ERROR_RATE,RAW_ERROR_RATE,FAIL_CODE
//      P000_ERROR_RATES2_COL_WIDTH                //          11,        9,        9,        10,      7,           13,        9,             15,            14,             15,            14,        9
//      P000_ERROR_RATES2_COL_MASK                 //           0,        0,        0,         0,      0,            0,        0,              0,             0,              0,             0,        0
//      P000_ERROR_RATES2_COL_TYPES                // *
//      P000_ERROR_RATES2_TABLE_TYPE               // M

// Deprecated 11/23/2010
#define P051_BASELINE_MSRMNT2                 545  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,HARD_ERR,ONE_PLUS_RTY_CNT,SIX_PLUS_RTY_CNT,ONE_PLUS_ECC_CNT,SCTR_READ_CNT
//      P051_BASELINE_MSRMNT2_COL_WIDTH            //          11,        9,        10,      7,       8,              16,              16,              16,           13
//      P051_BASELINE_MSRMNT2_COL_MASK             //           1,        1,         1,      1,       1,               1,               1,               1,            1
//      P051_BASELINE_MSRMNT2_COL_TYPES            //           N,        N,         N,      N,       N,               N,               N,               N,            N
//      P051_BASELINE_MSRMNT2_TABLE_TYPE           // M

// Deprecated 11/23/2010
#define P051_ERASURE_MSRMNT2                  546  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,HARD_ERR,ONE_PLUS_RTY_CNT,SIX_PLUS_RTY_CNT,ONE_PLUS_ECC_CNT,SCTR_READ_CNT
//      P051_ERASURE_MSRMNT2_COL_WIDTH             //          11,        9,        10,      7,       8,              16,              16,              16,           13
//      P051_ERASURE_MSRMNT2_COL_MASK              //           1,        1,         1,      1,       1,               1,               1,               1,            1
//      P051_ERASURE_MSRMNT2_COL_TYPES             //           N,        N,         N,      N,       N,               N,               N,               N,            N
//      P051_ERASURE_MSRMNT2_TABLE_TYPE            // M
#define P227_WIJITA_DELTA_ERR                 547  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BITS_WRITTEN,BASE_ERR_RATE,NOM_ERR_RATE,DELTA_WRT_ERR_RATE
//      P227_WIJITA_DELTA_ERR_COL_WIDTH            //          11,        9,        10,          12,           13,          12,                18
//      P227_WIJITA_DELTA_ERR_COL_MASK             //           1,        1,         1,           1,            1,           1,                 1
//      P227_WIJITA_DELTA_ERR_COL_TYPES            //           N,        N,         N,           N,            N,           N,                 N
//      P227_WIJITA_DELTA_ERR_TABLE_TYPE           // M

// Deprecated 11/23/2010
#define P025_LOAD_KEY_PARAM                   548  // CYC,LOD_TIME,LOD_PK_CUR,LOD_PK_VEL,CAL_GAIN,CAL_OFST,RESIDUAL_ERR,RETRY_NUM,MAX_SPIN_DIP,LODHD_RETRY,LOD_STS
//      P025_LOAD_KEY_PARAM_COL_WIDTH              //   3,       8,        10,        10,       8,       8,          12,        9,          12,         11,      7
//      P025_LOAD_KEY_PARAM_COL_MASK               //   0,       0,         0,         0,       0,       0,           0,        0,           0,          0,      0
//      P025_LOAD_KEY_PARAM_COL_TYPES              // *
//      P025_LOAD_KEY_PARAM_TABLE_TYPE             // V

// Deprecated 11/23/2010
#define P025_UNLOAD_KEY_PARAM                 549  // CYC,ULD_TIME,ULD_PK_CUR,ULD_PK_VEL,CAL_GAIN,CAL_OFST,RESIDUAL_ERR,RETRY_NUM,MAX_SPIN_DIP,ULDHD_RETRY,ULD_STS
//      P025_UNLOAD_KEY_PARAM_COL_WIDTH            //   3,       8,        10,        10,       8,       8,          12,        9,          12,         11,      7
//      P025_UNLOAD_KEY_PARAM_COL_MASK             //   0,       0,         0,         0,       0,       0,           0,        0,           0,          0,      0
//      P025_UNLOAD_KEY_PARAM_COL_TYPES            // *
//      P025_UNLOAD_KEY_PARAM_TABLE_TYPE           // V
#define P025_LOAD_STAT                        550  // STAT_NAME,LOAD_TIME,LOAD_PEAK_CUR,LOAD_PEAK_VEL,VCM_OFFSET
//      P025_LOAD_STAT_COL_WIDTH                   //         9,        9,           13,           13,        10
//      P025_LOAD_STAT_COL_MASK                    //         1,        1,            1,            1,         1
//      P025_LOAD_STAT_COL_TYPES                   //         V,        N,            N,            N,         N
//      P025_LOAD_STAT_TABLE_TYPE                  // V
#define P025_UNLOAD_STAT                      551  // STAT_NAME,UNLOAD_TIME,UNLOAD_PEAK_CUR,UNLOAD_PEAK_VEL
//      P025_UNLOAD_STAT_COL_WIDTH                 //         9,         11,             15,             15
//      P025_UNLOAD_STAT_COL_MASK                  //         1,          1,              1,              1
//      P025_UNLOAD_STAT_COL_TYPES                 //         V,          N,              N,              N
//      P025_UNLOAD_STAT_TABLE_TYPE                // V
#define P025_LOAD_PROFILE                     552  // LOD_TIME,LOD_PROC_CUR,LOD_PROC_VEL
//      P025_LOAD_PROFILE_COL_WIDTH                //        8,          12,          12
//      P025_LOAD_PROFILE_COL_MASK                 //        0,           0,           0
//      P025_LOAD_PROFILE_COL_TYPES                // *
//      P025_LOAD_PROFILE_TABLE_TYPE               // V
#define P025_UNLOAD_PROFILE                   553  // ULD_TIME,ULD_PROC_CUR,ULD_PROC_VEL
//      P025_UNLOAD_PROFILE_COL_WIDTH              //        8,          12,          12
//      P025_UNLOAD_PROFILE_COL_MASK               //        0,           0,           0
//      P025_UNLOAD_PROFILE_COL_TYPES              // *
//      P025_UNLOAD_PROFILE_TABLE_TYPE             // V
#define P052_ZGS_CAL_DATA                     554  // ZGS_HLTH,CAL_0G_X,CAL_0G_Y,CAL_0G_Z,STM_VAL_X,STM_VAL_Y,STM_VAL_Z,ACCL_DATA_X,ACCL_DATA_Y,ACCL_DATA_Z,FREE_FALL_ACCL_2
//      P052_ZGS_CAL_DATA_COL_WIDTH                //        8,       8,       8,       8,        9,        9,        9,         11,         11,         11,              16
//      P052_ZGS_CAL_DATA_COL_MASK                 //        0,       0,       0,       0,        0,        0,        0,          0,          0,          0,               0
//      P052_ZGS_CAL_DATA_COL_TYPES                // *
//      P052_ZGS_CAL_DATA_TABLE_TYPE               // S

// Deprecated 11/23/2010
#define P186_DELTA_THRSHLD_RGSTR              555  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,D_VGA_RGSTR,R_VGA_RGSTR,F_VGA_RGSTR
//      P186_DELTA_THRSHLD_RGSTR_COL_WIDTH         //          11,        9,        10,         11,         11,         11
//      P186_DELTA_THRSHLD_RGSTR_COL_MASK          //           1,        1,         1,          1,          1,          1
//      P186_DELTA_THRSHLD_RGSTR_COL_TYPES         //           N,        N,         N,          N,          N,          N
//      P186_DELTA_THRSHLD_RGSTR_TABLE_TYPE        // M
#define P191_CLR_COEF_CAL                     556  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,SRVO_TRK,LGC_TRK,RADIUS,WRT_CUR,OVRSHT,OVRSHT_DUR,VGAR,COEF_ADJ_SLOPE,COEF_ADJ_OFST,COEF_ADJ_CORR_SQR
//      P191_CLR_COEF_CAL_COL_WIDTH                //          11,        9,        10,       8,      7,     6,      7,     6,        10,   4,            14,           13,               17
//      P191_CLR_COEF_CAL_COL_MASK                 //           1,        1,         1,       1,      1,     1,      1,     1,         1,   1,             1,            1,                1
//      P191_CLR_COEF_CAL_COL_TYPES                //           N,        N,         N,       N,      N,     N,      N,     N,         N,   N,             N,            N,                N
//      P191_CLR_COEF_CAL_TABLE_TYPE               // M

// Deprecated 11/23/2010
#define P191_HSC_DATA                         557  // POINT_NUM,HTR_DAC,HSC_FUNDAMENTAL,HSC_3RD_HARM,DELTA_FLY_HGT,COEF_HIRP,COEF_HIWP
//      P191_HSC_DATA_COL_WIDTH                    //         9,      7,             15,          12,           13,        9,        9
//      P191_HSC_DATA_COL_MASK                     //         1,      1,              1,           1,            1,        1,        1
//      P191_HSC_DATA_COL_TYPES                    //         N,      N,              N,           N,            N,        N,        N
//      P191_HSC_DATA_TABLE_TYPE                   // M
#define P013_MAX_DELTA2                       558  // HD_PHYS_PSN,HD_LGC_PSN,MAX_DELTA,SCALING_FACTOR
//      P013_MAX_DELTA2_COL_WIDTH                  //          11,        10,        9,            14
//      P013_MAX_DELTA2_COL_MASK                   //           1,         1,        1,             1
//      P013_MAX_DELTA2_COL_TYPES                  //           N,         N,        N,             N
//      P013_MAX_DELTA2_TABLE_TYPE                 // V
#define P013_DATA_POINTS                      559  // HD_PHYS_PSN,TRK_NUM,TEST_MODE,HD_LGC_PSN,RAW_DATA,FIT_DATA
//      P013_DATA_POINTS_COL_WIDTH                 //          11,      7,        9,        10,       8,       8
//      P013_DATA_POINTS_COL_MASK                  //           1,      1,        1,         1,       1,       1
//      P013_DATA_POINTS_COL_TYPES                 //           N,      N,        V,         N,       N,       N
//      P013_DATA_POINTS_TABLE_TYPE                // M
#define P013_FIT_COEF                         560  // HD_PHYS_PSN,TEST_MODE,HD_LGC_PSN,COEF_A,COEF_B,COEF_C,COEF_D,COEF_F
//      P013_FIT_COEF_COL_WIDTH                    //          11,        9,        10,     6,     6,     6,     6,     6
//      P013_FIT_COEF_COL_MASK                     //           1,        1,         1,     1,     1,     1,     1,     1
//      P013_FIT_COEF_COL_TYPES                    //           N,        V,         N,     N,     N,     N,     N,     N
//      P013_FIT_COEF_TABLE_TYPE                   // V
#define P186_BIAS_CAL2                        561  // HD_PHYS_PSN,TEST_MODE,HD_LGC_PSN,ORIGINAL_CURRENT,NEW_CURRENT,BIAS_VOLTAGE,MRE_RESISTANCE,NEW_CURRENT_DAC,FAIL_CODE,MRE_BIAS_RANGE
//      P186_BIAS_CAL2_COL_WIDTH                   //          11,        9,        10,              16,         11,          12,            14,             15,        9,            14
//      P186_BIAS_CAL2_COL_MASK                    //           1,        1,         1,               1,          1,           1,             1,              1,        1,             1
//      P186_BIAS_CAL2_COL_TYPES                   //           N,        V,         N,               N,          N,           N,             N,              N,        N,             N
//      P186_BIAS_CAL2_TABLE_TYPE                  // M
#define P227_SWD_INPUT_HEADER                 562  // DELTA_LIMIT,AVG_DELTA_LIMIT
//      P227_SWD_INPUT_HEADER_COL_WIDTH            //          11,             15
//      P227_SWD_INPUT_HEADER_COL_MASK             //           1,              1
//      P227_SWD_INPUT_HEADER_COL_TYPES            //           N,              N
//      P227_SWD_INPUT_HEADER_TABLE_TYPE           // S
#define P130_SLIP_SCTR_CNT                    563  // DRV_SLIP_SCTR_CNT,SLIP_SCTR_PCT,MAX_SCTR_SPARES
//      P130_SLIP_SCTR_CNT_COL_WIDTH               //                17,           13,             15
//      P130_SLIP_SCTR_CNT_COL_MASK                //                 1,            1,              1
//      P130_SLIP_SCTR_CNT_COL_TYPES               //                 N,            N,              N
//      P130_SLIP_SCTR_CNT_TABLE_TYPE              // S

// Deprecated 11/23/2010
#define P185_TPI_INPUT_COEFF                  564  // NUM_COEF,COEFFICIENT0,COEFFICIENT1,COEFFICIENT2,COEFFICIENT3,COEFFICIENT4,COEFFICIENT5,COEFFICIENT6
//      P185_TPI_INPUT_COEFF_COL_WIDTH             //        8,          12,          12,          12,          12,          12,          12,          12
//      P185_TPI_INPUT_COEFF_COL_MASK              //        0,           0,           0,           0,           0,           0,           0,           0
//      P185_TPI_INPUT_COEFF_COL_TYPES             // *
//      P185_TPI_INPUT_COEFF_TABLE_TYPE            // S

// Deprecated 11/23/2010
#define P185_TPI_SCALING_COEFF                565  // COEFFICIENT0,COEFFICIENT1,COEFFICIENT2,COEFFICIENT3,COEFFICIENT4,COEFFICIENT5,COEFFICIENT6,Q15_TCK_NORM,Q14_MUL_SHIF,ORG_MAX_CYLI,MAX_LOG_CYLI
//      P185_TPI_SCALING_COEFF_COL_WIDTH           //           12,          12,          12,          12,          12,          12,          12,          12,          12,          12,          12
//      P185_TPI_SCALING_COEFF_COL_MASK            //            0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0
//      P185_TPI_SCALING_COEFF_COL_TYPES           // *
//      P185_TPI_SCALING_COEFF_TABLE_TYPE          // S

// Deprecated 11/23/2010
#define P185_TPI_POSITION_COEFF               566  // COEFFICIENT0,COEFFICIENT1,COEFFICIENT2,COEFFICIENT3,COEFFICIENT4,COEFFICIENT5,COEFFICIENT6,Q31_TCK_NORM,Q12_POS_SHIF,NEW_MAX_CYLI,MAX_LOG_CYLI
//      P185_TPI_POSITION_COEFF_COL_WIDTH          //           12,          12,          12,          12,          12,          12,          12,          12,          12,          12,          12
//      P185_TPI_POSITION_COEFF_COL_MASK           //            0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0
//      P185_TPI_POSITION_COEFF_COL_TYPES          // *
//      P185_TPI_POSITION_COEFF_TABLE_TYPE         // S

// Deprecated 11/23/2010
#define P185_RAMP_DETECT                      567  // HD_PYS_PSN,TARGET_CYL,INT_AVG,INT,INT_DELTA,ACFF_DELTA_AVG,ACFF_DELTA_MAX
//      P185_RAMP_DETECT_COL_WIDTH                 //         10,        10,      7,  6,        9,            14,            14
//      P185_RAMP_DETECT_COL_MASK                  //          0,         0,      0,  0,        0,             0,             0
//      P185_RAMP_DETECT_COL_TYPES                 // *
//      P185_RAMP_DETECT_TABLE_TYPE                // S
#define P238_MICROJOG_HD_STATUS               568  // HD_PHYS_PSN,HD_LGC_PSN,AGC_MODE,STATUS_CODE
//      P238_MICROJOG_HD_STATUS_COL_WIDTH          //          11,        10,       8,         11
//      P238_MICROJOG_HD_STATUS_COL_MASK           //           1,         1,       1,          1
//      P238_MICROJOG_HD_STATUS_COL_TYPES          //           N,         N,       N,          V
//      P238_MICROJOG_HD_STATUS_TABLE_TYPE         // V
#define P238_MICROJOG_CAL                     569  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,MICRO_JOG_OFFSET,DELTA_OFFSET
//      P238_MICROJOG_CAL_COL_WIDTH                //          11,      7,        10,              16,          11
//      P238_MICROJOG_CAL_COL_MASK                 //           1,      1,         1,               1,           1
//      P238_MICROJOG_CAL_COL_TYPES                //           N,      N,         N,               N,           N
//      P238_MICROJOG_CAL_TABLE_TYPE               // M
#define P238_FIGURE_OF_MERIT                  570  // HD_PHYS_PSN,HD_LGC_PSN,FOM
//      P238_FIGURE_OF_MERIT_COL_WIDTH             //          11,        10,  5
//      P238_FIGURE_OF_MERIT_COL_MASK              //           1,         1,  1
//      P238_FIGURE_OF_MERIT_COL_TYPES             //           N,         N,  N
//      P238_FIGURE_OF_MERIT_TABLE_TYPE            // V
#define P238_ERROR_INFO                       571  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,ERROR_CODE
//      P238_ERROR_INFO_COL_WIDTH                  //          11,        10,      8,        10
//      P238_ERROR_INFO_COL_MASK                   //           1,         1,      1,         1
//      P238_ERROR_INFO_COL_TYPES                  //           N,         N,      N,         N
//      P238_ERROR_INFO_TABLE_TYPE                 // V
#define P252_COLD_WRITE_MEASURE               572  // HD_PHYS_PSN,DATA_ZONE,TEST_TYPE,HD_LGC_PSN,TRK_NUM,HARD_ERROR_CNT,OTF_ERROR_CNT,SOFT_ERROR_CNT,RAW_ERROR_CNT,SCTR_READ_CNT
//      P252_COLD_WRITE_MEASURE_COL_WIDTH          //          11,        9,        9,        10,      7,            14,           13,            14,           13,           13
//      P252_COLD_WRITE_MEASURE_COL_MASK           //           0,        0,        0,         0,      0,             0,            0,             0,            0,            0
//      P252_COLD_WRITE_MEASURE_COL_TYPES          // *
//      P252_COLD_WRITE_MEASURE_TABLE_TYPE         // M
#define P166_TESTS_AVAILABLE                  573  // TEST_NUM
//      P166_TESTS_AVAILABLE_COL_WIDTH             //        8
//      P166_TESTS_AVAILABLE_COL_MASK              //        0
//      P166_TESTS_AVAILABLE_COL_TYPES             // *
//      P166_TESTS_AVAILABLE_TABLE_TYPE            // S
#define P109_UNSAFE_SUMMARY                   574  // HD_PHYS_PSN,HD_LGC_PSN,PES_ERR_CNT,GRAY_CODE_ERR_CNT,DVGA_ERR_CNT,RVGA_ERR_CNT,FVGA_ERR_CNT,SHOCK_ERR_CNT,ROT_VIB_ERR_CNT,LIN_VIB_ERR_CNT,MICRO_ACTUATOR_ERR_CNT,MOTOR_SPEED_ERR_CNT,PES_14PCT_ERR_CNT,TOTAL_ERR_CNT,SKIPPED_TRACKS_CNT
//      P109_UNSAFE_SUMMARY_COL_WIDTH              //          11,        10,         11,               17,          12,          12,          12,           13,             15,             15,                    22,                 19,               17,           13,                18
//      P109_UNSAFE_SUMMARY_COL_MASK               //           1,         1,          1,                1,           1,           1,           1,            1,              1,              1,                     1,                  1,                1,            1,                 1
//      P109_UNSAFE_SUMMARY_COL_TYPES              //           N,         N,          N,                N,           N,           N,           N,            N,              N,              N,                     N,                  N,                N,            N,                 N
//      P109_UNSAFE_SUMMARY_TABLE_TYPE             // S
#define P003_JUMPER_TABLE                     575  // SATA1_JUMPER_PRESENT,SATA1_JUMPER_NOT_PRESENT
//      P003_JUMPER_TABLE_COL_WIDTH                //                   20,                      24
//      P003_JUMPER_TABLE_COL_MASK                 //                    0,                       0
//      P003_JUMPER_TABLE_COL_TYPES                // *
//      P003_JUMPER_TABLE_TABLE_TYPE               // S

// Deprecated 11/23/2010
#define P189_HD_SWITCH_ERR                    576  // HD_PHYS_PSN,HD_LGC_PSN,FAILED_CYL,HD_ERRORS
//      P189_HD_SWITCH_ERR_COL_WIDTH               //          11,        10,        10,        9
//      P189_HD_SWITCH_ERR_COL_MASK                //           0,         0,         0,        0
//      P189_HD_SWITCH_ERR_COL_TYPES               // *
//      P189_HD_SWITCH_ERR_TABLE_TYPE              // S
#define P103_SERVO_AGC_SIGMA_HD               577  // HD_PHYS_PSN,HD_LGC_PSN,AVG_ALLZONES,STDEV_ALLZONES,HD_STATUS
//      P103_SERVO_AGC_SIGMA_HD_COL_WIDTH          //          11,        10,          12,            14,        9
//      P103_SERVO_AGC_SIGMA_HD_COL_MASK           //           0,         0,           0,             0,        0
//      P103_SERVO_AGC_SIGMA_HD_COL_TYPES          // *
//      P103_SERVO_AGC_SIGMA_HD_TABLE_TYPE         // S

// Deprecated 11/23/2010
#define POLYNOMIAL_ERR                        578  // HD_PHYS_PSN,ZONE_NO,MROFFSET,POLY_MATHS,POLY_DIFF
//      POLYNOMIAL_ERR_COL_WIDTH                   //          11,      7,       8,        10,        9
//      POLYNOMIAL_ERR_COL_MASK                    //           0,      0,       0,         0,        0
//      POLYNOMIAL_ERR_COL_TYPES                   // *
//      POLYNOMIAL_ERR_TABLE_TYPE                  // S
#define P007_TRK_FOLLOW_POS_BINS              579  // HD_PHYS_PSN,HD_LGC_PSN,BIN_1,BIN_2,BIN_3,BINS_STATUS,FAIL_CODE
//      P007_TRK_FOLLOW_POS_BINS_COL_WIDTH         //          11,        10,    5,    5,    5,         11,        9
//      P007_TRK_FOLLOW_POS_BINS_COL_MASK          //           1,         1,    1,    1,    1,          1,        1
//      P007_TRK_FOLLOW_POS_BINS_COL_TYPES         //           N,         N,    N,    N,    N,          N,        N
//      P007_TRK_FOLLOW_POS_BINS_TABLE_TYPE        // S
#define P195_STE                              580  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,CSM1,CSM2,CSM_DELTA,SUM_CSM_DIFF,WRT_CUR
//      P195_STE_COL_WIDTH                         //          11,      7,        10,  10,  10,        9,          12,      7
//      P195_STE_COL_MASK                          //           1,      1,         1,   1,   1,        1,           1,      1
//      P195_STE_COL_TYPES                         //           N,      N,         N,   N,   N,        N,           N,      N
//      P195_STE_TABLE_TYPE                        // M
#define P195_STE_SUMMARY                      581  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,SUM_CSM_DIFF,LOG10_NORM_SUM_CSM_DIFF,WRT_CUR
//      P195_STE_SUMMARY_COL_WIDTH                 //          11,      7,        10,          12,                     23,      7
//      P195_STE_SUMMARY_COL_MASK                  //           1,      1,         1,           1,                      1,      1
//      P195_STE_SUMMARY_COL_TYPES                 //           N,      N,         N,           N,                      N,      N
//      P195_STE_SUMMARY_TABLE_TYPE                // M

// Deprecated 11/23/2010
#define P152_BODE_GAIN_DATA                   582  // HD_PHYS_PSN,FREQUENCY,HD_LGC_PSN,GAIN,HD_STATUS
//      P152_BODE_GAIN_DATA_COL_WIDTH              //          11,        9,        10,   7,        9
//      P152_BODE_GAIN_DATA_COL_MASK               //           0,        0,         0,   0,        0
//      P152_BODE_GAIN_DATA_COL_TYPES              // *
//      P152_BODE_GAIN_DATA_TABLE_TYPE             // V
#define P139_TUNING_HD                        583  // HD_PHYS_PSN,HD_LGC_PSN
//      P139_TUNING_HD_COL_WIDTH                   //          11,        10
//      P139_TUNING_HD_COL_MASK                    //           0,         0
//      P139_TUNING_HD_COL_TYPES                   // *
//      P139_TUNING_HD_TABLE_TYPE                  // S
#define P139_CURRENT_TRK                      584  // PHYS_TRK,LGC_TRK
//      P139_CURRENT_TRK_COL_WIDTH                 //        8,      7
//      P139_CURRENT_TRK_COL_MASK                  //        0,      0
//      P139_CURRENT_TRK_COL_TYPES                 // *
//      P139_CURRENT_TRK_TABLE_TYPE                // S
#define P139_PRESCAN_VGA_BUCKET               585  // 01,02,03,04,05,06,07
//      P139_PRESCAN_VGA_BUCKET_COL_WIDTH          //  5, 5, 5, 5, 5, 5, 5
//      P139_PRESCAN_VGA_BUCKET_COL_MASK           //  0, 0, 0, 0, 0, 0, 0
//      P139_PRESCAN_VGA_BUCKET_COL_TYPES          // *
//      P139_PRESCAN_VGA_BUCKET_TABLE_TYPE         // S
#define P139_FINESCAN_VGA_BUCKET1             586  // 01,02,03,04,05,06,07,08,09,10,11,12,13
//      P139_FINESCAN_VGA_BUCKET1_COL_WIDTH        //  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5
//      P139_FINESCAN_VGA_BUCKET1_COL_MASK         //  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//      P139_FINESCAN_VGA_BUCKET1_COL_TYPES        // *
//      P139_FINESCAN_VGA_BUCKET1_TABLE_TYPE       // S
#define P139_FINESCAN_VGA_BUCKET2             587  // 01,02,03,04,05,06,07,08,09,10,11,12,13
//      P139_FINESCAN_VGA_BUCKET2_COL_WIDTH        //  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5
//      P139_FINESCAN_VGA_BUCKET2_COL_MASK         //  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//      P139_FINESCAN_VGA_BUCKET2_COL_TYPES        // *
//      P139_FINESCAN_VGA_BUCKET2_TABLE_TYPE       // S

// Deprecated 11/23/2010
#define P208_AUTO_DIAGNOSTIC2                 588  // HD_PHYS_PSN,DIAG_TEST,HD_LGC_PSN,SVO_CMD_STATUS,FAIL_CYL,LOOP_CODE,MISC_DATA,DATA_POINTER,RAW_TRACK_ID,RAW_TRACK_ID1
//      P208_AUTO_DIAGNOSTIC2_COL_WIDTH            //          11,       11,        10,            16,       8,        9,        9,          12,          12,           12
//      P208_AUTO_DIAGNOSTIC2_COL_MASK             //           1,        1,         1,             1,       1,        1,        1,           1,           1,            1
//      P208_AUTO_DIAGNOSTIC2_COL_TYPES            //           N,        V,         N,             V,       N,        V,        V,           V,           N,            N
//      P208_AUTO_DIAGNOSTIC2_TABLE_TYPE           // M
#define P238_MRJOG_BUCKET                     589  // OFFSET,VGA,ADJ_VGA,FITNESS,SIGMA,SENSE,RETRY,TOTAL_ERR,SYNC_ERR,ECC_ERR,ERR_RATE,HD_LGC_PSN,TRK_NUM,ZONE
//      P238_MRJOG_BUCKET_COL_WIDTH                //      6,  3,      7,      7,    5,    8,    5,        9,       8,      7,       8,        10,      7,   4
//      P238_MRJOG_BUCKET_COL_MASK                 //      0,  0,      0,      0,    0,    0,    0,        0,       0,      0,       0,         0,      0,   0
//      P238_MRJOG_BUCKET_COL_TYPES                // *
//      P238_MRJOG_BUCKET_TABLE_TYPE               // S
#define P051_ERASURE_BER                      590  // HD_PHYS_PSN,DATA_ZONE,TEST_TYPE,HD_LGC_PSN,TRK_NUM,HARD_ERR_CNT,ONE_PLUS_RTY_CNT,SIX_PLUS_RTY_CNT,ONE_PLUS_ECC_CNT,SCTR_READ_CNT,T_LEVEL,TRK_INDEX,NUM_WRT,HARD_BER,OTF_BER,SOFT_BER,RRAW_BER,BITS_IN_ERROR,BITS_IN_ERROR_BER,DOS_RTY_CNT,DOS_RTY_BER
//      P051_ERASURE_BER_COL_WIDTH                 //          11,        9,        9,        10,      7,          12,              16,              16,              16,           13,      7,        9,      7,       8,      7,       8,       8,           13,               17,         11,         11
//      P051_ERASURE_BER_COL_MASK                  //           1,        1,        1,         1,      1,           1,               1,               1,               1,            1,      1,        1,      1,       1,      1,       1,       1,            1,                1,          1,          1
//      P051_ERASURE_BER_COL_TYPES                 //           N,        N,        V,         N,      N,           N,               N,               N,               N,            N,      N,        N,      N,       N,      N,       N,       N,            N,                N,          N,          N
//      P051_ERASURE_BER_TABLE_TYPE                // M
#define P050_ENCROACH_BER                     591  // HD_PHYS_PSN,DATA_ZONE,TEST_TYPE,HD_LGC_PSN,TRK_NUM,HARD_ERR_CNT,ONE_PLUS_RTY_CNT,SIX_PLUS_RTY_CNT,ONE_PLUS_ECC_CNT,SCTR_READ_CNT,T_LEVEL,HARD_BER,OTF_BER,SOFT_BER,RRAW_BER,BITS_IN_ERROR,BITS_IN_ERROR_BER
//      P050_ENCROACH_BER_COL_WIDTH                //          11,        9,        9,        10,      7,          12,              16,              16,              16,           13,      7,       8,      7,       8,       8,           13,               17
//      P050_ENCROACH_BER_COL_MASK                 //           1,        1,        1,         1,      1,           1,               1,               1,               1,            1,      1,       1,      1,       1,       1,            1,                1
//      P050_ENCROACH_BER_COL_TYPES                //           N,        N,        V,         N,      N,           N,               N,               N,               N,            N,      N,       N,      N,       N,       N,            N,                N
//      P050_ENCROACH_BER_TABLE_TYPE               // M
#define P097_WRITE_BER                        592  // HD_PHYS_PSN,TEST_TYPE,HD_LGC_PSN,HARD_ERR_CNT,SIX_PLUS_RTY_CNT,ONE_PLUS_RTY_CNT,ONE_PLUS_CNT,BIT_ERROR_RATE,BITS_WRITE
//      P097_WRITE_BER_COL_WIDTH                   //          11,        9,        10,          12,              16,              16,          12,            14,        10
//      P097_WRITE_BER_COL_MASK                    //           0,        0,         0,           0,               0,               0,           0,             0,         0
//      P097_WRITE_BER_COL_TYPES                   // *
//      P097_WRITE_BER_TABLE_TYPE                  // S
#define P097_READ_BER                         593  // HD_PHYS_PSN,DATA_ZONE,TEST_TYPE,HD_LGC_PSN,START_CYL,END_CYL,ECC_LEVEL,HARD_ERR_CNT,SIX_PLUS_RTY_CNT,ONE_PLUS_RTY_CNT,ONE_PLUS_ECC_CNT,BIT_ERROR_RATE,BITS_READ
//      P097_READ_BER_COL_WIDTH                    //          11,        9,        9,        10,        9,      7,        9,          12,              16,              16,              16,            14,        9
//      P097_READ_BER_COL_MASK                     //           0,        0,        0,         0,        0,      0,        0,           0,               0,               0,               0,             0,        0
//      P097_READ_BER_COL_TYPES                    // *
//      P097_READ_BER_TABLE_TYPE                   // S
#define P097_WRITE_TEST                       594  // CYCLE,HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,LD_TIME,LD_PK_CUR,LD_PK_VEL,LD_SPINDIP,LD_RETRY,LD_STS,TEST_CYCLE,OFFSET,LENGTH,ULD_TIME,ULD_PK_CUR,ULD_PK_VEL,ULD_SPINDIP,ULD_RETRY,ULD_STS
//      P097_WRITE_TEST_COL_WIDTH                  //     5,         11,        9,        10,      7,        9,        9,        10,       8,     6,        10,     6,     6,       8,        10,        10,         11,        9,      7
//      P097_WRITE_TEST_COL_MASK                   //     0,          0,        0,         0,      0,        0,        0,         0,       0,     0,         0,     0,     0,       0,         0,         0,          0,        0,      0
//      P097_WRITE_TEST_COL_TYPES                  // *
//      P097_WRITE_TEST_TABLE_TYPE                 // S
#define P151_NLD_OPTI                         595  // DATA_ZONE,HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,MEAN_0,MEAN_1,VAR,F1,F2,F3,REG_112,REG_114,REG_116,KAHU_HW_BUG
//      P151_NLD_OPTI_COL_WIDTH                    //         9,         11,        10,      7,    10,    10, 10,10,10,10,      7,      7,      7,         11
//      P151_NLD_OPTI_COL_MASK                     //         0,          0,         0,      0,     0,     0,  0, 0, 0, 0,      0,      0,      0,          0
//      P151_NLD_OPTI_COL_TYPES                    // *
//      P151_NLD_OPTI_TABLE_TYPE                   // M
#define P251_AFH_PARAMS_DETAILED              596  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,WRT_CUR,OVS_AMP,OVS_DUR,WRT_HEAT,PRE_HEAT,RD_HEAT,TRK_NUM,NRZ_FREQ,CLR_DELTA_TEMP,CLR_LOSS_WRT
//      P251_AFH_PARAMS_DETAILED_COL_WIDTH         //          11,        9,        10,      7,      7,      7,       8,       8,      7,      7,       8,            14,          12
//      P251_AFH_PARAMS_DETAILED_COL_MASK          //           0,        0,         0,      0,      0,      0,       0,       0,      0,      0,       0,             0,           0
//      P251_AFH_PARAMS_DETAILED_COL_TYPES         // *
//      P251_AFH_PARAMS_DETAILED_TABLE_TYPE        // M
#define P251_AFH_PARAMS_FINAL                 597  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,WRT_CUR,OVS_AMP,OVS_DUR,WRT_HEAT,PRE_HEAT,RD_HEAT,TRK_NUM,NRZ_FREQ,CLR_DELTA_TEMP,CLR_LOSS_WRT,FITNESS
//      P251_AFH_PARAMS_FINAL_COL_WIDTH            //          11,        9,        10,      7,      7,      7,       8,       8,      7,      7,       8,            14,          12,      8
//      P251_AFH_PARAMS_FINAL_COL_MASK             //           0,        0,         0,      0,      0,      0,       0,       0,      0,      0,       0,             0,           0,      0
//      P251_AFH_PARAMS_FINAL_COL_TYPES            // *
//      P251_AFH_PARAMS_FINAL_TABLE_TYPE           // M
#define P185_TRK_0_V3BAR_CYL                  598  // OD_GUARD_BAND,ID_GUARD_BAND,ORIG_MAX_CYL,NEW_MAX_CYL,ORIG_TRK_RANGE,V3BAR_TRK_RANGE,USABLE_TRK_RANGE,MAX_NOM_CYL
//      P185_TRK_0_V3BAR_CYL_COL_WIDTH             //            13,           13,          12,         11,            14,             15,              16,         11
//      P185_TRK_0_V3BAR_CYL_COL_MASK              //             1,            1,           1,          1,             1,              1,               1,          1
//      P185_TRK_0_V3BAR_CYL_COL_TYPES             //             N,            N,           N,          N,             N,              N,               N,          N
//      P185_TRK_0_V3BAR_CYL_TABLE_TYPE            // S
#define P185_TRK_0_V3BAR_CALHD                599  // HD_PHYS_PSN,HD_LGC_PSN,TRK_DC_OFST,RAMP_CYL,CRASH_STOP_CYL,TRK_0_CYL,PHYS_MAX_CYL,DC_ERROR,TIMING_ERROR,HD_STATUS,NUM_TRKS_GAINED_AT_OD,NUM_TRKS_GAINED_AT_ID,RAMP_EDGE_CYL,RAMP_EDGE_CYL_LGC,RAMP_CYL_LGC
//      P185_TRK_0_V3BAR_CALHD_COL_WIDTH           //          11,        10,         11,       8,            14,        9,          12,       8,          12,        9,                   21,                   21,           13,               17,          12
//      P185_TRK_0_V3BAR_CALHD_COL_MASK            //           1,         1,          1,       1,             1,        1,           1,       1,           1,        1,                    1,                    1,            1,                1,           1
//      P185_TRK_0_V3BAR_CALHD_COL_TYPES           //           N,         N,          N,       N,             N,        N,           N,       N,           N,        N,                    N,                    N,            N,                N,           N
//      P185_TRK_0_V3BAR_CALHD_TABLE_TYPE          // V

// Deprecated 11/23/2010
#define P185_PRE_TPI_SCALING_COEF             600  // PRE_TPI_SCALING_COEF_0,PRE_TPI_SCALING_COEF_1,PRE_TPI_SCALING_COEF_2,PRE_TPI_SCALING_COEF_3,PRE_TPI_SCALING_COEF_4
//      P185_PRE_TPI_SCALING_COEF_COL_WIDTH        //                     22,                    22,                    22,                    22,                    22
//      P185_PRE_TPI_SCALING_COEF_COL_MASK         //                      0,                     0,                     0,                     0,                     0
//      P185_PRE_TPI_SCALING_COEF_COL_TYPES        // *
//      P185_PRE_TPI_SCALING_COEF_TABLE_TYPE       // S
#define P185_VTPI_POLY_COEFS                  601  // PRE_NOM_TO_VCAT_COEF_0,PRE_NOM_TO_VCAT_COEF_1,PRE_NOM_TO_VCAT_COEF_2,PRE_NOM_TO_VCAT_COEF_3,PRE_NOM_TO_VCAT_COEF_4,POST_NOM_TO_VCAT_COEF_0,POST_NOM_TO_VCAT_COEF_1,POST_NOM_TO_VCAT_COEF_2,POST_NOM_TO_VCAT_COEF_3,POST_NOM_TO_VCAT_COEF_4,POST_TPI_SCALING_COEF_0,POST_TPI_SCALING_COEF_1,POST_TPI_SCALING_COEF_2,POST_TPI_SCALING_COEF_3,POST_TPI_SCALING_COEF_4,NUM_VTPI_COEF,PRE_NOM_TO_VCAT_COEF_5,PRE_NOM_TO_VCAT_COEF_6,POST_NOM_TO_VCAT_COEF_5,POST_NOM_TO_VCAT_COEF_6,POST_TPI_SCALING_COEF_5,POST_TPI_SCALING_COEF_6
//      P185_VTPI_POLY_COEFS_COL_WIDTH             //                     22,                    22,                    22,                    22,                    22,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,           13,                    22,                    22,                     23,                     23,                     23,                     23
//      P185_VTPI_POLY_COEFS_COL_MASK              //                      1,                     1,                     1,                     1,                     1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,            1,                     1,                     1,                      1,                      1,                      1,                      1
//      P185_VTPI_POLY_COEFS_COL_TYPES             //                      N,                     N,                     N,                     N,                     N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,            N,                     N,                     N,                      N,                      N,                      N,                      N
//      P185_VTPI_POLY_COEFS_TABLE_TYPE            // S

// Deprecated 11/23/2010
#define P250_ERROR_RATE                       602  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TEST_TRACK,BIT_ERROR_RATE,NUM_REVS,STATUS
//      P250_ERROR_RATE_COL_WIDTH                  //          11,        9,        10,        10,            14,       8,     7
//      P250_ERROR_RATE_COL_MASK                   //           0,        0,         0,         0,             0,       0,     0
//      P250_ERROR_RATE_COL_TYPES                  // *
//      P250_ERROR_RATE_TABLE_TYPE                 // S
#define P109_LUL_ERRORS                       603  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,OPERATION_TYPE,ERROR_CODE,WEDGE
//      P109_LUL_ERRORS_COL_WIDTH                  //          11,        10,      7,            14,        10,    5
//      P109_LUL_ERRORS_COL_MASK                   //           0,         0,      0,             0,         0,    0
//      P109_LUL_ERRORS_COL_TYPES                  // *
//      P109_LUL_ERRORS_TABLE_TYPE                 // S
#define P109_LUL_ERROR_COUNT                  604  // HD_PHYS_PSN,HD_LGC_PSN,SCAN_START_TRK_NUM,WRITE_ERROR_COUNT,READ_ERROR_COUNT,DEFECT_COUNT,ERROR_CODE,MAX_SYMBL_ERR_REGN,MAX_RDL_PTRN_LGTH,TA_COUNT,END_TRK_NUM,TRK_RANGE
//      P109_LUL_ERROR_COUNT_COL_WIDTH             //          11,        10,                18,               17,              16,          12,        10,                18,               17,       8,         11,        9
//      P109_LUL_ERROR_COUNT_COL_MASK              //           1,         1,                 1,                1,               1,           1,         1,                 1,                1,       1,          0,        0
//      P109_LUL_ERROR_COUNT_COL_TYPES             //           N,         N,                 N,                N,               N,           N,         V,                 N,                N,       N
//      P109_LUL_ERROR_COUNT_TABLE_TYPE            // S
#define P109_LOG_SKIP_TRACK                   605  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,SFT_ERR_CODE,RW_ERR_CODE
//      P109_LOG_SKIP_TRACK_COL_WIDTH              //          11,      7,        10,          12,         11
//      P109_LOG_SKIP_TRACK_COL_MASK               //           0,      0,         0,           0,          0
//      P109_LOG_SKIP_TRACK_COL_TYPES              // *
//      P109_LOG_SKIP_TRACK_TABLE_TYPE             // S
#define P227_CLRNC_VERIFY_ADJUST              606  // HD_PHYS_PSN,DATA_ZONE,TEST_MODE,HD_LGC_PSN,NUM_TRACKS_PER_ZONE,DELTA_ERROR_RATE_LIMIT,AVG_DELTA_ERROR_RATE_LMT,BITS_WRITTEN_LOG10,FLY_HEIGHT_PCT,READ_HEAT,WRITE_HEAT,WRITE_PRE_HEAT,WRITE_FLY_HEIGHT,READ_FLY_HEIGHT,BASE_ERROR_RATE,SWD_ERROR_RATE,FAIL_CODE,PCT_CORRECTION_APPLIED
//      P227_CLRNC_VERIFY_ADJUST_COL_WIDTH         //          11,        9,        9,        10,                 19,                    22,                      24,                18,            14,        9,        10,            14,              16,             14,             15,            14,        9,                    22
//      P227_CLRNC_VERIFY_ADJUST_COL_MASK          //           1,        1,        1,         1,                  1,                     1,                       1,                 1,             1,        1,         1,             1,               1,              1,              1,             1,        1,                     1
//      P227_CLRNC_VERIFY_ADJUST_COL_TYPES         //           N,        N,        V,         N,                  N,                     N,                       N,                 N,             N,        N,         N,             N,               N,              N,              N,             N,        N,                     N
//      P227_CLRNC_VERIFY_ADJUST_TABLE_TYPE        // M
#define P234_EAW_BER_SUM                      607  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,PERCENT_LIMIT,WRT_HEAT_DAC,PRE_HEAT_DAC,T_LEVEL,REVS_CNT,MAX_SECTORS,WRITE_TIMES,TEST_TYPE,SUM_ERROR
//      P234_EAW_BER_SUM_COL_WIDTH                 //          11,        10,        9,      7,           13,          12,          12,      7,       8,         11,         11,        9,        9
//      P234_EAW_BER_SUM_COL_MASK                  //           0,         0,        0,      0,            0,           0,           0,      0,       0,          0,          0,        0,        0
//      P234_EAW_BER_SUM_COL_TYPES                 // *
//      P234_EAW_BER_SUM_TABLE_TYPE                // M
#define P172_CLR_COEF_ADJ                     608  // HD_PHYS_PSN,DATA_ZONE,READ_SCALING,READ_OFFSET,WRITE_SCALING,WRITE_OFFSET,HD_LGC_PSN
//      P172_CLR_COEF_ADJ_COL_WIDTH                //          11,        9,          12,         11,           13,          12,        10
//      P172_CLR_COEF_ADJ_COL_MASK                 //           1,        1,           1,          1,            1,           1,         1
//      P172_CLR_COEF_ADJ_COL_TYPES                //           N,        N,           N,          N,            N,           N,         N
//      P172_CLR_COEF_ADJ_TABLE_TYPE               // S
#define P172_AFH_GAMMA                        609  // CONSTANT_TERM,LINEAR_TERM,QUADRATIC_TERM,GAMMA_TYPE
//      P172_AFH_GAMMA_COL_WIDTH                   //            13,         11,            14,        14
//      P172_AFH_GAMMA_COL_MASK                    //             1,          1,             1,         1
//      P172_AFH_GAMMA_COL_TYPES                   //             N,          N,             N,         V
//      P172_AFH_GAMMA_TABLE_TYPE                  // S
#define P252_FIRST_SCTR_COLD_WRT              610  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,TEST_TYPE,ECC_LEVEL,BITS_READ_CNT,HARD_ERROR_RATE,SOFT_ERROR_RATE,OTF_ERROR_RATE,RAW_ERROR_RATE,FAIL_CODE,BITS_IN_ERROR_CNT,BITS_IN_ERROR_BER
//      P252_FIRST_SCTR_COLD_WRT_COL_WIDTH         //          11,        9,        10,      7,        9,        9,           13,             15,             15,            14,            14,        9,               17,               17
//      P252_FIRST_SCTR_COLD_WRT_COL_MASK          //           1,        1,         1,      1,        1,        1,            1,              1,              1,             1,             1,        1,                1,                1
//      P252_FIRST_SCTR_COLD_WRT_COL_TYPES         //           N,        N,         N,      N,        V,        N,            N,              N,              N,             N,             N,        N,                N,                N
//      P252_FIRST_SCTR_COLD_WRT_TABLE_TYPE        // M
#define P178_HR_FAST_DPES                     611  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,HR_CLR,HTR_DAC
//      P178_HR_FAST_DPES_COL_WIDTH                //          11,      7,        10,     6,      7
//      P178_HR_FAST_DPES_COL_MASK                 //           0,      0,         0,     0,      0
//      P178_HR_FAST_DPES_COL_TYPES                // *
//      P178_HR_FAST_DPES_TABLE_TYPE               // V
#define P175_ZEDD_EVENT_SUMMARY               612  // HD_PHYS_PSN,ZAP_PSN,HD_LGC_PSN,TOTAL_ZEDD_EVENTS
//      P175_ZEDD_EVENT_SUMMARY_COL_WIDTH          //          11,      7,        10,               17
//      P175_ZEDD_EVENT_SUMMARY_COL_MASK           //           0,      0,         0,                0
//      P175_ZEDD_EVENT_SUMMARY_COL_TYPES          // *
//      P175_ZEDD_EVENT_SUMMARY_TABLE_TYPE         // S

// Deprecated 11/23/2010
#define P175_ZEDD_HISTOGRAM                   613  // HD_PHYS_PSN,ZAP_PSN,HD_LGC_PSN,SIGZAP,ZEDD_EVENTS
//      P175_ZEDD_HISTOGRAM_COL_WIDTH              //          11,      7,        10,     6,         11
//      P175_ZEDD_HISTOGRAM_COL_MASK               //           0,      0,         0,     0,          0
//      P175_ZEDD_HISTOGRAM_COL_TYPES              // *
//      P175_ZEDD_HISTOGRAM_TABLE_TYPE             // S
#define P166_SELFTEST_PACKAGENAME             614  // PACKAGE_NAME,DATE_TIME,CHANGE_LIST,BUILD_TYPE,GID,SF3_BASE_CL,F3_BASE_CL
//      P166_SELFTEST_PACKAGENAME_COL_WIDTH        //           17,       20,         11,        10, 10,         11,        10
//      P166_SELFTEST_PACKAGENAME_COL_MASK         //            0,        0,          0,         0,  0,          0,         0
//      P166_SELFTEST_PACKAGENAME_COL_TYPES        // *
//      P166_SELFTEST_PACKAGENAME_TABLE_TYPE       // S
#define P234_EAW_ERROR_RATE                   615  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,PERCENT_LIMIT,WRT_HEAT_DAC,PRE_HEAT_DAC,T_LEVEL,REVS_CNT,MAX_SECTORS,NUM_WRITES,DEGAUSS,DATA_SECTOR_NUMBER,ERROR_COUNT,FAIL_CODE
//      P234_EAW_ERROR_RATE_COL_WIDTH              //          11,        10,        9,      7,           13,          12,          12,      7,       8,         11,        10,      7,                18,         11,        9
//      P234_EAW_ERROR_RATE_COL_MASK               //           1,         1,        1,      1,            1,           1,           1,      1,       1,          1,         1,      1,                 1,          1,        1
//      P234_EAW_ERROR_RATE_COL_TYPES              //           N,         N,        N,      N,            N,           N,           N,      N,       N,          N,         N,      V,                 N,          N,        N
//      P234_EAW_ERROR_RATE_TABLE_TYPE             // S
#define P189_DCSKEW_HDCOEFF_INFO              616  // HEAD,FIT_ORDER_DC,COEFF0,COEFF1,COEFF2,COEFF3
//      P189_DCSKEW_HDCOEFF_INFO_COL_WIDTH         //    4,          12,     6,     6,     6,     6
//      P189_DCSKEW_HDCOEFF_INFO_COL_MASK          //    0,           0,     0,     0,     0,     0
//      P189_DCSKEW_HDCOEFF_INFO_COL_TYPES         // *
//      P189_DCSKEW_HDCOEFF_INFO_TABLE_TYPE        // S
#define P189_DCSKEW_FLR_DETAILS               617  // TRACK_INDEX,CYL,MAXFITERRDC,DCSKEW_I,TEMP_F
//      P189_DCSKEW_FLR_DETAILS_COL_WIDTH          //          11,  3,         11,       8,     6
//      P189_DCSKEW_FLR_DETAILS_COL_MASK           //           0,  0,          0,       0,     0
//      P189_DCSKEW_FLR_DETAILS_COL_TYPES          // *
//      P189_DCSKEW_FLR_DETAILS_TABLE_TYPE         // S
#define P109_TA_SMART_TRK                     618  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,SRVO_WEDGE,TA_AVG_AMP,TA_MAX_AMP,TA_QUAL_CNT
//      P109_TA_SMART_TRK_COL_WIDTH                //          11,      7,        10,        10,        10,        10,         11
//      P109_TA_SMART_TRK_COL_MASK                 //           1,      1,         1,         1,         1,         1,          1
//      P109_TA_SMART_TRK_COL_TYPES                //           N,      N,         N,         N,         N,         N,          N
//      P109_TA_SMART_TRK_TABLE_TYPE               // M
#define P159_SHOCK_SENSOR_ERRORS              619  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_SHOCK_SENSOR_ERRORS_COL_WIDTH         // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_SHOCK_SENSOR_ERRORS_COL_MASK          // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_SHOCK_SENSOR_ERRORS_COL_TYPES         // *
//      P159_SHOCK_SENSOR_ERRORS_TABLE_TYPE        // S
#define P159_OTHER                            620  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_OTHER_COL_WIDTH                       // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_OTHER_COL_MASK                        // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_OTHER_COL_TYPES                       // *
//      P159_OTHER_TABLE_TYPE                      // S
#define P175_SERVO_FAULT_COUNTS               621  // BIT_15,BIT_14,BIT_13,BIT_12,DLC_FLT,PSG_FLT,SHOCK_FLT,UEWG_FLT,TRK_ADDR_FLT,SERVO_FLT,CHAN_FLT,WRT_SV_SEC_FLT,WUS_FLT,WR_PRUS_FLT,GCHAN_FLT,RD_PRUS_FLT
//      P175_SERVO_FAULT_COUNTS_COL_WIDTH          //      6,     6,     6,     6,      7,      7,        9,       8,          12,        9,       8,            14,      7,         11,        9,         11
//      P175_SERVO_FAULT_COUNTS_COL_MASK           //      0,     0,     0,     0,      0,      0,        0,       0,           0,        0,       0,             0,      0,          0,        0,          0
//      P175_SERVO_FAULT_COUNTS_COL_TYPES          // *
//      P175_SERVO_FAULT_COUNTS_TABLE_TYPE         // S
#define P109_LUL_DFCT                         622  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SRVO_WEDGE,FLAW_LEN,FLAW_PSN,FLAW_TYPE
//      P109_LUL_DFCT_COL_WIDTH                    //          11,        10,      7,        10,       8,       8,        9
//      P109_LUL_DFCT_COL_MASK                     //           0,         0,      0,         0,       0,       0,        0
//      P109_LUL_DFCT_COL_TYPES                    // *
//      P109_LUL_DFCT_TABLE_TYPE                   // S
#define P011_RD_SRVO_VPD_VIA_WRD              623  // VPD_PAGE,VPD_WORD,SRVO_DATA
//      P011_RD_SRVO_VPD_VIA_WRD_COL_WIDTH         //        8,       8,        9
//      P011_RD_SRVO_VPD_VIA_WRD_COL_MASK          //        0,       0,        0
//      P011_RD_SRVO_VPD_VIA_WRD_COL_TYPES         // *
//      P011_RD_SRVO_VPD_VIA_WRD_TABLE_TYPE        // S
#define P159_SERVO_SYM_TAB                    624  // INDEX,ADDRESS,DATA
//      P159_SERVO_SYM_TAB_COL_WIDTH               //     5,      7,   4
//      P159_SERVO_SYM_TAB_COL_MASK                //     0,      0,   0
//      P159_SERVO_SYM_TAB_COL_TYPES               // *
//      P159_SERVO_SYM_TAB_TABLE_TYPE              // S
#define P166_RAP_REV_EXT                      625  // FW_IMPL_KEY,FORMAT_MAJOR,FORMAT_MINOR,CONTENT_MAJOR,CONTENT_MINOR,CONTENT_REV_FLD3,CONTENT_REV_FLD4
//      P166_RAP_REV_EXT_COL_WIDTH                 //          11,          12,          12,           13,           13,              16,              16
//      P166_RAP_REV_EXT_COL_MASK                  //           0,           0,           0,            0,            0,               0,               0
//      P166_RAP_REV_EXT_COL_TYPES                 // *
//      P166_RAP_REV_EXT_TABLE_TYPE                // S
#define P250_ERROR_RATE_BY_ZONE               626  // HD_PHYS_PSN,DATA_ZONE,NUM_SOVA_ITERATIONS,ERROR_RATE_TYPE,HD_LGC_PSN,START_TRK_NUM,ECC_LEVEL,BITS_READ_LOG10,RAW_ERROR_RATE,DATA_ERR_CNT,SYNC_ERR_CNT,FAIL_CODE,BITS_IN_ERROR_CNT,AVG_ITRTN_PER_CWORD
//      P250_ERROR_RATE_BY_ZONE_COL_WIDTH          //          11,        9,                 19,             15,        10,           13,        9,             15,            14,          12,          12,        9,               16,                 19
//      P250_ERROR_RATE_BY_ZONE_COL_MASK           //           1,        1,                  1,              1,         1,            1,        1,              1,             1,           1,           1,        1,                1,                  1
//      P250_ERROR_RATE_BY_ZONE_COL_TYPES          //           N,        N,                  N,              V,         N,            N,        N,              N,             N,           N,           N,        N,                N,                  N
//      P250_ERROR_RATE_BY_ZONE_TABLE_TYPE         // S
#define P011_SRVO_DIAG_RESP                   627  // *
//      P011_SRVO_DIAG_RESP_COL_WIDTH              // 5
//      P011_SRVO_DIAG_RESP_COL_MASK               // 0
//      P011_SRVO_DIAG_RESP_COL_TYPES              // *
//      P011_SRVO_DIAG_RESP_TABLE_TYPE             // S
#define P107_DEFECT_GRAY_CODES                628  // HD_PHYS_PSN,TRACK_NUM,GRAY_CODE_CYL_LOCN,OFFSET,SMR_LGC_CYL
//      P107_DEFECT_GRAY_CODES_COL_WIDTH           //          11,       13,                20,    16,         11
//      P107_DEFECT_GRAY_CODES_COL_MASK            //           0,        0,                 0,     0,          0
//      P107_DEFECT_GRAY_CODES_COL_TYPES           // *
//      P107_DEFECT_GRAY_CODES_TABLE_TYPE          // S
#define P049_HEAT_CLEARANCE                   629  // HD_PHYS_PSN,HT_ONLY_NOM_CYL,HT_ONLY_RAD,HT_ONLY_ZONE,HT_ONLY_CONTACT_DAC,HT_ONLY_CLR,FREQ_KHZ,IW,OSC,OSD,WRT_LOSS,WRT_HT_NOM_CYL,WRT_HT_RAD,WRT_HT_ZONE,WRT_HT_CONTACT_DAC,WRT_HT_CLR
//      P049_HEAT_CLEARANCE_COL_WIDTH              //          11,             16,         11,          12,                 19,         11,       8, 4,  4,  4,       9,            14,        10,         11,                18,        10
//      P049_HEAT_CLEARANCE_COL_MASK               //           0,              0,          0,           0,                  0,          0,       0, 0,  0,  0,       0,             0,         0,          0,                 0,         0
//      P049_HEAT_CLEARANCE_COL_TYPES              // *
//      P049_HEAT_CLEARANCE_TABLE_TYPE             // M
#define P025_LOAD_UNLOAD_PARAMS               630  // CYCLE_NUM,LOAD_TIME,LOAD_MAX_CUR,LOAD_MAX_VEL,LOAD_BEMF_CAL_GAIN,LOAD_BEMF_CAL_OFFSET,LOAD_BEMF_CAL_RESID_ERR,LOAD_BEMF_CAL_RETRY_CNT,LOAD_MIN_SPIN_SPEED,LOAD_HEAD_RETRY_CNT,LOAD_STATUS_CODE,LOAD_FIRST_SRVO_TRK_NUM,ULD_TIME,ULD_MAX_CUR,ULD_MAX_VEL,ULD_BEMF_CAL_GAIN,ULD_BEMF_CAL_OFFSET,ULD_BEMF_CAL_RESID_ERR,ULD_BEMF_CAL_RETRY_CNT,ULD_MIN_SPIN_SPEED,ULD_HEAD_RETRY_CNT,ULD_STATUS_CODE,VCM_OFFSET
//      P025_LOAD_UNLOAD_PARAMS_COL_WIDTH          //         9,        9,          12,          12,                18,                  20,                     23,                     23,                 19,                 19,              16,                     23,       8,         11,         11,               17,                 19,                    22,                    22,                18,                18,             15,        10
//      P025_LOAD_UNLOAD_PARAMS_COL_MASK           //         1,        1,           1,           1,                 1,                   1,                      1,                      1,                  1,                  1,               1,                      1,       1,          1,          1,                1,                  1,                     1,                     1,                 1,                 1,              1,         1
//      P025_LOAD_UNLOAD_PARAMS_COL_TYPES          //         N,        N,           N,           N,                 V,                   N,                      N,                      N,                  N,                  N,               N,                      N,       N,          N,          N,                V,                  N,                     N,                     N,                 N,                 N,              N,         N
//      P025_LOAD_UNLOAD_PARAMS_TABLE_TYPE         // S
#define P103_WIJITA_POLYFIT_COEFF             631  // HD_PHYS_PSN,HD_LGC_PSN,COSTANT,ORDER_1ST,ORDER_2ND,ORDER_3RD
//      P103_WIJITA_POLYFIT_COEFF_COL_WIDTH        //          11,        10,      7,        9,        9,        9
//      P103_WIJITA_POLYFIT_COEFF_COL_MASK         //           0,         0,      0,        0,        0,        0
//      P103_WIJITA_POLYFIT_COEFF_COL_TYPES        // *
//      P103_WIJITA_POLYFIT_COEFF_TABLE_TYPE       // S
#define P103_WIJITA_SLOPE                     632  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,AGC_SLOPE_VALUE,HD_STATUS
//      P103_WIJITA_SLOPE_COL_WIDTH                //          11,        10,   4,             15,        9
//      P103_WIJITA_SLOPE_COL_MASK                 //           0,         0,   0,              0,        0
//      P103_WIJITA_SLOPE_COL_TYPES                // *
//      P103_WIJITA_SLOPE_TABLE_TYPE               // S
#define P051_MILLIONW_PREDICTIN               633  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,TRK_INDEX,RRAW_BER,RRAW_BER10K,PRED_1M,OTF_BER,OTF_BER10K,OTF_DELTA,HARD_ERR_CNT1W,HARD_ERR_CNT10K,SOFT_ERR_CNT10K
//      P051_MILLIONW_PREDICTIN_COL_WIDTH          //          11,        9,        10,      7,        9,       8,         11,      7,      7,        10,        9,            14,             15,             15
//      P051_MILLIONW_PREDICTIN_COL_MASK           //           0,        0,         0,      0,        0,       0,          0,      0,      0,         0,        0,             0,              0,              0
//      P051_MILLIONW_PREDICTIN_COL_TYPES          // *
//      P051_MILLIONW_PREDICTIN_TABLE_TYPE         // M
#define P198_DELTA_THRSHLD_RGSTR              634  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,D_VGA_RGSTR,R_VGA_RGSTR,F_VGA_RGSTR
//      P198_DELTA_THRSHLD_RGSTR_COL_WIDTH         //          11,        9,        10,         11,         11,         11
//      P198_DELTA_THRSHLD_RGSTR_COL_MASK          //           1,        1,         1,          1,          1,          1
//      P198_DELTA_THRSHLD_RGSTR_COL_TYPES         //           N,        N,         N,          N,          N,          N
//      P198_DELTA_THRSHLD_RGSTR_TABLE_TYPE        // M
#define P185_V3BAR_STROKE_HD                  635  // HD_PHYS_PSN,HD_LGC_PSN,AVAIL_STROKE,MAX_FLY_CYL,NEW_TRK_0,ABS_ID_SKEW,ACMAG,ID_PAD_TRKS
//      P185_V3BAR_STROKE_HD_COL_WIDTH             //          11,        10,          12,         11,        9,         11,    5,         11
//      P185_V3BAR_STROKE_HD_COL_MASK              //           0,         0,           0,          0,        0,          0,    0,          0
//      P185_V3BAR_STROKE_HD_COL_TYPES             // *
//      P185_V3BAR_STROKE_HD_TABLE_TYPE            // S
#define P185_ESG_MAX_V3BAR_STROKE             636  // NOMINAL_STROKE,MAX_AVAIL_STROKE,LIMITING_HD
//      P185_ESG_MAX_V3BAR_STROKE_COL_WIDTH        //             14,              16,         11
//      P185_ESG_MAX_V3BAR_STROKE_COL_MASK         //              1,               1,          1
//      P185_ESG_MAX_V3BAR_STROKE_COL_TYPES        //              N,               N,          N
//      P185_ESG_MAX_V3BAR_STROKE_TABLE_TYPE       // S
#define P185_STROKE_EXPANDED                  637  // PCT_STROKE_EXPANDED,ORIG_TPI,NEW_TPI,ACTUAL_STROKE_ADJ
//      P185_STROKE_EXPANDED_COL_WIDTH             //                  19,       8,      7,               17
//      P185_STROKE_EXPANDED_COL_MASK              //                   1,       1,      1,                1
//      P185_STROKE_EXPANDED_COL_TYPES             //                   N,       N,      N,                N
//      P185_STROKE_EXPANDED_TABLE_TYPE            // S
#define P185_ESG_V3BAR_OST                    638  // OLD_OST_MULTIPLIER,NEW_OST_MULTIPLIER
//      P185_ESG_V3BAR_OST_COL_WIDTH               //                 18,                18
//      P185_ESG_V3BAR_OST_COL_MASK                //                  1,                 1
//      P185_ESG_V3BAR_OST_COL_TYPES               //                  N,                 N
//      P185_ESG_V3BAR_OST_TABLE_TYPE              // S
#define P185_DEFAULTS                         639  // DFLT_MAX_CYLINDER,DFLT_TRK_0
//      P185_DEFAULTS_COL_WIDTH                    //                17,        10
//      P185_DEFAULTS_COL_MASK                     //                 0,         0
//      P185_DEFAULTS_COL_TYPES                    // *
//      P185_DEFAULTS_TABLE_TYPE                   // S
#define P000_DRIVE_OP_FAILURE                 640  // OPERATION,HD_PHYS_PSN,ZONE,TRK_NUM,SECTOR,OFFTRACK_PCT,SENSE_CODE
//      P000_DRIVE_OP_FAILURE_COL_WIDTH            //         9,         11,   4,      7,     6,          12,        10
//      P000_DRIVE_OP_FAILURE_COL_MASK             //         0,          0,   0,      0,     0,           0,         0
//      P000_DRIVE_OP_FAILURE_COL_TYPES            // *
//      P000_DRIVE_OP_FAILURE_TABLE_TYPE           // M
#define P000_PASSED_WITH_RETRIES              641  // OPERATION,HD_PHYS_PSN,ZONE,TRK_NUM,SECTOR,OFFTRACK_PCT,RETRIES,SENSE_CODE
//      P000_PASSED_WITH_RETRIES_COL_WIDTH         //         9,         11,   4,      7,     6,          12,      7,        10
//      P000_PASSED_WITH_RETRIES_COL_MASK          //         0,          0,   0,      0,     0,           0,      0,         0
//      P000_PASSED_WITH_RETRIES_COL_TYPES         // *
//      P000_PASSED_WITH_RETRIES_TABLE_TYPE        // M
#define P175_IZBE_HISTOGRAM                   642  // HD_PHYS_PSN,ZAP_PSN,HD_LGC_PSN,IZBE_REV,IZBE_EXCEPT_CNT,IZBE_REVS_SAVED
//      P175_IZBE_HISTOGRAM_COL_WIDTH              //          11,      7,        10,       8,             15,             15
//      P175_IZBE_HISTOGRAM_COL_MASK               //           1,      1,         1,       1,              1,              1
//      P175_IZBE_HISTOGRAM_COL_TYPES              //           N,      V,         N,       N,              N,              N
//      P175_IZBE_HISTOGRAM_TABLE_TYPE             // S
#define P175_IZBE_SUMMARY                     643  // HD_PHYS_PSN,ZAP_PSN,ZAP_ZONE,HD_LGC_PSN,IZBE_EXCEPT_CNT,IZBE_AVG_REVS,IZBE_TOTAL_REVS_SAVED,IZBE_LAST_REV_EXCEPTS,ZAP_ZONE_TRACK_COUNT
//      P175_IZBE_SUMMARY_COL_WIDTH                //          11,      7,       8,        10,             15,           13,                   21,                   21,                  20
//      P175_IZBE_SUMMARY_COL_MASK                 //           1,      1,       1,         1,              1,            1,                    1,                    1,                   1
//      P175_IZBE_SUMMARY_COL_TYPES                //           N,      V,       N,         N,              N,            N,                    N,                    N,                   N
//      P175_IZBE_SUMMARY_TABLE_TYPE               // S
#define P175_AUDIT_HISTOGRAM                  644  // HD_PHYS_PSN,ZAP_PSN,AUDIT_TYPE,ZAP_ZONE,HD_LGC_PSN,PRCNT_TRK_WIDTH,SCTR_ABS_RRO_CNT,MABS_RRO_CNT,3SIG_RRO_CNT,IZBE_MABS_RRO_EXCEPT_CNT
//      P175_AUDIT_HISTOGRAM_COL_WIDTH             //          11,      7,        10,       8,        10,             15,              16,          12,          12,                      24
//      P175_AUDIT_HISTOGRAM_COL_MASK              //           0,      0,         0,       0,         0,              0,               0,           0,           0,                       0
//      P175_AUDIT_HISTOGRAM_COL_TYPES             // *
//      P175_AUDIT_HISTOGRAM_TABLE_TYPE            // S
#define P172_DLL_TEMP                         645  // DLL_COUNT,DRIVE_TEMP
//      P172_DLL_TEMP_COL_WIDTH                    //         9,        10
//      P172_DLL_TEMP_COL_MASK                     //         1,         1
//      P172_DLL_TEMP_COL_TYPES                    //         N,         N
//      P172_DLL_TEMP_TABLE_TYPE                   // S
#define P251_ERR_RATE_BUCKET                  646  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,CHAN_FEATURE_ID,INDEX,FEATURE_OPTI_VAL,HD_LGC_PSN,ERROR_RATE,TOTAL_ERR,TLEVEL,SYNC_ERR,ECC_ERR,NUM_REVS,TOT_SCTR_RD
//      P251_ERR_RATE_BUCKET_COL_WIDTH             //          11,        9,      7,             15,    5,              16,        10,        10,        9,     6,       8,      7,       8,         11
//      P251_ERR_RATE_BUCKET_COL_MASK              //           0,        0,      0,              0,    0,               0,         0,         0,        0,     0,       0,      0,       0,          0
//      P251_ERR_RATE_BUCKET_COL_TYPES             // *
//      P251_ERR_RATE_BUCKET_TABLE_TYPE            // S
#define P251_BEST_ERR_RATE                    647  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,CHAN_FEATURE_ID,INDEX,HD_LGC_PSN,FEATURE_OPTI_VAL,ERROR_RATE,TOTAL_ERR,PREV_FEATURE_OPTI_VAL,FEATURE_AUX_VAL,TOT_SCTR_RD,TOTAL_BITS_READ
//      P251_BEST_ERR_RATE_COL_WIDTH               //          11,        9,      7,             15,    5,        10,              16,        10,        9,                   21,             15,         11,             15
//      P251_BEST_ERR_RATE_COL_MASK                //           0,        0,      0,              0,    0,         0,               0,         0,        0,                    0,              0,          0,              0
//      P251_BEST_ERR_RATE_COL_TYPES               // *
//      P251_BEST_ERR_RATE_TABLE_TYPE              // S
#define P235_DRIVE_TEMPERATURE                648  // INITIAL_TEMPERATURE,CURRENT_TEMPERATURE
//      P235_DRIVE_TEMPERATURE_COL_WIDTH           //                  20,                 19
//      P235_DRIVE_TEMPERATURE_COL_MASK            //                   0,                  0
//      P235_DRIVE_TEMPERATURE_COL_TYPES           // *
//      P235_DRIVE_TEMPERATURE_TABLE_TYPE          // S
#define P185_V3BAR_ID_THRESHOLDS              649  // HD_PHYS_PSN,TARGET_CYL,THIS_INT,INT_AVG_MAX,V3BAR_SETTLE_COUNTER,V3BAR_SETTLE_COUNTER_MAX
//      P185_V3BAR_ID_THRESHOLDS_COL_WIDTH         //          11,        10,       8,         11,                  20,                      24
//      P185_V3BAR_ID_THRESHOLDS_COL_MASK          //           0,         0,       0,          0,                   0,                       0
//      P185_V3BAR_ID_THRESHOLDS_COL_TYPES         // *
//      P185_V3BAR_ID_THRESHOLDS_TABLE_TYPE        // S
#define P185_V3BAR_OD_THRESHOLDS              650  // HD_PHYS_PSN,TARGET_CYL,ACFF_DELTA_MAX,ACFF_DELTA_SCALE,ACFF_DELTA_AVG,ACFF_DELTA_SPIKE_WEIGHT,V3BAR_SETTLE_COUNTER,V3BAR_SETTLE_COUNTER_MAX
//      P185_V3BAR_OD_THRESHOLDS_COL_WIDTH         //          11,        10,            14,              16,            14,                     23,                  20,                      24
//      P185_V3BAR_OD_THRESHOLDS_COL_MASK          //           0,         0,             0,               0,             0,                      0,                   0,                       0
//      P185_V3BAR_OD_THRESHOLDS_COL_TYPES         // *
//      P185_V3BAR_OD_THRESHOLDS_TABLE_TYPE        // S
#define P035_DICE_ITERATION                   651  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,WRT_CUR_OVS_DAC,WRT_CUR_DUR_DAC,WRT_CUR_DAC,HTR_DAC,TEST_ITERATION,MEAN_AGC,NUM_PES_EVENTS,NUM_AGC_EVENTS,TOTAL_EVENTS,CNTCT_TEST_STAGE
//      P035_DICE_ITERATION_COL_WIDTH              //          11,      8,        10,             15,             15,         11,      7,            14,       8,            14,            14,          12,              16
//      P035_DICE_ITERATION_COL_MASK               //           1,      1,         1,              1,              1,          1,      1,             1,       1,             1,             1,           1,               1
//      P035_DICE_ITERATION_COL_TYPES              //           N,      N,         N,              N,              N,          N,      N,             N,       N,             N,             N,           N,               V
//      P035_DICE_ITERATION_TABLE_TYPE             // M
#define P035_DICE_CONTACT_STATS               652  // HD_PHYS_PSN,NUM_CONTACT_REVS,RETRIES,MIN_HTR_DAC,MAX_HTR_DAC,DAC_RANGE,MIN_HTR_ZONE,MAX_HTR_ZONE,RSQ_POLYFIT,STDEV_POLYFIT,HD_LGC_PSN
//      P035_DICE_CONTACT_STATS_COL_WIDTH          //          11,              16,      7,         11,         11,        9,          12,          12,         11,           13,        10
//      P035_DICE_CONTACT_STATS_COL_MASK           //           1,               1,      1,          1,          1,        1,           1,           1,          1,            1,         1
//      P035_DICE_CONTACT_STATS_COL_TYPES          //           N,               N,      N,          N,          N,        N,           N,           N,          N,            N,         N
//      P035_DICE_CONTACT_STATS_TABLE_TYPE         // V

// Deprecated 11/23/2010
#define P035_DICE_AUDIT                       653  // HD_PHYS_PSN,TRK_NUM,ORIG_HTR_DAC,CORRECTED_HTR_DAC
//      P035_DICE_AUDIT_COL_WIDTH                  //          11,      8,          12,               17
//      P035_DICE_AUDIT_COL_MASK                   //           0,      0,           0,                0
//      P035_DICE_AUDIT_COL_TYPES                  // *
//      P035_DICE_AUDIT_TABLE_TYPE                 // M
#define P191_HSC_DATA2                        654  // HD_PHYS_PSN,DATA_ZONE,ITERATION,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,RADIUS,HTR_DAC,REF_3RD_HARM,HSC_3RD_HARM,HSC_MSRD_HIP,COEF_CALC_HIP,HTR_TAU_USECS,HTR_TAU_CORR_COEF
//      P191_HSC_DATA2_COL_WIDTH                   //          11,        9,        9,        10,         11,         11,     6,      7,          12,          12,          12,           13,           13,               17
//      P191_HSC_DATA2_COL_MASK                    //           0,        0,        0,         0,          0,          0,     0,      0,           0,           0,           0,            0,            0,                0
//      P191_HSC_DATA2_COL_TYPES                   // *
//      P191_HSC_DATA2_TABLE_TYPE                  // S
#define P166_CONTROLLER_REV                   655  // REV_REGISTER
//      P166_CONTROLLER_REV_COL_WIDTH              //           12
//      P166_CONTROLLER_REV_COL_MASK               //            0
//      P166_CONTROLLER_REV_COL_TYPES              // *
//      P166_CONTROLLER_REV_TABLE_TYPE             // S
#define P250_FLAW_LIST_SEARCH                 656  // HD_PHYS_PSN,ZONE,START_TRK,END_TRK,REVS
//      P250_FLAW_LIST_SEARCH_COL_WIDTH            //          11,   4,        9,      7,   4
//      P250_FLAW_LIST_SEARCH_COL_MASK             //           0,   0,        0,      0,   0
//      P250_FLAW_LIST_SEARCH_COL_TYPES            // *
//      P250_FLAW_LIST_SEARCH_TABLE_TYPE           // S
#define P046_ACFF_HARMONICS                   657  // HD_PHYS_PSN,HARMONIC,HD_LGC_PSN,SIN_COEFF,COS_COEFF
//      P046_ACFF_HARMONICS_COL_WIDTH              //          11,       8,        10,        9,        9
//      P046_ACFF_HARMONICS_COL_MASK               //           0,       0,         0,        0,        0
//      P046_ACFF_HARMONICS_COL_TYPES              // *
//      P046_ACFF_HARMONICS_TABLE_TYPE             // S
#define P001_DEMOD_SYNC_STATUS                658  // HD_PHYS_PSN,HEAD_STATUS
//      P001_DEMOD_SYNC_STATUS_COL_WIDTH           //          11,         11
//      P001_DEMOD_SYNC_STATUS_COL_MASK            //           0,          0
//      P001_DEMOD_SYNC_STATUS_COL_TYPES           // *
//      P001_DEMOD_SYNC_STATUS_TABLE_TYPE          // V
#define P000_SEEK_LENGTH_RETRIES              659  // HD_PHYS_PSN,TEST_CYL,ITERATION,RANDOM_CYL,RETRIES
//      P000_SEEK_LENGTH_RETRIES_COL_WIDTH         //          11,       8,        9,        10,      7
//      P000_SEEK_LENGTH_RETRIES_COL_MASK          //           1,       1,        1,         1,      1
//      P000_SEEK_LENGTH_RETRIES_COL_TYPES         //           N,       N,        N,         N,      N
//      P000_SEEK_LENGTH_RETRIES_TABLE_TYPE        // S
#define P178_RD_OFF_TRK_LIM                   660  // RD_OFF_TRK_LIM
//      P178_RD_OFF_TRK_LIM_COL_WIDTH              //             14
//      P178_RD_OFF_TRK_LIM_COL_MASK               //              0
//      P178_RD_OFF_TRK_LIM_COL_TYPES              // *
//      P178_RD_OFF_TRK_LIM_TABLE_TYPE             // S
#define P251_BEST_FITNESS_POINT2              661  // HD_PHYS_PSN,DATA_ZONE,TEST_ORDER,TRK_NUM,HD_LGC_PSN,RGSTR_ID,NOMINAL_VAL,FITNESS,OPTI_VAL,AUX_VAL,HD_STATUS
//      P251_BEST_FITNESS_POINT2_COL_WIDTH         //          11,        9,        10,      7,        10,       8,         11,      7,       8,      7,        9
//      P251_BEST_FITNESS_POINT2_COL_MASK          //           1,        1,         1,      1,         1,       1,          1,      1,       1,      1,        1
//      P251_BEST_FITNESS_POINT2_COL_TYPES         //           N,        N,         N,      N,         N,       V,          N,      N,       N,      N,        N
//      P251_BEST_FITNESS_POINT2_TABLE_TYPE        // S
#define P251_ATTENUATION_VGA2                 662  // HD_PHYS_PSN,DATA_ZONE,TEST_ORDER,HD_LGC_PSN,ATTC,ATT2S,ATT2R,VGAS,VGAR,HD_STATUS
//      P251_ATTENUATION_VGA2_COL_WIDTH            //          11,        9,        10,        10,   4,    5,    5,   4,   4,        9
//      P251_ATTENUATION_VGA2_COL_MASK             //           1,        1,         1,         1,   1,    1,    1,   1,   1,        1
//      P251_ATTENUATION_VGA2_COL_TYPES            //           N,        N,         N,         N,   N,    N,    N,   N,   N,        N
//      P251_ATTENUATION_VGA2_TABLE_TYPE           // S
#define P172_SAP_HD_MAP                       663  // HD_LGC_PSN,HD_PHYS_PSN,MAX_HD_SAP
//      P172_SAP_HD_MAP_COL_WIDTH                  //         10,         11,        10
//      P172_SAP_HD_MAP_COL_MASK                   //          0,          0,         0
//      P172_SAP_HD_MAP_COL_TYPES                  // *
//      P172_SAP_HD_MAP_TABLE_TYPE                 // S
#define P035_DICE_FINAL_CONTACT               664  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,HTR_DAC,MEAN_AGC,NUM_PES_EVENTS,NUM_AGC_EVENTS,TOTAL_EVENTS,TEST_MODE
//      P035_DICE_FINAL_CONTACT_COL_WIDTH          //          11,        9,        10,      8,      7,       8,            14,            14,          12,        9
//      P035_DICE_FINAL_CONTACT_COL_MASK           //           1,        1,         1,      1,      1,       1,             1,             1,           1,        1
//      P035_DICE_FINAL_CONTACT_COL_TYPES          //           N,        N,         N,      N,      N,       N,             N,             N,           N,        V
//      P035_DICE_FINAL_CONTACT_TABLE_TYPE         // M
#define P035_DICE_SUMMARY                     665  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,HTR_DAC,CAPPED_HTR_DAC,TEST_MODE
//      P035_DICE_SUMMARY_COL_WIDTH                //          11,        9,        10,      7,            14,        9
//      P035_DICE_SUMMARY_COL_MASK                 //           1,        1,         1,      1,             1,        1
//      P035_DICE_SUMMARY_COL_TYPES                //           N,        N,         N,      N,             N,        V
//      P035_DICE_SUMMARY_TABLE_TYPE               // M
#define P126_PARITY_ERR_FAILURE               666  // OPERATION,HD_PHYS_PSN,HD_LOG_PSN,LOG_CYLINDER,NREVS,PERR_CNT
//      P126_PARITY_ERR_FAILURE_COL_WIDTH          //        20,         11,        10,          12,    5,       8
//      P126_PARITY_ERR_FAILURE_COL_MASK           //         0,          0,         0,           0,    0,       0
//      P126_PARITY_ERR_FAILURE_COL_TYPES          // *
//      P126_PARITY_ERR_FAILURE_TABLE_TYPE         // S
#define P159_TRIP_ERR_SUM                     667  // HD_PHYS_PSN,HD_LGC_PSN,SWD_DVGA,SWD_RVGA,SWD_FVGA,TM_NOT_DETECTED,TM_TIME_ERR,TM_NOT_DETECTED_VEL,TM_TIME_ERR_VEL,LV_DETECTED_SHOCK,UNSAFE_ERR_ON_TRACK,OBSRV_SCTR_ERR,OBSRV_SCTR_ERR_VEL,PES_DETECTED_SHOCK,PREDICTED_OFTRK,FALSE_INDEX_ERR,FALSE_PREDICTED_OFTRK,RRO_PARITY_ERR_ZAP,DLC_UNSAFE,PZT_OXIDATION_DET,LARGE_INTERSAMPLE_MOTION_BINS,STATESPACE_TRACKING_RCVRY,STATESPACE_SEEK_RCVRY,DUAL_STAGE_LOCKED_OUT,DLC_CAPPING_ONTRK_DET,SERVO_TERMINATE_TRACKING,SERVO_TERMINATE_SEEKING,SHOCK_SENSOR_DETECTED,SAMPLED_SENSOR_DET_SHOCK,PZT_SATURATION_ERR,SWOT_SENSOR_DET_SHOCK,SWOT_SENSOR_GAIN_LOW,SWOT_SENSOR_GAIN_HIGH
//      P159_TRIP_ERR_SUM_COL_WIDTH                //          11,        10,       8,       8,       8,             15,         11,                 19,             15,               17,                 19,            14,                18,                18,             15,             15,                   21,                18,        10,               17,                           29,                       25,                   21,                   21,                   21,                      24,                     22,                   21,                      24,                18,                   21,                  20,                   21
//      P159_TRIP_ERR_SUM_COL_MASK                 //           1,         1,       1,       1,       1,              1,          1,                  1,              1,                1,                  1,             1,                 1,                 1,              1,              1,                    1,                 1,         1,                1,                            1,                        1,                    1,                    1,                    1,                       1,                      1,                    1,                       1,                 1,                    1,                   1,                    1
//      P159_TRIP_ERR_SUM_COL_TYPES                //           N,         N,       N,       N,       N,              N,          N,                  N,              N,                N,                  N,             N,                 N,                 N,              N,              N,                    N,                 N,         N,                N,                            N,                        N,                    N,                    N,                    N,                       N,                      N,                    N,                       N,                 N,                    N,                   N,                    N
//      P159_TRIP_ERR_SUM_TABLE_TYPE               // V
#define P172_OCLIM                            668  // HD_LGC_PSN,HD_PHYS_PSN,OCLIM
//      P172_OCLIM_COL_WIDTH                       //         10,         11,    5
//      P172_OCLIM_COL_MASK                        //          0,          0,    0
//      P172_OCLIM_COL_TYPES                       // *
//      P172_OCLIM_TABLE_TYPE                      // S
#define P033_PES_EVENT                        669  // HEAD,ORIG_CYL,NEW_CYL,RETRIES,UNSAFES,REPLACED_PES,FAILCODE
//      P033_PES_EVENT_COL_WIDTH                   //    4,       8,      7,      7,      7,          12,       8
//      P033_PES_EVENT_COL_MASK                    //    0,       0,      0,      0,      0,           0,       0
//      P033_PES_EVENT_COL_TYPES                   // *
//      P033_PES_EVENT_TABLE_TYPE                  // M
#define P033_PES_SUMMARY                      670  // TOT_TRACKS,TOT_RETRIES,TOT_UNSAFES,TOT_REPLACED
//      P033_PES_SUMMARY_COL_WIDTH                 //         10,         11,         11,          12
//      P033_PES_SUMMARY_COL_MASK                  //          0,          0,          0,           0
//      P033_PES_SUMMARY_COL_TYPES                 // *
//      P033_PES_SUMMARY_TABLE_TYPE                // M
#define P152_PHASE_PEAK_SUMMARY               671  // HD_PHYS_PSN,PEAK_RANK,HD_LGC_PSN,PEAK_PHASE,PEAK_FREQUENCY,PHASE_DELTA
//      P152_PHASE_PEAK_SUMMARY_COL_WIDTH          //          11,        9,        10,        10,            14,         11
//      P152_PHASE_PEAK_SUMMARY_COL_MASK           //           1,        1,         1,         1,             1,          1
//      P152_PHASE_PEAK_SUMMARY_COL_TYPES          //           N,        N,         N,         N,             N,          N
//      P152_PHASE_PEAK_SUMMARY_TABLE_TYPE         // S
#define P251_RAW_DIBIT_DATA                   672  // HD_PHYS_PSN,ZONE,PARM_VALUE,HD_LGC_PSN,CL_LEFT,CL_RIGHT,RAW_ECHOLOC,NORMALIZED_ECHOLOC,ABS_ECHOLOC
//      P251_RAW_DIBIT_DATA_COL_WIDTH              //          11,   4,        10,        10,      7,       8,         11,                18,         11
//      P251_RAW_DIBIT_DATA_COL_MASK               //           0,   0,         0,         0,      0,       0,          0,                 0,          0
//      P251_RAW_DIBIT_DATA_COL_TYPES              // *
//      P251_RAW_DIBIT_DATA_TABLE_TYPE             // M
#define P251_DIBIT_OPTI_VALUES                673  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RGSTR_A_ID,RGSTR_A_VALUE,RGSTR_B_ID,RGSTR_B_VALUE
//      P251_DIBIT_OPTI_VALUES_COL_WIDTH           //          11,        4,        10,        10,           13,        10,           13
//      P251_DIBIT_OPTI_VALUES_COL_MASK            //           1,        1,         1,         1,            1,         1,            1
//      P251_DIBIT_OPTI_VALUES_COL_TYPES           //           N,        N,         N,         N,            N,         N,            N
//      P251_DIBIT_OPTI_VALUES_TABLE_TYPE          // S
#define P000_MEMORY_LEAK                      674  // HEAP_TYPE,DESCRIPTOR,DESC_ADDRESS,ALLOCATED,DESC_SIZE,RET_ADDRESS,PERSISTENT
//      P000_MEMORY_LEAK_COL_WIDTH                 //         9,        11,          12,        9,        9,         11,        10
//      P000_MEMORY_LEAK_COL_MASK                  //         0,         0,           0,        0,        0,          0,         0
//      P000_MEMORY_LEAK_COL_TYPES                 // *
//      P000_MEMORY_LEAK_TABLE_TYPE                // S
#define P232_NRRO_SUMMARY                     675  // HD_LGC_PSN,HD_PHYS_PSN,BASE_NRRO,MIN_NRRO,OLD_GAIN,BEST_GAIN
//      P232_NRRO_SUMMARY_COL_WIDTH                //         10,         11,        9,       8,       8,        9
//      P232_NRRO_SUMMARY_COL_MASK                 //          0,          0,        0,       0,       0,        0
//      P232_NRRO_SUMMARY_COL_TYPES                // *
//      P232_NRRO_SUMMARY_TABLE_TYPE               // S
#define P232_UACT_CAL_VALUES                  676  // HD_PHYS_PSN,HD_LGC_PSN,AVG_DAC_GAIN,K_DAC,FAIL_CODE
//      P232_UACT_CAL_VALUES_COL_WIDTH             //          11,        10,          12,    6,        9
//      P232_UACT_CAL_VALUES_COL_MASK              //           1,         1,           1,    1,        1
//      P232_UACT_CAL_VALUES_COL_TYPES             //           N,         N,           N,    N,        N
//      P232_UACT_CAL_VALUES_TABLE_TYPE            // S
#define P232_DEBUG_UACT_CAL                   677  // HD_LGC_PSN,HD_PHYS_PSN,FREQUENCY,DAC_GAIN
//      P232_DEBUG_UACT_CAL_COL_WIDTH              //         10,         11,        9,       8
//      P232_DEBUG_UACT_CAL_COL_MASK               //          0,          0,        0,       0
//      P232_DEBUG_UACT_CAL_COL_TYPES              // *
//      P232_DEBUG_UACT_CAL_TABLE_TYPE             // S
#define P232_DEBUG_NRRO                       678  // HD_LGC_PSN,HD_PHYS_PSN,GAIN_UP,NRRO_UP,GAIN_DOWN,NRRO_DOWN
//      P232_DEBUG_NRRO_COL_WIDTH                  //         10,         11,      7,      7,        9,        9
//      P232_DEBUG_NRRO_COL_MASK                   //          0,          0,      0,      0,        0,        0
//      P232_DEBUG_NRRO_COL_TYPES                  // *
//      P232_DEBUG_NRRO_TABLE_TYPE                 // S
#define P177_GAIN_DATA_DETAILS2               679  // HD_PHYS_PSN,ITERATION,HD_LGC_PSN,ORIG_GAIN,MIN_VGAS,MAX_VGAS,AVG_VGAS,UPDATED_GAIN
//      P177_GAIN_DATA_DETAILS2_COL_WIDTH          //          11,        9,        10,        9,       8,       8,       8,          12
//      P177_GAIN_DATA_DETAILS2_COL_MASK           //           1,        1,         1,        1,       1,       1,       1,           1
//      P177_GAIN_DATA_DETAILS2_COL_TYPES          //           N,        N,         N,        N,       N,       N,       N,           N
//      P177_GAIN_DATA_DETAILS2_TABLE_TYPE         // S
#define P109_LUL_VER_ERR_DETAIL               680  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SCTR_NUM,SCTR_OFST,SYMBL_NDX,RPT_CNT
//      P109_LUL_VER_ERR_DETAIL_COL_WIDTH          //          11,        10,      7,       8,        9,        9,      7
//      P109_LUL_VER_ERR_DETAIL_COL_MASK           //           1,         1,      1,       1,        1,        1,      1
//      P109_LUL_VER_ERR_DETAIL_COL_TYPES          //           N,         N,      N,       N,        N,        N,      N
//      P109_LUL_VER_ERR_DETAIL_TABLE_TYPE         // S
#define P109_LUL_SUMMARY_HD                   681  // HD_PHYS_PSN,HD_LGC_PSN,VFYD_ERRS,UNVFYD_ERRS
//      P109_LUL_SUMMARY_HD_COL_WIDTH              //          11,        10,        9,         11
//      P109_LUL_SUMMARY_HD_COL_MASK               //           1,         1,        1,          1
//      P109_LUL_SUMMARY_HD_COL_TYPES              //           N,         N,        N,          N
//      P109_LUL_SUMMARY_HD_TABLE_TYPE             // S
#define P117_LUL_SCRATCH_FILL_HD              682  // HD_PHYS_PSN,HD_LGC_PSN,TOT_SCRATCHES_FILLED
//      P117_LUL_SCRATCH_FILL_HD_COL_WIDTH         //          11,        10,                  20
//      P117_LUL_SCRATCH_FILL_HD_COL_MASK          //           1,         1,                   1
//      P117_LUL_SCRATCH_FILL_HD_COL_TYPES         //           N,         N,                   N
//      P117_LUL_SCRATCH_FILL_HD_TABLE_TYPE        // S
#define P118_LUL_SCRATCH_FILL_HD              683  // HD_PHYS_PSN,HD_LGC_PSN,NUM_SPIRALS,DFCTS_ADDED
//      P118_LUL_SCRATCH_FILL_HD_COL_WIDTH         //          11,        10,         11,         11
//      P118_LUL_SCRATCH_FILL_HD_COL_MASK          //           1,         1,          1,          1
//      P118_LUL_SCRATCH_FILL_HD_COL_TYPES         //           N,         N,          N,          N
//      P118_LUL_SCRATCH_FILL_HD_TABLE_TYPE        // S
#define P117_LUL_SCRATCH_DETAIL               684  // FLAW_NUM,HD_PHYS_PSN,HD_LGC_PSN,LGC_TRK_NUM,SYMBOL_FROM_INDEX,DEFECT_LGTH_SYMBL,FLAW_TYPE
//      P117_LUL_SCRATCH_DETAIL_COL_WIDTH          //        8,         11,        10,         11,               17,               17,        9
//      P117_LUL_SCRATCH_DETAIL_COL_MASK           //        1,          1,         1,          1,                1,                1,        1
//      P117_LUL_SCRATCH_DETAIL_COL_TYPES          //        N,          N,         N,          N,                N,                N,        V
//      P117_LUL_SCRATCH_DETAIL_TABLE_TYPE         // S
#define P118_LUL_SCRATCH_DETAIL               685  // FLAW_NUM,HD_PHYS_PSN,HD_LGC_PSN,LGC_TRK_NUM,SYMBOL_FROM_INDEX,DEFECT_LGTH_SYMBL,FLAW_TYPE
//      P118_LUL_SCRATCH_DETAIL_COL_WIDTH          //        8,         11,        10,         11,               17,               17,        9
//      P118_LUL_SCRATCH_DETAIL_COL_MASK           //        1,          1,         1,          1,                1,                1,        1
//      P118_LUL_SCRATCH_DETAIL_COL_TYPES          //        N,          N,         N,          N,                N,                N,        V
//      P118_LUL_SCRATCH_DETAIL_TABLE_TYPE         // S
#define P167_OTC2                             686  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,OTC,OTC_VAR,OTC_10DOWN,OTC_10DOWN_VAR,OTC_20DOWN,OTC_20DOWN_VAR,AVG_CNTR_OTC_DIST,ERROR_CODE
//      P167_OTC2_COL_WIDTH                        //          11,      7,        10,  6,      7,        10,            14,        10,            14,               17,        10
//      P167_OTC2_COL_MASK                         //           1,      1,         1,  1,      1,         1,             1,         1,             1,                1,         1
//      P167_OTC2_COL_TYPES                        //           N,      N,         N,  N,      N,         N,             N,         N,             N,                N,         N
//      P167_OTC2_TABLE_TYPE                       // M
#define P033_PES_HD2                          687  // HD_PHYS_PSN,LGC_TRK_NUM,RETEST_COUNT,HD_LGC_PSN,RRO,NRRO,RAW_RO,TRACK_WIDTH,FAIL_CODE
//      P033_PES_HD2_COL_WIDTH                     //          11,         11,          12,        10,  3,   4,     6,         11,        9
//      P033_PES_HD2_COL_MASK                      //           1,          1,           1,         1,  1,   1,     1,          1,        1
//      P033_PES_HD2_COL_TYPES                     //           N,          N,           N,         N,  N,   N,     N,          N,        N
//      P033_PES_HD2_TABLE_TYPE                    // S
#define P000_SERVO_UNSAFE_FLAG2               688  // HD_PHYS_PSN,TRACK_NUM,HD_LGC_PSN,RW_ERROR_CODE,UNSAFE_FLAG,PES,BAD_SAMPL,SWD_DVGA,SWD_RVGA,SWD_FVGA,SHOCK_DETCT,RV_VALUE,LV_VALUE,PZT_SAT,MOTOR_SPEED,PES_14,PES_SHOCK_DETCT,PRED_OT_FLTR_TRGRD,NON_0_CMND_OFFST,LOOP_CODE
//      P000_SERVO_UNSAFE_FLAG2_COL_WIDTH          //          11,        9,        10,           13,         11,  3,        9,       8,       8,       8,         11,       8,       8,      7,         11,     6,             15,                18,              16,        9
//      P000_SERVO_UNSAFE_FLAG2_COL_MASK           //           0,        0,         0,            0,          0,  0,        0,       0,       0,       0,          0,       0,       0,      0,          0,     0,              0,                 0,               0,        0
//      P000_SERVO_UNSAFE_FLAG2_COL_TYPES          // *
//      P000_SERVO_UNSAFE_FLAG2_TABLE_TYPE         // S
#define P000_TRACK_RW_ERROR_CODE              689  // HD_PHYS_PSN,TRACK_NUM,HD_LGC_PSN,KEY,CODE,QUAL,FRU,LOOP_CODE
//      P000_TRACK_RW_ERROR_CODE_COL_WIDTH         //          11,        9,        10,  3,   4,   4,  3,        9
//      P000_TRACK_RW_ERROR_CODE_COL_MASK          //           0,        0,         0,  0,   0,   0,  0,        0
//      P000_TRACK_RW_ERROR_CODE_COL_TYPES         // *
//      P000_TRACK_RW_ERROR_CODE_TABLE_TYPE        // S
#define P135_MEASUREMENT_DATA                 690  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,SENSOR_NUM,SENSOR_METHOD,SENSOR_METRIC,SENSOR_AVG_TYPE,OVRSHT_AMP,OVRSHT_DUR,WRT_CUR_DAC,HTR_DAC,DELTA_DAC,TEST_ITERATION,CNTCT_TEST_STAGE,HTR_DAC_STEP_SIZE,CONTACT,TRIP,LIMIT,MEASURED,SNR,RMS_NM,ACTIVE_HEATER,INACTIVE_HEATER_DAC,MEASURED_THRESH
//      P135_MEASUREMENT_DATA_COL_WIDTH            //          11,        9,      7,        10,        10,           13,           13,             15,        10,        10,         11,      7,        9,            14,              16,               17,      7,   7,    7,       8,  7,     9,           13,                 19,             15
//      P135_MEASUREMENT_DATA_COL_MASK             //           1,        1,      1,         1,         1,            1,            1,              1,         1,         1,          1,      1,        1,             1,               1,                1,      1,   1,    1,       1,  1,     1,            1,                  1,              0
//      P135_MEASUREMENT_DATA_COL_TYPES            //           N,        N,      N,         N,         N,            V,            V,              V,         N,         N,          N,      N,        N,             N,               V,                V,      V,   V,    N,       N,  N,     N,            V,                  N
//      P135_MEASUREMENT_DATA_TABLE_TYPE           // S
#define P135_IPD_PEAKS                        691  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,INDEX,TEST_METHOD,TEST_METRIC,TEST_DESC,OVS_AMP,OVS_DUR,WRT_CUR,HTR_DAC,TEST_ITERATION,STAGE,STEP,CONTACT,TRIP,PEAK_IDX,PEAK_FREQ,PEAK_AMPL,PEAK_WIDTH,START_IDX,END_IDX
//      P135_IPD_PEAKS_COL_WIDTH                   //          11,        9,      8,        10,    5,         11,         11,        9,      7,      7,      7,      7,            14,    5,   6,      7,   4,       8,        9,        9,        10,        9,      7
//      P135_IPD_PEAKS_COL_MASK                    //           0,        0,      0,         0,    0,          0,          0,        0,      0,      0,      0,      0,             0,    0,   0,      0,   0,       0,        0,        0,         0,        0,      0
//      P135_IPD_PEAKS_COL_TYPES                   // *
//      P135_IPD_PEAKS_TABLE_TYPE                  // M
#define P135_DETECTOR_HISTOGRAM               692  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,INDEX,TEST_METHOD,TEST_METRIC,TEST_DESC,DATA_TYPE,OVS_AMP,OVS_DUR,WRT_CUR,HTR_DAC,TEST_ITERATION,STAGE,STEP,CONTACT,TRIP,BUCKET,COUNT,ACTIVE_HEATER,INACTIVE_HEATER_DAC
//      P135_DETECTOR_HISTOGRAM_COL_WIDTH          //          11,        9,      8,        10,    5,         11,         11,        9,        9,      7,      7,      7,      7,            14,    5,   6,      7,   4,     6,    5,           13,                 19
//      P135_DETECTOR_HISTOGRAM_COL_MASK           //           0,        0,      0,         0,    0,          0,          0,        0,        0,      0,      0,      0,      0,             0,    0,   0,      0,   0,     0,    0,            0,                  0
//      P135_DETECTOR_HISTOGRAM_COL_TYPES          // *
//      P135_DETECTOR_HISTOGRAM_TABLE_TYPE         // M
#define P135_METRIC_STATS                     693  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,TEST_METRIC,OVS_AMP,OVS_DUR,WRT_CUR,HTR_DAC,RELATIVE_DAC,TEST_ITERATION,STAGE,STEP,CONTACT,METRIC_MIN,METRIC_MAX,ACTIVE_HEATER,INACTIVE_HEATER_DAC
//      P135_METRIC_STATS_COL_WIDTH                //          11,        9,      8,        10,         11,      7,      7,      7,      7,          13,            14,    5,   6,      7,        10,        10,           13,                 19
//      P135_METRIC_STATS_COL_MASK                 //           0,        0,      0,         0,          0,      0,      0,      0,      0,           0,             0,    0,   0,      0,         0,         0,            0,                  0
//      P135_METRIC_STATS_COL_TYPES                // *
//      P135_METRIC_STATS_TABLE_TYPE               // M
#define P135_GAIN_CAL                         694  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,TEST_ITERATION,PREAMP_GAIN,MIN_AGC,MAX_AGC,ACTIVE_HEATER,INACTIVE_HEATER_DAC,ATTS,ATTC
//      P135_GAIN_CAL_COL_WIDTH                    //          11,        9,      8,        10,            14,         11,      7,      7,           13,                 19,   4,   4
//      P135_GAIN_CAL_COL_MASK                     //           1,        1,      1,         1,             1,          1,      1,      1,            1,                  1,   1,   1
//      P135_GAIN_CAL_COL_TYPES                    //           N,        N,      N,         N,             N,          N,      N,      N,            V,                  N,   N,   N
//      P135_GAIN_CAL_TABLE_TYPE                   // S
#define P053_MD_CONTACT_DETECT                695  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NOM_TRK,LGC_TRK,RADIUS,FUND_FREQ,AGC_VALUE,ATT2R_VALUE,CTF_VALUE,BOOST_VALUE,DPES_DAC,WEDGE_DAC,REV_DAC,CONTACT_DAC
//      P053_MD_CONTACT_DETECT_COL_WIDTH           //          11,        9,        10,      7,      7,     6,        9,        9,         11,        9,         11,       8,        9,      7,         11
//      P053_MD_CONTACT_DETECT_COL_MASK            //           0,        0,         0,      0,      0,     0,        0,        0,          0,        0,          0,       0,        0,      0,          0
//      P053_MD_CONTACT_DETECT_COL_TYPES           // *
//      P053_MD_CONTACT_DETECT_TABLE_TYPE          // M
#define P053_MDCD_DATA                        696  // POINT_NUM,HTR_DAC,AVG_BY_WEDGE,AVG_BY_WEDGE_THR,BY_WEDGE_THR_DAT,AVG_BY_REV,AVG_BY_REV_THR,BY_REV_THR_DAT,AVG_BY_REV_CODE,HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NOM_TRK,LGC_TRK,RADIUS
//      P053_MDCD_DATA_COL_WIDTH                   //         9,      7,          12,              16,              16,        10,            14,            14,             15,         11,        9,        10,      7,      7,     6
//      P053_MDCD_DATA_COL_MASK                    //         0,      0,           0,               0,               0,         0,             0,             0,              0,          0,        0,         0,      0,      0,     0
//      P053_MDCD_DATA_COL_TYPES                   // *
//      P053_MDCD_DATA_TABLE_TYPE                  // M
#define P035_CURVE_FIT                        697  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,CNTCT_TYPE,WRT_CUR_OVS_AMP,WRT_CUR_OVS_DUR,WRT_CUR,CLRNC_TRGT,GAMMA_ACTN_RATIO,CNTCT_HTR_DAC,X_SQUARED_COEF,X_LINEAR_COEF,BACKOFF_HTR_DAC,SLOPE_AT_ZERO_HEAT,SLOPE_AT_OP_HEAT,ACTN_CURVE_RMS_ERR,ACTN_CURVE_RSQUARED_ERR,READER_ACTN_CONTACT,BAD_POINT_CNT
//      P035_CURVE_FIT_COL_WIDTH                   //          11,        9,      8,        10,        10,             15,             15,      7,        10,              16,           13,            14,           13,             15,                18,              16,                18,                     23,                 19,           13
//      P035_CURVE_FIT_COL_MASK                    //           1,        1,      1,         1,         1,              1,              1,      1,         1,               1,            1,             1,            1,              1,                 1,               1,                 1,                      1,                  1,            1
//      P035_CURVE_FIT_COL_TYPES                   //           N,        N,      N,         N,         V,              N,              N,      N,         N,               N,            N,             N,            N,              N,                 N,               N,                 N,                      N,                  N,            N
//      P035_CURVE_FIT_TABLE_TYPE                  // V
#define P135_FINAL_CONTACT                    698  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,MSRD_INTRPLTD,WRT_CNTCT_DAC,RD_CNTCT_DAC,NOM_TRK_NUM,TRK_RADIUS,OVRSHT_AMP,OVRSHT_DUR,WRT_CUR,WRT_FREQ,CONTACT_TEMP,WRT_LOSS,WRT_CLR,RD_CLR,RETRY_COUNT,DETECTOR_MASK,ACTIVE_HEATER,INACTIVE_HEATER_DAC,ERROR_CODE,RAP_WRT_CNTCT_DAC,RAP_RD_CNTCT_DAC
//      P135_FINAL_CONTACT_COL_WIDTH               //          11,        9,      7,        10,           13,           13,          12,         11,        10,        10,        10,      7,       8,          12,       8,      7,     7,         11,           13,           13,                 19,        10,               17,              16
//      P135_FINAL_CONTACT_COL_MASK                //           1,        1,      1,         1,            1,            1,           1,          1,         1,         1,         1,      1,       1,           1,       1,      1,     1,          1,            1,            1,                  1,         1,                1,               1
//      P135_FINAL_CONTACT_COL_TYPES               //           N,        N,      N,         N,            V,            N,           N,          N,         N,         N,         N,      N,       N,           N,       N,      N,     N,          N,            N,            V,                  N,         V,                N,               N
//      P135_FINAL_CONTACT_TABLE_TYPE              // S
#define P037_VJIT_SEEK_RD_WRT                 699  // VJITS_MODE,SEEK_DISTANCE,SEEK_TIME,STDEV,SEEK_MODE
//      P037_VJIT_SEEK_RD_WRT_COL_WIDTH            //         10,           13,        9,    5,        9
//      P037_VJIT_SEEK_RD_WRT_COL_MASK             //          1,            1,        1,    1,        1
//      P037_VJIT_SEEK_RD_WRT_COL_TYPES            //          N,            N,        N,    N,        V
//      P037_VJIT_SEEK_RD_WRT_TABLE_TYPE           // S
#define P135_DETCR_THRESHOLD_CAL              700  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,WRT_CUR,HTR_DAC,THRESHOLD,CNTCT_THRESHOLD,COUNT,ITERATION
//      P135_DETCR_THRESHOLD_CAL_COL_WIDTH         //          11,        10,        9,      7,      7,      7,        9,             15,    5,        9
//      P135_DETCR_THRESHOLD_CAL_COL_MASK          //           1,         1,        1,      1,      1,      1,        1,              1,    1,        1
//      P135_DETCR_THRESHOLD_CAL_COL_TYPES         //           N,         N,        N,      N,      N,      N,        N,              N,    N,        N
//      P135_DETCR_THRESHOLD_CAL_TABLE_TYPE        // S
#define P134_TA_DATA3                         701  // DFCT_NUM,HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,TA_PSN_SFI,TA_LEN_SYMBL,TA_MAX_AMP,QUALD_TA_AVG_AMP,RPT_CNT,SRVO_WEDGE,TA_STATUS
//      P134_TA_DATA3_COL_WIDTH                    //        8,         11,      8,        10,        10,          12,        10,              16,      7,        10,        9
//      P134_TA_DATA3_COL_MASK                     //        0,          0,      0,         0,         0,           0,         0,               0,      0,         0,        0
//      P134_TA_DATA3_COL_TYPES                    // *
//      P134_TA_DATA3_TABLE_TYPE                   // M
#define P138_SRVO_OFST                        702  // HD_PHYS_PSN,HD_LGC_PSN,PHYS_TRK_NUM,LGC_TRK_NUM,COG_OFST,SCAN_MODE
//      P138_SRVO_OFST_COL_WIDTH                   //          11,        10,          12,         12,       6,        9
//      P138_SRVO_OFST_COL_MASK                    //           1,         1,           1,          1,       1,        1
//      P138_SRVO_OFST_COL_TYPES                   //           N,         N,           N,          N,       N,        V
//      P138_SRVO_OFST_TABLE_TYPE                  // S
#define P185_HUNT_SUMMARY                     703  // HD_PHYS_PSN,HD_LGC_PSN,LOCATION,ATTEMPT,V3BAR_CYL,ADJ_V3BAR_CYL,BACKOFF_CYL
//      P185_HUNT_SUMMARY_COL_WIDTH                //          11,        10,       8,      7,        9,           13,         11
//      P185_HUNT_SUMMARY_COL_MASK                 //           0,         0,       0,      0,        0,            0,          0
//      P185_HUNT_SUMMARY_COL_TYPES                // *
//      P185_HUNT_SUMMARY_TABLE_TYPE               // S
#define P055_DICE_ITERATION                   704  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,WRT_CUR_OVS_DAC,WRT_CUR_DUR_DAC,WRT_CUR_DAC,HTR_DAC,TEST_ITERATION,MEAN_AGC,NUM_PES_EVENTS,NUM_AGC_EVENTS,TOTAL_EVENTS,CNTCT_TEST_STAGE
//      P055_DICE_ITERATION_COL_WIDTH              //          11,      8,        10,             15,             15,         11,      7,            14,       8,            14,            14,          12,              16
//      P055_DICE_ITERATION_COL_MASK               //           1,      1,         1,              1,              1,          1,      1,             1,       1,             1,             1,           1,               1
//      P055_DICE_ITERATION_COL_TYPES              //           N,      N,         N,              N,              N,          N,      N,             N,       N,             N,             N,           N,               V
//      P055_DICE_ITERATION_TABLE_TYPE             // M
#define P055_DICE_CONTACT_STATS               705  // HD_PHYS_PSN,NUM_CONTACT_REVS,RETRIES,MIN_HTR_DAC,MAX_HTR_DAC,DAC_RANGE,MIN_HTR_ZONE,MAX_HTR_ZONE,RSQ_POLYFIT,STDEV_POLYFIT,HD_LGC_PSN
//      P055_DICE_CONTACT_STATS_COL_WIDTH          //          11,              16,      7,         11,         11,        9,          12,          12,         11,           13,        10
//      P055_DICE_CONTACT_STATS_COL_MASK           //           1,               1,      1,          1,          1,        1,           1,           1,          1,            1,         1
//      P055_DICE_CONTACT_STATS_COL_TYPES          //           N,               N,      N,          N,          N,        N,           N,           N,          N,            N,         N
//      P055_DICE_CONTACT_STATS_TABLE_TYPE         // V
#define P055_DICE_FINAL_CONTACT               706  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,HTR_DAC,MEAN_AGC,NUM_PES_EVENTS,NUM_AGC_EVENTS,TOTAL_EVENTS,TEST_MODE
//      P055_DICE_FINAL_CONTACT_COL_WIDTH          //          11,        9,        10,      8,      7,       8,            14,            14,          12,        9
//      P055_DICE_FINAL_CONTACT_COL_MASK           //           1,        1,         1,      1,      1,       1,             1,             1,           1,        1
//      P055_DICE_FINAL_CONTACT_COL_TYPES          //           N,        N,         N,      N,      N,       N,             N,             N,           N,        V
//      P055_DICE_FINAL_CONTACT_TABLE_TYPE         // M
#define P055_DICE_SUMMARY                     707  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,HTR_DAC,CAPPED_HTR_DAC,TEST_MODE
//      P055_DICE_SUMMARY_COL_WIDTH                //          11,        9,        10,      7,            14,        9
//      P055_DICE_SUMMARY_COL_MASK                 //           1,        1,         1,      1,             1,        1
//      P055_DICE_SUMMARY_COL_TYPES                //           N,        N,         N,      N,             N,        V
//      P055_DICE_SUMMARY_TABLE_TYPE               // M
#define P060_SERVO_COUNTERS                   708  // HD_PHYS_PSN,HD_LGC_PSN,MODE,COUNTER_LABEL,VALUE
//      P060_SERVO_COUNTERS_COL_WIDTH              //          11,        10,   4,           24,    9
//      P060_SERVO_COUNTERS_COL_MASK               //           0,         0,   0,            0,    0
//      P060_SERVO_COUNTERS_COL_TYPES              // *
//      P060_SERVO_COUNTERS_TABLE_TYPE             // S
#define P333_PES_SUMMARY                      709  // TOT_TRACKS,TOT_RETRIES,TOT_UNSAFES,TOT_REPLACED
//      P333_PES_SUMMARY_COL_WIDTH                 //         10,         11,         11,          12
//      P333_PES_SUMMARY_COL_MASK                  //          0,          0,          0,           0
//      P333_PES_SUMMARY_COL_TYPES                 // *
//      P333_PES_SUMMARY_TABLE_TYPE                // M
#define P333_PES_HD                           710  // HD_PHYS_PSN,LGC_TRK_NUM,RETEST_COUNT,HD_LGC_PSN,RRO,NRRO,RAW_RO,TRACK_WIDTH,FAIL_CODE
//      P333_PES_HD_COL_WIDTH                      //          11,         11,          12,        10,  3,   4,     6,         11,        9
//      P333_PES_HD_COL_MASK                       //           0,          0,           0,         0,  0,   0,     0,          0,        0
//      P333_PES_HD_COL_TYPES                      // *
//      P333_PES_HD_TABLE_TYPE                     // S
#define P333_PES_EVENT                        711  // HEAD,CYLINDER,RETRIES,UNSAFES,REPLACED_PES
//      P333_PES_EVENT_COL_WIDTH                   //    4,       8,      7,      7,          12
//      P333_PES_EVENT_COL_MASK                    //    0,       0,      0,      0,           0
//      P333_PES_EVENT_COL_TYPES                   // *
//      P333_PES_EVENT_TABLE_TYPE                  // M
#define P333_PES_WORST_RRO_CYL                712  // HD,CYL_RRO,CYL_NRRO
//      P333_PES_WORST_RRO_CYL_COL_WIDTH           //  2,      7,       8
//      P333_PES_WORST_RRO_CYL_COL_MASK            //  0,      0,       0
//      P333_PES_WORST_RRO_CYL_COL_TYPES           // *
//      P333_PES_WORST_RRO_CYL_TABLE_TYPE          // S
#define P333_PES_RRO_CFG                      713  // HD,CYL,REVS
//      P333_PES_RRO_CFG_COL_WIDTH                 //  2,  9,   5
//      P333_PES_RRO_CFG_COL_MASK                  //  0,  0,   0
//      P333_PES_RRO_CFG_COL_TYPES                 // *
//      P333_PES_RRO_CFG_TABLE_TYPE                // S
#define P333_PES_RRO_DAT                      714  // SECN,AVG_PES
//      P333_PES_RRO_DAT_COL_WIDTH                 //    4,     10
//      P333_PES_RRO_DAT_COL_MASK                  //    0,      0
//      P333_PES_RRO_DAT_COL_TYPES                 // *
//      P333_PES_RRO_DAT_TABLE_TYPE                // S
#define P333_PES_FULL                         715  // HD_LGC_PSN,SECTOR,HD_PHYS_PSN,REV,PES,UI_PER_TRK,PES_CNT_PER_TRK
//      P333_PES_FULL_COL_WIDTH                    //         10,     6,         11,  3,  6,        10,             15
//      P333_PES_FULL_COL_MASK                     //          0,     0,          0,  0,  0,         0,              0
//      P333_PES_FULL_COL_TYPES                    // *
//      P333_PES_FULL_TABLE_TYPE                   // M
#define P152_FREQ_BAND_SUMMARY                716  // FREQ_BAND,CUTOFF,INJ_AMPL,CYCLES_SAMPLES
//      P152_FREQ_BAND_SUMMARY_COL_WIDTH           //         9,     6,       8,            14
//      P152_FREQ_BAND_SUMMARY_COL_MASK            //         0,     0,       0,             0
//      P152_FREQ_BAND_SUMMARY_COL_TYPES           // *
//      P152_FREQ_BAND_SUMMARY_TABLE_TYPE          // S
#define P185_HUNT_SEEK_ERR                    717  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,RETRY,SENSE_DATA
//      P185_HUNT_SEEK_ERR_COL_WIDTH               //          11,        10,      7,    7,        10
//      P185_HUNT_SEEK_ERR_COL_MASK                //           0,         0,      0,    0,         0
//      P185_HUNT_SEEK_ERR_COL_TYPES               // *
//      P185_HUNT_SEEK_ERR_TABLE_TYPE              // S
#define P167_ERROR_RATE                       718  // HD_PHYS_PSN,DATA_ZN,HD_LGC_PSN,TRK_NUM,RD_OFST,SQZ_OFST,ITRTN,SYMBL_ERR_RATE,SCTR_ERR_RATE,UNRCVR_RATE
//      P167_ERROR_RATE_COL_WIDTH                  //          11,      7,        10,      7,      7,       8,    5,            14,           13,         11
//      P167_ERROR_RATE_COL_MASK                   //           1,      1,         1,      1,      1,       1,    1,             1,            1,          1
//      P167_ERROR_RATE_COL_TYPES                  //           N,      N,         N,      N,      N,       N,    N,             N,            N,          N
//      P167_ERROR_RATE_TABLE_TYPE                 // M
#define P167_ERROR_HISTOGRAM                  719  // HD_PHYS_PSN,DATA_ZN,HD_LGC_PSN,TRK_NUM,RD_OFST,SQZ_OFST,ITRTN,T_LEVEL,BLKS_FAIL_CNT
//      P167_ERROR_HISTOGRAM_COL_WIDTH             //          11,      7,        10,      7,      7,       8,    5,      7,           13
//      P167_ERROR_HISTOGRAM_COL_MASK              //           1,      1,         1,      1,      1,       1,    1,      1,            1
//      P167_ERROR_HISTOGRAM_COL_TYPES             //           N,      N,         N,      N,      N,       N,    N,      N,            N
//      P167_ERROR_HISTOGRAM_TABLE_TYPE            // M

// Deprecated 11/23/2010
#define P167_SQUEEZE_MARGIN                   720  // HD_PHYS_PSN,DATA_ZN,HD_LGC_PSN,TRK_NUM,ITRTN,SQZ_MARGIN
//      P167_SQUEEZE_MARGIN_COL_WIDTH              //          11,      7,        10,      7,    5,        10
//      P167_SQUEEZE_MARGIN_COL_MASK               //           0,      0,         0,      0,    0,         0
//      P167_SQUEEZE_MARGIN_COL_TYPES              // *
//      P167_SQUEEZE_MARGIN_TABLE_TYPE             // M

// Deprecated 11/23/2010
#define P167_OFFTRACK_MARGIN                  721  // HD_PHYS_PSN,DATA_ZN,HD_LGC_PSN,TRK_NUM,ITRTN,NEG_MARGIN,POS_MARGIN
//      P167_OFFTRACK_MARGIN_COL_WIDTH             //          11,      7,        10,      7,    5,        10,        10
//      P167_OFFTRACK_MARGIN_COL_MASK              //           0,      0,         0,      0,    0,         0,         0
//      P167_OFFTRACK_MARGIN_COL_TYPES             // *
//      P167_OFFTRACK_MARGIN_TABLE_TYPE            // M

// Deprecated 11/23/2010
#define P167_LIMIT_FAILURE                    722  // HD_PHYS_PSN,DATA_ZN,HD_LGC_PSN,TRK_NUM,ITRTN,ERROR_CODE
//      P167_LIMIT_FAILURE_COL_WIDTH               //          11,      7,        10,      7,    5,        10
//      P167_LIMIT_FAILURE_COL_MASK                //           0,      0,         0,      0,    0,         0
//      P167_LIMIT_FAILURE_COL_TYPES               // *
//      P167_LIMIT_FAILURE_TABLE_TYPE              // M
#define P191_CLR_COEF_CAL_RETRY               723  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,SRVO_TRK,LGC_TRK,RADIUS,WRT_CUR,OVRSHT,OVRSHT_DUR,VGAR,COEF_ADJ_SLOPE,COEF_ADJ_OFST,COEF_ADJ_CORR_SQR,TRY_NUM
//      P191_CLR_COEF_CAL_RETRY_COL_WIDTH          //          11,        9,        10,       8,      7,     6,      7,     6,        10,   4,            14,           13,               17,      7
//      P191_CLR_COEF_CAL_RETRY_COL_MASK           //           0,        0,         0,       0,      0,     0,      0,     0,         0,   0,             0,            0,                0,      0
//      P191_CLR_COEF_CAL_RETRY_COL_TYPES          // *
//      P191_CLR_COEF_CAL_RETRY_TABLE_TYPE         // M

// Deprecated 11/23/2010
#define P210_VBAR_THRSHLD2                    724  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TPI_VBAR_SERT,BPI_VBAR_SERT
//      P210_VBAR_THRSHLD2_COL_WIDTH               //          11,        9,        10,           13,           13
//      P210_VBAR_THRSHLD2_COL_MASK                //           1,        1,         1,            1,            1
//      P210_VBAR_THRSHLD2_COL_TYPES               //           N,        N,         N,            N,            N
//      P210_VBAR_THRSHLD2_TABLE_TYPE              // M
#define P166_DRAM_INFO                        725  // DRAM_SIZE
//      P166_DRAM_INFO_COL_WIDTH                   //         8
//      P166_DRAM_INFO_COL_MASK                    //         0
//      P166_DRAM_INFO_COL_TYPES                   // *
//      P166_DRAM_INFO_TABLE_TYPE                  // S
#define P228_SECTOR_ERROR_COUNTS              726  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,PRE_HEAT,WRITE_HEAT,SECTOR_NUM,VGAR,HARD_ERROR,SYMBOL_ERROR_COUNT,SENSE_DATA
//      P228_SECTOR_ERROR_COUNTS_COL_WIDTH         //          11,        10,        9,      7,       8,        10,        10,   4,        10,                13,        10
//      P228_SECTOR_ERROR_COUNTS_COL_MASK          //           0,         0,        0,      0,       0,         0,         0,   0,         0,                 0,         0
//      P228_SECTOR_ERROR_COUNTS_COL_TYPES         // *
//      P228_SECTOR_ERROR_COUNTS_TABLE_TYPE        // S
#define P228_DEFAULT_AND_CONTACT              727  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,DEFAULT_WRITE_HEAT,DEFAULT_PREHEAT,CONTACT_WRITEHEAT,CONTACT_PREHEAT
//      P228_DEFAULT_AND_CONTACT_COL_WIDTH         //          11,        10,        9,      7,                18,             15,               17,             15
//      P228_DEFAULT_AND_CONTACT_COL_MASK          //           0,         0,        0,      0,                 0,              0,                0,              0
//      P228_DEFAULT_AND_CONTACT_COL_TYPES         // *
//      P228_DEFAULT_AND_CONTACT_TABLE_TYPE        // S
#define P049_AFH_FRAMES                       728  // MODE,STATE_NAME,STATE_INDX,NUM_FH_CALLS_INDX,CONS_CHK_INDX,HEAD,ZONE,LOG_CYLINDER,NOM_CYLINDER,MEAS_POS,TEMP,WRT_HT_DAC,HT_ONLY_DAC,WRT_HT_CLR,HT_ONLY_CLR,WRT_LOSS
//      P049_AFH_FRAMES_COL_WIDTH                  //    4,        10,        10,               17,           13,   4,   4,          12,          12,       8,   4,        10,         11,        10,         11,       8
//      P049_AFH_FRAMES_COL_MASK                   //    0,         0,         0,                0,            0,   0,   0,           0,           0,       0,   0,         0,          0,         0,          0,       0
//      P049_AFH_FRAMES_COL_TYPES                  // *
//      P049_AFH_FRAMES_TABLE_TYPE                 // M
#define P130_ETF_FILE_DIRECTORY               729  // ETF_FILE,LOCATION,FILE_SIZE,CYLINDER,HEAD,SECTOR
//      P130_ETF_FILE_DIRECTORY_COL_WIDTH          //        8,       8,        9,       8,   4,     6
//      P130_ETF_FILE_DIRECTORY_COL_MASK           //        0,       0,        0,       0,   0,     0
//      P130_ETF_FILE_DIRECTORY_COL_TYPES          // *
//      P130_ETF_FILE_DIRECTORY_TABLE_TYPE         // S
#define P172_CHNL_REG_DATA                    730  // HD_PHYS_PSN,CURRENT_ZONE,MVL_REGISTER,REG_VAL
//      P172_CHNL_REG_DATA_COL_WIDTH               //          11,          12,          12,      7
//      P172_CHNL_REG_DATA_COL_MASK                //           0,           0,           0,      0
//      P172_CHNL_REG_DATA_COL_TYPES               // *
//      P172_CHNL_REG_DATA_TABLE_TYPE              // S
#define P172_CHNL_REG_MINMAX_DATA             731  // MVL_REGISTER,MIN_REG_VAL,MAX_REG_VAL
//      P172_CHNL_REG_MINMAX_DATA_COL_WIDTH        //           12,         11,         11
//      P172_CHNL_REG_MINMAX_DATA_COL_MASK         //            0,          0,          0
//      P172_CHNL_REG_MINMAX_DATA_COL_TYPES        // *
//      P172_CHNL_REG_MINMAX_DATA_TABLE_TYPE       // S
#define P189_RAW_ERROR_DATA                   732  // HD_LGC_PSN,HD_PHYS_PSN,CYL_INDEX,CYL,DC_ERROR,TIMING_ERROR
//      P189_RAW_ERROR_DATA_COL_WIDTH              //         10,         11,        9,  6,       8,          12
//      P189_RAW_ERROR_DATA_COL_MASK               //          0,          0,        0,  0,       0,           0
//      P189_RAW_ERROR_DATA_COL_TYPES              // *
//      P189_RAW_ERROR_DATA_TABLE_TYPE             // S
#define P228_CONTACT_MOD_SUMMARY              733  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,CUM_HARD_ERROR_COUNT,MAX_T_LEVEL_CONSUMED,FAIL_CODE
//      P228_CONTACT_MOD_SUMMARY_COL_WIDTH         //          11,        10,        9,      7,                  20,                  20,        9
//      P228_CONTACT_MOD_SUMMARY_COL_MASK          //           1,         1,        1,      1,                   1,                   1,        1
//      P228_CONTACT_MOD_SUMMARY_COL_TYPES         //           N,         N,        N,      N,                   N,                   N,        N
//      P228_CONTACT_MOD_SUMMARY_TABLE_TYPE        // S
#define P255_PRECOMP_FLTR_VGA_LSI             734  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,LATE0R,LATE1R,LATE2R,LATE0F,LATE1F,LATE2F,ZFR,CTFRNGE,CTFR,ATT2R,VGARSH,VGA_TA_LPF,ZFAR,ATTC_RD
//      P255_PRECOMP_FLTR_VGA_LSI_COL_WIDTH        //          10,        11,   4,     6,     6,     6,     6,     6,     6,  4,      7,   4,    5,     6,        10,   4,      7
//      P255_PRECOMP_FLTR_VGA_LSI_COL_MASK         //           0,         0,   0,     0,     0,     0,     0,     0,     0,  0,      0,   0,    0,     0,         0,   0,      0
//      P255_PRECOMP_FLTR_VGA_LSI_COL_TYPES        // *
//      P255_PRECOMP_FLTR_VGA_LSI_TABLE_TYPE       // S
#define P255_FIR_LSI                          735  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,TDTARGR,TAP2R,TAP1R,TAP5R,TAP3R,TAP7R,TAP6R,TAP9R,TAP8R,NLTAPR,TAPXR,NYTAPR,DCTAPR,DCAVGR
//      P255_FIR_LSI_COL_WIDTH                     //          10,        11,   4,      7,    5,    5,    5,    5,    5,    5,    5,    5,     6,    5,     6,     6,     6
//      P255_FIR_LSI_COL_MASK                      //           0,         0,   0,      0,    0,    0,    0,    0,    0,    0,    0,    0,     0,    0,     0,     0,     0
//      P255_FIR_LSI_COL_TYPES                     // *
//      P255_FIR_LSI_TABLE_TYPE                    // S
#define P255_NPTARG_AND_MISC_LSI              736  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,TARG_T0,TARG_T1,TARG_T2,SMPATT,VSCALE,DECGAIN,ECWIN,ZFAR,TAP2OR3,VSCALE_LLR,VSCALE_LLR2
//      P255_NPTARG_AND_MISC_LSI_COL_WIDTH         //          10,        11,   4,      7,      7,      7,     6,     6,      7,    5,   4,      7,        10,         11
//      P255_NPTARG_AND_MISC_LSI_COL_MASK          //           0,         0,   0,      0,      0,      0,     0,     0,      0,    0,   0,      0,         0,          0
//      P255_NPTARG_AND_MISC_LSI_COL_TYPES         // *
//      P255_NPTARG_AND_MISC_LSI_TABLE_TYPE        // S
#define P255_NPML_TAP0_TAP1_LSI               737  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,TAP0_1,TAP0_2,TAP0_3,TAP0_4,TAP0_5,TAP0_6,TAP0_7,TAP1_0,TAP1_1,TAP1_2,TAP1_3,TAP1_4,TAP1_5,TAP1_6,TAP1_7
//      P255_NPML_TAP0_TAP1_LSI_COL_WIDTH          //          10,        11,   4,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6
//      P255_NPML_TAP0_TAP1_LSI_COL_MASK           //           0,         0,   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0
//      P255_NPML_TAP0_TAP1_LSI_COL_TYPES          // *
//      P255_NPML_TAP0_TAP1_LSI_TABLE_TYPE         // S
#define P255_NPML_TAP2_TAP3_LSI               738  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,TAP2_0,TAP2_1,TAP2_2,TAP2_3,TAP2_4,TAP2_5,TAP2_6,TAP2_7,TAP3_0,TAP3_1,TAP3_2,TAP3_3,TAP3_4,TAP3_5,TAP3_6,TAP3_7
//      P255_NPML_TAP2_TAP3_LSI_COL_WIDTH          //          10,        11,   4,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6
//      P255_NPML_TAP2_TAP3_LSI_COL_MASK           //           0,         0,   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0
//      P255_NPML_TAP2_TAP3_LSI_COL_TYPES          // *
//      P255_NPML_TAP2_TAP3_LSI_TABLE_TYPE         // S
#define P255_NPML_BIAS_LSI                    739  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,BIAS0,BIAS1,BIAS2,BIAS3,BIAS4,BIAS5,BIAS6,BIAS7,BIAS8,BIAS9,BIASA,BIASB,BIASC,BIASD,BIASE,BIASF
//      P255_NPML_BIAS_LSI_COL_WIDTH               //          10,        11,   4,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5
//      P255_NPML_BIAS_LSI_COL_MASK                //           0,         0,   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
//      P255_NPML_BIAS_LSI_COL_TYPES               // *
//      P255_NPML_BIAS_LSI_TABLE_TYPE              // S
#define P228_CONTACT_MOD_SCREEN               740  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,WRT_HEAT_DAC,PRE_HEAT_DAC,HARD_ERROR_COUNT,T_LEVEL_CONSUMED,FAIL_CODE
//      P228_CONTACT_MOD_SCREEN_COL_WIDTH          //          11,        10,        9,      7,          12,          12,              16,              16,        9
//      P228_CONTACT_MOD_SCREEN_COL_MASK           //           1,         1,        1,      1,           1,           1,               1,               1,        1
//      P228_CONTACT_MOD_SCREEN_COL_TYPES          //           N,         N,        N,      N,           N,           N,               N,               N,        N
//      P228_CONTACT_MOD_SCREEN_TABLE_TYPE         // S
#define P025_LD_UNLD_SCREEN_STATS             741  // PARAM_NAME,MIN,MAX,AVG,STDEV
//      P025_LD_UNLD_SCREEN_STATS_COL_WIDTH        //         10,  8,  8,  8,   10
//      P025_LD_UNLD_SCREEN_STATS_COL_MASK         //          1,  1,  1,  1,    1
//      P025_LD_UNLD_SCREEN_STATS_COL_TYPES        //          V,  N,  N,  N,    N
//      P025_LD_UNLD_SCREEN_STATS_TABLE_TYPE       // S
#define P185_RAW_TRACK_ID_VERIFY              742  // HD_PHYS_PSN,HD_LGC_PSN,MAX_CYL,MAX_TRK_ID,TRK_ID_LIMIT,ERROR_CODE
//      P185_RAW_TRACK_ID_VERIFY_COL_WIDTH         //          11,        10,      7,        10,          12,        10
//      P185_RAW_TRACK_ID_VERIFY_COL_MASK          //           0,         0,      0,         0,           0,         0
//      P185_RAW_TRACK_ID_VERIFY_COL_TYPES         // *
//      P185_RAW_TRACK_ID_VERIFY_TABLE_TYPE        // S
#define P000_AUDIT_DRIVE_TABLE                743  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,START_TRK,END_TRK,NUM_TRKS,PBA_TRACK
//      P000_AUDIT_DRIVE_TABLE_COL_WIDTH           //          11,        10,        9,        9,      9,       9,        9
//      P000_AUDIT_DRIVE_TABLE_COL_MASK            //           0,         0,        0,        0,      0,       0,        0
//      P000_AUDIT_DRIVE_TABLE_COL_TYPES           // *
//      P000_AUDIT_DRIVE_TABLE_TABLE_TYPE          // S
#define P000_DRIVE_PBA_COUNT                  744  // DRIVE_NUM_PBAS
//      P000_DRIVE_PBA_COUNT_COL_WIDTH             //             14
//      P000_DRIVE_PBA_COUNT_COL_MASK              //              0
//      P000_DRIVE_PBA_COUNT_COL_TYPES             // *
//      P000_DRIVE_PBA_COUNT_TABLE_TYPE            // S
#define P134_TA_VOID                          745  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,TA_PSN_SFI,TA_LEN_SYMBLS,QUALD_TA_AVG_AMP,REF_WEDGE,REF_THRESH,TRGT_WEDGE,TRGT_AVG_CSM,IS_TA,SMR_LGC_TRK
//      P134_TA_VOID_COL_WIDTH                     //          11,      7,        10,        10,           13,              16,        9,        10,        10,          12,    5,         11
//      P134_TA_VOID_COL_MASK                      //           0,      0,         0,         0,            0,               0,        0,         0,         0,           0,    0,          0
//      P134_TA_VOID_COL_TYPES                     // *
//      P134_TA_VOID_TABLE_TYPE                    // S

// Deprecated 11/23/2010
#define P000_ADG_FAILED_HD_INFO               746  // HD_PHYS_PSN
//      P000_ADG_FAILED_HD_INFO_COL_WIDTH          //          11
//      P000_ADG_FAILED_HD_INFO_COL_MASK           //           0
//      P000_ADG_FAILED_HD_INFO_COL_TYPES          // *
//      P000_ADG_FAILED_HD_INFO_TABLE_TYPE         // S
#define P135_REVS_IN_CONTACT                  747  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TEST_MODE,DACS_INTO_CONTACT,TOTAL_REVS,ACTIVE_HEATER,INACTIVE_HEATER_DAC
//      P135_REVS_IN_CONTACT_COL_WIDTH             //          11,        9,        10,        9,               17,        10,           13,                 19
//      P135_REVS_IN_CONTACT_COL_MASK              //           1,        1,         1,        1,                1,         1,            1,                  1
//      P135_REVS_IN_CONTACT_COL_TYPES             //           N,        N,         N,        V,                N,         N,            V,                  N
//      P135_REVS_IN_CONTACT_TABLE_TYPE            // S
#define P135_SEARCH_RESULTS                   748  // HD_PHYS_PSN,DATA_ZONE,NOM_TRK_NUM,RETRY_NUM,POLYNOMIAL_ORDER_HEX,HTR_PLUS_WRT_START_DAC,HTR_PLUS_WRT_END_DAC,HTR_PLUS_WRT_CONTACT_DAC,HTR_PLUS_WRT_PREDICTED_STDEV,HTR_ONLY_END_DAC,HTR_ONLY_CONTACT_DAC,HTR_ONLY_PREDICTED_STDEV,ERROR_FLAGS_HEX,DETECTOR_MASK_HEX,TRK_NUM,HD_LGC_PSN,ACTIVE_HEATER
//      P135_SEARCH_RESULTS_COL_WIDTH              //          11,        9,         11,        9,                  20,                    22,                  20,                      24,                          28,              16,                  20,                      24,             15,               17,      7,        10,           13
//      P135_SEARCH_RESULTS_COL_MASK               //           1,        1,          1,        1,                   1,                     1,                   1,                       1,                           1,               1,                   1,                       1,              1,                1,      1,         1,            1
//      P135_SEARCH_RESULTS_COL_TYPES              //           N,        N,          N,        N,                   V,                     N,                   N,                       N,                           N,               N,                   N,                       N,              V,                V,      N,         N,            V
//      P135_SEARCH_RESULTS_TABLE_TYPE             // S
#define P334_DWELL_STEP_INPUTS                749  // DWELL_STEP,START_HEAD,END_HEAD,START_CYL,END_CYL,DWELL_TIME_TOTAL_STEP,DWELL_STEP_INCR,MAX_STEP_TIME,MIN_TA_AMP,MAX_TA_AMP,MIN_TA_LGTH,MAX_TA_LGTH,DWELL_SEQUENCE,DWELL_TYPE,DETECTION_TYPE,HEATER,DWELL_PSN,CLRNC_CHG,ID_DIR_START,ID_DIR_STOP,OD_DIR_START,OD_DIR_STOP,ON_TA_TRK_OVRRDE,OFF_TA_TRK_OVRRDE
//      P334_DWELL_STEP_INPUTS_COL_WIDTH           //         10,        10,       8,        9,      9,                   21,             15,           13,        10,        10,         11,         11,            14,        10,            14,     6,        9,        9,          12,         11,          12,         11,              16,               17
//      P334_DWELL_STEP_INPUTS_COL_MASK            //          0,         0,       0,        0,      0,                    0,              0,            0,         0,         0,          0,          0,             0,         0,             0,     0,        0,        0,           0,          0,           0,          0,               0,                0
//      P334_DWELL_STEP_INPUTS_COL_TYPES           // *
//      P334_DWELL_STEP_INPUTS_TABLE_TYPE          // V
#define P334_BER_RAW_DATA                     750  // HD_PHYS_PSN,HD_LGC_PSN,ITERATION,ZONE_1,RW_TRACK_1,RO_TRACK_1,ZONE_2,RW_TRACK_2,RO_TRACK_2,RD_WRT_NUM,BER_RW_Z1,BER_RO_Z1,BER_RW_Z2,BER_RO_Z2
//      P334_BER_RAW_DATA_COL_WIDTH                //          11,        10,        9,     6,        10,        10,     6,        10,        10,        10,        9,        9,        9,        9
//      P334_BER_RAW_DATA_COL_MASK                 //           0,         0,        0,     0,         0,         0,     0,         0,         0,         0,        0,        0,        0,        0
//      P334_BER_RAW_DATA_COL_TYPES                // *
//      P334_BER_RAW_DATA_TABLE_TYPE               // S
#define P334_BER_AVGS_SUMMARY                 751  // HD_PHYS_PSN,HD_LGC_PSN,RW_Z1_RAW,RO_Z1_RAW,RW_Z2_RAW,RO_Z2_RAW,RW_Z1_SPORTED,RO_Z1_SPORTED,RW_Z2_SPORTED,RO_Z2_SPORTED,MAX_CHANGE
//      P334_BER_AVGS_SUMMARY_COL_WIDTH            //          11,        10,        9,        9,        9,        9,           13,           13,           13,           13,        10
//      P334_BER_AVGS_SUMMARY_COL_MASK             //           0,         0,        0,        0,        0,        0,            0,            0,            0,            0,         0
//      P334_BER_AVGS_SUMMARY_COL_TYPES            // *
//      P334_BER_AVGS_SUMMARY_TABLE_TYPE           // S
#define P334_BER_STD_DEV_SUMMARY              752  // HD_PHYS_PSN,HD_LGC_PSN,RW_Z1_RAW,RO_Z1_RAW,RW_Z2_RAW,RO_Z2_RAW,RW_Z1_SPORTED,RO_Z1_SPORTED,RW_Z2_SPORTED,RO_Z2_SPORTED,MAX_CHANGE
//      P334_BER_STD_DEV_SUMMARY_COL_WIDTH         //          11,        10,        9,        9,        9,        9,           13,           13,           13,           13,        10
//      P334_BER_STD_DEV_SUMMARY_COL_MASK          //           0,         0,        0,        0,        0,        0,            0,            0,            0,            0,         0
//      P334_BER_STD_DEV_SUMMARY_COL_TYPES         // *
//      P334_BER_STD_DEV_SUMMARY_TABLE_TYPE        // S
#define P334_RD_RES_RAW_DATA                  753  // HD_PHYS_PSN,HD_LGC_PSN,ITERATION,RESISTANCE
//      P334_RD_RES_RAW_DATA_COL_WIDTH             //          11,        10,        9,        10
//      P334_RD_RES_RAW_DATA_COL_MASK              //           0,         0,        0,         0
//      P334_RD_RES_RAW_DATA_COL_TYPES             // *
//      P334_RD_RES_RAW_DATA_TABLE_TYPE            // S
#define P334_RD_RES_SUMMARY                   754  // HD_PHYS_PSN,HD_LGC_PSN,AVG_RAW,AVG_SPORTED,STD_RAW,STD_SPORTED,DELTA_AVG,DELTA_STD
//      P334_RD_RES_SUMMARY_COL_WIDTH              //          11,        10,      7,         11,      7,         11,        9,        9
//      P334_RD_RES_SUMMARY_COL_MASK               //           0,         0,      0,          0,      0,          0,        0,        0
//      P334_RD_RES_SUMMARY_COL_TYPES              // *
//      P334_RD_RES_SUMMARY_TABLE_TYPE             // S
#define P334_DWELL_TRACK_LIST                 755  // DWELL_STEP,HD_PHYS_PSN,HD_LGC_PSN,DWELL_TRK_NUM,TA_TRACK
//      P334_DWELL_TRACK_LIST_COL_WIDTH            //         10,         11,        10,           13,       8
//      P334_DWELL_TRACK_LIST_COL_MASK             //          0,          0,         0,            0,       0
//      P334_DWELL_TRACK_LIST_COL_TYPES            // *
//      P334_DWELL_TRACK_LIST_TABLE_TYPE           // S
#define P334_DWELL_SUMMARY_HD                 756  // DWELL_STEP,HD_PHYS_PSN,HD_LGC_PSN,TA_DWELL_CNT,TRK_DWELL_CNT
//      P334_DWELL_SUMMARY_HD_COL_WIDTH            //         10,         11,        10,          12,           13
//      P334_DWELL_SUMMARY_HD_COL_MASK             //          0,          0,         0,           0,            0
//      P334_DWELL_SUMMARY_HD_COL_TYPES            // *
//      P334_DWELL_SUMMARY_HD_TABLE_TYPE           // S

// Deprecated 11/23/2010
#define P334_BER_TRK_INFO                     757  // HD_PHYS_PSN,HD_LGC_PSN,ZONE_1,Z1_RW_BER_TRK,Z1_RO_BER_TRK,ZONE_2,Z2_RW_BER_TRK,Z2_RO_BER_TRK
//      P334_BER_TRK_INFO_COL_WIDTH                //          11,        10,     6,           13,           13,     6,           13,           13
//      P334_BER_TRK_INFO_COL_MASK                 //           0,         0,     0,            0,            0,     0,            0,            0
//      P334_BER_TRK_INFO_COL_TYPES                // *
//      P334_BER_TRK_INFO_TABLE_TYPE               // S
#define P334_TA_DWELL_CONDITIONS              758  // STEP_ID,RUN_ORDER,MIN_AMP,MAX_AMP,RD_WRT_PSN,HEAT_ON_OFF,CLEARANCE,DWELL_LOCATION,DETECTION_TYPE
//      P334_TA_DWELL_CONDITIONS_COL_WIDTH         //       7,        9,      7,      7,        10,         11,        9,            14,            14
//      P334_TA_DWELL_CONDITIONS_COL_MASK          //       1,        1,      1,      1,         1,          1,        1,             1,             1
//      P334_TA_DWELL_CONDITIONS_COL_TYPES         //       N,        V,      N,      N,         V,          V,        N,             V,             V
//      P334_TA_DWELL_CONDITIONS_TABLE_TYPE        // S
#define P334_TA_DWELL_STATUS                  759  // HD_PHYS_PSN,HD_LGC_PSN,STEP_ID,QUAL_TA_CNT,TRACK_CNT,DWELL_TIME,PASS_FAIL_ELIGIBLE,FALSE_FAIL_ELIGIBLE,STATUS_FINAL,DAMAGE_CODE,STATUS_RESISTANCE,STATUS_BER_RW_ZN_X,STATUS_BER_RW_ZN_Y,STATUS_BER_RO_ZN_X,STATUS_BER_RO_ZN_Y,STATUS_DELTA_BER_RWRO_ZN_X,STATUS_DELTA_BER_RWRO_ZN_Y,FALSE_BER_FAILURE,FALSE_RES_FAILURE,FALSE_BER_RES_FAILURE
//      P334_TA_DWELL_STATUS_COL_WIDTH             //          11,        10,      7,         11,        9,        10,                18,                 19,          12,         11,               17,                18,                18,                18,                18,                        26,                        26,               17,               17,                   21
//      P334_TA_DWELL_STATUS_COL_MASK              //           1,         1,      1,          1,        1,         1,                 1,                  1,           1,          1,                1,                 1,                 1,                 1,                 1,                         1,                         1,                1,                1,                    1
//      P334_TA_DWELL_STATUS_COL_TYPES             //           N,         N,      N,          N,        N,         N,                 N,                  N,           N,          N,                N,                 N,                 N,                 N,                 N,                         N,                         N,                N,                N,                    N
//      P334_TA_DWELL_STATUS_TABLE_TYPE            // S
#define P334_TA_DWELL_BER_RES_CHG             760  // HD_PHYS_PSN,HD_LGC_PSN,STEP_ID,DELTA_RESISTANCE,DELTA_BER_RW_ZN_X,DELTA_BER_RW_ZN_Y,DELTA_BER_RO_ZN_X,DELTA_BER_RO_ZN_Y,DELTA_BER_RWRO_ZN_X,DELTA_BER_RWRO_ZN_Y,START_RESISTANCE,END_RESISTANCE,START_BER_RW_ZN_X,END_BER_RW_ZN_X,START_BER_RW_ZN_Y,END_BER_RW_ZN_Y,START_BER_RO_ZN_X,END_BER_RO_ZN_X,START_BER_RO_ZN_Y,END_BER_RO_ZN_Y,START_DETCR_RES,END_DETCR_RES,DELTA_DETCR_RES
//      P334_TA_DWELL_BER_RES_CHG_COL_WIDTH        //          11,        10,      7,              16,               17,               17,               17,               17,                 19,                 19,              16,            14,               17,             15,               17,             15,               17,             15,               17,             15,             15,           13,             15
//      P334_TA_DWELL_BER_RES_CHG_COL_MASK         //           1,         1,      1,               1,                1,                1,                1,                1,                  1,                  1,               1,             1,                1,              1,                1,              1,                1,              1,                1,              1,              0,            0,              0
//      P334_TA_DWELL_BER_RES_CHG_COL_TYPES        //           N,         N,      N,               N,                N,                N,                N,                N,                  N,                  N,               N,             N,                N,              N,                N,              N,                N,              N,                N,              N
//      P334_TA_DWELL_BER_RES_CHG_TABLE_TYPE       // S
#define P334_TA_DWELL_PROGRESS                761  // PERCENT_COMPLETE,TIME_REMAINING_NO_OVHD,TIME_ELAPSED_W_OVHD,TIME_REMAINING_W_OVHD,PERCENT_OVHD,DRV_TEMP,HUMIDITY_PCT,STEP_ID
//      P334_TA_DWELL_PROGRESS_COL_WIDTH           //               16,                    22,                 19,                   21,          13,       9,          13,      7
//      P334_TA_DWELL_PROGRESS_COL_MASK            //                0,                     0,                  0,                    0,           0,       0,           0,      0
//      P334_TA_DWELL_PROGRESS_COL_TYPES           // *
//      P334_TA_DWELL_PROGRESS_TABLE_TYPE          // S
#define P334_DWELL_OTF_CONDITIONS             762  // STEP_ID,RUN_ORDER,MIN_AMP,MAX_AMP,RD_WRT_PSN,HEAT_ON_OFF,CLEARANCE,DWELL_LOCATION,DETECTION_TYPE
//      P334_DWELL_OTF_CONDITIONS_COL_WIDTH        //       7,        9,      7,      7,        10,         11,        9,            14,            14
//      P334_DWELL_OTF_CONDITIONS_COL_MASK         //       0,        0,      0,      0,         0,          0,        0,             0,             0
//      P334_DWELL_OTF_CONDITIONS_COL_TYPES        // *
//      P334_DWELL_OTF_CONDITIONS_TABLE_TYPE       // S
#define P334_DWELL_OTF_STATUS                 763  // HD_PHYS_PSN,HD_LGC_PSN,STEP_ID,QUAL_TA_CNT,TRACK_CNT,DWELL_TIME,PASS_FAIL_ELIGIBLE,FALSE_FAIL_ELIGIBLE,STATUS_FINAL,DAMAGE_CODE,STATUS_RESISTANCE,STATUS_BER_RW_ZN_X,STATUS_BER_RW_ZN_Y,STATUS_BER_RO_ZN_X,STATUS_BER_RO_ZN_Y,STATUS_DELTA_BER_RWRO_ZN_X,STATUS_DELTA_BER_RWRO_ZN_Y,FALSE_BER_FAILURE,FALSE_RES_FAILURE,FALSE_BER_RES_FAILURE
//      P334_DWELL_OTF_STATUS_COL_WIDTH            //          11,        10,      7,         11,        9,        10,                18,                 19,          12,         11,               17,                18,                18,                18,                18,                        26,                        26,               17,               17,                   21
//      P334_DWELL_OTF_STATUS_COL_MASK             //           0,         0,      0,          0,        0,         0,                 0,                  0,           0,          0,                0,                 0,                 0,                 0,                 0,                         0,                         0,                0,                0,                    0
//      P334_DWELL_OTF_STATUS_COL_TYPES            // *
//      P334_DWELL_OTF_STATUS_TABLE_TYPE           // S
#define P334_DWELL_OTF_DELTAS                 764  // HD_PHYS_PSN,HD_LGC_PSN,STEP_ID,DELTA_RESISTANCE,DELTA_BER_RW_ZN_X,DELTA_BER_RW_ZN_Y,DELTA_BER_RO_ZN_X,DELTA_BER_RO_ZN_Y,DELTA_BER_RWRO_ZN_X,DELTA_BER_RWRO_ZN_Y,START_RESISTANCE,END_RESISTANCE,START_BER_RW_ZN_X,END_BER_RW_ZN_X,START_BER_RW_ZN_Y,END_BER_RW_ZN_Y,START_BER_RO_ZN_X,END_BER_RO_ZN_X,START_BER_RO_ZN_Y,END_BER_RO_ZN_Y,START_DETCR_RES,END_DETCR_RES,DELTA_DETCR_RES
//      P334_DWELL_OTF_DELTAS_COL_WIDTH            //          11,        10,      7,              16,               17,               17,               17,               17,                 19,                 19,              16,            14,               17,             15,               17,             15,               17,             15,               17,             15,             15,           13,             15
//      P334_DWELL_OTF_DELTAS_COL_MASK             //           0,         0,      0,               0,                0,                0,                0,                0,                  0,                  0,               0,             0,                0,              0,                0,              0,                0,              0,                0,              0,              0,            0,              0
//      P334_DWELL_OTF_DELTAS_COL_TYPES            // *
//      P334_DWELL_OTF_DELTAS_TABLE_TYPE           // S
#define P049_TRACK_CONVERT                    765  // HD_PHYS_PSN,HD_LGC_PSN,RW_LOGICAL_CYL,NOMINAL_CYL,RADIUS_IN
//      P049_TRACK_CONVERT_COL_WIDTH               //          11,        10,            14,         11,        9
//      P049_TRACK_CONVERT_COL_MASK                //           0,         0,             0,          0,        0
//      P049_TRACK_CONVERT_COL_TYPES               // *
//      P049_TRACK_CONVERT_TABLE_TYPE              // S
#define P035_DICE_CONGRUENCY                  766  // HD_PHYS_PSN,HD_LGC_PSN,STD_DEV,CNGRNCY_MIN,CNGRNCY_MAX,CNGRNCY_STATUS,MEASURE_PROFILE
//      P035_DICE_CONGRUENCY_COL_WIDTH             //          11,        10,      7,         11,         11,            14,             15
//      P035_DICE_CONGRUENCY_COL_MASK              //           1,         1,      1,          1,          1,             1,              1
//      P035_DICE_CONGRUENCY_COL_TYPES             //           N,         N,      N,          N,          N,             N,              N
//      P035_DICE_CONGRUENCY_TABLE_TYPE            // S
#define P055_DICE_CONGRUENCY                  767  // HD_PHYS_PSN,HD_LGC_PSN,STD_DEV,CNGRNCY_MIN,CNGRNCY_MAX,CNGRNCY_STATUS,MEASURE_PROFILE
//      P055_DICE_CONGRUENCY_COL_WIDTH             //          11,        10,      7,         11,         11,            14,             15
//      P055_DICE_CONGRUENCY_COL_MASK              //           1,         1,      1,          1,          1,             1,              1
//      P055_DICE_CONGRUENCY_COL_TYPES             //           N,         N,      N,          N,          N,             N,              N
//      P055_DICE_CONGRUENCY_TABLE_TYPE            // S
#define P025_LD_UNLD_PARAM_STATS              768  // STATISTIC_NAME,LOAD_TIME,LOAD_MAX_CUR,LOAD_MAX_VEL,ULD_TIME,ULD_MAX_CUR,ULD_MAX_VEL
//      P025_LD_UNLD_PARAM_STATS_COL_WIDTH         //             14,        9,          12,          12,       8,         11,         11
//      P025_LD_UNLD_PARAM_STATS_COL_MASK          //              1,        1,           1,           1,       1,          1,          1
//      P025_LD_UNLD_PARAM_STATS_COL_TYPES         //              V,        N,           N,           N,       N,          N,          N
//      P025_LD_UNLD_PARAM_STATS_TABLE_TYPE        // S
#define P167_STE_SUMMARY                      769  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,WRITE_TRACK,WRITE_CYCLE,WRITE_CURRENT_DAC,WRT_CUR_OVS_DAC,STEP_DOWN_ITERATION,BASELINE_BER,BASELINE_BER_SPEC,MAX_STE,STE_MAX_ERASURE_SPEC,BER_AFTER_STE,BER_AFTER_STE_SPEC,OFFSET_STE_MAX,FULL_WIDTH_HALF_MAX,ATI_ID,ATI_OD,ATI_MAX_SPEC,BER_AFTER_ATI,BER_AFTER_ATI_SPEC,FAIL_CODE,BPI_USED,WRT_RISE_TIME,BASELINE_BER_RNG,BASELINE_SUM_UNCONV,BASELINE_BER_STDEV,BER_SWEEP_NUM,AVG_TST_TRK_BER_RANGE
//      P167_STE_SUMMARY_COL_WIDTH                 //          11,        10,   4,         11,         11,               17,             15,                 19,          12,               17,      7,                  20,           13,                18,            14,                 19,     6,     6,          12,           13,                18,        9,       8,           13,              16,                 19,                18,           13,                   21
//      P167_STE_SUMMARY_COL_MASK                  //           1,         1,   1,          1,          1,                1,              1,                  1,           1,                1,      1,                   1,            1,                 1,             1,                  1,     1,     1,           1,            1,                 1,        1,       1,            0,               0,                  0,                 0,            0,                    0
//      P167_STE_SUMMARY_COL_TYPES                 //           N,         N,   N,          N,          N,                N,              N,                  N,           N,                N,      N,                   N,            N,                 N,             N,                  N,     N,     N,           N,            N,                 N,        N,       N
//      P167_STE_SUMMARY_TABLE_TYPE                // S
#define P042_WRITE_FAULT                      770  // HD_PHYS_PSN,HD_LGC_PSN,SENSE_DATA
//      P042_WRITE_FAULT_COL_WIDTH                 //          11,        10,        10
//      P042_WRITE_FAULT_COL_MASK                  //           0,         0,         0
//      P042_WRITE_FAULT_COL_TYPES                 // *
//      P042_WRITE_FAULT_TABLE_TYPE                // S
#define P000_OCLIM                            771  // HD_PHYS_PSN,TYPE,OCLIM_HEX,OCLIM_PER
//      P000_OCLIM_COL_WIDTH                       //          11,   4,        9,        9
//      P000_OCLIM_COL_MASK                        //           0,   0,        0,        0
//      P000_OCLIM_COL_TYPES                       // *
//      P000_OCLIM_TABLE_TYPE                      // S

// Deprecated 11/23/2010
#define P000_NATIVE_TO_LGCL_CYL               772  // HD_LGC_PSN,NATIVE_START_CYL,NATIVE_END_CYL,PHYSCL_START_CYL,PHYSCL_END_CYL,LGCL_START_CYL,LGCL_END_CYL,HD_PHYS_PSN
//      P000_NATIVE_TO_LGCL_CYL_COL_WIDTH          //         10,              16,            14,              16,            14,            14,          12,         11
//      P000_NATIVE_TO_LGCL_CYL_COL_MASK           //          0,               0,             0,               0,             0,             0,           0,          0
//      P000_NATIVE_TO_LGCL_CYL_COL_TYPES          // *
//      P000_NATIVE_TO_LGCL_CYL_TABLE_TYPE         // S

// Deprecated 11/23/2010
#define P035_DICE_HD_STBLTY                   773  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TABLE_TYPE,MAX_SVGA,MIN_SVGA,DELTA_SVGA,MAX_HTR_DAC,MIN_HTR_DAC,THRESHOLD_TRIP_CNT,TEST_MODE,NUM_REVS
//      P035_DICE_HD_STBLTY_COL_WIDTH              //          11,        10,        9,        10,       8,       8,        10,         11,         11,                18,        9,       8
//      P035_DICE_HD_STBLTY_COL_MASK               //           0,         0,        0,         0,       0,       0,         0,          0,          0,                 0,        0,       0
//      P035_DICE_HD_STBLTY_COL_TYPES              // *
//      P035_DICE_HD_STBLTY_TABLE_TYPE             // S
#define P055_DICE_HD_STBLTY                   774  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TABLE_TYPE,MAX_SVGA,MIN_SVGA,DELTA_SVGA,MAX_HTR_DAC,MIN_HTR_DAC,THRESHOLD_TRIP_CNT,TEST_MODE,NUM_REVS
//      P055_DICE_HD_STBLTY_COL_WIDTH              //          11,        10,        9,        10,       8,       8,        10,         11,         11,                18,        9,       8
//      P055_DICE_HD_STBLTY_COL_MASK               //           1,         1,        1,         1,       1,       1,         1,          1,          1,                 1,        1,       1
//      P055_DICE_HD_STBLTY_COL_TYPES              //           N,         N,        N,         V,       N,       N,         N,          N,          N,                 N,        V,       N
//      P055_DICE_HD_STBLTY_TABLE_TYPE             // S
#define P251_SUBPROCESS_SUM_AGERE             775  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,OPTI_ORDER,TARG_T0,TARG_T1,TARG_T2,RGSTR_ID_1,RGSTR_ID_1_VAL,RGSTR_ID_2,RGSTR_ID_2_VAL,RGSTR_ID_3,RGSTR_ID_3_VAL,RGSTR_ID_4,RGSTR_ID_4_VAL,RGSTR_ID_5,RGSTR_ID_5_VAL,RGSTR_ID_6,RGSTR_ID_6_VAL
//      P251_SUBPROCESS_SUM_AGERE_COL_WIDTH        //          12,        9,        10,        10,      7,      7,      7,        10,            14,        10,            14,        10,            14,        10,            14,        10,            14,        10,            14
//      P251_SUBPROCESS_SUM_AGERE_COL_MASK         //           0,        0,         0,         0,      0,      0,      0,         0,             0,         0,             0,         0,             0,         0,             0,         0,             0,         0,             0
//      P251_SUBPROCESS_SUM_AGERE_COL_TYPES        // *
//      P251_SUBPROCESS_SUM_AGERE_TABLE_TYPE       // S
#define P134_TAGGED_TA_SUMMARY                776  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,TA_PSN,TA_WEDGE,TA_LENGTH,TA_WIDTH,TA_AMP,TA_TRK_DETECTED_CNT,TA_PASSIVE_AMP_MV,TA_TAGGED
//      P134_TAGGED_TA_SUMMARY_COL_WIDTH           //          11,        10,     11,     8,       8,        9,       8,     6,                 19,               17,        9
//      P134_TAGGED_TA_SUMMARY_COL_MASK            //           0,         0,      0,     0,       0,        0,       0,     0,                  0,                0,        0
//      P134_TAGGED_TA_SUMMARY_COL_TYPES           // *
//      P134_TAGGED_TA_SUMMARY_TABLE_TYPE          // S
#define P135_AVERAGE_SPECTRA                  777  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,SENSOR_NUM,SENSOR_METRIC,SENSOR_AVG_TYPE,OVRSHT_AMP,OVRSHT_DUR,WRT_CUR_DAC,HTR_DAC,TEST_ITERATION,CNTCT_TEST_STAGE,HTR_DAC_STEP_SIZE,CONTACT,TRIP,POWER
//      P135_AVERAGE_SPECTRA_COL_WIDTH             //          11,        9,      7,        10,        10,           13,             15,        10,        10,         11,      7,            14,              16,               17,      7,   4,    5
//      P135_AVERAGE_SPECTRA_COL_MASK              //           0,        0,      0,         0,         0,            0,              0,         0,         0,          0,      0,             0,               0,                0,      0,   0,    0
//      P135_AVERAGE_SPECTRA_COL_TYPES             // *
//      P135_AVERAGE_SPECTRA_TABLE_TYPE            // S
#define P041_RVFF_DATA                        778  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,SIGMA_NORM,SIGMA_AMP,DIFF_PERCNT,SENSE_DATA
//      P041_RVFF_DATA_COL_WIDTH                   //          11,        10,       8,        10,        9,         11,        10
//      P041_RVFF_DATA_COL_MASK                    //           0,         0,       0,         0,        0,          0,         0
//      P041_RVFF_DATA_COL_TYPES                   // *
//      P041_RVFF_DATA_TABLE_TYPE                  // S
#define P251_SUBPROC_SUM_AGERE                779  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,OPTI_ORDER,TARG_T0,TARG_T1,TARG_T2,FIT_OR_BER_MODE,FIT_OR_BER_VALUE,RGSTR_ID_1,RGSTR_ID_1_VAL,RGSTR_ID_2,RGSTR_ID_2_VAL,RGSTR_ID_3,RGSTR_ID_3_VAL,RGSTR_ID_4,RGSTR_ID_4_VAL,RGSTR_ID_5,RGSTR_ID_5_VAL,RGSTR_ID_6,RGSTR_ID_6_VAL
//      P251_SUBPROC_SUM_AGERE_COL_WIDTH           //          11,        9,        10,        10,      7,      7,      7,             15,              16,        10,            14,        10,            14,        10,            14,        10,            14,        10,            14,        10,            14
//      P251_SUBPROC_SUM_AGERE_COL_MASK            //           1,        1,         1,         1,      1,      1,      1,              1,               1,         1,             1,         1,             1,         1,             1,         1,             1,         1,             1,         1,             1
//      P251_SUBPROC_SUM_AGERE_COL_TYPES           //           N,        N,         N,         N,      N,      N,      N,              V,               N,         N,             N,         N,             N,         N,             N,         N,             N,         N,             N,         N,             N
//      P251_SUBPROC_SUM_AGERE_TABLE_TYPE          // S
#define P000_AUDIT_DRIVE_PARAM                780  // SERPENTS_PER_ZN,SERPENT_LOCN
//      P000_AUDIT_DRIVE_PARAM_COL_WIDTH           //              15,          12
//      P000_AUDIT_DRIVE_PARAM_COL_MASK            //               0,           0
//      P000_AUDIT_DRIVE_PARAM_COL_TYPES           // *
//      P000_AUDIT_DRIVE_PARAM_TABLE_TYPE          // S

// Deprecated 10/24/2011
#define P211_WP_TBL                           781  // HD_PHYS_PSN,DATA_ZONE,WPOWER,ZEROHEATCLR,CLRWWHT,WPWGHT,BPICAP,FBPICAP,TPICAP,FTPICAP,SATURATION,CAPCTY
//      P211_WP_TBL_COL_WIDTH                      //          11,        9,     6,         11,      7,     6,     6,      7,     6,      7,        10,     6
//      P211_WP_TBL_COL_MASK                       //           0,        0,     0,          0,      0,     0,     0,      0,     0,      0,         0,     0
//      P211_WP_TBL_COL_TYPES                      // *
//      P211_WP_TBL_TABLE_TYPE                     // M

// Deprecated 11/23/2010
#define P049_AFH_FRAMES2                      782  // MODE,STATE_NAME,STATE_INDX,HD_PHYS_PSN,CONS_CHK_INDX,HD_LGC_PSN,ZONE,LOG_CYLINDER,NOM_CYLINDER,MEAS_POS,TEMP,WRT_HT_DAC,HT_ONLY_DAC,WRT_HT_CLR,HT_ONLY_CLR,WRT_LOSS
//      P049_AFH_FRAMES2_COL_WIDTH                 //    4,        10,        10,         11,           13,        10,   4,          12,          12,       8,   4,        10,         11,        10,         11,       8
//      P049_AFH_FRAMES2_COL_MASK                  //    0,         0,         0,          0,            0,         0,   0,           0,           0,       0,   0,         0,          0,         0,          0,       0
//      P049_AFH_FRAMES2_COL_TYPES                 // *
//      P049_AFH_FRAMES2_TABLE_TYPE                // M
#define P056_U_ACTUATOR_GAIN_CAL              783  // HD_PHYS_PSN,HD_LGC_PSN,PHYS_TRK_NUM,NUM_SERVO_STAGES,ITERATION,TEMPERATURE,UACT_GAIN,CMD_STATUS
//      P056_U_ACTUATOR_GAIN_CAL_COL_WIDTH         //          12,        11,          13,              17,       10,         13,       11,        11
//      P056_U_ACTUATOR_GAIN_CAL_COL_MASK          //           1,         1,           1,               1,        1,          1,        1,         1
//      P056_U_ACTUATOR_GAIN_CAL_COL_TYPES         //           N,         N,           N,               N,        N,          N,        N,         N
//      P056_U_ACTUATOR_GAIN_CAL_TABLE_TYPE        // S
#define P035_SIGNAL_NOISE_LEVELS              784  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RETRY_CNT,REVS,PES_STDEV,AGC_STDEV,AGC_SCALE,PES_FACTOR,AGC_FACTOR
//      P035_SIGNAL_NOISE_LEVELS_COL_WIDTH         //          11,        10,        9,        9,   4,        9,        9,        9,        10,        10
//      P035_SIGNAL_NOISE_LEVELS_COL_MASK          //           0,         0,        0,        0,   0,        0,        0,        0,         0,         0
//      P035_SIGNAL_NOISE_LEVELS_COL_TYPES         // *
//      P035_SIGNAL_NOISE_LEVELS_TABLE_TYPE        // S
#define P055_SIGNAL_NOISE_LEVELS              785  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RETRY_CNT,REVS,PES_STDEV,AGC_STDEV,AGC_SCALE,PES_FACTOR,AGC_FACTOR
//      P055_SIGNAL_NOISE_LEVELS_COL_WIDTH         //          11,        10,        9,        9,   4,        9,        9,        9,        10,        10
//      P055_SIGNAL_NOISE_LEVELS_COL_MASK          //           1,         1,        1,        1,   1,        1,        1,        1,         1,         1
//      P055_SIGNAL_NOISE_LEVELS_COL_TYPES         //           N,         N,        N,        N,   N,        N,        N,        N,         N,         N
//      P055_SIGNAL_NOISE_LEVELS_TABLE_TYPE        // S
#define P075_HIRP_CAL_POLY_FIT                786  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ORIG_BACKOFF_DAC,FITTED_BACKOFF_DAC,SIGMA_POLY_FIT,POLYNOMIAL_DEGREE,FIT_NUM,CNTCT_TYPE,X_SQUARED_COEF,X_LINEAR_COEF,RAP_USED,SLOPE
//      P075_HIRP_CAL_POLY_FIT_COL_WIDTH           //          11,        10,        9,              16,                18,            14,               17,      7,        10,            14,           13,       8,    8
//      P075_HIRP_CAL_POLY_FIT_COL_MASK            //           1,         1,        1,               1,                 1,             1,                1,      1,         1,             1,            1,       1,    0
//      P075_HIRP_CAL_POLY_FIT_COL_TYPES           //           N,         N,        N,               N,                 N,             N,                N,      N,         V,             N,            N,       N
//      P075_HIRP_CAL_POLY_FIT_TABLE_TYPE          // S
#define P109_LOG_VER_DATA_ERR_FSB             787  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SECTOR,OFFSET,SYM_POS,SYM_LEN,RPT_CNT,_,F,S,B,_,S,T,A,T,U,S,_,SMR_LGC_TRK
//      P109_LOG_VER_DATA_ERR_FSB_COL_WIDTH        //          11,        10,      7,     6,     6,      7,      7,      7,5,1,1,1,1,1,1,1,1,1,1,1,         11
//      P109_LOG_VER_DATA_ERR_FSB_COL_MASK         //           0,         0,      0,     0,     0,      0,      0,      0,0,0,0,0,0,0,0,0,0,0,0,0,          0
//      P109_LOG_VER_DATA_ERR_FSB_COL_TYPES        // *
//      P109_LOG_VER_DATA_ERR_FSB_TABLE_TYPE       // S
#define P234_EAW_ERROR_RATE2                  788  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,T_LEVEL,NUM_WRITES,DEGAUSS,BITS_READ_LOG10,BASELINE_BER_CHUNK1,BASELINE_BER_CHUNK2,BASELINE_BER_CHUNK3,EAW_BER_CHUNK1,EAW_BER_CHUNK2,EAW_BER_CHUNK3,DEGAUSS_ON_LIMIT,DEGAUSS_OFF_LIMIT,FAIL_CODE,WRT_CNT
//      P234_EAW_ERROR_RATE2_COL_WIDTH             //          11,        10,        9,      7,      7,        10,      7,             15,                 19,                 19,                 19,            14,            14,            14,              16,               17,        9,      7
//      P234_EAW_ERROR_RATE2_COL_MASK              //           1,         1,        1,      1,      1,         1,      1,              1,                  1,                  1,                  1,             1,             1,             1,               1,                1,        1,      0
//      P234_EAW_ERROR_RATE2_COL_TYPES             //           N,         N,        N,      N,      N,         N,      V,              N,                  N,                  N,                  N,             N,             N,             N,               N,                N,        N
//      P234_EAW_ERROR_RATE2_TABLE_TYPE            // S
#define P214_APERIO_TA_DATA2                  789  // DFCT_NUM,HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,DETECTION_TYPE,GREY_CODE_APERIO,TA_PSN_SFI,SRVO_WEDGE,TA_LEN_SYMBLS,TA_MAX_AMP,TA_AVG_AMP,RPT_CNT,SMR_LGC_TRK
//      P214_APERIO_TA_DATA2_COL_WIDTH             //        8,         11,     11,        10,            14,              16,        10,        10,           13,        10,        10,      7,         11
//      P214_APERIO_TA_DATA2_COL_MASK              //        1,          1,      1,         1,             1,               1,         1,         1,            1,         1,         1,      1,          0
//      P214_APERIO_TA_DATA2_COL_TYPES             //        N,          N,      N,         N,             N,               N,         N,         N,            N,         N,         N,      N
//      P214_APERIO_TA_DATA2_TABLE_TYPE            // S
#define P214_APERIO_TA_DETAIL                 790  // TA_NUM,HD_PHYS_PSN,TA_START_TRK_NUM,HD_LGC_PSN,TA_TYPE,TA_PSN_SFI,TA_LEN_SYMBLS,TA_WIDTH_TRKS,TA_AMP_MV,AMP_WIDTH,SRVO_WEDGE,MAX_RPT_CNT,TA_TRK_DETECTED_CNT,SMR_LGC_TRK
//      P214_APERIO_TA_DETAIL_COL_WIDTH            //      6,         11,              16,        10,      7,        10,           13,           13,        9,        9,        10,         11,                 19,         11
//      P214_APERIO_TA_DETAIL_COL_MASK             //      1,          1,               1,         1,      1,         1,            1,            1,        1,        1,         1,          1,                  1,          0
//      P214_APERIO_TA_DETAIL_COL_TYPES            //      N,          N,               N,         N,      N,         N,            N,            N,        N,        N,         N,          N,                  N
//      P214_APERIO_TA_DETAIL_TABLE_TYPE           // S
#define P214_APERIO_TA_HD2                    791  // HD_PHYS_PSN,HD_LGC_PSN,TA_CNT_TOTAL,TA_CNT_T134,TA_CNT_APERIO,TA_CNT_APERIO_CONFIRMED,TA_CNT_T134_APERIO,COMPLETE_APERIO_DATA_SET,SQRT_AMP_WIDTH,MAX_AMP_WIDTH,AMP0_CNT,AMP1_CNT,AMP2_CNT,AMP3_CNT,AMP4_CNT,AMP5_CNT,AMP6_CNT,AMP7_CNT
//      P214_APERIO_TA_HD2_COL_WIDTH               //          11,        10,          13,         11,           13,                     23,                18,                      24,            14,           13,       8,       8,       8,       8,       8,       8,       8,       8
//      P214_APERIO_TA_HD2_COL_MASK                //           1,         1,           1,          1,            1,                      1,                 1,                       1,             1,            1,       1,       1,       1,       1,       1,       1,       1,       1
//      P214_APERIO_TA_HD2_COL_TYPES               //           N,         N,           N,          N,            N,                      N,                 N,                       V,             N,            N,       N,       N,       N,       N,       N,       N,       N,       N
//      P214_APERIO_TA_HD2_TABLE_TYPE              // S

// Deprecated 11/23/2010
#define P117_MDS_LG_SCRT_SURF_CNT             792  // HD_PHYS_PSN,ERROR_COUNT
//      P117_MDS_LG_SCRT_SURF_CNT_COL_WIDTH        //          11,         11
//      P117_MDS_LG_SCRT_SURF_CNT_COL_MASK         //           0,          0
//      P117_MDS_LG_SCRT_SURF_CNT_COL_TYPES        // *
//      P117_MDS_LG_SCRT_SURF_CNT_TABLE_TYPE       // S
#define P068_RW_OPTIONS_STATUS                793  // RW_OPT,OPERATION,ST_ERROR,HD_PHYS_PSN,ZONE,TRK_NUM,SECTOR,SENSE_CODE
//      P068_RW_OPTIONS_STATUS_COL_WIDTH           //      6,        9,       8,         11,   4,      7,     6,        10
//      P068_RW_OPTIONS_STATUS_COL_MASK            //      0,        0,       0,          0,   0,      0,     0,         0
//      P068_RW_OPTIONS_STATUS_COL_TYPES           // *
//      P068_RW_OPTIONS_STATUS_TABLE_TYPE          // S
#define P251_ERR_RATE_BUCKET_EXTD             794  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,RGSTR_ID,TEST_ORDER,OPTI_VAL,HD_LGC_PSN,ERROR_RATE10,TOTAL_ERR_CNT,ITERATION_CNT,SYNC_ERR,NONCONVRG_CW_CNT,BITS_IN_ERR,NUM_REVS,TOT_SCTR_RD,VGAR,NLFR,TAP0,TAP1,TAP2,TAP3,TAP4,TAP5,TAP6,TAP7,TAP8,TAP9,TAPX,TAP11,TAP12,TAP13,TAP14,TAP15,TAP16
//      P251_ERR_RATE_BUCKET_EXTD_COL_WIDTH        //          11,        9,      7,       8,        10,       8,        10,          12,           13,           13,       8,              16,         11,       8,         11,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,    5,    5,    5,    5,    5,    5
//      P251_ERR_RATE_BUCKET_EXTD_COL_MASK         //           0,        0,      0,       0,         0,       0,         0,           0,            0,            0,       0,               0,          0,       0,          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,    0,    0,    0,    0,    0,    0
//      P251_ERR_RATE_BUCKET_EXTD_COL_TYPES        // *
//      P251_ERR_RATE_BUCKET_EXTD_TABLE_TYPE       // S
#define P213_ERROR_RATE                       795  // HD_PHYS_PSN,DATA_ZN,HD_LGC_PSN,TRK_NUM,RD_OFST,SQZ_OFST,ITRTN,STEP_DOWN_ITERATION,SYMBL_ERR_RATE,SCTR_ERR_RATE,UNRCVR_RATE,WRITE_CURRENT_DAC,WRT_CUR_OVS_DAC
//      P213_ERROR_RATE_COL_WIDTH                  //          11,      7,        10,      7,      7,       8,    5,                 19,            14,           13,         11,               17,             15
//      P213_ERROR_RATE_COL_MASK                   //           1,      1,         1,      1,      1,       1,    1,                  1,             1,            1,          1,                1,              1
//      P213_ERROR_RATE_COL_TYPES                  //           N,      N,         N,      N,      N,       N,    N,                  N,             N,            N,          N,                N,              N
//      P213_ERROR_RATE_TABLE_TYPE                 // S
#define P057_VCM_OFST                         796  // VCM_OFST
//      P057_VCM_OFST_COL_WIDTH                    //        8
//      P057_VCM_OFST_COL_MASK                     //        1
//      P057_VCM_OFST_COL_TYPES                    //        N
//      P057_VCM_OFST_TABLE_TYPE                   // S
#define P075_CONCURRENT_AFH                   797  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,TEST_ITERATION,CNTCT_TEST_STAGE,WRT_CUR_DAC,HTR_DAC,HSC_1,HSC_2,DELTA_FLY_HGT
//      P075_CONCURRENT_AFH_COL_WIDTH              //          11,      8,        10,            14,              16,         11,      7,   10,   10,           13
//      P075_CONCURRENT_AFH_COL_MASK               //           1,      1,         1,             1,               1,          1,      1,    1,    1,            1
//      P075_CONCURRENT_AFH_COL_TYPES              //           N,      N,         N,             N,               V,          N,      N,    N,    N,            N
//      P075_CONCURRENT_AFH_TABLE_TYPE             // M
#define P075_CURVE_FIT                        798  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,CNTCT_TYPE,WRT_CUR_OVS_AMP,WRT_CUR_OVS_DUR,WRT_CUR,CLRNC_TRGT,GAMMA_ACTN_RATIO,CNTCT_HTR_DAC,X_SQUARED_COEF,X_LINEAR_COEF,BACKOFF_HTR_DAC,SLOPE_AT_ZERO_HEAT,SLOPE_AT_OP_HEAT,ACTN_CURVE_RMS_ERR,ACTN_CURVE_RSQUARED_ERR,READER_ACTN_CONTACT,BAD_POINT_CNT
//      P075_CURVE_FIT_COL_WIDTH                   //          11,        9,      8,        10,        10,             15,             15,      7,        10,              16,           13,            14,           13,             15,                18,              16,                18,                     23,                 19,           13
//      P075_CURVE_FIT_COL_MASK                    //           1,        1,      1,         1,         1,              1,              1,      1,         1,               1,            1,             1,            1,              1,                 1,               1,                 1,                      1,                  1,            1
//      P075_CURVE_FIT_COL_TYPES                   //           N,        N,      N,         N,         V,              N,              N,      N,         N,               N,            N,             N,            N,              N,                 N,               N,                 N,                      N,                  N,            N
//      P075_CURVE_FIT_TABLE_TYPE                  // V
#define P172_AFH_WRITE_TRIPLET                799  // HD_PHYS_PSN,WC,OVS_AMP,OVS_DUR
//      P172_AFH_WRITE_TRIPLET_COL_WIDTH           //          11, 5,      7,      7
//      P172_AFH_WRITE_TRIPLET_COL_MASK            //           0, 0,      0,      0
//      P172_AFH_WRITE_TRIPLET_COL_TYPES           // *
//      P172_AFH_WRITE_TRIPLET_TABLE_TYPE          // S
#define P058_MSE_ATI                          800  // TRK_NUM,TRK_INDEX,FIT_WINSTANCE0,FIT_STD_WINSTANCE0,FIT_WINSTANCE1,FIT_STD_WINSTANCE1,FIT_WINSTANCE2,FIT_STD_WINSTANCE2,FIT_WINSTANCE3,FIT_STD_WINSTANCE3,FIT_WINSTANCE4,FIT_STD_WINSTANCE4
//      P058_MSE_ATI_COL_WIDTH                     //       7,        9,            14,                18,            14,                18,            14,                18,            14,                18,            14,                18
//      P058_MSE_ATI_COL_MASK                      //       0,        0,             0,                 0,             0,                 0,             0,                 0,             0,                 0,             0,                 0
//      P058_MSE_ATI_COL_TYPES                     // *
//      P058_MSE_ATI_TABLE_TYPE                    // M
#define P058_MSE_ATI_WINSTANCES               801  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,WINSTANCE0,WINSTANCE1,WINSTANCE2,WINSTANCE3,WINSTANCE4
//      P058_MSE_ATI_WINSTANCES_COL_WIDTH          //          11,        9,        10,        10,        10,        10,        10,        10
//      P058_MSE_ATI_WINSTANCES_COL_MASK           //           0,        0,         0,         0,         0,         0,         0,         0
//      P058_MSE_ATI_WINSTANCES_COL_TYPES          // *
//      P058_MSE_ATI_WINSTANCES_TABLE_TYPE         // M
#define P058_WINSTANCE_STATUS                 802  // TRK_NUM,TRK_INDEX,MDIFFT_WINST0,MDIFFT_WINST1,MDIFFT_WINST2,MDIFFT_WINST3,MDIFFT_WINST4,SLOPE,ATI_STE_STAT
//      P058_WINSTANCE_STATUS_COL_WIDTH            //       7,        9,           13,           13,           13,           13,           13,   10,          12
//      P058_WINSTANCE_STATUS_COL_MASK             //       0,        0,            0,            0,            0,            0,            0,    0,           0
//      P058_WINSTANCE_STATUS_COL_TYPES            // *
//      P058_WINSTANCE_STATUS_TABLE_TYPE           // M
#define P058_STATUS                           803  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ATI_STATUS,STE_STATUS,SUM_OF_SLOPES
//      P058_STATUS_COL_WIDTH                      //          11,        9,        10,        10,        10,           13
//      P058_STATUS_COL_MASK                       //           0,        0,         0,         0,         0,            0
//      P058_STATUS_COL_TYPES                      // *
//      P058_STATUS_TABLE_TYPE                     // S
#define P251_BEST_ERROR_RATE                  804  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,RGSTR_ID,TEST_ORDER,HD_LGC_PSN,OPTI_VAL,ERROR_RATE10,TOTAL_ERR_CNT,NOMINAL_VAL,AUX_VAL,TOTAL_SCTR_RD,BITS_READ_CNT
//      P251_BEST_ERROR_RATE_COL_WIDTH             //          11,        9,      7,       8,        10,        10,       8,          12,           13,         11,      7,           13,           13
//      P251_BEST_ERROR_RATE_COL_MASK              //           1,        1,      1,       1,         1,         1,       1,           1,            1,          1,      1,            1,            1
//      P251_BEST_ERROR_RATE_COL_TYPES             //           N,        N,      N,       V,         N,         N,       N,           N,            N,          N,      N,            N,            N
//      P251_BEST_ERROR_RATE_TABLE_TYPE            // S
#define P251_FIT_BCI_POINT                    805  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RGSTR_ID,TEST_ORDER,FITNESS,FIT_SIGMA,ICNT,BITS_ERR,LOWLLR,SOFTSUM,METRIC,OPTI_VAL,AUX_VAL,TRK_NUM
//      P251_FIT_BCI_POINT_COL_WIDTH               //          11,        9,        10,       8,        10,      8,        9,   4,       8,     6,      7,     6,       8,      8,      7
//      P251_FIT_BCI_POINT_COL_MASK                //           0,        0,         0,       0,         0,      0,        0,   0,       0,     0,      0,     0,       0,      0,      0
//      P251_FIT_BCI_POINT_COL_TYPES               // *
//      P251_FIT_BCI_POINT_TABLE_TYPE              // M
#define P251_FIT_BCI_POINT_EXTD               806  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RGSTR_ID,TEST_ORDER,FITNESS,FIT_SIGMA,ICNT,BITS_ERR,LOWLLR,SOFTSUM,METRIC,OPTI_VAL,AUX_VAL,TRK_NUM,VGAR,NLFR,TAP1,TAP2,TAP3,TAP4,TAP5,TAP6,TAP7,TAP8,TAP9,TAPX
//      P251_FIT_BCI_POINT_EXTD_COL_WIDTH          //          11,        9,        10,       8,        10,      8,        9,   4,       8,     6,      7,     6,       8,      8,      7,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4
//      P251_FIT_BCI_POINT_EXTD_COL_MASK           //           0,        0,         0,       0,         0,      0,        0,   0,       0,     0,      0,     0,       0,      0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
//      P251_FIT_BCI_POINT_EXTD_COL_TYPES          // *
//      P251_FIT_BCI_POINT_EXTD_TABLE_TYPE         // M
#define P172_USR_ZONE_UJOG_TBL                807  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,LGC_TRK_NUM,MICROJOG,TRACK_OFFSET
//      P172_USR_ZONE_UJOG_TBL_COL_WIDTH           //          11,        10,        9,         11,      10,          12
//      P172_USR_ZONE_UJOG_TBL_COL_MASK            //           0,         0,        0,          0,       0,           0
//      P172_USR_ZONE_UJOG_TBL_COL_TYPES           // *
//      P172_USR_ZONE_UJOG_TBL_TABLE_TYPE          // S
#define P172_SYS_ZONE_UJOG_TBL                808  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,LGC_TRK_NUM,MICROJOG,TRACK_OFFSET
//      P172_SYS_ZONE_UJOG_TBL_COL_WIDTH           //          11,        10,        9,         11,      10,          12
//      P172_SYS_ZONE_UJOG_TBL_COL_MASK            //           0,         0,        0,          0,       0,           0
//      P172_SYS_ZONE_UJOG_TBL_COL_TYPES           // *
//      P172_SYS_ZONE_UJOG_TBL_TABLE_TYPE          // S
#define P025_LUL_VELOCITIES                   809  // LUL_CYCLE_CNT,LOAD_VEL,UNLOAD_VEL,UNLOAD_RETRIES_CNT
//      P025_LUL_VELOCITIES_COL_WIDTH              //            13,       8,        10,                18
//      P025_LUL_VELOCITIES_COL_MASK               //             1,       1,         1,                 1
//      P025_LUL_VELOCITIES_COL_TYPES              //             N,       N,         N,                 N
//      P025_LUL_VELOCITIES_TABLE_TYPE             // S
#define P189_VCAT_DC_COEF                     810  // HD_PHYS_PSN,HD_LGC_PSN,POLY_ORDER,MULTIPLIER,COEF_0,COEF_1,COEF_2,COEF_3,COEF_4,COEF_5,COEF_6,COEF_7,COEF_8
//      P189_VCAT_DC_COEF_COL_WIDTH                //          11,        10,        10,        10,     8,     8,     8,     8,     8,     8,     8,     8,     8
//      P189_VCAT_DC_COEF_COL_MASK                 //           1,         1,         1,         1,     1,     1,     1,     1,     1,     1,     1,     1,     1
//      P189_VCAT_DC_COEF_COL_TYPES                //           N,         N,         N,         N,     N,     N,     N,     N,     N,     N,     N,     N,     N
//      P189_VCAT_DC_COEF_TABLE_TYPE               // S
#define P189_RADIAL_TIMING_COEF2              811  // HD_PHYS_PSN,HD_LGC_PSN,POLY_ORDER,MULTIPLIER,COEF_0,COEF_1,COEF_2,COEF_3,COEF_4,COEF_5,COEF_6,COEF_7,COEF_8
//      P189_RADIAL_TIMING_COEF2_COL_WIDTH         //          11,        10,        10,        10,     8,     8,     8,     8,     8,     8,     8,     8,     8
//      P189_RADIAL_TIMING_COEF2_COL_MASK          //           1,         1,         1,         1,     1,     1,     1,     1,     1,     1,     1,     1,     1
//      P189_RADIAL_TIMING_COEF2_COL_TYPES         //           N,         N,         N,         N,     N,     N,     N,     N,     N,     N,     N,     N,     N
//      P189_RADIAL_TIMING_COEF2_TABLE_TYPE        // S
#define P043_RADIAL_TIMING_COEF2              812  // HD_PHYS_PSN,HD_LGC_PSN,POLY_ORDER,MULTIPLIER,COEF_0,COEF_1,COEF_2,COEF_3,COEF_4,COEF_5,COEF_6,COEF_7,COEF_8
//      P043_RADIAL_TIMING_COEF2_COL_WIDTH         //          11,        10,        10,        10,     8,     8,     8,     8,     8,     8,     8,     8,     8
//      P043_RADIAL_TIMING_COEF2_COL_MASK          //           1,         1,         1,         1,     1,     1,     1,     1,     1,     1,     1,     1,     1
//      P043_RADIAL_TIMING_COEF2_COL_TYPES         //           N,         N,         N,         N,     N,     N,     N,     N,     N,     N,     N,     N,     N
//      P043_RADIAL_TIMING_COEF2_TABLE_TYPE        // S
#define P175_SQUEEZE_MONITOR                  813  // HD_PHYS_PSN,HD_LGC_PSN,ZAP_PSN,LGC_CYL,ELASPED_TIME,TRK_CNT_ZAP_SQZ_SET_1,TRK_CNT_ZAP_SQZ_SET_2,TRK_CNT_ZAP_SQZ_SET_3,TRK_CNT_ZAP_SQZ_SET_4,TRK_CNT_ZAP_SQZ_SET_5,TRK_CNT_ZAP_SQZ_SET_6,TRK_CNT_ZAP_SQZ_SET_7,TRK_CNT_ZAP_SQZ_SET_8,COUNT_1,COUNT_2,COUNT_3,COUNT_4,COUNT_5,COUNT_6,COUNT_7,COUNT_8,MEAN_AGC
//      P175_SQUEEZE_MONITOR_COL_WIDTH             //          11,        10,      7,      8,          12,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,      7,      7,      7,      7,      7,      7,      7,      7,       8
//      P175_SQUEEZE_MONITOR_COL_MASK              //           1,         1,      1,      1,           1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,      0,      0,      0,      0,      0,      0,      0,      0,       1
//      P175_SQUEEZE_MONITOR_COL_TYPES             //           N,         N,      V,      N,           N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                                                                       N
//      P175_SQUEEZE_MONITOR_TABLE_TYPE            // S
#define P172_AFH_TC_COEF_2                    814  // HD_PHYS_PSN,HD_LGC_PSN,THERMAL_CLR_COEF1,THERMAL_CLR_COEF2,ADD_TCS_COLD_DTC,ADD_TCS_HOT_DTC,COLD_TEMP_DTC,HOT_TEMP_DTH
//      P172_AFH_TC_COEF_2_COL_WIDTH               //          11,        10,               17,               17,              16,             15,           13,          12
//      P172_AFH_TC_COEF_2_COL_MASK                //           1,         1,                1,                1,               1,              1,            1,           1
//      P172_AFH_TC_COEF_2_COL_TYPES               //           N,         N,                N,                N,               N,              N,            N,           N
//      P172_AFH_TC_COEF_2_TABLE_TYPE              // V
#define P175_ZAP_SUMMARY3                     815  // HD_PHYS_PSN,ZAP_PSN,SPAN_INDEX,HD_LGC_PSN,WRT_FAIL_CNT,RD_FAIL_CNT,WC,NRWC,RC,NRRC,RRO_FAIL_CNT,DIV,ITRTN_TRK,REV_ITRTN,MTRKS,WTRKS,NUM_NONADJ_TRKS,EXCEPT,TOTAL_ZEDD_EVENTS,SKFAILS,I/OFAILS,BDSMPTRKS,ETIME
//      P175_ZAP_SUMMARY3_COL_WIDTH                //          11,      7,        10,        10,          12,         11, 5,   5, 5,   5,          12,  5,        9,        9,    6,    6,             15,     6,               17,      7,       8,        9,    6
//      P175_ZAP_SUMMARY3_COL_MASK                 //           1,      1,         1,         1,           1,          1, 0,   0, 0,   0,           1,  0,        1,        1,    1,    1,              1,     0,                1,      0,       0,        0,    1
//      P175_ZAP_SUMMARY3_COL_TYPES                //           N,      V,         N,         N,           N,          N,                           N,            N,        N,    N,    N,              N,                       N,                               N
//      P175_ZAP_SUMMARY3_TABLE_TYPE               // M
#define P191_HSC                              816  // HD_PHYS_PSN,DATA_ZONE,POINT_NUM,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,RADIUS,HTR_DAC,HSC_MSRD_HIRP,COEF_CALC_HIRP,HSC_MSRD_WIRP,COEF_CALC_WIRP,HTR_TAU_USECS,HTR_TAU_CORR_COEF,TRY_CNT,ACTIVE_HEATER,INACTIVE_HEATER_DAC,WHIRP_POINT_CNT
//      P191_HSC_COL_WIDTH                         //          11,        9,        9,        10,         11,         11,     6,      7,           13,            14,           13,            14,           13,               17,      7,           13,                 19,             15
//      P191_HSC_COL_MASK                          //           1,        1,        1,         1,          1,          1,     1,      1,            1,             1,            1,             1,            1,                1,      1,            1,                  1,              1
//      P191_HSC_COL_TYPES                         //           N,        N,        N,         N,          N,          N,     N,      N,            N,             N,            N,             N,            N,                N,      N,            V,                  N,              N
//      P191_HSC_TABLE_TYPE                        // M
#define P191_HSC_COMPOUND                     817  // HD_PHYS_PSN,DATA_ZONE,POINT_NUM,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,RADIUS,HTR_DAC,HSC_MSRD_HIRP,COEF_CALC_HIRP,HSC_MSRD_WIRP,COEF_CALC_WIRP,HTR_TAU_USECS,HTR_TAU_CORR_COEF,TRY_CNT,ACTIVE_HEATER,INACTIVE_HEATER_DAC,WHIRP_POINT_CNT
//      P191_HSC_COMPOUND_COL_WIDTH                //          11,        9,        9,        10,         11,         11,     6,      7,           13,            14,           13,            14,           13,               17,      7,           13,                 19,             15
//      P191_HSC_COMPOUND_COL_MASK                 //           1,        1,        1,         1,          1,          1,     1,      1,            1,             1,            1,             1,            1,                1,      1,            1,                  1,              1
//      P191_HSC_COMPOUND_COL_TYPES                //           N,        N,        N,         N,          N,          N,     N,      N,            N,             N,            N,             N,            N,                N,      N,            V,                  N,              N
//      P191_HSC_COMPOUND_TABLE_TYPE               // M
#define P191_CLR_COEF                         818  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,RADIUS,WRT_CUR,OVRSHT,OVRSHT_DUR,VGAR,ADJ_SLOPE_HIRP,ADJ_OFST_HIRP,ADJ_CORR_SQR_HIRP,ADJ_SLOPE_WIRP,ADJ_OFST_WIRP,ADJ_CORR_SQR_WIRP,TRY_CNT,ACTIVE_HEATER,INACTIVE_HEATER_DAC
//      P191_CLR_COEF_COL_WIDTH                    //          11,        9,        10,         11,         11,     6,      7,     6,        10,   4,            14,           13,               17,            14,           13,               17,      7,           13,                 19
//      P191_CLR_COEF_COL_MASK                     //           1,        1,         1,          1,          1,     1,      1,     1,         1,   1,             1,            1,                1,             1,            1,                1,      1,            1,                  1
//      P191_CLR_COEF_COL_TYPES                    //           N,        N,         N,          N,          N,     N,      N,     N,         N,   N,             N,            N,                N,             N,            N,                N,      N,            V,                  N
//      P191_CLR_COEF_TABLE_TYPE                   // M
#define P191_CLR_COEF_COMPOUND                819  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,RADIUS,WRT_CUR,OVRSHT,OVRSHT_DUR,VGAR,ADJ_SLOPE_HIRP,ADJ_OFST_HIRP,ADJ_CORR_SQR_HIRP,ADJ_SLOPE_WIRP,ADJ_OFST_WIRP,ADJ_CORR_SQR_WIRP,TRY_CNT,ACTIVE_HEATER,INACTIVE_HEATER_DAC
//      P191_CLR_COEF_COMPOUND_COL_WIDTH           //          11,        9,        10,         11,         11,     6,      7,     6,        10,   4,            14,           13,               17,            14,           13,               17,      7,           13,                 19
//      P191_CLR_COEF_COMPOUND_COL_MASK            //           1,        1,         1,          1,          1,     1,      1,     1,         1,   1,             1,            1,                1,             1,            1,                1,      1,            1,                  1
//      P191_CLR_COEF_COMPOUND_COL_TYPES           //           N,        N,         N,          N,          N,     N,      N,     N,         N,   N,             N,            N,                N,             N,            N,                N,      N,            V,                  N
//      P191_CLR_COEF_COMPOUND_TABLE_TYPE          // M
#define P191_HSC_DATA_RETRY2                  820  // HD_PHYS_PSN,DATA_ZONE,ITERATION,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,RADIUS,HTR_DAC,REF_3RD_HARM,HSC_3RD_HARM,HSC_MSRD_HIP,COEF_CALC_HIP,HTR_TAU_USECS,HTR_TAU_CORR_COEF,TRY_NUM
//      P191_HSC_DATA_RETRY2_COL_WIDTH             //          11,        9,        9,        10,         11,         11,     6,      7,          12,          12,          12,           13,           13,               17,      7
//      P191_HSC_DATA_RETRY2_COL_MASK              //           0,        0,        0,         0,          0,          0,     0,      0,           0,           0,           0,            0,            0,                0,      0
//      P191_HSC_DATA_RETRY2_COL_TYPES             // *
//      P191_HSC_DATA_RETRY2_TABLE_TYPE            // S
#define P109_FREQUENCY_SETTINGS               821  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,DESC,M,F,SEQ_SG2WG,SEQ_SG2RG,FB_GAS,FB_GBS,FB_IPLO,SEQ_IPLO,SCALAR,WEDGE_SIZE
//      P109_FREQUENCY_SETTINGS_COL_WIDTH          //          11,        10,   4,   8,3,3,        9,        9,     6,     6,      7,       8,     6,        10
//      P109_FREQUENCY_SETTINGS_COL_MASK           //           0,         0,   0,   0,0,0,        0,        0,     0,     0,      0,       0,     0,         0
//      P109_FREQUENCY_SETTINGS_COL_TYPES          // *
//      P109_FREQUENCY_SETTINGS_TABLE_TYPE         // S
#define P000_TA_WINDOW_INFO                   822  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,CURR_THRESH,FAILED_WEDGE,REC_DBI_LOCN,REC_DBI_LGTH,TA_DET_LOCN,LOCN_DELTA,DBI_NORM_PSN,TA_NORM_PSN,IN_WINDOW,TA_LENGTH_SYM
//      P000_TA_WINDOW_INFO_COL_WIDTH              //          11,      7,        10,         11,          12,          12,          12,         11,        10,          12,         11,        9,           13
//      P000_TA_WINDOW_INFO_COL_MASK               //           0,      0,         0,          0,           0,           0,           0,          0,         0,           0,          0,        0,            0
//      P000_TA_WINDOW_INFO_COL_TYPES              // *
//      P000_TA_WINDOW_INFO_TABLE_TYPE             // S

// Deprecated 11/23/2010
#define P175_RV_MONITOR                       823  // HD_PHYS_PSN,HD_LGC_PSN,ZAP_PSN,LGC_CYL,ELASPED_TIME,COUNT_1,COUNT_2,COUNT_3,COUNT_4,COUNT_5,COUNT_6,COUNT_7,COUNT_8
//      P175_RV_MONITOR_COL_WIDTH                  //          11,        10,      7,      8,          12,      7,      7,      7,      7,      7,      7,      7,      7
//      P175_RV_MONITOR_COL_MASK                   //           0,         0,      0,      0,           0,      0,      0,      0,      0,      0,      0,      0,      0
//      P175_RV_MONITOR_COL_TYPES                  // *
//      P175_RV_MONITOR_TABLE_TYPE                 // S
#define P251_FITNESS_POINT_EXTD_M             824  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RGSTR_ID,FITNESS,FIT_SIGMA,OPTI_VAL,AUX_VAL,TRK_NUM,VGAR,TAP0,TAP1,TAP2,TAP3,TAP4,TAP5,TAP6,TAP7,TAP8,TAP9,ASYMMETRY
//      P251_FITNESS_POINT_EXTD_M_COL_WIDTH        //          11,        9,        10,       8,      8,        9,       8,      8,      7,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,        4
//      P251_FITNESS_POINT_EXTD_M_COL_MASK         //           0,        0,         0,       0,      0,        0,       0,      0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,        0
//      P251_FITNESS_POINT_EXTD_M_COL_TYPES        // *
//      P251_FITNESS_POINT_EXTD_M_TABLE_TYPE       // M
#define P251_MARVELL_VGA_DATA                 825  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RGSTR_ID,VGAR
//      P251_MARVELL_VGA_DATA_COL_WIDTH            //          11,        9,        10,       8,   4
//      P251_MARVELL_VGA_DATA_COL_MASK             //           0,        0,         0,       0,   0
//      P251_MARVELL_VGA_DATA_COL_TYPES            // *
//      P251_MARVELL_VGA_DATA_TABLE_TYPE           // M
#define P211_HEADER_INFO2                     826  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,OD_TRK,ID_TRK,TRGT_SER,TLEVEL,NUM_SOVA_ITERATIONS,WP_INDEX,WRT_CUR,OVRSHT,OVRSHT_DUR
//      P211_HEADER_INFO2_COL_WIDTH                //          11,        9,        10,     8,     8,       8,     6,                 19,       8,      7,     6,        10
//      P211_HEADER_INFO2_COL_MASK                 //           0,        0,         0,     0,     0,       0,     0,                  0,       0,      0,     0,         0
//      P211_HEADER_INFO2_COL_TYPES                // *
//      P211_HEADER_INFO2_TABLE_TYPE               // S
#define P211_BPI_MEASUREMENT2                 827  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,DELTA_BPI_PCT,M_VAL,F_VAL,SECTOR_ERROR_RATE,BANDWIDTH,BANDWIDTH_RNG,TW_3,TW_5,PRECOMP,BOOST,WP_INDEX
//      P211_BPI_MEASUREMENT2_COL_WIDTH            //          11,        9,        10,      7,           13,    5,    5,               17,        9,           13,   4,   4,      7,    5,       8
//      P211_BPI_MEASUREMENT2_COL_MASK             //           0,        0,         0,      0,            0,    0,    0,                0,        0,            0,   0,   0,      0,    0,       0
//      P211_BPI_MEASUREMENT2_COL_TYPES            // *
//      P211_BPI_MEASUREMENT2_TABLE_TYPE           // S
#define P211_BPI_INIT2                        828  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,ORIG_M,ORIG_F,F_STEP,STEP_PCT,WP_INDEX
//      P211_BPI_INIT2_COL_WIDTH                   //          11,      7,        10,     6,     6,     6,       8,       8
//      P211_BPI_INIT2_COL_MASK                    //           0,      0,         0,     0,     0,     0,       0,       0
//      P211_BPI_INIT2_COL_TYPES                   // *
//      P211_BPI_INIT2_TABLE_TYPE                  // S
#define P211_BPI_CAP_SINGLE2                  829  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,BPI_CAP_SINGLE_PT,WP_INDEX
//      P211_BPI_CAP_SINGLE2_COL_WIDTH             //          11,        9,        10,      7,               17,       8
//      P211_BPI_CAP_SINGLE2_COL_MASK              //           0,        0,         0,      0,                0,       0
//      P211_BPI_CAP_SINGLE2_COL_TYPES             // *
//      P211_BPI_CAP_SINGLE2_TABLE_TYPE            // S
#define P211_BPI_CAP_AVG2                     830  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NUM_TRKS_TESTED,BPI_CAP_AVG,ZERO_HEAT_CLR,CAP_SLOPE,WP_INDEX,FREQ_CAP
//      P211_BPI_CAP_AVG2_COL_WIDTH                //          11,        9,        10,             15,         11,           11,        9,       8,       8
//      P211_BPI_CAP_AVG2_COL_MASK                 //           0,        0,         0,              0,          0,            0,        0,       0,       0
//      P211_BPI_CAP_AVG2_COL_TYPES                // *
//      P211_BPI_CAP_AVG2_TABLE_TYPE               // S
#define P211_TPI_CAP_SINGLE2                  831  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,TPI_CAP_SINGLE_PT,RD_OFST
//      P211_TPI_CAP_SINGLE2_COL_WIDTH             //          11,        9,        10,      7,               17,      7
//      P211_TPI_CAP_SINGLE2_COL_MASK              //           0,        0,         0,      0,                0,      0
//      P211_TPI_CAP_SINGLE2_COL_TYPES             // *
//      P211_TPI_CAP_SINGLE2_TABLE_TYPE            // S
#define P211_TPI_CAP_AVG2                     832  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NUM_TRKS_TESTED,TPI_CAP_AVG,ZERO_HEAT_CLR,CAP_SLOPE,RD_OFST
//      P211_TPI_CAP_AVG2_COL_WIDTH                //          11,        9,        10,             15,         11,           11,        9,      7
//      P211_TPI_CAP_AVG2_COL_MASK                 //           0,        0,         0,              0,          0,            0,        0,      0
//      P211_TPI_CAP_AVG2_COL_TYPES                // *
//      P211_TPI_CAP_AVG2_TABLE_TYPE               // S
#define P211_TPI_MEASUREMENT2                 833  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,SQZ_PCT,SQZ_CNT,DELTA_SER,BASE_SER,SQZ_SER,RD_OFST
//      P211_TPI_MEASUREMENT2_COL_WIDTH            //          11,        9,        10,      7,      7,      7,        9,       8,      7,      7
//      P211_TPI_MEASUREMENT2_COL_MASK             //           0,        0,         0,      0,      0,      0,        0,       0,      0,      0
//      P211_TPI_MEASUREMENT2_COL_TYPES            // *
//      P211_TPI_MEASUREMENT2_TABLE_TYPE           // S
#define P211_TPI_INIT2                        834  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,BPI_PCT,ORIG_M,ORIG_F,NEW_M,NEW_F,BANDWIDTH,BANDWIDTH_RNG,TW_3,TW_5,PRECOMP,BOOST,WP_INDEX
//      P211_TPI_INIT2_COL_WIDTH                   //          11,      7,        10,      7,     6,     6,    5,    5,       10,           13,   4,   4,      7,    5,       8
//      P211_TPI_INIT2_COL_MASK                    //           0,      0,         0,      0,     0,     0,    0,    0,        0,            0,   0,   0,      0,    0,       0
//      P211_TPI_INIT2_COL_TYPES                   // *
//      P211_TPI_INIT2_TABLE_TYPE                  // S
#define P175_RV_ZAP_DELAY_EVENTS              835  // HD_PHYS_PSN,HD_LGC_PSN,ZAP_PSN,LGC_CYL,DELAY
//      P175_RV_ZAP_DELAY_EVENTS_COL_WIDTH         //          11,        10,      7,      8,    9
//      P175_RV_ZAP_DELAY_EVENTS_COL_MASK          //           0,         0,      0,      0,    0
//      P175_RV_ZAP_DELAY_EVENTS_COL_TYPES         // *
//      P175_RV_ZAP_DELAY_EVENTS_TABLE_TYPE        // S
#define P193_POLY_CHROME                      836  // HD_PHYS_PSN,HD_LGC_PSN,SPOKE,COEF_0,COEF_1,COEF_2,COEF_3
//      P193_POLY_CHROME_COL_WIDTH                 //          11,        10,    5,     5,     5,     5,     5
//      P193_POLY_CHROME_COL_MASK                  //           1,         1,    1,     1,     1,     1,     1
//      P193_POLY_CHROME_COL_TYPES                 //           N,         N,    N,     N,     N,     N,     N
//      P193_POLY_CHROME_TABLE_TYPE                // S
#define P047_TMFF_5_COEF_AC_SIN               837  // HD_PHYS_PSN,TEST_MODE,HD_LGC_PSN,COEF_1,COEF_2,COEF_3,COEF_4,COEF_5,MULTIPLIER
//      P047_TMFF_5_COEF_AC_SIN_COL_WIDTH          //          11,       16,        10,     7,     7,     7,     7,     7,        10
//      P047_TMFF_5_COEF_AC_SIN_COL_MASK           //           0,        0,         0,     0,     0,     0,     0,     0,         0
//      P047_TMFF_5_COEF_AC_SIN_COL_TYPES          // *
//      P047_TMFF_5_COEF_AC_SIN_TABLE_TYPE         // M
#define P047_TMFF_5_COEF_AC_COS               838  // HD_PHYS_PSN,TEST_MODE,HD_LGC_PSN,COEF_1,COEF_2,COEF_3,COEF_4,COEF_5,MULTIPLIER
//      P047_TMFF_5_COEF_AC_COS_COL_WIDTH          //          11,       16,        10,     7,     7,     7,     7,     7,        10
//      P047_TMFF_5_COEF_AC_COS_COL_MASK           //           0,        0,         0,     0,     0,     0,     0,     0,         0
//      P047_TMFF_5_COEF_AC_COS_COL_TYPES          // *
//      P047_TMFF_5_COEF_AC_COS_TABLE_TYPE         // M
#define P013_TMFF_FINAL_AUDIT                 839  // HD_PHYS_PSN,HD_LGC_PSN,AUDIT_CYL,TIMING_ERR_MAG
//      P013_TMFF_FINAL_AUDIT_COL_WIDTH            //          11,        10,        9,            14
//      P013_TMFF_FINAL_AUDIT_COL_MASK             //           0,         0,        0,             0
//      P013_TMFF_FINAL_AUDIT_COL_TYPES            // *
//      P013_TMFF_FINAL_AUDIT_TABLE_TYPE           // S
#define P109_MSE_SUM_HD_ZONE                  840  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,VFYD_ERRS,UNVFYD_ERRS,SCAN_TYPE,CAL_SLOPE,CAL_INTERCEPT,CAL_SIGMA
//      P109_MSE_SUM_HD_ZONE_COL_WIDTH             //          11,        9,        10,        9,         11,        9,        9,           13,        9
//      P109_MSE_SUM_HD_ZONE_COL_MASK              //           1,        1,         1,        1,          1,        1,        1,            1,        1
//      P109_MSE_SUM_HD_ZONE_COL_TYPES             //           N,        N,         N,        N,          N,        N,        N,            N,        N
//      P109_MSE_SUM_HD_ZONE_TABLE_TYPE            // M
#define P107_LOGICAL_SLIPLIST                 841  // LBA,CUM_SLIP,PBA,ZONE
//      P107_LOGICAL_SLIPLIST_COL_WIDTH            //  16,      16, 16,   8
//      P107_LOGICAL_SLIPLIST_COL_MASK             //   0,       0,  0,   0
//      P107_LOGICAL_SLIPLIST_COL_TYPES            // *
//      P107_LOGICAL_SLIPLIST_TABLE_TYPE           // S
#define P107_LOGICAL_SLIPLIST_SUM             842  // LIST_ENTRIES,MAX_LBA_IN_LIST
//      P107_LOGICAL_SLIPLIST_SUM_COL_WIDTH        //           16,             16
//      P107_LOGICAL_SLIPLIST_SUM_COL_MASK         //            0,              0
//      P107_LOGICAL_SLIPLIST_SUM_COL_TYPES        // *
//      P107_LOGICAL_SLIPLIST_SUM_TABLE_TYPE       // S
#define P191_HIRP_ADJ_CURVE_FIT               843  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,METHOD,NOM_TRK_NUM,RADIUS,FIT_HOB,FIT_WOB,ADJ_SLOPE_HIRP,ADJ_OFST_HIRP,ADJ_SLOPE_WIRP,ADJ_OFST_WIRP,MSRD_ZONE,ZN_STATUS,HOB,HCC,HSX,HOX,WOB,WCC,WSX,WOX,MSRD_SLOPE_HIRP,MSRD_OFST_HIRP,MSRD_SLOPE_WIRP,MSRD_OFST_WIRP,TRY_CNT,CLOSED_LOOP,ACTIVE_HEATER,INACTIVE_HEATER_DAC
//      P191_HIRP_ADJ_CURVE_FIT_COL_WIDTH          //          11,        9,        10,     6,         11,     6,      7,      7,            14,           13,            14,           13,        9,        9,  3,  3,  3,  3,  3,  3,  3,  3,             15,            14,             15,            14,      7,         11,           13,                 19
//      P191_HIRP_ADJ_CURVE_FIT_COL_MASK           //           1,        1,         1,     1,          1,     1,      1,      1,             1,            1,             1,            1,        1,        1,  1,  1,  1,  1,  1,  1,  1,  1,              1,             1,              1,             1,      1,          1,            1,                  1
//      P191_HIRP_ADJ_CURVE_FIT_COL_TYPES          //           N,        N,         N,     V,          N,     N,      N,      N,             N,            N,             N,            N,        N,        N,  N,  N,  N,  N,  N,  N,  N,  N,              N,             N,              N,             N,      N,          N,            V,                  N
//      P191_HIRP_ADJ_CURVE_FIT_TABLE_TYPE         // M
#define P213_DOS_FRAME                        844  // HD_PHYS_PSN,HD_LGC_PSN,STE_THRESHOLD,STE_RANGE,ATI_THRESHOLD,OD_WRITE_CURRENT,OD_OVERSHOOT_AMPLITUDE,MD_WRITE_CURRENT,MD_OVERSHOOT_AMPLITUDE,ID_WRITE_CURRENT,ID_OVERSHOOT_AMPLITUDE,ACTUAL_STE_THRESHOLD,STE_RANGE2
//      P213_DOS_FRAME_COL_WIDTH                   //          11,        10,           13,        9,           13,              16,                    22,              16,                    22,              16,                    22,                  20,        10
//      P213_DOS_FRAME_COL_MASK                    //           1,         1,            1,        1,            1,               1,                     1,               1,                     1,               1,                     1,                   1,         1
//      P213_DOS_FRAME_COL_TYPES                   //           N,         N,            N,        N,            N,               N,                     N,               N,                     N,               N,                     N,                   N,         N
//      P213_DOS_FRAME_TABLE_TYPE                  // S
#define P159_SHOCK_SENSOR_2LOW                845  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_SHOCK_SENSOR_2LOW_COL_WIDTH           // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_SHOCK_SENSOR_2LOW_COL_MASK            // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_SHOCK_SENSOR_2LOW_COL_TYPES           // *
//      P159_SHOCK_SENSOR_2LOW_TABLE_TYPE          // S
#define P159_SHOCK_SENSOR_2HIGH               846  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_SHOCK_SENSOR_2HIGH_COL_WIDTH          // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_SHOCK_SENSOR_2HIGH_COL_MASK           // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_SHOCK_SENSOR_2HIGH_COL_TYPES          // *
//      P159_SHOCK_SENSOR_2HIGH_TABLE_TYPE         // S
#define P159_SWOT_EVENTS                      847  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_SWOT_EVENTS_COL_WIDTH                 // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_SWOT_EVENTS_COL_MASK                  // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_SWOT_EVENTS_COL_TYPES                 // *
//      P159_SWOT_EVENTS_TABLE_TYPE                // S
#define P159_SWOT_2LOW                        848  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_SWOT_2LOW_COL_WIDTH                   // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_SWOT_2LOW_COL_MASK                    // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_SWOT_2LOW_COL_TYPES                   // *
//      P159_SWOT_2LOW_TABLE_TYPE                  // S
#define P159_SWOT_2HIGH                       849  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_SWOT_2HIGH_COL_WIDTH                  // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_SWOT_2HIGH_COL_MASK                   // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_SWOT_2HIGH_COL_TYPES                  // *
//      P159_SWOT_2HIGH_TABLE_TYPE                 // S
#define P251_DIBIT_EXPANSION                  850  // HD_PHYS_PSN,DATA_ZONE,NOMRF,LATE0R,LATE1R,LATE2R,LATE0F,LATE1F,LATE2F,INDEX,SEED,RAW_CQM,DIBIT_CQM
//      P251_DIBIT_EXPANSION_COL_WIDTH             //          11,        9,    5,     6,     6,     6,     6,     6,     6,    5,   4,     12,       12
//      P251_DIBIT_EXPANSION_COL_MASK              //           0,        0,    0,     0,     0,     0,     0,     0,     0,    0,   0,      0,        0
//      P251_DIBIT_EXPANSION_COL_TYPES             // *
//      P251_DIBIT_EXPANSION_TABLE_TYPE            // S
#define P255_PRECOMP_VGA_LSI_DATA             851  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,LATE0R,LATE1R,LATE2R,LATE0F,LATE1F,LATE2F,ZFR,ZFAR,CTFRNGE,CTFR,ATT2R,VGARSH,VGA_TA_LPF,ATTC_RD
//      P255_PRECOMP_VGA_LSI_DATA_COL_WIDTH        //          10,        11,   4,     6,     6,     6,     6,     6,     6,  3,   4,      7,   4,    5,     6,        10,      7
//      P255_PRECOMP_VGA_LSI_DATA_COL_MASK         //           1,         1,   1,     1,     1,     1,     1,     1,     1,  1,   1,      1,   1,    1,     1,         1,      1
//      P255_PRECOMP_VGA_LSI_DATA_COL_TYPES        //           N,         N,   N,     N,     N,     N,     N,     N,     N,  N,   N,      N,   N,    N,     N,         N,      N
//      P255_PRECOMP_VGA_LSI_DATA_TABLE_TYPE       // S
#define P255_FIR_LSI_DATA                     852  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,TDTARGR,TAP2R,TAP1R,TAP4R,TAP5R,TAP3R,TAP7R,TAP6R,TAP9R,TAP8R,NLTAPR,TAPXR,NYTAPR,DCTAPR,DCAVGR
//      P255_FIR_LSI_DATA_COL_WIDTH                //          10,        11,   4,      7,    5,    5,    5,    5,    5,    5,    5,    5,    5,     6,    5,     6,     6,     6
//      P255_FIR_LSI_DATA_COL_MASK                 //           1,         1,   1,      1,    1,    1,    1,    1,    1,    1,    1,    1,    1,     1,    1,     1,     1,     1
//      P255_FIR_LSI_DATA_COL_TYPES                //           N,         N,   N,      N,    N,    N,    N,    N,    N,    N,    N,    N,    N,     N,    N,     N,     N,     N
//      P255_FIR_LSI_DATA_TABLE_TYPE               // S
#define P255_NPTARG_MISC_LSI_DATA             853  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,TARG_T0,TARG_T1,TARG_T2,SMPATT,VSCALE,DECGAIN,ECWIN,TAP2OR3,VSCALE_LLR,VSCALE_LLR2,VSCALE_BM2
//      P255_NPTARG_MISC_LSI_DATA_COL_WIDTH        //          10,        11,   4,      7,      7,      7,     6,     6,      7,    5,      7,        10,         11,        11
//      P255_NPTARG_MISC_LSI_DATA_COL_MASK         //           1,         1,   1,      1,      1,      1,     1,     1,      1,    1,      1,         1,          1,         1
//      P255_NPTARG_MISC_LSI_DATA_COL_TYPES        //           N,         N,   N,      N,      N,      N,     N,     N,      N,    N,      N,         N,          N,         N
//      P255_NPTARG_MISC_LSI_DATA_TABLE_TYPE       // S
#define P255_NPML_TAP0_1_LSI_DATA             854  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,TAP0_1,TAP0_2,TAP0_3,TAP0_4,TAP0_5,TAP0_6,TAP0_7,TAP1_0,TAP1_1,TAP1_2,TAP1_3,TAP1_4,TAP1_5,TAP1_6,TAP1_7
//      P255_NPML_TAP0_1_LSI_DATA_COL_WIDTH        //          10,        11,   4,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6
//      P255_NPML_TAP0_1_LSI_DATA_COL_MASK         //           1,         1,   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1
//      P255_NPML_TAP0_1_LSI_DATA_COL_TYPES        //           N,         N,   N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N
//      P255_NPML_TAP0_1_LSI_DATA_TABLE_TYPE       // S
#define P255_NPML_TAP2_3_LSI_DATA             855  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,TAP2_0,TAP2_1,TAP2_2,TAP2_3,TAP2_4,TAP2_5,TAP2_6,TAP2_7,TAP3_0,TAP3_1,TAP3_2,TAP3_3,TAP3_4,TAP3_5,TAP3_6,TAP3_7
//      P255_NPML_TAP2_3_LSI_DATA_COL_WIDTH        //          10,        11,   4,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6
//      P255_NPML_TAP2_3_LSI_DATA_COL_MASK         //           1,         1,   1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1
//      P255_NPML_TAP2_3_LSI_DATA_COL_TYPES        //           N,         N,   N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N
//      P255_NPML_TAP2_3_LSI_DATA_TABLE_TYPE       // S
#define P255_NPML_BIAS_LSI_DATA               856  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,BIAS0,BIAS1,BIAS2,BIAS3,BIAS4,BIAS5,BIAS6,BIAS7,BIAS8,BIAS9,BIASA,BIASB,BIASC,BIASD,BIASE,BIASF
//      P255_NPML_BIAS_LSI_DATA_COL_WIDTH          //          10,        11,   4,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5
//      P255_NPML_BIAS_LSI_DATA_COL_MASK           //           1,         1,   1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1
//      P255_NPML_BIAS_LSI_DATA_COL_TYPES          //           N,         N,   N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N
//      P255_NPML_BIAS_LSI_DATA_TABLE_TYPE         // S
#define P211_HMS_CAP_SINGLE                   857  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,HMS_CAP_SINGLE_PT
//      P211_HMS_CAP_SINGLE_COL_WIDTH              //          11,        9,        10,      7,               17
//      P211_HMS_CAP_SINGLE_COL_MASK               //           0,        0,         0,      0,                0
//      P211_HMS_CAP_SINGLE_COL_TYPES              // *
//      P211_HMS_CAP_SINGLE_TABLE_TYPE             // S
#define P211_HMS_CAP_AVG                      858  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NUM_TRKS_TESTED,HMS_CAP_AVG,ZERO_HEAT_CLR,CAP_SLOPE
//      P211_HMS_CAP_AVG_COL_WIDTH                 //          11,        9,        10,             15,         11,           13,        9
//      P211_HMS_CAP_AVG_COL_MASK                  //           1,        1,         1,              1,          1,            1,        1
//      P211_HMS_CAP_AVG_COL_TYPES                 //           N,        N,         N,              N,          N,            N,        N
//      P211_HMS_CAP_AVG_TABLE_TYPE                // S
#define P211_HMS_MEASUREMENT                  859  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,PRE_HEAT,WRT_HEAT,RD_HEAT,HMS_ADJ,DELTA_SER,BASE_SER,MEAS_SER
//      P211_HMS_MEASUREMENT_COL_WIDTH             //          11,        9,        10,      7,       8,       8,      7,      7,        9,       8,       8
//      P211_HMS_MEASUREMENT_COL_MASK              //           0,        0,         0,      0,       0,       0,      0,      0,        0,       0,       0
//      P211_HMS_MEASUREMENT_COL_TYPES             // *
//      P211_HMS_MEASUREMENT_TABLE_TYPE            // S
#define P166_FEATURE_RELEASE_REV              860  // FUNCTIONAL_GROUP,MAJOR_VERSION,MINOR_VERSION
//      P166_FEATURE_RELEASE_REV_COL_WIDTH         //               16,           13,           13
//      P166_FEATURE_RELEASE_REV_COL_MASK          //                1,            1,            1
//      P166_FEATURE_RELEASE_REV_COL_TYPES         //                V,            N,            N
//      P166_FEATURE_RELEASE_REV_TABLE_TYPE        // S
#define P062_BIAS_BACKOFF                     861  // HD_PHYS_PSN,HD_LGC_PSN,LGC_CYL,TLEVEL,DEFAULT_BIAS_BER10,DEFAULT_BIAS_DAC,ADJ_BIAS_BER10,ADJ_BIAS_DAC,HD_STATUS,COEF_3,COEF_2,COEF_1,COEF_0,RSQR,DELTA_BER_WINDOW,DELTA_BER_INCR
//      P062_BIAS_BACKOFF_COL_WIDTH                //          11,        10,      7,     6,                18,              16,            14,          12,        9,    11,    11,    11,    11,   6,              16,            14
//      P062_BIAS_BACKOFF_COL_MASK                 //           1,         1,      1,     1,                 1,               1,             1,           1,        1,     1,     1,     1,     1,   1,               1,             1
//      P062_BIAS_BACKOFF_COL_TYPES                //           N,         N,      N,     N,                 N,               N,             N,           N,        N,     N,     N,     N,     N,   N,               N,             N
//      P062_BIAS_BACKOFF_TABLE_TYPE               // S
#define P064_SRVO_FLAW_REP                    862  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,WEDGE,COMMENT
//      P064_SRVO_FLAW_REP_COL_WIDTH               //          11,        10,       8,    5,      7
//      P064_SRVO_FLAW_REP_COL_MASK                //           0,         0,       0,    0,      0
//      P064_SRVO_FLAW_REP_COL_TYPES               // *
//      P064_SRVO_FLAW_REP_TABLE_TYPE              // V
#define P064_SRVO_FLAW_HD                     863  // HD_PHYS_PSN,HD_LGC_PSN,RAW_SRVO_FLAW_CNT,SKIP_TRACKS,REFINED_SRVO_FLAW_CNT,HD_STATUS
//      P064_SRVO_FLAW_HD_COL_WIDTH                //          11,        10,               17,         11,                   21,        9
//      P064_SRVO_FLAW_HD_COL_MASK                 //           0,         0,                0,          0,                    0,        0
//      P064_SRVO_FLAW_HD_COL_TYPES                // *
//      P064_SRVO_FLAW_HD_TABLE_TYPE               // V
#define P064_SRVO_FLAW_DRV                    864  // TOTAL_SRVO_FLAW_CNT
//      P064_SRVO_FLAW_DRV_COL_WIDTH               //                  19
//      P064_SRVO_FLAW_DRV_COL_MASK                //                   0
//      P064_SRVO_FLAW_DRV_COL_TYPES               // *
//      P064_SRVO_FLAW_DRV_TABLE_TYPE              // S
#define P2109_DFS_BER_STATS                   865  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RBIT,QM_ERR_BITS,QM_ITRTN_NUM,RRAW_BER,SER,SSER,HARD_BER
//      P2109_DFS_BER_STATS_COL_WIDTH              //          11,        11,       10,  10,         13,          13,       9,  9,   9,       9
//      P2109_DFS_BER_STATS_COL_MASK               //           1,         1,        1,   1,          1,           1,       1,  1,   1,       1
//      P2109_DFS_BER_STATS_COL_TYPES              //           N,         N,        N,   N,          N,           N,       N,  N,   N,       N
//      P2109_DFS_BER_STATS_TABLE_TYPE             // S
#define P2109_DFS_BER_ID_STATS                866  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RBIT,QM_ERR_BITS,QM_ITRTN_NUM,RRAW_BER,SER,SSER,HARD_BER
//      P2109_DFS_BER_ID_STATS_COL_WIDTH           //          11,        11,       10,  10,         13,          13,       9,  9,   9,       9
//      P2109_DFS_BER_ID_STATS_COL_MASK            //           1,         1,        1,   1,          1,           1,       1,  1,   1,       1
//      P2109_DFS_BER_ID_STATS_COL_TYPES           //           N,         N,        N,   N,          N,           N,       N,  N,   N,       N
//      P2109_DFS_BER_ID_STATS_TABLE_TYPE          // S
#define P334_DWELL_CLEARANCE                  867  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RAP_TGT_WRT_CLRNC,RAP_TGT_RD_CLRNC,RAP_PRE_HEAT,RAP_WRT_HEAT,RAP_RD_HEAT,ALTERED_CLRNC_TYPE,ALTERED_CLRNC,ALTERED_PRE_HEAT,ALTERED_WRT_HEAT,ALTERED_RD_HEAT
//      P334_DWELL_CLEARANCE_COL_WIDTH             //          11,        9,        10,               17,              16,          12,          12,         11,                18,           13,              16,              16,             15
//      P334_DWELL_CLEARANCE_COL_MASK              //           0,        0,         0,                0,               0,           0,           0,          0,                 0,            0,               0,               0,              0
//      P334_DWELL_CLEARANCE_COL_TYPES             // *
//      P334_DWELL_CLEARANCE_TABLE_TYPE            // S
#define P135_SEARCH_RESULTS_DAC               868  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,NOM_TRK_NUM,RETRY_CNT,POLY_ORDER,WPH_START,WPH_END,WPH_CONTACT,HO_END,HO_CONTACT,WPH_ZONE_LIMIT,HO_ZONE_LIMIT,WPH_INTERVAL,HO_INTERVAL,ERROR_FLAGS,DETECTOR_MASK,ACTIVE_HEATER,INACTIVE_HEATER_DAC
//      P135_SEARCH_RESULTS_DAC_COL_WIDTH          //          11,        10,        9,      7,         11,        9,        10,        9,      7,         11,     6,        10,            14,           13,          12,         11,         11,           13,           13,                 19
//      P135_SEARCH_RESULTS_DAC_COL_MASK           //           1,         1,        1,      1,          1,        1,         1,        1,      1,          1,     1,         1,             1,            1,           1,          1,          1,            1,            1,                  1
//      P135_SEARCH_RESULTS_DAC_COL_TYPES          //           N,         N,        N,      N,          N,        N,         V,        N,      N,          N,     N,         N,             N,            N,           N,          N,          N,            N,            V,                  N
//      P135_SEARCH_RESULTS_DAC_TABLE_TYPE         // S
#define P186_AGC_QUADRATIC_COEFF              869  // HD_PHYS_PSN,HD_LGC_PSN,COEFF_A,COEFF_B,COEFF_C
//      P186_AGC_QUADRATIC_COEFF_COL_WIDTH         //          11,        10,      7,      7,      7
//      P186_AGC_QUADRATIC_COEFF_COL_MASK          //           0,         0,      0,      0,      0
//      P186_AGC_QUADRATIC_COEFF_COL_TYPES         // *
//      P186_AGC_QUADRATIC_COEFF_TABLE_TYPE        // S
#define P186_AGC_DATA_POINTS                  870  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,CHANNEL_DATA,SERVO_DATA,FIT_DATA
//      P186_AGC_DATA_POINTS_COL_WIDTH             //          11,        10,      7,          12,        10,       8
//      P186_AGC_DATA_POINTS_COL_MASK              //           0,         0,      0,           0,         0,       0
//      P186_AGC_DATA_POINTS_COL_TYPES             // *
//      P186_AGC_DATA_POINTS_TABLE_TYPE            // S
#define P135_DETECTOR_HSTGRM                  871  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,SENSOR_NUM,SENSOR_METHOD,SENSOR_METRIC,SENSOR_AVG_TYPE,OVRSHT_AMP,OVRSHT_DUR,WRT_CUR_DAC,HTR_DAC,TEST_ITERATION,CNTCT_TEST_STAGE,HTR_DAC_STEP_SIZE,CONTACT,TRIP,BUCKET,COUNT
//      P135_DETECTOR_HSTGRM_COL_WIDTH             //          11,        9,      7,        10,        10,           13,           13,             15,        10,        10,         11,      7,            14,              16,               17,      7,   4,    12,   10
//      P135_DETECTOR_HSTGRM_COL_MASK              //           1,        1,      1,         1,         1,            1,            1,              1,         1,         1,          1,      1,             1,               1,                1,      1,   1,     1,    1
//      P135_DETECTOR_HSTGRM_COL_TYPES             //           N,        N,      N,         N,         N,            V,            V,              V,         N,         N,          N,      N,             N,               V,                V,      V,   V,     N,    N
//      P135_DETECTOR_HSTGRM_TABLE_TYPE            // S
#define P135_HD_STBLTY_AGC_STATS              872  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,HTR_DAC,TEST_ITERATION,MIN_AGC,MAX_AGC,DELTA_AGC,MEAN_DELTA_AGC,MEAN_MEAN_AGC,MEAN_STDEV_AGC,STDEV_DELTA_AGC,STDEV_MEAN_AGC,STDEV_STDEV_AGC,STDERR_DELTA_AGC,STDERR_MEAN_AGC,STDERR_STDEV_AGC,COV_DELTA_AGC,COV_MEAN_AGC,COV_STDEV_AGC
//      P135_HD_STBLTY_AGC_STATS_COL_WIDTH         //          11,        10,        9,      7,            14,      7,      7,        9,            14,           13,            14,             15,            14,             15,              16,             15,              16,           13,          12,           13
//      P135_HD_STBLTY_AGC_STATS_COL_MASK          //           1,         1,        1,      1,             1,      1,      1,        1,             1,            1,             1,              1,             1,              1,               1,              1,               1,            1,           1,            1
//      P135_HD_STBLTY_AGC_STATS_COL_TYPES         //           N,         N,        N,      N,             N,      N,      N,        N,             N,            N,             N,              N,             N,              N,               N,              N,               N,            N,           N,            N
//      P135_HD_STBLTY_AGC_STATS_TABLE_TYPE        // S
#define P135_HD_STABILITY_COUNTS              873  // HD_PHYS_PSN,HD_LGC_PSN,STDEV_DELTA_CNT,COV_STDEV_DELTA_CNT,STDEV_MEAN_CNT,COV_STDEV_MEAN_CNT,STDEV_STDEV_CNT,COV_STDEV_STDEV_CNT,TOTAL_MEASURED,STDEV_DELTA_CNT_PCT,COV_STDEV_DELTA_CNT_PCT,STDEV_MEAN_CNT_PCT,COV_STDEV_MEAN_CNT_PCT,STDEV_STDEV_CNT_PCT,COV_STDEV_STDEV_CNT_PCT
//      P135_HD_STABILITY_COUNTS_COL_WIDTH         //          11,        10,             15,                 19,            14,                18,             15,                 19,            14,                 19,                     23,                18,                    22,                 19,                     23
//      P135_HD_STABILITY_COUNTS_COL_MASK          //           1,         1,              1,                  1,             1,                 1,              1,                  1,             1,                  1,                      1,                 1,                     1,                  1,                      1
//      P135_HD_STABILITY_COUNTS_COL_TYPES         //           N,         N,              N,                  N,             N,                 N,              N,                  N,             N,                  N,                      N,                 N,                     N,                  N,                      N
//      P135_HD_STABILITY_COUNTS_TABLE_TYPE        // S
#define P074_RAP_FAFH_DATA                    874  // HD_LGC_PSN,DIAMETER,TEST_TRACK,OPTI_FREQUENCY,ADJ_SLOPE_HIRP,ADJ_OFST_HIRP,ADJ_SLOPE_WIRP,ADJ_OFST_WIRP,SERPENT_START,SERPENT_END,UTILTIY_FLAGS,PREAMP_GAIN,HD_PHYS_PSN,LSI_M_OR_MVL_N,R,DIVSEL,MSMR_READER_SEL
//      P074_RAP_FAFH_DATA_COL_WIDTH               //         10,       8,        10,            14,            14,           13,            14,           13,           13,         11,           13,         11,         11,            14,1,     6,             15
//      P074_RAP_FAFH_DATA_COL_MASK                //          0,       0,         0,             0,             0,            0,             0,            0,            0,          0,            0,          0,          0,             0,0,     0,              0
//      P074_RAP_FAFH_DATA_COL_TYPES               // *
//      P074_RAP_FAFH_DATA_TABLE_TYPE              // S
#define P255_PREAMP_CHNL_HD_PARAM             875  // HD_PHYS_PSN,HD_LGC_PSN,BIAS_CURRENT,PREAMP_GAIN,ATTC,ATT2S,VGAS_OD,VGAS_SLOPE,VGAS_ID
//      P255_PREAMP_CHNL_HD_PARAM_COL_WIDTH        //          10,        11,          12,         11,   4,    5,      7,        10,      7
//      P255_PREAMP_CHNL_HD_PARAM_COL_MASK         //           1,         1,           1,          1,   1,    1,      1,         1,      1
//      P255_PREAMP_CHNL_HD_PARAM_COL_TYPES        //           N,         N,           N,          N,   N,    N,      N,         N,      N
//      P255_PREAMP_CHNL_HD_PARAM_TABLE_TYPE       // S
#define P199_TA_READ_WEDGE                    876  // HD_PHYS_PSN,BACK_GND_PTRN,TEST_PTRN,HD_LGC_PSN,TRK_NUM,RD_OFST,HD_STATUS,TA_THRSHLD,MR_BIAS_OFST,VGAR,TA_C_01,TA_C_02,TA_C_03,TA_C_04,TA_C_05,TA_C_06,TA_C_07,TA_C_08,TA_C_09,TA_C_10,TA_C_SUM,TA_C_MEAN,TA_C_SIGMA,TA_C_NOR_S,TA_C_N_M,TA_C_N_AS
//      P199_TA_READ_WEDGE_COL_WIDTH               //          11,           13,        9,        10,      7,      7,        9,        10,          12,   4,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,       8,        9,        10,        10,       8,        9
//      P199_TA_READ_WEDGE_COL_MASK                //           0,            0,        0,         0,      0,      0,        0,         0,           0,   0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,       0,        0,         0,         0,       0,        0
//      P199_TA_READ_WEDGE_COL_TYPES               // *
//      P199_TA_READ_WEDGE_TABLE_TYPE              // M
#define P199_INSTABILITY_TA                   877  // HD_PHYS_PSN,BACK_GND_PTRN,TEST_PTRN,HD_LGC_PSN,TRK_NUM,HD_STATUS,VGAR,TA_THRSHLD,TA_CNT_SUM,SIG1_PCT_UNSTABLE,SIG2_PCT_UNSTABLE,SIG3_PCT_UNSTABLE,RETRY_REV,TA_CNT_01,TA_CNT_02,TA_CNT_03,TA_CNT_04,TA_CNT_05,TA_CNT_06,TA_CNT_07,TA_CNT_08,TA_CNT_09,TA_CNT_10
//      P199_INSTABILITY_TA_COL_WIDTH              //          11,           13,        9,        10,      7,        9,   4,        10,        10,               17,               17,               17,        9,        9,        9,        9,        9,        9,        9,        9,        9,        9,        9
//      P199_INSTABILITY_TA_COL_MASK               //           1,            1,        1,         1,      1,        1,   1,         1,         1,                1,                1,                1,        1,        1,        1,        1,        1,        1,        1,        1,        1,        1,        1
//      P199_INSTABILITY_TA_COL_TYPES              //           N,            V,        V,         N,      N,        N,   N,         N,         N,                N,                N,                N,        N,        N,        N,        N,        N,        N,        N,        N,        N,        N,        N
//      P199_INSTABILITY_TA_TABLE_TYPE             // S
#define P177_PREAMP_CAL_EXTD                  878  // HD_PHYS_PSN,HD_LGC_PSN,TEST_MODE,OD_TRK_NUM,MD_TRK_NUM,ID_TRK_NUM,PREAMP_SETTING,ATTC,ATT2S,OD_PASSIVE_VGAS,MD_PASSIVE_VGAS,ID_PASSIVE_VGAS,OD_ACTIVE_VGAS,MD_ACTIVE_VGAS,ID_ACTIVE_VGAS,MIN_VGAS,MIN_VGAS_TRK,MAX_VGAS,MAX_VGAS_TRK,MEAN_VGAS
//      P177_PREAMP_CAL_EXTD_COL_WIDTH             //          11,        10,       32,        10,        10,        10,            14,   4,    4,             15,             15,             15,            14,            14,            14,       8,          12,       8,          12,        9
//      P177_PREAMP_CAL_EXTD_COL_MASK              //           1,         1,        1,         1,         1,         1,             1,   1,    1,              1,              1,              1,             1,             1,             1,       1,           1,       1,           1,        1
//      P177_PREAMP_CAL_EXTD_COL_TYPES             //           N,         N,        V,         N,         N,         N,             N,   N,    N,              N,              N,              N,             N,             N,             N,       N,           N,       N,           N,        N
//      P177_PREAMP_CAL_EXTD_TABLE_TYPE            // S

// Unreferenced in SelfTest 11/23/2010  // Referenced in Process scripts
#define P_BURNISH_SUMMARY                     879  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,STAGE_DESCRIPTION,START_CNTCT_DAC,MSRD_CNTCT_DAC,DELTA_CNTCT_DAC,DELTA_LIMIT_DAC,START_TEMP,CNTCT_TEMP,DELTA_TEMP,START_RES,MSRD_RES,DELTA_RES,DELTA_LIMIT_RES
//      P_BURNISH_SUMMARY_COL_WIDTH                //          11,        10,        9,      7,               17,             15,            14,             15,             15,        10,        10,        10,        9,       8,        9,             15
//      P_BURNISH_SUMMARY_COL_MASK                 //           1,         1,        1,      1,                1,              1,             1,              1,              1,         1,         1,         1,        1,       1,        1,              1
//      P_BURNISH_SUMMARY_COL_TYPES                //           N,         N,        N,      N,                V,              N,             N,              N,              N,         N,         N,         N,        N,       N,        N,              N
//      P_BURNISH_SUMMARY_TABLE_TYPE               // S
#define P159_SERVO_SECTOR_ERRS                880  // HD_PHYS_PSN,HD_LGC_PSN,TEST_OP_MODE,COUNTER_NAME,COUNTER_VALUE,STATUS
//      P159_SERVO_SECTOR_ERRS_COL_WIDTH           //          11,        10,          12,          24,           13,     6
//      P159_SERVO_SECTOR_ERRS_COL_MASK            //           1,         1,           1,           1,            1,     1
//      P159_SERVO_SECTOR_ERRS_COL_TYPES           //           N,         N,           V,           V,            N,     N
//      P159_SERVO_SECTOR_ERRS_TABLE_TYPE          // S
#define P089_R2CE_PES_DATA                    881  // HD_LGC_PSN,DATA_ZONE,TRK_NUM,REVS,SECTOR,WRITE_ODN,WRITE_IDN,READ_N,R2E_OD,R2E_ID,BITS_ERR,HD_PHYS_PSN
//      P089_R2CE_PES_DATA_COL_WIDTH               //         10,        9,      7,   4,     6,        9,        9,     6,     6,     6,       8,         11
//      P089_R2CE_PES_DATA_COL_MASK                //          0,        0,      0,   0,     0,        0,        0,     0,     0,     0,       0,          0
//      P089_R2CE_PES_DATA_COL_TYPES               // *
//      P089_R2CE_PES_DATA_TABLE_TYPE              // S
#define P089_R2CE_BINS_DATA                   882  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,R2CE_BIN,BITS_READ_CNT,BITS_IN_ERROR_CNT,ERR_RATE10,REJECTION_STATUS
//      P089_R2CE_BINS_DATA_COL_WIDTH              //          11,        9,        10,      7,       8,           13,               17,        10,              16
//      P089_R2CE_BINS_DATA_COL_MASK               //           1,        1,         1,      1,       1,            1,                1,         1,               1
//      P089_R2CE_BINS_DATA_COL_TYPES              //           N,        N,         N,      N,       N,            N,                N,         N,               N
//      P089_R2CE_BINS_DATA_TABLE_TYPE             // S
#define P089_R2CE_WIDTH_DATA                  883  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,VBAR_TPI,VBAR_BPI,R2CE_WIDTH,JOG_ERROR,OD_INJ_AMP,ID_INJ_AMP,RD_INJ_AMP,AUTO_CAL_CYCLES,POLY_POINT_REJECTS
//      P089_R2CE_WIDTH_DATA_COL_WIDTH             //          11,        9,        10,      7,       8,       8,        10,        9,        10,        10,        10,             15,                18
//      P089_R2CE_WIDTH_DATA_COL_MASK              //           1,        1,         1,      1,       1,       1,         1,        1,         1,         1,         1,              1,                 1
//      P089_R2CE_WIDTH_DATA_COL_TYPES             //           N,        N,         N,      N,       N,       N,         N,        N,         N,         N,         N,              N,                 N
//      P089_R2CE_WIDTH_DATA_TABLE_TYPE            // S
#define P064_DATA_FLAW_REP                    884  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,WEDGE,SYMBL_NDX,DFCT_LGTH
//      P064_DATA_FLAW_REP_COL_WIDTH               //          11,        10,       8,    5,        9,        9
//      P064_DATA_FLAW_REP_COL_MASK                //           0,         0,       0,    0,        0,        0
//      P064_DATA_FLAW_REP_COL_TYPES               // *
//      P064_DATA_FLAW_REP_TABLE_TYPE              // V
#define P2109_DFS_ERROR_STATS                 885  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,UNVFYD_ERR_CNT,RD_VFYD_ERR_CNT,WRT_VFYD_ERR_CNT,ITRTN_ERR_CNT,LBA_PAD_CNT,SKIPPED_TRKS_CNT
//      P2109_DFS_ERROR_STATS_COL_WIDTH            //          11,        11,       10,            15,             16,              17,           14,         12,              17
//      P2109_DFS_ERROR_STATS_COL_MASK             //           1,         1,        1,             1,              1,               1,            1,          1,               1
//      P2109_DFS_ERROR_STATS_COL_TYPES            //           N,         N,        N,             N,              N,               N,            N,          N,               N
//      P2109_DFS_ERROR_STATS_TABLE_TYPE           // S
#define P2109_DFS_ERROR_SUMMARY               886  // UNVFYD_ERR_CNT,RD_VFYD_ERR_CNT,WRT_VFYD_ERR_CNT,MISSED_REVS,LBA_PAD_CNT,SKIPPED_TRKS_CNT
//      P2109_DFS_ERROR_SUMMARY_COL_WIDTH          //             14,             17,              18,         13,         13,              18
//      P2109_DFS_ERROR_SUMMARY_COL_MASK           //              1,              1,               1,          1,          1,               1
//      P2109_DFS_ERROR_SUMMARY_COL_TYPES          //              N,              N,               N,          N,          N,               N
//      P2109_DFS_ERROR_SUMMARY_TABLE_TYPE         // S
#define P210_VBAR_FORMATS                     887  // HD_LGC_PSN,HD_PHYS_PSN,DATA_ZONE,BPI_FMT,TPI_FMT
//      P210_VBAR_FORMATS_COL_WIDTH                //         10,         11,        9,      7,      7
//      P210_VBAR_FORMATS_COL_MASK                 //          0,          0,        0,      0,      0
//      P210_VBAR_FORMATS_COL_TYPES                // *
//      P210_VBAR_FORMATS_TABLE_TYPE               // S

// Deprecated 11/23/2010
#define P140_VER_PER_HD_ZN_VIOL               888  // HEAD,ZONE,COUNT,LIMIT
//      P140_VER_PER_HD_ZN_VIOL_COL_WIDTH          //    4,   4,    5,    5
//      P140_VER_PER_HD_ZN_VIOL_COL_MASK           //    0,   0,    0,    0
//      P140_VER_PER_HD_ZN_VIOL_COL_TYPES          // *
//      P140_VER_PER_HD_ZN_VIOL_TABLE_TYPE         // S

// Deprecated 11/23/2010
#define P140_VER_ZONE_TOTAL                   889  // ZONE,VER
//      P140_VER_ZONE_TOTAL_COL_WIDTH              //    4,  5
//      P140_VER_ZONE_TOTAL_COL_MASK               //    0,  0
//      P140_VER_ZONE_TOTAL_COL_TYPES              // *
//      P140_VER_ZONE_TOTAL_TABLE_TYPE             // V
#define P126_UNSAFE_RATES                     890  // OFFSET_INDEX,UNSAFE_ERR_CODE,UNSAFE_RATE_BIN,UNSAFE_BIN_COUNT
//      P126_UNSAFE_RATES_COL_WIDTH                //           12,             15,             15,              16
//      P126_UNSAFE_RATES_COL_MASK                 //            1,              1,              1,               1
//      P126_UNSAFE_RATES_COL_TYPES                //            N,              V,              N,               N
//      P126_UNSAFE_RATES_TABLE_TYPE               // S
#define P213_ERROR_RATE2                      891  // HD_PHYS_PSN,DATA_ZN,HD_LGC_PSN,TRK_NUM,RD_OFST,SQZ_OFST,ITRTN,STEP_DOWN_ITERATION,BPI_SETTING_USED,SYMBL_ERR_RATE,SCTR_ERR_RATE,UNRCVR_RATE,WRITE_CURRENT_DAC,WRT_CUR_OVS_DAC,TOT_CWD,TOT_UNCVG_CWD,UNCVG_RATIO,WRT_CYCLE_CNT
//      P213_ERROR_RATE2_COL_WIDTH                 //          11,      7,        10,      7,      7,       8,    5,                 19,              16,            14,           13,         11,               17,             15,      7,           13,         11,           13
//      P213_ERROR_RATE2_COL_MASK                  //           1,      1,         1,      1,      1,       1,    1,                  1,               1,             1,            1,          1,                1,              1,      1,            1,          1,            0
//      P213_ERROR_RATE2_COL_TYPES                 //           N,      N,         N,      N,      N,       N,    N,                  N,               N,             N,            N,          N,                N,              N,      N,            N,          N
//      P213_ERROR_RATE2_TABLE_TYPE                // S
#define P080_DUAL_HTR_RESISTANCE              892  // HD_PHYS_PSN,HD_LGC_PSN,ACTIVE_HEATER,HEATER_VOLTAGE_DAC,RAW_HEATER_RESISTANCE,HEATER_VOLTAGE,HEATER_CURRENT,HEATER_RESISTANCE,HD_STATUS
//      P080_DUAL_HTR_RESISTANCE_COL_WIDTH         //          11,        10,           13,                18,                   21,            14,            14,               17,        9
//      P080_DUAL_HTR_RESISTANCE_COL_MASK          //           1,         1,            1,                 1,                    1,             1,             1,                1,        1
//      P080_DUAL_HTR_RESISTANCE_COL_TYPES         //           N,         N,            V,                 N,                    N,             N,             N,                N,        N
//      P080_DUAL_HTR_RESISTANCE_TABLE_TYPE        // V
#define P025_LUL_TARGET_VEL_OFF               893  // ORIG_LOAD_OFFSET,NEW_LOAD_OFFSET,ORIG_UNLOAD_OFFSET,NEW_UNLOAD_OFFSET,ORIG_MOTOR_REG_DATA,NEW_MOTOR_REG_DATA,BEMF_TARGET_REG
//      P025_LUL_TARGET_VEL_OFF_COL_WIDTH          //               16,             15,                18,               17,                 19,                18,             15
//      P025_LUL_TARGET_VEL_OFF_COL_MASK           //                0,              0,                 0,                0,                  0,                 0,              0
//      P025_LUL_TARGET_VEL_OFF_COL_TYPES          // *
//      P025_LUL_TARGET_VEL_OFF_TABLE_TYPE         // S
#define P025_LUL_VELOCITY_CAL                 894  // LUL_CYCLE_CNT,LOAD_VEL,UNLOAD_VEL,LATCH_CURRENT
//      P025_LUL_VELOCITY_CAL_COL_WIDTH            //            13,       8,        10,           13
//      P025_LUL_VELOCITY_CAL_COL_MASK             //             0,       0,         0,            0
//      P025_LUL_VELOCITY_CAL_COL_TYPES            // *
//      P025_LUL_VELOCITY_CAL_TABLE_TYPE           // S

// Deprecated 11/23/2010
#define P180_TOTAL_RRO_SUMMARY                895  // HD_PHYS_PSN,HD_LGC_PSN,TOTAL_RRO_HD
//      P180_TOTAL_RRO_SUMMARY_COL_WIDTH           //          11,        10,          12
//      P180_TOTAL_RRO_SUMMARY_COL_MASK            //           0,         0,           0
//      P180_TOTAL_RRO_SUMMARY_COL_TYPES           // *
//      P180_TOTAL_RRO_SUMMARY_TABLE_TYPE          // S
#define P335_MDW_SCAN_SUMMARY                 896  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,PREAMBLE_THRESHOLD,ERROR_CNT
//      P335_MDW_SCAN_SUMMARY_COL_WIDTH            //          11,        10,     10,                18,       10
//      P335_MDW_SCAN_SUMMARY_COL_MASK             //           1,         1,      1,                 1,        1
//      P335_MDW_SCAN_SUMMARY_COL_TYPES            //           N,         N,      N,                 N,        N
//      P335_MDW_SCAN_SUMMARY_TABLE_TYPE           // S
#define P067_TA_DATA                          897  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZN,TRK_NUM,DATA_WEDGE,DC_PTRN,VGAR,ACT_THRSHLD,PSV_THRSHLD,ERR_MASK,CAL_ACT_THRSHLD,CAL_PSV_THRSHLD,RESPONSE_POL
//      P067_TA_DATA_COL_WIDTH                     //          11,        10,      7,      7,        10,      7,   4,         11,         11,       8,             15,             15,          12
//      P067_TA_DATA_COL_MASK                      //           1,         1,      1,      1,         1,      1,   1,          1,          1,       1,              1,              1,           1
//      P067_TA_DATA_COL_TYPES                     //           N,         N,      N,      N,         N,      N,   N,          N,          N,       N,              N,              N,           N
//      P067_TA_DATA_TABLE_TYPE                    // V
#define P067_TA_CAL                           898  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZN,TRK_NUM,DC_PTRN,VGAR,ACT_THRSHLD,PSV_THRSHLD,RESPONSE_POL
//      P067_TA_CAL_COL_WIDTH                      //          11,        10,      7,      7,      7,   4,         11,         11,          12
//      P067_TA_CAL_COL_MASK                       //           0,         0,      0,      0,      0,   0,          0,          0,           0
//      P067_TA_CAL_COL_TYPES                      // *
//      P067_TA_CAL_TABLE_TYPE                     // S
#define P251_FIT_BCI_POINT_EXTD2              899  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RGSTR_ID,TEST_ORDER,OPTI_VAL,FITNESS,FIT_SIGMA,ICNT,BITS_ERR,BIE_BER,LOWLLR,SOFTSUM,QM_MSE,METRIC,AUX_VAL,TRK_NUM,VGAR,NLFR,TAP1,TAP2,TAP3,TAP4,TAP5,TAP6,TAP7,TAP8,TAP9,TAPX
//      P251_FIT_BCI_POINT_EXTD2_COL_WIDTH         //          11,        9,        10,       8,        10,       8,      8,        9,   4,       8,      7,     6,      7,     6,     6,      8,      7,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4
//      P251_FIT_BCI_POINT_EXTD2_COL_MASK          //           0,        0,         0,       0,         0,       0,      0,        0,   0,       0,      0,     0,      0,     0,     0,      0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
//      P251_FIT_BCI_POINT_EXTD2_COL_TYPES         // *
//      P251_FIT_BCI_POINT_EXTD2_TABLE_TYPE        // M
#define P094_DETCR_CAL_DATA                   900  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZN,TRK_NUM,THRESH_LVL,UNVER_CNT,VER_CNT
//      P094_DETCR_CAL_DATA_COL_WIDTH              //          11,        10,      7,      7,        10,        9,      7
//      P094_DETCR_CAL_DATA_COL_MASK               //           0,         0,      0,      0,         0,        0,      0
//      P094_DETCR_CAL_DATA_COL_TYPES              // *
//      P094_DETCR_CAL_DATA_TABLE_TYPE             // S
#define P094_DETCR_CAL_THRESH                 901  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZN,POLARITY,TRKS_ZN,AVG_LMT,THRESH_MV,THRESH_DAC,TOT_ERR_CNT,TOT_VER_CNT,QLFY_ERR_CNT,QLFY_ERR_AVG,QLFY_SMPL_SIZE
//      P094_DETCR_CAL_THRESH_COL_WIDTH            //          11,        10,      7,       8,      7,      7,        9,        10,         11,         11,          12,          12,            14
//      P094_DETCR_CAL_THRESH_COL_MASK             //           0,         0,      0,       0,      0,      0,        0,         0,          0,          0,           0,           0,             0
//      P094_DETCR_CAL_THRESH_COL_TYPES            // *
//      P094_DETCR_CAL_THRESH_TABLE_TYPE           // S
#define P094_TA_THRSHLD_SUMMARY               902  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,BSLN_THRSHLD_DAC,CALC_THRSHLD_DAC
//      P094_TA_THRSHLD_SUMMARY_COL_WIDTH          //          11,        10,        9,              16,              16
//      P094_TA_THRSHLD_SUMMARY_COL_MASK           //           1,         1,        1,               1,               1
//      P094_TA_THRSHLD_SUMMARY_COL_TYPES          //           N,         N,        N,               N,               N
//      P094_TA_THRSHLD_SUMMARY_TABLE_TYPE         // S
#define P172_AFH_RAP                          903  // AFH_RAP_FIELD_NAME,AFH_RAP_FIELD_VALUE
//      P172_AFH_RAP_COL_WIDTH                     //                 18,                 19
//      P172_AFH_RAP_COL_MASK                      //                  1,                  1
//      P172_AFH_RAP_COL_TYPES                     //                  V,                  V
//      P172_AFH_RAP_TABLE_TYPE                    // S

// Deprecated 11/23/2010
#define P172_AFH_RAP_HEAD                     904  // AFH_RAP_FIELD_NAME,HD_PHYS_PSN,HD_LGC_PSN,AFH_RAP_FIELD_VALUE1,AFH_RAP_FIELD_VALUE2,AFH_RAP_FIELD_VALUE3,AFH_RAP_FIELD_VALUE4
//      P172_AFH_RAP_HEAD_COL_WIDTH                //                 25,         11,        10,                  20,                  20,                  20,                  20
//      P172_AFH_RAP_HEAD_COL_MASK                 //                  0,          0,         0,                   0,                   0,                   0,                   0
//      P172_AFH_RAP_HEAD_COL_TYPES                // *
//      P172_AFH_RAP_HEAD_TABLE_TYPE               // S

// Deprecated 11/23/2010
#define P172_AFH_RAP_HEAD_ZONE                905  // AFH_RAP_FIELD_NAME,HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,AFH_RAP_FIELD_VALUE1,AFH_RAP_FIELD_VALUE2,AFH_RAP_FIELD_VALUE3,AFH_RAP_FIELD_VALUE4
//      P172_AFH_RAP_HEAD_ZONE_COL_WIDTH           //                 25,         11,        10,        9,                  20,                  20,                  20,                  20
//      P172_AFH_RAP_HEAD_ZONE_COL_MASK            //                  0,          0,         0,        0,                   0,                   0,                   0,                   0
//      P172_AFH_RAP_HEAD_ZONE_COL_TYPES           // *
//      P172_AFH_RAP_HEAD_ZONE_TABLE_TYPE          // S
#define P234_EAW_ERROR_RATE3                  906  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,T_LEVEL,NUM_WRITES,DEGAUSS,BITS_READ_LOG10,BASELINE_BER_CHUNK1,BASELINE_BER_CHUNK2,BASELINE_BER_CHUNK3,BASELINE_BER_CHUNK4,EAW_BER_CHUNK1,EAW_BER_CHUNK2,EAW_BER_CHUNK3,EAW_BER_CHUNK4,DELTA_CHUNK4,DEGAUSS_ON_LIMIT,DEGAUSS_OFF_LIMIT,FAIL_CODE
//      P234_EAW_ERROR_RATE3_COL_WIDTH             //          11,        10,        9,      7,      7,        10,      7,             15,                 19,                 19,                 19,                 19,            14,            14,            14,            14,          12,              16,               17,        9
//      P234_EAW_ERROR_RATE3_COL_MASK              //           1,         1,        1,      1,      1,         1,      1,              1,                  1,                  1,                  1,                  1,             1,             1,             1,             1,           1,               1,                1,        1
//      P234_EAW_ERROR_RATE3_COL_TYPES             //           N,         N,        N,      N,      N,         N,      V,              N,                  N,                  N,                  N,                  N,             N,             N,             N,             N,           N,               N,                N,        N
//      P234_EAW_ERROR_RATE3_TABLE_TYPE            // S
#define P172_AFH_DH_CLEARANCE                 907  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,PRE_HEAT_TRGT_CLRNC,WRT_HEAT_TRGT_CLRNC,READ_HEAT_TRGT_CLRNC,PRE_HEAT_CLRNC,WRT_HEAT_CLRNC,READ_HEAT_CLRNC,INACTV_RD_HEAT_DAC,INACTV_WRT_HEAT_DAC
//      P172_AFH_DH_CLEARANCE_COL_WIDTH            //          11,        9,        10,                 19,                 19,                  20,            14,            14,             15,                18,                 19
//      P172_AFH_DH_CLEARANCE_COL_MASK             //           1,        1,         1,                  1,                  1,                   1,             1,             1,              1,                 1,                  1
//      P172_AFH_DH_CLEARANCE_COL_TYPES            //           N,        N,         N,                  N,                  N,                   N,             N,             N,              N,                 N,                  N
//      P172_AFH_DH_CLEARANCE_TABLE_TYPE           // S
#define P172_AFH_DH_WORKING_ADAPT             908  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,WRITER_PRE_HEAT,WRITER_WRITE_HEAT,WRITER_READ_HEAT,READER_PRE_HEAT,READER_WRITE_HEAT,READER_READ_HEAT,HTR_PWR_RNG_BIT,WRT_CUR,WRT_CUR_OVS_AMP,WRT_CUR_OVS_DUR,MR_BIAS_OFST
//      P172_AFH_DH_WORKING_ADAPT_COL_WIDTH        //          11,        9,        10,             15,               17,              16,             15,               17,              16,             15,      7,             15,             15,          12
//      P172_AFH_DH_WORKING_ADAPT_COL_MASK         //           1,        1,         1,              1,                1,               1,              1,                1,               1,              1,      1,              1,              1,           1
//      P172_AFH_DH_WORKING_ADAPT_COL_TYPES        //           N,        N,         N,              N,                N,               N,              N,                N,               N,              N,      N,              N,              N,           N
//      P172_AFH_DH_WORKING_ADAPT_TABLE_TYPE       // S
#define P041_PES_SCREEN                       909  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SEEK_TYPE,SIGMA_HEAT_OFF,SIGMA_HEAT_ON,PERCENT_DIFF,ERROR_CODE,TRK_LOCATION,VGAS_SIGMA_HEAT_OFF,VGAS_SIGMA_HEAT_ON,VGAS_PCT_DIFF,VGAS_ERROR_CODE
//      P041_PES_SCREEN_COL_WIDTH                  //          11,        10,      7,        9,            14,           13,          12,        10,          12,                 19,                18,           13,             15
//      P041_PES_SCREEN_COL_MASK                   //           1,         1,      1,        1,             1,            1,           1,         1,           1,                  1,                 1,            1,              1
//      P041_PES_SCREEN_COL_TYPES                  //           N,         N,      N,        V,             N,            N,           N,         N,           V,                  N,                 N,            N,              N
//      P041_PES_SCREEN_TABLE_TYPE                 // S
#define P251_FIT_BCI_POINT_META1              910  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RGSTR_ID,TEST_ORDER,OPTI_VAL,FITNESS,FIT_SIGMA,ICNT,BITS_ERR,BIE_BER,LOWLLR,SOFTSUM,QM_MSE,METRIC,AUX_VAL,TRK_NUM,VGAR,NLFR,TAP0,TAP1,TAP2,TAP3,TAP4,TAP5,TAP6,TAP7,TAP8,TAP9,TAPX,METADATA1,METADATA2,METADATA3,TAP11,TAP12,TAP13,TAP14,TAP15,TAP16
//      P251_FIT_BCI_POINT_META1_COL_WIDTH         //          11,        9,        10,       8,        10,       8,      8,        9,   4,       8,      7,     6,      7,     6,     6,      8,      7,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,        9,        9,        9,    5,    5,    5,    5,    5,    5
//      P251_FIT_BCI_POINT_META1_COL_MASK          //           0,        0,         0,       0,         0,       0,      0,        0,   0,       0,      0,     0,      0,     0,     0,      0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,        0,        0,        0,    0,    0,    0,    0,    0,    0
//      P251_FIT_BCI_POINT_META1_COL_TYPES         // *
//      P251_FIT_BCI_POINT_META1_TABLE_TYPE        // M
#define P287_WIRRO                            911  // HD_LGC_PSN,REAL_PHYS_PSN1,WIRRO1,WIRRO2,WIRRO3,WIRRO4,WIRRO5,WIRRO6,WIRRO7,WIRRO8,WIRRO9,WIRRO10,WIRRO11,WIRRO12,WIRRO13,WIRRO14,WIRRO15,WIRRO16,WIRRO17,WIRRO18,WIRRO19,WIRRO20,WIRRO21,WIRRO22,WIRRO23,WIRRO24,WIRRO25,WIRRO26,WIRRO27,WIRRO28,WIRRO29,WIRRO30,WIRRO31,WIRRO32,WIRRO33,WIRRO34,WIRRO35,WIRRO36,WIRRO37,WIRRO38,WIRRO39,WIRRO40,WIRRO41,WIRRO42,WIRRO43,WIRRO44,WIRRO45,WIRRO46,WIRRO47,WIRRO48,WIRRO49,WIRRO50,WIRRO51,WIRRO52,WIRRO53,WIRRO54,WIRRO55,WIRRO56,WIRRO57,WIRRO58,WIRRO59,WIRRO60,WIRRO61,WIRRO62,WIRRO63,WIRRO64,HD_PHYS_PSN
//      P287_WIRRO_COL_WIDTH                       //         10,            14,     7,     7,     7,     7,     7,     7,     7,     7,     7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,         11
//      P287_WIRRO_COL_MASK                        //          0,             0,     0,     0,     0,     0,     0,     0,     0,     0,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,          0
//      P287_WIRRO_COL_TYPES                       // *
//      P287_WIRRO_TABLE_TYPE                      // S
#define P287_ZEST_SEGMENT_DATA                912  // HD_LGC_PSN,SEGMENT,REAL_PHYS_PSN1,WIRRO1,WIRRO2,WIRRO3,WIRRO4,WIRRO5,WIRRO6,WIRRO7,WIRRO8,WIRRO9,WIRRO10,WIRRO11,WIRRO12,WIRRO13,WIRRO14,WIRRO15,WIRRO16,WIRRO17,WIRRO18,WIRRO19,WIRRO20,WIRRO21,WIRRO22,WIRRO23,WIRRO24,WIRRO25,WIRRO26,WIRRO27,WIRRO28,WIRRO29,WIRRO30,WIRRO31,WIRRO32,WIRRO33,WIRRO34,WIRRO35,WIRRO36,WIRRO37,WIRRO38,WIRRO39,WIRRO40,WIRRO41,WIRRO42,WIRRO43,WIRRO44,WIRRO45,WIRRO46,WIRRO47,WIRRO48,WIRRO49,WIRRO50,WIRRO51,WIRRO52,WIRRO53,WIRRO54,WIRRO55,WIRRO56,WIRRO57,WIRRO58,WIRRO59,WIRRO60,WIRRO61,WIRRO62,WIRRO63,WIRRO64,HD_PHYS_PSN
//      P287_ZEST_SEGMENT_DATA_COL_WIDTH           //         10,      7,            14,     7,     7,     7,     7,     7,     7,     7,     7,     7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,         11
//      P287_ZEST_SEGMENT_DATA_COL_MASK            //          0,      0,             0,     0,     0,     0,     0,     0,     0,     0,     0,     0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,          0
//      P287_ZEST_SEGMENT_DATA_COL_TYPES           // *
//      P287_ZEST_SEGMENT_DATA_TABLE_TYPE          // S
#define P287_ZEST_MASTER_HEADER               913  // REV/KEY,HDS/CORR,SHFT/STP,STPS/OPN,MIN_SEG,MAX_SEG,ADDR6,ADDR7,ADDR8,ADDR9,ADDR10,ADDR11,ADDR12,ADDR13,ADDR14,ADDR15,ADDR16,ADDR17,ADDR18,ADDR19,ADDR20,ADDR21,ADDR22,ADDR23,ADDR24,ADDR25,ADDR26,ADDR27,ADDR28,ADDR29,ADDR30,ADDR31
//      P287_ZEST_MASTER_HEADER_COL_WIDTH          //       7,       8,       8,       8,      7,      7,    7,    7,    7,    7,     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,     7
//      P287_ZEST_MASTER_HEADER_COL_MASK           //       0,       0,       0,       0,      0,      0,    0,    0,    0,    0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0
//      P287_ZEST_MASTER_HEADER_COL_TYPES          // *
//      P287_ZEST_MASTER_HEADER_TABLE_TYPE         // S
#define P287_ZEST_SEGMENT_HEADER              914  // SEGKEY,ADDR0,ADDR1,ADDR2,ADDR3,ADDR4,ADDR5,ADDR6,ADDR7,ADDR8,ADDR9,ADDR10,ADDR11,ADDR12,ADDR13,ADDR14,ADDR15
//      P287_ZEST_SEGMENT_HEADER_COL_WIDTH         //      6,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,     7,     7,     7,     7,     7,     7
//      P287_ZEST_SEGMENT_HEADER_COL_MASK          //      0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,     0,     0,     0
//      P287_ZEST_SEGMENT_HEADER_COL_TYPES         // *
//      P287_ZEST_SEGMENT_HEADER_TABLE_TYPE        // S
#define P287_JOG_ERROR_HSTGRM                 915  // HD_PHYS_PSN,HD_LGC_PSN,BIN_START,BIN_END,ALL_ZONES,SRVO_ZONE_0,SRVO_ZONE_1,SRVO_ZONE_2,SRVO_ZONE_3,SRVO_ZONE_4,SRVO_ZONE_5,SRVO_ZONE_6,SRVO_ZONE_7
//      P287_JOG_ERROR_HSTGRM_COL_WIDTH            //          11,        10,        9,      9,        9,         11,         11,         11,         11,         11,         11,         11,         11
//      P287_JOG_ERROR_HSTGRM_COL_MASK             //           1,         1,        1,      1,        1,          1,          1,          1,          1,          1,          1,          1,          1
//      P287_JOG_ERROR_HSTGRM_COL_TYPES            //           N,         N,        N,      N,        N,          N,          N,          N,          N,          N,          N,          N,          N
//      P287_JOG_ERROR_HSTGRM_TABLE_TYPE           // S

// Obsolete; moved to P287_PHYS_SPACING_HSTGRM
#define P287_PHYS_SPCNG_HSTGRM                916  // HD_PHYS_PSN,HD_LGC_PSN,BIN_STRT,BIN_END,ALL_ZONES,ZONE0,ZONE1,ZONE2,ZONE3,ZONE4,ZONE5,ZONE6,ZONE7
//      P287_PHYS_SPCNG_HSTGRM_COL_WIDTH           //          11,        10,       9,      9,        9,    7,    7,    7,    7,    7,    7,    7,    7
//      P287_PHYS_SPCNG_HSTGRM_COL_MASK            //           0,         0,       0,      0,        0,    0,    0,    0,    0,    0,    0,    0,    0
//      P287_PHYS_SPCNG_HSTGRM_COL_TYPES           // *
//      P287_PHYS_SPCNG_HSTGRM_TABLE_TYPE          // V
#define P287_PHYS_TRK_STATS                   917  // HD_PHYS_PSN,HD_LGC_PSN,SRVO_ZONE,ZONE_END_CYL,TRK_WIDTH_MIN_PCT,TRK_WIDTH_MAX_PCT,TRK_WIDTH_3SIG_PCT,MABS_JOG_ERR,MABS_DC_ERR,JOG_ERR_3SIG
//      P287_PHYS_TRK_STATS_COL_WIDTH              //          11,        10,        9,          12,               17,               17,                18,          12,         11,          12
//      P287_PHYS_TRK_STATS_COL_MASK               //           1,         1,        1,           1,                1,                1,                 1,           1,          1,           1
//      P287_PHYS_TRK_STATS_COL_TYPES              //           N,         N,        N,           N,                N,                N,                 N,           N,          N,           N
//      P287_PHYS_TRK_STATS_TABLE_TYPE             // S

// Obsolete; moved to P287_EXTREME_LOCATIONS
#define P287_EXTREMA_LOCATIONS                918  // HD_PHYS_PSN,HD_LGC_PSN,MIN_SQZ_CYL,MIN_SQZ,MABS_JOG_ERR_CYL,MABS_JOG_ERR,MIN_DC_ERR_CYL,MIN_DC_ERR,MAX_DC_ERR_CYL,MAX_DC_ERR
//      P287_EXTREMA_LOCATIONS_COL_WIDTH           //          11,        10,         11,      7,              16,          12,            14,        10,            14,        10
//      P287_EXTREMA_LOCATIONS_COL_MASK            //           0,         0,          0,      0,               0,           0,             0,         0,             0,         0
//      P287_EXTREMA_LOCATIONS_COL_TYPES           // *
//      P287_EXTREMA_LOCATIONS_TABLE_TYPE          // V
#define P103_DELTA_VGA_EAW                    919  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,DATA_WEDGE,DELTA_MAX,DELTA_AVG,DELTA_STDEV,VGA_RANGE,HD_STATUS,DATA_ZONE,WRT_CUR_DAC,TEST_ITERATION,WRT_CUR_OVS_AMP,WRT_CUR_OVS_DUR
//      P103_DELTA_VGA_EAW_COL_WIDTH               //          11,        10,      7,        10,        9,        9,         11,        9,        9,        9,         11,            14,             15,             15
//      P103_DELTA_VGA_EAW_COL_MASK                //           1,         1,      1,         1,        1,        1,          1,        1,        1,        1,          1,             1,              1,              1
//      P103_DELTA_VGA_EAW_COL_TYPES               //           N,         N,      N,         N,        N,        N,          N,        N,        N,        N,          N,             N,              N,              N
//      P103_DELTA_VGA_EAW_TABLE_TYPE              // S
#define P067_TA_DATA_SUM                      920  // TA_NUM,HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,TA_PSN_SFI,TA_LEN_SYMBLS,ACT_AMP_MV,PSV_AMP_MV,RPT_CNT,DATA_WEDGE,TA_STATUS,TA_SFW
//      P067_TA_DATA_SUM_COL_WIDTH                 //      6,         11,      8,        10,        10,           13,        10,        10,      7,        10,        9,     6
//      P067_TA_DATA_SUM_COL_MASK                  //      1,          1,      1,         1,         1,            1,         1,         1,      1,         1,        1,     1
//      P067_TA_DATA_SUM_COL_TYPES                 //      N,          N,      N,         N,         N,            N,         N,         N,      N,         N,        V,     N
//      P067_TA_DATA_SUM_TABLE_TYPE                // V
#define P067_TA_DETAIL                        921  // TA_NUM,HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,TA_PSN_SFI,TA_LEN_SYMBLS,TA_WIDTH_TRKS,TA_AMP_MV,WGHTD_FOM,DATA_WEDGE,TA_FLAG,MAX_RPT_CNT,TA_TRK_DETECTED_CNT
//      P067_TA_DETAIL_COL_WIDTH                   //      6,         11,        10,     10,        10,           13,           13,        9,        9,        10,      7,         11,                 19
//      P067_TA_DETAIL_COL_MASK                    //      1,          1,         1,      1,         1,            1,            1,        1,        1,         1,      1,          1,                  1
//      P067_TA_DETAIL_COL_TYPES                   //      N,          N,         N,      N,         N,            N,            N,        N,        N,         N,      V,          N,                  N
//      P067_TA_DETAIL_TABLE_TYPE                  // V
#define P067_TA_SUM_HD                        922  // HD_PHYS_PSN,HD_LGC_PSN,TA_CNT,SQRT_WGHTD_FOM,MAX_WGHTD_FOM,AMP0_CNT,AMP1_CNT,AMP2_CNT,AMP3_CNT,AMP4_CNT,AMP5_CNT,AMP6_CNT,AMP7_CNT
//      P067_TA_SUM_HD_COL_WIDTH                   //          11,        10,     6,            14,           13,       8,       8,       8,       8,       8,       8,       8,       8
//      P067_TA_SUM_HD_COL_MASK                    //           1,         1,     1,             1,            1,       1,       1,       1,       1,       1,       1,       1,       1
//      P067_TA_SUM_HD_COL_TYPES                   //           N,         N,     N,             N,            N,       N,       N,       N,       N,       N,       N,       N,       N
//      P067_TA_SUM_HD_TABLE_TYPE                  // V
#define P088_DETAILED_ERR_RATE                923  // HD_LGC_PSN,DATA_ZONE,TRK_NUM,ERR_RATE,HD_PHYS_PSN,TOTAL_ERR_CNT,ITERATION_CNT,SYNC_ERR,NONCONVRG_CW_CNT,BITS_IN_ERR,NUM_REVS,TOT_SCTR_RD
//      P088_DETAILED_ERR_RATE_COL_WIDTH           //         10,        9,      7,       8,         11,           13,           13,       8,              16,         11,       8,         11
//      P088_DETAILED_ERR_RATE_COL_MASK            //          0,        0,      0,       0,          0,            0,            0,       0,               0,          0,       0,          0
//      P088_DETAILED_ERR_RATE_COL_TYPES           // *
//      P088_DETAILED_ERR_RATE_TABLE_TYPE          // S
#define P088_ERROR_RATE                       924  // HD_PHYS_PSN,DATA_ZN,HD_LGC_PSN,TRK_NUM,ERROR_RATE10
//      P088_ERROR_RATE_COL_WIDTH                  //          11,      7,        10,      7,          12
//      P088_ERROR_RATE_COL_MASK                   //           1,      1,         1,      1,           1
//      P088_ERROR_RATE_COL_TYPES                  //           N,      N,         N,      N,           N
//      P088_ERROR_RATE_TABLE_TYPE                 // S
#define P109_TOT_VFYD_UNVFYD_FLAW             925  // TOTAL_VFYD_FLAW,TOTAL_UNVFYD_FLAW
//      P109_TOT_VFYD_UNVFYD_FLAW_COL_WIDTH        //              15,               17
//      P109_TOT_VFYD_UNVFYD_FLAW_COL_MASK         //               1,                1
//      P109_TOT_VFYD_UNVFYD_FLAW_COL_TYPES        //               N,                N
//      P109_TOT_VFYD_UNVFYD_FLAW_TABLE_TYPE       // S
#define P103_DELTA_SVGA_EAW                   926  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SERVO_WEDGE,DELTA_MAX,DELTA_AVG,DELTA_STDEV,VGA_RANGE,HD_STATUS,SERVO_ZONE,WRT_CUR_DAC,TEST_ITERATION,WRT_CUR_OVS_AMP,WRT_CUR_OVS_DUR
//      P103_DELTA_SVGA_EAW_COL_WIDTH              //          11,        10,      7,         11,        9,        9,         11,        9,        9,        10,         11,            14,             15,             15
//      P103_DELTA_SVGA_EAW_COL_MASK               //           1,         1,      1,          1,        1,        1,          1,        1,        1,         1,          1,             1,              1,              1
//      P103_DELTA_SVGA_EAW_COL_TYPES              //           N,         N,      N,          N,        N,        N,          N,        N,        N,         N,          N,             N,              N,              N
//      P103_DELTA_SVGA_EAW_TABLE_TYPE             // S
#define P067_TA_TRIPAD                        927  // TA_NUM,HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,TA_PSN_SFI,TA_LEN_SYMBLS,TA_WIDTH_TRKS,TA_AMP_MV,WGHTD_FOM,DATA_WEDGE,TA_FLAG,MAX_RPT_CNT,TA_TRK_DETECTED_CNT
//      P067_TA_TRIPAD_COL_WIDTH                   //      6,         11,        10,      7,        10,           13,           13,        9,        9,        10,      7,         11,                 19
//      P067_TA_TRIPAD_COL_MASK                    //      1,          1,         1,      1,         1,            1,            1,        1,        1,         1,      1,          1,                  1
//      P067_TA_TRIPAD_COL_TYPES                   //      N,          N,         N,      N,         N,            N,            N,        N,        N,         N,      V,          N,                  N
//      P067_TA_TRIPAD_TABLE_TYPE                  // V
#define P172_AFH_DH_TC_COEF                   928  // HD_PHYS_PSN,HD_LGC_PSN,ACTIVE_HEATER,THERMAL_CLR_COEF1,THERMAL_CLR_COEF2,ADD_TCS_COLD_DTC,ADD_TCS_HOT_DTH,COLD_TEMP_DTC,HOT_TEMP_DTH
//      P172_AFH_DH_TC_COEF_COL_WIDTH              //          11,        10,           13,               17,               17,              16,             15,           13,          12
//      P172_AFH_DH_TC_COEF_COL_MASK               //           1,         1,            1,                1,                1,               1,              1,            1,           1
//      P172_AFH_DH_TC_COEF_COL_TYPES              //           N,         N,            V,                N,                N,               N,              N,            N,           N
//      P172_AFH_DH_TC_COEF_TABLE_TYPE             // V
#define P186_TCR_BIAS_GAIN                    929  // HD_PHYS_PSN,HD_LGC_PSN,TCR_BIAS_VOLTAGE,TCR_BIAS,TCR_GAIN
//      P186_TCR_BIAS_GAIN_COL_WIDTH               //          11,        10,              16,       8,       8
//      P186_TCR_BIAS_GAIN_COL_MASK                //           1,         1,               1,       1,       1
//      P186_TCR_BIAS_GAIN_COL_TYPES               //           N,         N,               N,       N,       N
//      P186_TCR_BIAS_GAIN_TABLE_TYPE              // S
#define P075_ZONE_SUMMARY                     930  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TEST_MODE,X_QUAD_COEF,X_LIN_COEF,RAP_UPDATE,ALGORITHM
//      P075_ZONE_SUMMARY_COL_WIDTH                //          11,        10,        9,        9,         11,        10,        10,        9
//      P075_ZONE_SUMMARY_COL_MASK                 //           1,         1,        1,        1,          1,         1,         1,        0
//      P075_ZONE_SUMMARY_COL_TYPES                //           N,         N,        N,        V,          N,         N,         N
//      P075_ZONE_SUMMARY_TABLE_TYPE               // S
#define P075_HEAD_SUMMARY                     931  // HD_PHYS_PSN,HD_LGC_PSN,TEST_MODE,RAP_UPDATE,ERROR_CODE
//      P075_HEAD_SUMMARY_COL_WIDTH                //          11,        10,        9,        10,         5
//      P075_HEAD_SUMMARY_COL_MASK                 //           1,         1,        1,         1,         1
//      P075_HEAD_SUMMARY_COL_TYPES                //           N,         N,        V,         N,         N
//      P075_HEAD_SUMMARY_TABLE_TYPE               // S
#define P065_COUNT_SUMMARY                    932  // HD_PHYS_PSN,DATA_ZN,TRK_NUM,ID,ZN_RTRY,DAC_RTRY,RPT,START_DAC,END_DAC,HTR_DAC,COUNT,MEAN,RSQR,STDEV,TRIGR,PRED,SIGMA,LDOFS,DELTA,CNTCT,TEMP_C,COEFF_2,COEFF_1,COEFF_0,MODE
//      P065_COUNT_SUMMARY_COL_WIDTH               //          11,      7,      7, 2,      7,       8,  3,        9,      7,      7,    5,   7,   7,    7,    7,   4,    5,    5,    5,    5,     6,      9,      9,      9,   4
//      P065_COUNT_SUMMARY_COL_MASK                //           0,      0,      0, 0,      0,       0,  0,        0,      0,      0,    0,   0,   0,    0,    0,   0,    0,    0,    0,    0,     0,      0,      0,      0,   0
//      P065_COUNT_SUMMARY_COL_TYPES               // *
//      P065_COUNT_SUMMARY_TABLE_TYPE              // M
#define P065_THRESHOLD_CAL                    933  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,REV,HTR_DAC,THRESHOLD,CONTACT_THRESH,COUNT,ITERATION
//      P065_THRESHOLD_CAL_COL_WIDTH               //          11,        9,      7,  3,      7,        9,            14,    5,        7
//      P065_THRESHOLD_CAL_COL_MASK                //           0,        0,      0,  0,      0,        0,             0,    0,        0
//      P065_THRESHOLD_CAL_COL_TYPES               // *
//      P065_THRESHOLD_CAL_TABLE_TYPE              // M
#define P065_ZONE_SUMMARY                     934  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,RETRY_COUNT,MSRD_INTRPLTD,HTR_DAC,VALID_ZONE,RSQ_POLYFIT,MODE,CONTACT_TEMP
//      P065_ZONE_SUMMARY_COL_WIDTH                //          11,        9,      7,         11,           13,      7,        10,         11,   4,          12
//      P065_ZONE_SUMMARY_COL_MASK                 //           0,        0,      0,          0,            0,      0,         0,          0,   0,           0
//      P065_ZONE_SUMMARY_COL_TYPES                // *
//      P065_ZONE_SUMMARY_TABLE_TYPE               // M
#define P065_INPUTS                           935  // ID,BIAS,BIAS_POL,THRESH_DAC,MODE,HPF,LPF,TRIP_CNT,GAIN,THRESH_RANGE,CMP_SEL,COAST,MICRO_ACT,SIGMA_MLTP,THRESH_INC,A_WDG,B_WDG,C_WDG,WND_SIZE
//      P065_INPUTS_COL_WIDTH                      //  4,   4,       8,        10,   4,  3,  3,       8,   4,          12,      7,    5,        9,        10,        10,    5,    5,    5,       8
//      P065_INPUTS_COL_MASK                       //  0,   0,       0,         0,   0,  0,  0,       0,   0,           0,      0,    0,        0,         0,         0,    0,    0,    0,       0
//      P065_INPUTS_COL_TYPES                      // *
//      P065_INPUTS_TABLE_TYPE                     // M
#define P287_STRESS_CERT_LIST                 936  // HD_LGC_PSN,LGC_STRT_TRK,LGC_END_TRK,HD_PHYS_PSN
//      P287_STRESS_CERT_LIST_COL_WIDTH            //         10,          12,         11,         11
//      P287_STRESS_CERT_LIST_COL_MASK             //          0,           0,          0,          0
//      P287_STRESS_CERT_LIST_COL_TYPES            // *
//      P287_STRESS_CERT_LIST_TABLE_TYPE           // M
#define P215_ISLAND_PADDING_INFO              937  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,SFI,WDG_SIZE,MAX_SYMBL_ON_TRK
//      P215_ISLAND_PADDING_INFO_COL_WIDTH         //          11,      7,        10, 10,       8,              16
//      P215_ISLAND_PADDING_INFO_COL_MASK          //           0,      0,         0,  0,       0,               0
//      P215_ISLAND_PADDING_INFO_COL_TYPES         // *
//      P215_ISLAND_PADDING_INFO_TABLE_TYPE        // S
#define P257_IXFR_FUNC                        938  // HEAD,INDEX,INTEGER_INV_S_REAL,INTEGER_INV_S_IMAG,INV_S_REAL,INV_S_IMAG
//      P257_IXFR_FUNC_COL_WIDTH                   //    4,    5,                18,                18,        12,        12
//      P257_IXFR_FUNC_COL_MASK                    //    0,    0,                 0,                 0,         0,         0
//      P257_IXFR_FUNC_COL_TYPES                   // *
//      P257_IXFR_FUNC_TABLE_TYPE                  // S
#define P257_R_XFR_F_FFT_COMPAT               939  // HEAD,INDEX,REAL_INVS,REAL_INVS_I,REAL_INVS_ZAP,REAL_INVS_ZAP_I,REAL_INVS_NONZAP,REAL_INVS_NONZAP_I
//      P257_R_XFR_F_FFT_COMPAT_COL_WIDTH          //    4,    5,        9,         11,           13,             15,              16,                18
//      P257_R_XFR_F_FFT_COMPAT_COL_MASK           //    0,    0,        0,          0,            0,              0,               0,                 0
//      P257_R_XFR_F_FFT_COMPAT_COL_TYPES          // *
//      P257_R_XFR_F_FFT_COMPAT_TABLE_TYPE         // S
#define P257_PES_BY_WDG                       940  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SEEK_TYPE,WEDGE,PES_NON_ZAP,PES_ZAP
//      P257_PES_BY_WDG_COL_WIDTH                  //          11,        10,     10,        9,    5,         11,     11
//      P257_PES_BY_WDG_COL_MASK                   //           0,         0,      0,        0,    0,          0,      0
//      P257_PES_BY_WDG_COL_TYPES                  // *
//      P257_PES_BY_WDG_TABLE_TYPE                 // S
#define P257_RTP_DATA                         941  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SEEK_TYPE,WEDGE,RTP_SUM,RTP_NON_ZAP,RTP_ZAP
//      P257_RTP_DATA_COL_WIDTH                    //          11,        10,     10,        9,    5,     12,         12,     12
//      P257_RTP_DATA_COL_MASK                     //           0,         0,      0,        0,    0,      0,          0,      0
//      P257_RTP_DATA_COL_TYPES                    // *
//      P257_RTP_DATA_TABLE_TYPE                   // S
#define P257_RTP_REF_AND_ADJ                  942  // HD_PHYS_PSN,HD_LGC_PSN,REF_TRK,ADJ_TRK,WDG_NUM,WRT_REF_RTP,WRT_ADJ_RTP,RD_REF_RTP,RD_ADJ_RTP
//      P257_RTP_REF_AND_ADJ_COL_WIDTH             //          11,        10,      8,      8,      7,         11,         11,        10,        10
//      P257_RTP_REF_AND_ADJ_COL_MASK              //           0,         0,      0,      0,      0,          0,          0,         0,         0
//      P257_RTP_REF_AND_ADJ_COL_TYPES             // *
//      P257_RTP_REF_AND_ADJ_TABLE_TYPE            // S
#define P257_DIFF_RTP                         943  // HD_PHYS_PSN,HD_LGC_PSN,REF_TRK,ADJ_TRK,WDG_NUM,I_WRT_WRT_DIFF,I_WRT_RD_DIFF
//      P257_DIFF_RTP_COL_WIDTH                    //          11,        10,      7,      7,      7,            14,           13
//      P257_DIFF_RTP_COL_MASK                     //           0,         0,      0,      0,      0,             0,            0
//      P257_DIFF_RTP_COL_TYPES                    // *
//      P257_DIFF_RTP_TABLE_TYPE                   // S
#define P257_WRT_TO_RD_STATS                  944  // HD_PHYS_PSN,HD_LGC_PSN,ZONE_TYPE,TRK_NUM,TP_3_SIGMA,MABS_VAL,MABS_NDX,PK_TO_PK_VAL
//      P257_WRT_TO_RD_STATS_COL_WIDTH             //          11,        10,        9,      7,        10,       8,       8,          12
//      P257_WRT_TO_RD_STATS_COL_MASK              //           1,         1,        1,      1,         1,       1,       1,           1
//      P257_WRT_TO_RD_STATS_COL_TYPES             //           N,         N,        V,      N,         N,       N,       N,           N
//      P257_WRT_TO_RD_STATS_TABLE_TYPE            // S
#define P257_WRT_TO_WRT_STATS                 945  // HD_PHYS_PSN,HD_LGC_PSN,ZONE_TYPE,REF_TRK,ADJ_TRK,TP_3_SIGMA,MABS_VAL,MABS_NDX,PK_TO_PK_VAL
//      P257_WRT_TO_WRT_STATS_COL_WIDTH            //          11,        10,        9,      7,      7,        10,       8,       8,          12
//      P257_WRT_TO_WRT_STATS_COL_MASK             //           1,         1,        1,      1,      1,         1,       1,       1,           1
//      P257_WRT_TO_WRT_STATS_COL_TYPES            //           N,         N,        V,      N,      N,         N,       N,       N,           N
//      P257_WRT_TO_WRT_STATS_TABLE_TYPE           // S
#define P257_SUMMARY                          946  // HD_PHYS_PSN,HD_LGC_PSN,ZONE_TYPE,WRT_WRT_AVG,WRT_RD_AVG,SERVO_TPI,DATA_TPI,MDW_TPI
//      P257_SUMMARY_COL_WIDTH                     //          11,        10,        9,         11,        11,       11,      11,     11
//      P257_SUMMARY_COL_MASK                      //           1,         1,        1,          1,         1,        1,       1,      1
//      P257_SUMMARY_COL_TYPES                     //           N,         N,        V,          N,         N,        N,       N,      N
//      P257_SUMMARY_TABLE_TYPE                    // S
#define P134_TA_DATA_DETCR                    947  // DFCT_NUM,HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,TA_PSN_SFI,TA_LEN_SYMBL,ACT_MAX_AMP,ACT_AVG_AMP,ACT_AFH_MAX_HGT,PSV_MAX_AMP,PSV_AVG_AMP,VOID_MAX_AMP,VOID_AVG_AMP,VOID_AFH_MAX_HGT,SRVO_WEDGE,TA_STATUS,TA_DETECT_CLR,TRGT_RD_CLR,POS_THRSHLD,NEG_THRSHLD,POS_CURVE_FIT,NEG_CURVE_FIT,PSV_TA_CLEAN_STATUS
//      P134_TA_DATA_DETCR_COL_WIDTH               //        8,         11,      8,        10,        10,          12,         11,         11,             15,         11,         11,          12,          12,              16,        10,        9,           13,         11,         11,         11,           13,           13,                 19
//      P134_TA_DATA_DETCR_COL_MASK                //        1,          1,      1,         1,         1,           1,          1,          1,              1,          1,          1,           1,           1,               1,         1,        1,            1,          1,          1,          1,            1,            1,                  1
//      P134_TA_DATA_DETCR_COL_TYPES               //        N,          N,      N,         N,         N,           N,          N,          N,              N,          N,          N,           N,           N,               N,         N,        V,            N,          N,          N,          N,            N,            N,                  V
//      P134_TA_DATA_DETCR_TABLE_TYPE              // M
#define P134_TA_DETCR_DETAIL                  948  // DFCT_NUM,HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,TA_PSN_SFI,TA_LEN_SYMBL,TA_WIDTH_TRKS,MAX_AVG_AMP,AMP_WIDTH,SRVO_WEDGE,TA_STATUS,MAX_TA_TRK,PSV_MAX_AMP,MAX_FLY_HGT,VOID_MAX_AMP,TA_SEVERITY,TA_DETECT_CLR,TRGT_RD_CLR,MAX_POS_THRSHLD,MAX_NEG_THRSHLD,POS_CURVE_FIT_ERR,NEG_CURVE_FIT_ERR,BSLN_THRSHLD_DAC,TA_TYPE_NUM,PHYS_TRK_NUM,DATA_ZONE,ZONE_RELATIVE_PSN,DFCT_RELATIVE_PSN,PSV_TA_WIDTH_TRKS,PSV_TA_TRK_CNT,INTL_PSV_TA_WIDTH_TRKS,INTL_PSV_TA_TRK_CNT,PSV_TA_CLEAN_STATUS
//      P134_TA_DETCR_DETAIL_COL_WIDTH             //        8,         11,        10,      7,        10,          12,           13,         11,        9,        10,        9,        10,         11,         11,          12,         11,           13,         11,             15,             15,               17,               17,              16,         11,          12,        9,               17,               17,               17,            14,                    22,                 19,                 19
//      P134_TA_DETCR_DETAIL_COL_MASK              //        1,          1,         1,      1,         1,           1,            1,          1,        1,         1,        1,         1,          1,          1,           1,          1,            1,          1,              1,              1,                1,                1,               1,          1,           1,        1,                1,                1,                1,             1,                     1,                  1,                  1
//      P134_TA_DETCR_DETAIL_COL_TYPES             //        N,          N,         N,      N,         N,           N,            N,          N,        N,         N,        V,         N,          N,          N,           N,          N,            N,          N,              N,              N,                N,                N,               N,          N,           N,        N,                N,                N,                N,             N,                     N,                  N,                  V
//      P134_TA_DETCR_DETAIL_TABLE_TYPE            // V
#define P134_TA_SURFACE_QLFD_CNT              949  // HD_LGC_PSN,HD_PHYS_PSN,SURFACE_TRK_CNT,QUALIFIED_TRK,NON_QUALIFIED_TRK
//      P134_TA_SURFACE_QLFD_CNT_COL_WIDTH         //         10,         11,             15,           13,               17
//      P134_TA_SURFACE_QLFD_CNT_COL_MASK          //          0,          0,              0,            0,                0
//      P134_TA_SURFACE_QLFD_CNT_COL_TYPES         // *
//      P134_TA_SURFACE_QLFD_CNT_TABLE_TYPE        // S
#define P134_TA_DRIVE_QLFD_CNT                950  // TOTAL_TRK_CNT,QUALIFIED_TRK,NON_QUALIFIED_TRK
//      P134_TA_DRIVE_QLFD_CNT_COL_WIDTH           //            13,           13,               17
//      P134_TA_DRIVE_QLFD_CNT_COL_MASK            //             0,            0,                0
//      P134_TA_DRIVE_QLFD_CNT_COL_TYPES           // *
//      P134_TA_DRIVE_QLFD_CNT_TABLE_TYPE          // S
#define P109_DFS_ERROR                        951  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,FAILED_SECTOR,SYM_OFFSET,WRITE,TARGET_PBA
//      P109_DFS_ERROR_COL_WIDTH                   //          11,        10,      7,           13,        10,    5,        10
//      P109_DFS_ERROR_COL_MASK                    //           0,         0,      0,            0,         0,    0,         0
//      P109_DFS_ERROR_COL_TYPES                   // *
//      P109_DFS_ERROR_TABLE_TYPE                  // S
#define P152_BODE_GAIN_ONLY2                  952  // HD_PHYS_PSN,FREQUENCY,HD_LGC_PSN,GAIN
//      P152_BODE_GAIN_ONLY2_COL_WIDTH             //          11,        9,        10,   7
//      P152_BODE_GAIN_ONLY2_COL_MASK              //           0,        0,         0,   0
//      P152_BODE_GAIN_ONLY2_COL_TYPES             // *
//      P152_BODE_GAIN_ONLY2_TABLE_TYPE            // V
#define P083_AGC_DATA                         953  // HD_PHYS_PSN,HD_LGC_PSN,SCTR_NUM,AGC_RAW,AGC_FILTERED
//      P083_AGC_DATA_COL_WIDTH                    //          11,        10,       8,      7,          12
//      P083_AGC_DATA_COL_MASK                     //           1,         1,       1,      1,           1
//      P083_AGC_DATA_COL_TYPES                    //           N,         N,       N,      N,           N
//      P083_AGC_DATA_TABLE_TYPE                   // S
#define P083_AGC_PK_PK                        954  // HD_PHYS_PSN,HD_LGC_PSN,PK_PK,SECTOR_AT_MIN_AGC,SECTOR_AT_MAX_AGC
//      P083_AGC_PK_PK_COL_WIDTH                   //          11,        10,    5,               17,               17
//      P083_AGC_PK_PK_COL_MASK                    //           1,         1,    1,                1,                1
//      P083_AGC_PK_PK_COL_TYPES                   //           N,         N,    N,                N,                N
//      P083_AGC_PK_PK_TABLE_TYPE                  // S
#define P180_NRRO_RRO_RSNC                    955  // HD_PHYS_PSN,FREQ_RANGE_NUM,TRK_NUM,HD_LGC_PSN,LOW_FREQ,HIGH_FREQ,NRRO_FFT_AMP,NRRO_PEAK_PES_FREQ,RRO_FFT_AMP,RRO_PEAK_PES_FREQ,HD_STATUS,SYMBOL_INDEX
//      P180_NRRO_RRO_RSNC_COL_WIDTH               //          11,            14,      7,        10,       8,        9,          12,                18,         11,               17,        9,          14
//      P180_NRRO_RRO_RSNC_COL_MASK                //           1,             1,      1,         1,       1,        1,           1,                 1,          1,                1,        1,           1
//      P180_NRRO_RRO_RSNC_COL_TYPES               //           N,             N,      N,         N,       N,        N,           N,                 N,          N,                N,        N,           N
//      P180_NRRO_RRO_RSNC_TABLE_TYPE              // M
#define P054_PS_CAL_DATA                      956  // PS_STATUS,ALT_ADC_OFST,NUM_SAMPLES,BSLN_ALTITUDE,CAL_ALTITUDE,RAW_ADC,DFLT_CLR_ADJ,PSC_COEF_1,PSC_COEF_2,PSC_COEF_3,MIN_ALTITUDE,MAX_ALTITUDE
//      P054_PS_CAL_DATA_COL_WIDTH                 //         9,          12,         11,           13,          12,      7,          12,        10,        10,        10,          12,          12
//      P054_PS_CAL_DATA_COL_MASK                  //         1,           1,          1,            1,           1,      1,           1,         1,         1,         1,           1,           1
//      P054_PS_CAL_DATA_COL_TYPES                 //         N,           N,          N,            N,           N,      N,           N,         N,         N,         N,           N,           N
//      P054_PS_CAL_DATA_TABLE_TYPE                // S
#define P118_SFILL_HEADSUMMARY2               957  // HD_PHYS_PSN,HD_LGC_PSN,NUMOFSPIRALS,DEFECTSADDED,MAXSCRATCHDEFECTS
//      P118_SFILL_HEADSUMMARY2_COL_WIDTH          //          11,        10,          12,          12,               17
//      P118_SFILL_HEADSUMMARY2_COL_MASK           //           0,         0,           0,           0,                0
//      P118_SFILL_HEADSUMMARY2_COL_TYPES          // *
//      P118_SFILL_HEADSUMMARY2_TABLE_TYPE         // S
#define P118_SFILL_ADDED2                     958  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,POSITION,LENGTH
//      P118_SFILL_ADDED2_COL_WIDTH                //          11,        10,       8,       8,     6
//      P118_SFILL_ADDED2_COL_MASK                 //           0,         0,       0,       0,     0
//      P118_SFILL_ADDED2_COL_TYPES                // *
//      P118_SFILL_ADDED2_TABLE_TYPE               // S
#define P251_CLEARANCE_MEASURE                959  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,RGSTR_ID,OPTI_VAL,AUX_VAL,CLEARANCE,FITNESS,SFR_PERCENT,LOG_SFR,BITS_ERR,LOG_BIE,METRIC,SOLUTION,R_SQUARED,BIE_ITER_LD,ICNT,WRT_HEAT,RD_HEAT,PRE_HEAT,VGAR,NLFR,TAP1,TAP2,TAP3,TAP4,TAP5,TAP6,TAP7,TAP8,TAP9,TAPX,METADATA1,METADATA2,METADATA3,TAP11,TAP12,TAP13,TAP14,TAP15,TAP16
//      P251_CLEARANCE_MEASURE_COL_WIDTH           //          11,        9,      7,       8,       8,      7,        9,      7,         11,      7,       8,      7,     6,       8,        9,         11,   4,       8,      7,       8,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,        9,        9,        9,    5,    5,    5,    5,    5,    5
//      P251_CLEARANCE_MEASURE_COL_MASK            //           0,        0,      0,       0,       0,      0,        0,      0,          0,      0,       0,      0,     0,       0,        0,          0,   0,       0,      0,       0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,        0,        0,        0,    0,    0,    0,    0,    0,    0
//      P251_CLEARANCE_MEASURE_COL_TYPES           // *
//      P251_CLEARANCE_MEASURE_TABLE_TYPE          // S
#define P335_TRK_SELECT_INFO                  960  // HD_PHYS_PSN,HD_LGC_PSN,DISC_RGN,NUM_TRKS,TRK_RNG_START,TRK_RNG_END,MAX_TRK
//      P335_TRK_SELECT_INFO_COL_WIDTH             //          11,        10,       8,       8,           13,         11,      7
//      P335_TRK_SELECT_INFO_COL_MASK              //           0,         0,       0,       0,            0,          0,      0
//      P335_TRK_SELECT_INFO_COL_TYPES             // *
//      P335_TRK_SELECT_INFO_TABLE_TYPE            // S
#define P335_TRK_LIST                         961  // HD_PHYS_PSN,HD_LGC_PSN,LIST_NUM,TRK_NUM
//      P335_TRK_LIST_COL_WIDTH                    //          11,        10,       8,     10
//      P335_TRK_LIST_COL_MASK                     //           0,         0,       0,      0
//      P335_TRK_LIST_COL_TYPES                    // *
//      P335_TRK_LIST_TABLE_TYPE                   // S
#define P334_DETCR_RES_RAW_DATA               962  // HD_PHYS_PSN,HD_LGC_PSN,ITERATION,RESISTANCE
//      P334_DETCR_RES_RAW_DATA_COL_WIDTH          //          11,        10,        9,        10
//      P334_DETCR_RES_RAW_DATA_COL_MASK           //           0,         0,        0,         0
//      P334_DETCR_RES_RAW_DATA_COL_TYPES          // *
//      P334_DETCR_RES_RAW_DATA_TABLE_TYPE         // S
#define P334_DETCR_RES_SUMMARY                963  // HD_PHYS_PSN,HD_LGC_PSN,AVG_RAW,AVG_SPORTED,STD_RAW,STD_SPORTED,DELTA_AVG,DELTA_STD
//      P334_DETCR_RES_SUMMARY_COL_WIDTH           //          11,        10,      7,         11,      7,         11,        9,        9
//      P334_DETCR_RES_SUMMARY_COL_MASK            //           0,         0,      0,          0,      0,          0,        0,        0
//      P334_DETCR_RES_SUMMARY_COL_TYPES           // *
//      P334_DETCR_RES_SUMMARY_TABLE_TYPE          // S
#define P251_BEST_FITNESS_REGRESS             964  // HD_PHYS_PSN,DATA_ZONE,TEST_ORDER,TRK_NUM,HD_LGC_PSN,RGSTR_ID,NOMINAL_VAL,FITNESS,OPTI_VAL,AUX_VAL,HD_STATUS,SMPLE_PK,5PTMA_PK,QUADR_PK,PSMLR_PK,QSMLR_PK,MESTIMATE,PICKMETA1
//      P251_BEST_FITNESS_REGRESS_COL_WIDTH        //          11,        9,        10,      7,        10,       8,         11,      7,       8,      7,        9,       8,       8,       8,       8,       8,        9,        9
//      P251_BEST_FITNESS_REGRESS_COL_MASK         //           0,        0,         0,      0,         0,       0,          0,      0,       0,      0,        0,       0,       0,       0,       0,       0,        0,        0
//      P251_BEST_FITNESS_REGRESS_COL_TYPES        // *
//      P251_BEST_FITNESS_REGRESS_TABLE_TYPE       // S
#define P057_VCM_DRV_DETAILS                  965  // CHIP_TYPE,MFG_TEST_STAT
//      P057_VCM_DRV_DETAILS_COL_WIDTH             //         9,           13
//      P057_VCM_DRV_DETAILS_COL_MASK              //         0,            0
//      P057_VCM_DRV_DETAILS_COL_TYPES             // *
//      P057_VCM_DRV_DETAILS_TABLE_TYPE            // S
#define P240_EAW_ERROR_RATE                   966  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZN,TRK_NUM,T_LEVEL,INTRLV,NUM_WRITES,DEGAUSS,BITS_IN_ERR,BITS_READ,BASELINE_BER,EAW_BER,DELTA_BER,DELTA_RATIO_BER,BASELINE_SER,EAW_SER,DELTA_SER,FAIL_CODE,BASELINE_VGAS,BASELINE_VGAS_STDEV,EAW_VGAS,EAW_VGAS_STDEV,DELTA_VGAS,DELTA_VGAS_STDEV,MAX_WEDGE,MAX_WEDGE_DELTA_VGAS
//      P240_EAW_ERROR_RATE_COL_WIDTH              //          11,        10,      7,      7,      7,     6,        10,      7,         11,        9,          12,      7,        9,             15,          12,      7,        9,        9,           13,                 19,       8,            14,        10,              16,        9,                  20
//      P240_EAW_ERROR_RATE_COL_MASK               //           1,         1,      1,      1,      1,     1,         1,      1,          1,        1,           1,      1,        1,              1,           1,      1,        1,        1,            1,                  1,       1,             1,         1,               1,        0,                   0
//      P240_EAW_ERROR_RATE_COL_TYPES              //           N,         N,      N,      N,      N,     N,         N,      V,          N,        N,           N,      N,        N,              N,           N,      N,        N,        N,            N,                  N,       N,             N,         N,               N
//      P240_EAW_ERROR_RATE_TABLE_TYPE             // S
#define P334_RAW_BER_DATA                     967  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,SUB_ZONE,TRK_NUM,BER_ITERATIONS,WRT_RD_ITERATIONS,BER,TOTAL_BIE,SECTORS_RD,DATA_SYNCH_ERRS,NON_CONV_CW,AVG_ITER
//      P334_RAW_BER_DATA_COL_WIDTH                //          11,        10,        9,       8,     10,            14,               17,  6,        9,        10,             15,         11,       8
//      P334_RAW_BER_DATA_COL_MASK                 //           0,         0,        0,       0,      0,             0,                0,  0,        0,         0,              0,          0,       0
//      P334_RAW_BER_DATA_COL_TYPES                // *
//      P334_RAW_BER_DATA_TABLE_TYPE               // S
#define P334_EXP_BER_AVGS                     968  // HD_PHYS_PSN,HD_LGC_PSN,TRKS_IN_ZN,RW_Z1_BITS_IN_ERR,RW_Z1_SCTRS_RD,RW_Z1_NON_CONV_CW,RW_Z1_DATA_SYNC_ERR,RW_Z1_AVG_ITER,RO_Z1_BITS_IN_ERR,RO_Z1_SCTRS_RD,RO_Z1_NON_CONV_CW,RO_Z1_DATA_SYNC_ERR,RO_Z1_AVG_ITER,RW_Z2_BITS_IN_ERR,RW_Z2_SCTRS_RD,RW_Z2_NON_CONV_CW,RW_Z2_DATA_SYNC_ERR,RW_Z2_AVG_ITER,RO_Z2_BITS_IN_ERR,RO_Z2_SCTRS_RD,RO_Z2_NON_CONV_CW,RO_Z2_DATA_SYNC_ERR,RO_Z2_AVG_ITER
//      P334_EXP_BER_AVGS_COL_WIDTH                //          11,        10,        10,               17,            14,               17,                 19,            14,               17,            14,               17,                 19,            14,               17,            14,               17,                 19,            14,               17,            14,               17,                 19,            14
//      P334_EXP_BER_AVGS_COL_MASK                 //           0,         0,         0,                0,             0,                0,                  0,             0,                0,             0,                0,                  0,             0,                0,             0,                0,                  0,             0,                0,             0,                0,                  0,             0
//      P334_EXP_BER_AVGS_COL_TYPES                // *
//      P334_EXP_BER_AVGS_TABLE_TYPE               // S
#define P334_EXP_BER_STDS                     969  // HD_PHYS_PSN,HD_LGC_PSN,TRKS_IN_ZN,RW_Z1_BITS_IN_ERR,RW_Z1_SCTRS_RD,RW_Z1_NON_CONV_CW,RW_Z1_DATA_SYNC_ERR,RW_Z1_AVG_ITER,RO_Z1_BITS_IN_ERR,RO_Z1_SCTRS_RD,RO_Z1_NON_CONV_CW,RO_Z1_DATA_SYNC_ERR,RO_Z1_AVG_ITER,RW_Z2_BITS_IN_ERR,RW_Z2_SCTRS_RD,RW_Z2_NON_CONV_CW,RW_Z2_DATA_SYNC_ERR,RW_Z2_AVG_ITER,RO_Z2_BITS_IN_ERR,RO_Z2_SCTRS_RD,RO_Z2_NON_CONV_CW,RO_Z2_DATA_SYNC_ERR,RO_Z2_AVG_ITER
//      P334_EXP_BER_STDS_COL_WIDTH                //          11,        10,        10,               17,            14,               17,                 19,            14,               17,            14,               17,                 19,            14,               17,            14,               17,                 19,            14,               17,            14,               17,                 19,            14
//      P334_EXP_BER_STDS_COL_MASK                 //           0,         0,         0,                0,             0,                0,                  0,             0,                0,             0,                0,                  0,             0,                0,             0,                0,                  0,             0,                0,             0,                0,                  0,             0
//      P334_EXP_BER_STDS_COL_TYPES                // *
//      P334_EXP_BER_STDS_TABLE_TYPE               // S
#define P334_BER_METRICS                      970  // HD_PHYS_PSN,HD_LGC_PSN,SUB_ZN,NBR_TRKS,BER_METRIC,RAW_MEAN,SPORTED_MEAN,RAW_SIGMA,SPORTED_SIGMA
//      P334_BER_METRICS_COL_WIDTH                 //          11,        10,     6,       8,        10,      12,          12,       12,           13
//      P334_BER_METRICS_COL_MASK                  //           0,         0,     0,       0,         0,       0,           0,        0,            0
//      P334_BER_METRICS_COL_TYPES                 // *
//      P334_BER_METRICS_TABLE_TYPE                // S
#define P334_DWELL_EXP_BER_CHG                971  // HD_PHYS_PSN,HD_LGC_PSN,STEP_ID,BER_RGN,DELTA_AVG_ITER,DELTA_SCTRS_RD,DELTA_DATA_SYNC_ERRS,DELTA_BITS_IN_ERR,DELTA_NON_CONV_CW,START_AVG_ITER,END_AVG_ITER,START_SCTRS_RD,END_SCTRS_RD,START_DATA_SYNC_ERRS,END_DATA_SYNC_ERRS,START_BITS_IN_ERR,END_BITS_IN_ERR,START_NON_CONV_CW,END_NON_CONV_CW
//      P334_DWELL_EXP_BER_CHG_COL_WIDTH           //          11,        10,      7,      7,            14,            14,                  20,               17,               17,            14,          12,            14,          12,                  20,                18,               17,             15,               17,             15
//      P334_DWELL_EXP_BER_CHG_COL_MASK            //           0,         0,      0,      0,             0,             0,                   0,                0,                0,             0,           0,             0,           0,                   0,                 0,                0,              0,                0,              0
//      P334_DWELL_EXP_BER_CHG_COL_TYPES           // *
//      P334_DWELL_EXP_BER_CHG_TABLE_TYPE          // S
#define P085_HEAT_FLYHEIGHT_INFO              972  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,L_TRACK,P_TRACK,HEAT,S_HEAT,FLYHEIGHT,AGC_FH
//      P085_HEAT_FLYHEIGHT_INFO_COL_WIDTH         //          11,        10,   4,      7,      7,   4,     6,        9,     6
//      P085_HEAT_FLYHEIGHT_INFO_COL_MASK          //           0,         0,   0,      0,      0,   0,     0,        0,     0
//      P085_HEAT_FLYHEIGHT_INFO_COL_TYPES         // *
//      P085_HEAT_FLYHEIGHT_INFO_TABLE_TYPE        // S
#define P085_SFAFH_FIT_COEF                   973  // HD_PHYS_PSN,POLY_NAME,HD_LGC_PSN,ZONE,COEF_A,COEF_B,COEF_C,COEF_D,COEF_E
//      P085_SFAFH_FIT_COEF_COL_WIDTH              //          11,        9,        10,   4,     6,     6,     6,     6,     6
//      P085_SFAFH_FIT_COEF_COL_MASK               //           0,        0,         0,   0,     0,     0,     0,     0,     0
//      P085_SFAFH_FIT_COEF_COL_TYPES              // *
//      P085_SFAFH_FIT_COEF_TABLE_TYPE             // S
#define P085_POLY_POINTS                      974  // HD_PHYS_PSN,POLY_NAME,POINT,HD_LGC_PSN,ZONE,NORM_PHYS_TRK,RAW_DATA,FIT_DATA
//      P085_POLY_POINTS_COL_WIDTH                 //          11,       16,    5,        10,   4,           13,       8,       8
//      P085_POLY_POINTS_COL_MASK                  //           0,        0,    0,         0,   0,            0,       0,       0
//      P085_POLY_POINTS_COL_TYPES                 // *
//      P085_POLY_POINTS_TABLE_TYPE                // S
#define P198_STD_MAX_AVG_THRSHLD              975  // HD_PHYS_PSN,HD_LGC_PSN,D_VGA_MAX,D_VGA_STDEV,D_VGA_AVG,R_VGA_MAX,R_VGA_STDEV,R_VGA_AVG,F_VGA_MAX,F_VGA_STDEV,F_VGA_AVG
//      P198_STD_MAX_AVG_THRSHLD_COL_WIDTH         //          11,        10,        9,         11,        9,        9,         11,        9,        9,         11,        9
//      P198_STD_MAX_AVG_THRSHLD_COL_MASK          //           1,         1,        1,          1,        1,        1,          1,        1,        1,          1,        1
//      P198_STD_MAX_AVG_THRSHLD_COL_TYPES         //           N,         N,        N,          N,        N,        N,          N,        N,        N,          N,        N
//      P198_STD_MAX_AVG_THRSHLD_TABLE_TYPE        // S
#define P004_TEST_RESULTS                     976  // NORMAL_RPM,TEMP_RPM,SEC_AT_TEMP_RPM
//      P004_TEST_RESULTS_COL_WIDTH                //         10,       8,             15
//      P004_TEST_RESULTS_COL_MASK                 //          0,       0,              0
//      P004_TEST_RESULTS_COL_TYPES                // *
//      P004_TEST_RESULTS_TABLE_TYPE               // S
#define P163_FULL_REPORT                      977  // HD_PHYS_PSN,TRK_NUM,OLD_NO_TMD,NO_TMD,OLD_SRVO_UNSAFES,SRVO_UNSAFES,OLD_OBSERVER_SECTOR_COUNT,OBSERVER_SECTOR_COUNT,OLD_RETRY_UNSAFES,RETRY_UNSAFES
//      P163_FULL_REPORT_COL_WIDTH                 //          11,      7,        10,     6,              16,          12,                       25,                   21,               17,           13
//      P163_FULL_REPORT_COL_MASK                  //           0,      0,         0,     0,               0,           0,                        0,                    0,                0,            0
//      P163_FULL_REPORT_COL_TYPES                 // *
//      P163_FULL_REPORT_TABLE_TYPE                // S
#define P185_V3BAR_OD_THRESHOLDS2             978  // HD_PHYS_PSN,TARGET_CYL,ACFF_DELTA_MAX,ACFF_DELTA_AVG,V3BAR_SETTLE_COUNTER
//      P185_V3BAR_OD_THRESHOLDS2_COL_WIDTH        //          11,        10,            14,            14,                  20
//      P185_V3BAR_OD_THRESHOLDS2_COL_MASK         //           0,         0,             0,             0,                   0
//      P185_V3BAR_OD_THRESHOLDS2_COL_TYPES        // *
//      P185_V3BAR_OD_THRESHOLDS2_TABLE_TYPE       // S
#define P046_ACFF_HARMONICS2                  979  // HD_PHYS_PSN,HARMONIC,HD_LGC_PSN,GAIN1,GAIN2,SIN_COEFF,COS_COEFF
//      P046_ACFF_HARMONICS2_COL_WIDTH             //          11,       8,        10,    5,    5,        9,        9
//      P046_ACFF_HARMONICS2_COL_MASK              //           0,       0,         0,    0,    0,        0,        0
//      P046_ACFF_HARMONICS2_COL_TYPES             // *
//      P046_ACFF_HARMONICS2_TABLE_TYPE            // S
#define P074_FAFH_DIAG_RESULTS                980  // HTR_DAC,VGAS_REFERENCE,VGAS_REF_STDEV,VGAS_MEASUREMENT,VGAS_MEAS_STDEV,HARM_REF,HARM_REF_STDEV,HARM_MEAS,HARM_MEAS_STDEV,HIRP_MEASUREMENT,AMPLITUDE_RATIO,PRE_MEAS_PREAMP_TEMP,POST_MEAS_PREAMP_TEMP,POST_MEAS_CHAN_TEMP,POST_MEAS_DIODE_TEMP,TIME_STAMP
//      P074_FAFH_DIAG_RESULTS_COL_WIDTH           //       7,            14,            14,              16,             15,       8,            14,        9,             15,              16,             15,                  20,                   21,                 19,                  20,        10
//      P074_FAFH_DIAG_RESULTS_COL_MASK            //       0,             0,             0,               0,              0,       0,             0,        0,              0,               0,              0,                   0,                    0,                  0,                   0,         0
//      P074_FAFH_DIAG_RESULTS_COL_TYPES           // *
//      P074_FAFH_DIAG_RESULTS_TABLE_TYPE          // S
#define P025_LOAD_UNLOAD_PARAMS2              981  // CYCLE_NUM,LVAA_TMERR,LVAA_ADJ
//      P025_LOAD_UNLOAD_PARAMS2_COL_WIDTH         //         9,        10,       8
//      P025_LOAD_UNLOAD_PARAMS2_COL_MASK          //         0,         0,       0
//      P025_LOAD_UNLOAD_PARAMS2_COL_TYPES         // *
//      P025_LOAD_UNLOAD_PARAMS2_TABLE_TYPE        // S
#define P025_LOAD_STAT2                       982  // STAT_NAME,LVAA_TMERR,LVAA_ADJ
//      P025_LOAD_STAT2_COL_WIDTH                  //         9,        10,       8
//      P025_LOAD_STAT2_COL_MASK                   //         0,         0,       0
//      P025_LOAD_STAT2_COL_TYPES                  // *
//      P025_LOAD_STAT2_TABLE_TYPE                 // V
#define P215_TA_DETCR_PAD_DETAIL              983  // DFCT_NUM,HD_PHYS_PSN,HD_LGC_PSN,TA_START_TRK,TA_END_TRK,TRK_UJOG,DETCR_UJOG,PAD_START,PAD_END,TA_SEVERITY
//      P215_TA_DETCR_PAD_DETAIL_COL_WIDTH         //        8,         11,        10,          12,        10,       8,        10,        9,      7,         11
//      P215_TA_DETCR_PAD_DETAIL_COL_MASK          //        0,          0,         0,           0,         0,       0,         0,        0,      0,          0
//      P215_TA_DETCR_PAD_DETAIL_COL_TYPES         // *
//      P215_TA_DETCR_PAD_DETAIL_TABLE_TYPE        // V
#define P134_TA_DETCR_TRIPAD                  984  // TA_GROUP_NUM,HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,TA_PSN_SFI,TA_LEN_SYMBLS,TA_WIDTH_TRKS,TA_SEVERITY,DATA_WEDGE,TA_DETECT_CLR
//      P134_TA_DETCR_TRIPAD_COL_WIDTH             //           12,         11,        10,      7,        10,           13,           13,         11,        10,           13
//      P134_TA_DETCR_TRIPAD_COL_MASK              //            1,          1,         1,      1,         1,            1,            1,          1,         1,            1
//      P134_TA_DETCR_TRIPAD_COL_TYPES             //            N,          N,         N,      N,         N,            N,            N,          N,         N,            N
//      P134_TA_DETCR_TRIPAD_TABLE_TYPE            // V
#define P211_HMS_MEASUREMENT2                 985  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,PRE_HEAT,WRT_HEAT,RD_HEAT,HMS_ADJ,DELTA_SER,BASE_SER,MEAS_SER,DELTA_SER2,BASE_SER2,MEAS_SER2
//      P211_HMS_MEASUREMENT2_COL_WIDTH            //          11,        9,        10,      7,       8,       8,      7,      7,        9,       8,       8,        10,        9,        9
//      P211_HMS_MEASUREMENT2_COL_MASK             //           0,        0,         0,      0,       0,       0,      0,      0,        0,       0,       0,         0,        0,        0
//      P211_HMS_MEASUREMENT2_COL_TYPES            // *
//      P211_HMS_MEASUREMENT2_TABLE_TYPE           // S
#define P251_ERR_RATE_BUCKET2                 986  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,TEST_ITERATION,RGSTR_ID,TEST_ORDER,OPTI_VAL,ERROR_RATE10,TOTAL_ERR_CNT,TLEVEL,SYNC_ERR_CNT,ECC_ERR_CNT,NUM_REVS,TOTAL_SCTR_RD,VGAR,NLFR,TAP1,TAP2,TAP3,TAP4,TAP5,TAP6,TAP7,TAP8,TAP9,TAPX
//      P251_ERR_RATE_BUCKET2_COL_WIDTH            //          11,        10,        9,      7,            14,       8,        10,       8,          12,           13,     6,          12,         11,       8,           13,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4
//      P251_ERR_RATE_BUCKET2_COL_MASK             //           1,         1,        1,      1,             1,       1,         1,       1,           1,            1,     1,           1,          1,       1,            1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1
//      P251_ERR_RATE_BUCKET2_COL_TYPES            //           N,         N,        N,      N,             N,       V,         N,       N,           N,            N,     N,           N,          N,       N,            N,   N,   N,   N,   N,   N,   N,   N,   N,   N,   N,   N,   N
//      P251_ERR_RATE_BUCKET2_TABLE_TYPE           // S
#define P229_TRK_CIRCUM_ERR_RATE              987  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,TRK_BER,TRK_BER_WRT_2_WRT_STDEV,BIN_BER_STDEV,BIN_BER_RANGE,BEST_BIN_BER,WORST_BIN_BER,WORST_BIN,BIN_BER_WRT_2_WRT_STDEV,T_LEVEL,TRK_SFR,SCTRS_PER_BIN,REPEAT_SFR
//      P229_TRK_CIRCUM_ERR_RATE_COL_WIDTH         //          11,        10,        9,      7,      7,                     23,           13,           13,          12,           13,        9,                     23,      7,      7,           13,        10
//      P229_TRK_CIRCUM_ERR_RATE_COL_MASK          //           1,         1,        1,      1,      1,                      1,            1,            1,           1,            1,        1,                      1,      1,      1,            1,         0
//      P229_TRK_CIRCUM_ERR_RATE_COL_TYPES         //           N,         N,        N,      N,      N,                      N,            N,            N,           N,            N,        N,                      N,      N,      N,            N
//      P229_TRK_CIRCUM_ERR_RATE_TABLE_TYPE        // S
#define P255_PRECOMP_VGA_MARVELL              988  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,PRCVAL0,PRCVAL1,PRCVAL2,PRCVAL3,PRCVAL4,PRCVAL5,PRCVAL6,PRCVAL7,BST,ABST,CTFRNGE,CTFR,ASYM,AGC,ASC_ATTEN
//      P255_PRECOMP_VGA_MARVELL_COL_WIDTH         //          10,        11,   4,      7,      7,      7,      7,      7,      7,      7,      7,  3,   4,      7,   4,   4,  3,        9
//      P255_PRECOMP_VGA_MARVELL_COL_MASK          //           1,         1,   1,      1,      1,      1,      1,      1,      1,      1,      1,  1,   1,      1,   1,   1,  1,        1
//      P255_PRECOMP_VGA_MARVELL_COL_TYPES         //           N,         N,   N,      N,      N,      N,      N,      N,      N,      N,      N,  N,   N,      N,   N,   N,  N,        N
//      P255_PRECOMP_VGA_MARVELL_TABLE_TYPE        // S
#define P255_FIR_MARVELL                      989  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,TAP0,TAP1,TAP2,TAP3,TAP4,TAP5,TAP6,TAP7,TAP8,TAP9
//      P255_FIR_MARVELL_COL_WIDTH                 //          10,        11,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4
//      P255_FIR_MARVELL_COL_MASK                  //           1,         1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1
//      P255_FIR_MARVELL_COL_TYPES                 //           N,         N,   N,   N,   N,   N,   N,   N,   N,   N,   N,   N,   N
//      P255_FIR_MARVELL_TABLE_TYPE                // S
#define P255_NLD_EST_MARVELL                  990  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,NLD_STATE,NLD_MEAN0,NLD_MEAN1,NLD_VAR,NLD_F1,NLD_F2,NLD_F3
//      P255_NLD_EST_MARVELL_COL_WIDTH             //          10,        11,   4,        9,        9,        9,      7,     6,     6,     6
//      P255_NLD_EST_MARVELL_COL_MASK              //           1,         1,   1,        1,        1,        1,      1,     1,     1,     1
//      P255_NLD_EST_MARVELL_COL_TYPES             //           N,         N,   N,        N,        N,        N,      N,     N,     N,     N
//      P255_NLD_EST_MARVELL_TABLE_TYPE            // S
#define P251_MARGIN_RESULTS                   991  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,LGC_CYL,ITER_LD_CNT,CLEARANCE_PCT,SQUEEZE_PCT,BITS_IN_ERR,BIE_SIGMA,ITER_CNT,BIE_BER,TARGET_BER,BER_TOLERANCE,PREHEAT,WRTHEAT,RDHEAT,METADATA1,METADATA2,METADATA3
//      P251_MARGIN_RESULTS_COL_WIDTH              //          11,        9,        10,      7,         11,           13,         11,         11,        9,       8,      7,        10,           13,      7,      7,     6,        9,        9,        9
//      P251_MARGIN_RESULTS_COL_MASK               //           0,        0,         0,      0,          0,            0,          0,          0,        0,       0,      0,         0,            0,      0,      0,     0,        0,        0,        0
//      P251_MARGIN_RESULTS_COL_TYPES              // *
//      P251_MARGIN_RESULTS_TABLE_TYPE             // S
#define P287_PHYS_SPACING_HSTGRM              992  // HD_PHYS_PSN,HD_LGC_PSN,BIN_START,BIN_END,ALL_ZONES,SRVO_ZONE_0,SRVO_ZONE_1,SRVO_ZONE_2,SRVO_ZONE_3,SRVO_ZONE_4,SRVO_ZONE_5,SRVO_ZONE_6,SRVO_ZONE_7
//      P287_PHYS_SPACING_HSTGRM_COL_WIDTH         //          11,        10,        9,      9,        9,         11,         11,         11,         11,         11,         11,         11,         11
//      P287_PHYS_SPACING_HSTGRM_COL_MASK          //           1,         1,        1,      1,        1,          1,          1,          1,          1,          1,          1,          1,          1
//      P287_PHYS_SPACING_HSTGRM_COL_TYPES         //           N,         N,        N,      N,        N,          N,          N,          N,          N,          N,          N,          N,          N
//      P287_PHYS_SPACING_HSTGRM_TABLE_TYPE        // S
#define P287_EXTREME_LOCATIONS                993  // HD_PHYS_PSN,HD_LGC_PSN,MIN_SQZ_CYL,MIN_SQZ,MABS_JOG_ERR_CYL,MABS_JOG_ERR,MIN_DC_ERR_CYL,MIN_DC_ERR,MAX_DC_ERR_CYL,MAX_DC_ERR,MAX_ZEST_DIFF
//      P287_EXTREME_LOCATIONS_COL_WIDTH           //          11,        10,         11,      7,              16,          12,            14,        10,            14,        10,           10
//      P287_EXTREME_LOCATIONS_COL_MASK            //           1,         1,          1,      1,               1,           1,             1,         1,             1,         1,            1
//      P287_EXTREME_LOCATIONS_COL_TYPES           //           N,         N,          N,      N,               N,           N,             N,         N,             N,         N,            N
//      P287_EXTREME_LOCATIONS_TABLE_TYPE          // S
#define P211_HMS_CAP_SINGLE2                  994  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,HMS_CAP_SINGLE_PT,HMS_CAP1,HMS_CAP2,BASELINE_SER
//      P211_HMS_CAP_SINGLE2_COL_WIDTH             //          11,        9,        10,      7,               17,       8,       8,          12
//      P211_HMS_CAP_SINGLE2_COL_MASK              //           0,        0,         0,      0,                0,       0,       0,           0
//      P211_HMS_CAP_SINGLE2_COL_TYPES             // *
//      P211_HMS_CAP_SINGLE2_TABLE_TYPE            // S
#define P180_RSNC_SUMMARY                     995  // HD_PHYS_PSN,HD_LGC_PSN,MAX_FFT_RRO_AMP,MAX_RRO_FREQ,MAX_RRO_TRK_NUM,MAX_RRO_ZONE,MAX_FFT_NRRO_AMP,MAX_NRRO_FREQ,MAX_NRRO_TRK_NUM,MAX_NRRO_ZONE
//      P180_RSNC_SUMMARY_COL_WIDTH                //          11,        10,             15,          12,             15,          12,              16,           13,              16,           13
//      P180_RSNC_SUMMARY_COL_MASK                 //           1,         1,              1,           1,              1,           1,               1,            1,               1,            1
//      P180_RSNC_SUMMARY_COL_TYPES                //           N,         N,              N,           N,              N,           V,               N,            N,               N,            V
//      P180_RSNC_SUMMARY_TABLE_TYPE               // S
#define P251_BEST_ERR_REGRESS                 996  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,CHAN_FEATURE_ID,INDEX,HD_LGC_PSN,FEATURE_OPTI_VAL,ERROR_RATE,TOTAL_ERR,PREV_FEATURE_OPTI_VAL,FEATURE_AUX_VAL,TOT_SCTR_RD,TOTAL_BITS_READ,SMPLE_PK,5PTMA_PK,QUADR_PK,PSMLR_PK,QSMLR_PK,MESTIMATE,PICKMETA1
//      P251_BEST_ERR_REGRESS_COL_WIDTH            //          11,        9,      7,             15,    5,        10,              16,        10,        9,                   21,             15,         11,             15,       8,       8,       8,       8,       8,        9,        9
//      P251_BEST_ERR_REGRESS_COL_MASK             //           0,        0,      0,              0,    0,         0,               0,         0,        0,                    0,              0,          0,              0,       0,       0,       0,       0,       0,        0,        0
//      P251_BEST_ERR_REGRESS_COL_TYPES            // *
//      P251_BEST_ERR_REGRESS_TABLE_TYPE           // S
#define P135_CONTACT_AFH_RAP                  997  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,CONTACT_TEMP,MIX_RATIO_RAP,MIX_RATIO_FLOAT,RAW_HUMIDITY,CALC_HUMIDITY,PRESSURE,TEMPERATURE_SERVO,RAW_HUMIDITY_PCT_SERVO,PRESSURE_SERVO,DEBUG_PRESSURE_SERVO,REGISTER_18_SERVO
//      P135_CONTACT_AFH_RAP_COL_WIDTH             //          11,        10,        9,      7,          12,           13,             15,          12,           13,       8,               17,                    22,            14,                  20,               17
//      P135_CONTACT_AFH_RAP_COL_MASK              //           0,         0,        0,      0,           0,            0,              0,           0,            0,       0,                0,                     0,             0,                   0,                0
//      P135_CONTACT_AFH_RAP_COL_TYPES             // *
//      P135_CONTACT_AFH_RAP_TABLE_TYPE            // S
#define P088_CLR_VS_WRT_BER_MRGN              998  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,TEST_MODE,CLEARANCE_OFST,NOM_CLR_BER,DELTA_CLR_BER,DELTA_THRESHOLD_BER,MAX_THRESHOLD_BER
//      P088_CLR_VS_WRT_BER_MRGN_COL_WIDTH         //          11,        9,        10,      7,        9,            14,         11,           13,                 19,               17
//      P088_CLR_VS_WRT_BER_MRGN_COL_MASK          //           1,        1,         1,      1,        1,             1,          1,            1,                  1,                1
//      P088_CLR_VS_WRT_BER_MRGN_COL_TYPES         //           N,        N,         N,      N,        V,             N,          N,            N,                  N,                N
//      P088_CLR_VS_WRT_BER_MRGN_TABLE_TYPE        // S
#define P136_BEARING_TEST                     999  // MAX_DELTA
//      P136_BEARING_TEST_COL_WIDTH                //         9
//      P136_BEARING_TEST_COL_MASK                 //         0
//      P136_BEARING_TEST_COL_TYPES                // *
//      P136_BEARING_TEST_TABLE_TYPE               // S
#define P136_BEARING_FIT_DATA                1000  // TBL_NDX,BIAS_TBL,FIT_DATA,BIAS_FIT_DELTA
//      P136_BEARING_FIT_DATA_COL_WIDTH            //       7,       8,       8,            14
//      P136_BEARING_FIT_DATA_COL_MASK             //       0,       0,       0,             0
//      P136_BEARING_FIT_DATA_COL_TYPES            // *
//      P136_BEARING_FIT_DATA_TABLE_TYPE           // S
#define P185_OST_SUMMARY                     1001  // HD_PHYS_PSN,HD_LGC_PSN,HD_VALID,ORIG_OST,NEW_OST,MEAS_MAX_CYL,NOM_MAX_CYL,TPI_RATIO
//      P185_OST_SUMMARY_COL_WIDTH                 //          11,        10,       8,       8,      7,          12,         11,        9
//      P185_OST_SUMMARY_COL_MASK                  //           0,         0,       0,       0,      0,           0,          0,        0
//      P185_OST_SUMMARY_COL_TYPES                 // *
//      P185_OST_SUMMARY_TABLE_TYPE                // S
#define P036_RV_MEAN_MAX                     1002  // RV_ABS_MEAN,RV_ABS_MAX
//      P036_RV_MEAN_MAX_COL_WIDTH                 //          11,        10
//      P036_RV_MEAN_MAX_COL_MASK                  //           1,         1
//      P036_RV_MEAN_MAX_COL_TYPES                 //           N,         N
//      P036_RV_MEAN_MAX_TABLE_TYPE                // S
#define P103_WIJITA_WEDGE_DATA               1003  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,WEDGE,VGA_AVE,VGA_STD,VGA_RANGE
//      P103_WIJITA_WEDGE_DATA_COL_WIDTH           //          11,        10,      7,    5,      7,      7,        9
//      P103_WIJITA_WEDGE_DATA_COL_MASK            //           0,         0,      0,    0,      0,      0,        0
//      P103_WIJITA_WEDGE_DATA_COL_TYPES           // *
//      P103_WIJITA_WEDGE_DATA_TABLE_TYPE          // S
#define P095_WIRP_DATA                       1004  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,TEST_ITERATION,WRT_CUR_DAC,WRT_CUR_OVS_DAC,WRT_CUR_OVS_DUR,HTR_DAC,HSC_1,HSC_2,DELTA_FLY_HGT,DELTA_FLY_HGT_FITTED,TRK_DELTA_DAC,HD_DELTA_DAC,GLOBAL_DELTA_DAC,OUTLIER_FLG,COV_PCT
//      P095_WIRP_DATA_COL_WIDTH                   //          11,        10,        9,      8,            14,         11,             15,             15,      7,   10,   10,           13,                  20,           13,          12,              16,         11,      7
//      P095_WIRP_DATA_COL_MASK                    //           1,         1,        1,      1,             1,          1,              1,              1,      1,    1,    1,            1,                   1,            1,           1,               1,          1,      1
//      P095_WIRP_DATA_COL_TYPES                   //           N,         N,        N,      N,             N,          N,              N,              N,      N,    N,    N,            N,                   N,            N,           N,               N,          N,      N
//      P095_WIRP_DATA_TABLE_TYPE                  // S
#define P095_TRACK_FIT_RESULTS               1005  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,FREQUENCY,HIRP_LIN_COEF,HIRP_SQR_COEF,HTR_DAC_CONTACT,HTR_DAC,GAMMA,STATUS_FLG,RMSE,R_SQR,TRACK_FIT_COEF_1,TRACK_FIT_COEF_2,TRACK_FIT_COEF_3,TRACK_FIT_COEF_4,TRACK_FIT_COEF_5,TRACK_FIT_COEF_6,TRACK_FIT_COEF_7,TRACK_FIT_COEF_8,TRACK_FIT_COEF_9,TRACK_FIT_COEF_10,COV_MEAN,COV_OUTLIERS,TRACK_OUTLIERS,FINAL_FLG,EXPLAIN_STATUS
//      P095_TRACK_FIT_RESULTS_COL_WIDTH           //          11,        10,        9,      8,        9,           13,           13,             15,      7,    5,        10,   8,    8,              16,              16,              16,              16,              16,              16,              16,              16,              16,               17,       8,          12,            14,        9,            32
//      P095_TRACK_FIT_RESULTS_COL_MASK            //           1,         1,        1,      1,        1,            1,            1,              1,      1,    1,         1,   1,    1,               1,               1,               1,               1,               1,               1,               1,               1,               1,                1,       1,           1,             1,        1,             1
//      P095_TRACK_FIT_RESULTS_COL_TYPES           //           N,         N,        N,      N,        N,            N,            N,              N,      N,    N,         V,   N,    N,               N,               N,               N,               N,               N,               N,               N,               N,               N,                N,       N,           N,             N,        N,             V
//      P095_TRACK_FIT_RESULTS_TABLE_TYPE          // S
#define P095_HEAD_FIT_RESULTS                1006  // HD_PHYS_PSN,HD_LGC_PSN,STATUS_FLG,RMSE,R_SQR,RMSD,WIRP_COEF_1,WIRP_COEF_2,WIRP_COEF_3,WIRP_COEF_4,WIRP_COEF_5,WIRP_COEF_6,WIRP_COEF_7,WIRP_COEF_8,WIRP_COEF_9,WIRP_COEF_10,WIRP_COEF_11,WIRP_COEF_12,WIRP_COEF_13,WIRP_COEF_14,WIRP_COEF_15,WIRP_COEF_16,WIRP_COEF_17,WIRP_COEF_18,WIRP_COEF_19,WIRP_COEF_20,WIRP_COEF_21,EXPLAIN_STATUS
//      P095_HEAD_FIT_RESULTS_COL_WIDTH            //          11,        10,        10,   8,    8,   8,         12,         12,         12,         12,         12,         12,         12,         12,         12,          12,          12,          12,          12,          12,          12,          12,          12,          12,          12,          12,          12,            36
//      P095_HEAD_FIT_RESULTS_COL_MASK             //           1,         1,         1,   1,    1,   1,          1,          1,          1,          1,          1,          1,          1,          1,          1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,           1,             1
//      P095_HEAD_FIT_RESULTS_COL_TYPES            //           N,         N,         V,   N,    N,   N,          N,          N,          N,          N,          N,          N,          N,          N,          N,           N,           N,           N,           N,           N,           N,           N,           N,           N,           N,           N,           N,             V
//      P095_HEAD_FIT_RESULTS_TABLE_TYPE           // S
#define P185_V3BAR_OD_DATA                   1007  // HD_PHYS_PSN,TARGET_CYL,ACFF_2F,ACFF_3F,ACFF_4F,ACFF_5F,NUM_FREQ_EXC,BREAK_CNT
//      P185_V3BAR_OD_DATA_COL_WIDTH               //          11,        10,      7,      7,      7,      7,          12,        9
//      P185_V3BAR_OD_DATA_COL_MASK                //           0,         0,      0,      0,      0,      0,           0,        0
//      P185_V3BAR_OD_DATA_COL_TYPES               // *
//      P185_V3BAR_OD_DATA_TABLE_TYPE              // S
#define P185_V3BAR_OD_THRESHOLDS3            1008  // HD_PHYS_PSN,HI_2F_THRESH,LO_2F_THRESH,HI_3F_THRESH,LO_3F_THRESH,HI_4F_THRESH,LO_4F_THRESH,HI_5F_THRESH,LO_5F_THRESH
//      P185_V3BAR_OD_THRESHOLDS3_COL_WIDTH        //          11,          12,          12,          12,          12,          12,          12,          12,          12
//      P185_V3BAR_OD_THRESHOLDS3_COL_MASK         //           0,           0,           0,           0,           0,           0,           0,           0,           0
//      P185_V3BAR_OD_THRESHOLDS3_COL_TYPES        // *
//      P185_V3BAR_OD_THRESHOLDS3_TABLE_TYPE       // S
#define P211_HMS_CAP_AVG2                    1009  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NUM_TRKS_TESTED,HMS_CAP_AVG,ZERO_HEAT_CLR,CAP_SLOPE,CAP_PENALTY
//      P211_HMS_CAP_AVG2_COL_WIDTH                //          11,        9,        10,             15,         11,           13,        9,         11
//      P211_HMS_CAP_AVG2_COL_MASK                 //           0,        0,         0,              0,          0,            0,        0,          0
//      P211_HMS_CAP_AVG2_COL_TYPES                // *
//      P211_HMS_CAP_AVG2_TABLE_TYPE               // S
#define P240_SECTOR_GROUP                    1010  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,T_LEVEL,DEGAUSS,SCT0_BER,SCT0_SER,SCT0_BITS_READ,SCT1_BER,SCT1_SER,SCT1_BITS_READ,SCT2_BER,SCT2_SER,SCT2_BITS_READ,SCT3_BER,SCT3_SER,SCT3_BITS_READ
//      P240_SECTOR_GROUP_COL_WIDTH                //          11,        10,      7,      7,      7,       8,       8,            14,       8,       8,            14,       8,       8,            14,       8,       8,            14
//      P240_SECTOR_GROUP_COL_MASK                 //           0,         0,      0,      0,      0,       0,       0,             0,       0,       0,             0,       0,       0,             0,       0,       0,             0
//      P240_SECTOR_GROUP_COL_TYPES                // *
//      P240_SECTOR_GROUP_TABLE_TYPE               // S
#define P109_TO_SUM_HD_ZONE                  1011  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,SERVO_ERRS,VFYD_ERRS,UNVFYD_ERRS
//      P109_TO_SUM_HD_ZONE_COL_WIDTH              //          11,        10,        9,        10,        9,         11
//      P109_TO_SUM_HD_ZONE_COL_MASK               //           1,         1,        1,         1,        1,          1
//      P109_TO_SUM_HD_ZONE_COL_TYPES              //           N,         N,        N,         N,        N,          N
//      P109_TO_SUM_HD_ZONE_TABLE_TYPE             // S
#define P211_RD_OFST_AVG                     1012  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NUM_TRKS_TESTED,RD_OFST_AVG,RD_OFST_MIN,RD_OFST_MAX
//      P211_RD_OFST_AVG_COL_WIDTH                 //          11,        9,        10,             15,         11,         11,         11
//      P211_RD_OFST_AVG_COL_MASK                  //           0,        0,         0,              0,          0,          0,          0
//      P211_RD_OFST_AVG_COL_TYPES                 // *
//      P211_RD_OFST_AVG_TABLE_TYPE                // S
#define P255_NPML_BIAS_LSI_XTAPS             1013  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,BIAS0,BIAS1,BIAS2,BIAS3,BIAS4,BIAS5,BIAS6,BIAS7,BIAS8,BIAS9,BIASA,BIASB,BIASC,BIASD,BIASE,BIASF,BIAS10,BIAS11,BIAS12,BIAS13,BIAS14,BIAS15,BIAS16,BIAS17,BIAS18,BIAS19,BIAS1A,BIAS1B,BIAS1C,BIAS1D,BIAS1E,BIAS1F
//      P255_NPML_BIAS_LSI_XTAPS_COL_WIDTH         //          10,        11,   4,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,     5
//      P255_NPML_BIAS_LSI_XTAPS_COL_MASK          //           0,         0,   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0
//      P255_NPML_BIAS_LSI_XTAPS_COL_TYPES         // *
//      P255_NPML_BIAS_LSI_XTAPS_TABLE_TYPE        // S
#define P255_NPML_BIAS_LSI_TAPS              1014  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,BIAS0,BIAS1,BIAS2,BIAS3,BIAS4,BIAS5,BIAS6,BIAS7,BIAS8,BIAS9,BIASA,BIASB,BIASC,BIASD,BIASE,BIASF,BIAS10,BIAS11,BIAS12,BIAS13,BIAS14,BIAS15,BIAS16,BIAS17,BIAS18,BIAS19,BIAS1A,BIAS1B,BIAS1C,BIAS1D,BIAS1E,BIAS1F
//      P255_NPML_BIAS_LSI_TAPS_COL_WIDTH          //          11,        10,   4,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6
//      P255_NPML_BIAS_LSI_TAPS_COL_MASK           //           1,         1,   1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1
//      P255_NPML_BIAS_LSI_TAPS_COL_TYPES          //           N,         N,   N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N
//      P255_NPML_BIAS_LSI_TAPS_TABLE_TYPE         // S
#define P282_SENSITIVITY_MARGIN              1015  // HD_PHYS_PSN,FREQUENCY,FREQ_ZONE,HD_LGC_PSN,SENSITIVITY,LIMIT,STATUS
//      P282_SENSITIVITY_MARGIN_COL_WIDTH          //          11,        9,        9,        10,         11,    7,     6
//      P282_SENSITIVITY_MARGIN_COL_MASK           //           0,        0,        0,         0,          0,    0,     0
//      P282_SENSITIVITY_MARGIN_COL_TYPES          // *
//      P282_SENSITIVITY_MARGIN_TABLE_TYPE         // S
#define P172_AFH_TC_COEF_3                   1016  // HD_PHYS_PSN,HD_LGC_PSN,TCS_REGION,THERMAL_CLR_COEF1,THERMAL_CLR_COEF2,ADD_TCS_COLD_DTC,ADD_TCS_HOT_DTC,COLD_TEMP_DTC,HOT_TEMP_DTH
//      P172_AFH_TC_COEF_3_COL_WIDTH               //          11,        10,        10,               17,               17,              16,             15,           13,          12
//      P172_AFH_TC_COEF_3_COL_MASK                //           0,         0,         0,                0,                0,               0,              0,            0,           0
//      P172_AFH_TC_COEF_3_COL_TYPES               // *
//      P172_AFH_TC_COEF_3_TABLE_TYPE              // V
#define P172_AFH_DH_TC_COEF_2                1017  // HD_PHYS_PSN,HD_LGC_PSN,TCS_REGION,ACTIVE_HEATER,THERMAL_CLR_COEF1,THERMAL_CLR_COEF2,ADD_TCS_COLD_DTC,ADD_TCS_HOT_DTH,COLD_TEMP_DTC,HOT_TEMP_DTH
//      P172_AFH_DH_TC_COEF_2_COL_WIDTH            //          11,        10,        10,           13,               17,               17,              16,             15,           13,          12
//      P172_AFH_DH_TC_COEF_2_COL_MASK             //           0,         0,         0,            0,                0,                0,               0,              0,            0,           0
//      P172_AFH_DH_TC_COEF_2_COL_TYPES            // *
//      P172_AFH_DH_TC_COEF_2_TABLE_TYPE           // V
#define P282_SENSITIVITY_ONLY                1018  // HD_PHYS_PSN,FREQUENCY,HD_LGC_PSN,SENSITIVITY
//      P282_SENSITIVITY_ONLY_COL_WIDTH            //          11,        9,        10,         11
//      P282_SENSITIVITY_ONLY_COL_MASK             //           0,        0,         0,          0
//      P282_SENSITIVITY_ONLY_COL_TYPES            // *
//      P282_SENSITIVITY_ONLY_TABLE_TYPE           // S
#define P135_AGC_BASELINE_JUMP               1019  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,HTR_SEARCH_METHOD,HTR_DAC,MAX_JUMP,MAX_JUMP_STDEV,PREAMP_GAIN,ATTC,ATT2S,ACTIVE_HEATER,INACTIVE_HEATER_DAC,JUMP_CNT,JUMP_MEAN,RELATIVE_DAC
//      P135_AGC_BASELINE_JUMP_COL_WIDTH           //          11,        10,        9,      7,               17,      7,       8,            14,         11,   4,    5,           13,                 19,       8,        9,          12
//      P135_AGC_BASELINE_JUMP_COL_MASK            //           1,         1,        1,      1,                1,      1,       1,             1,          1,   1,    1,            1,                  1,       1,        1,           1
//      P135_AGC_BASELINE_JUMP_COL_TYPES           //           N,         N,        N,      N,                V,      N,       N,             N,          N,   N,    N,            V,                  N,       N,        N,           N
//      P135_AGC_BASELINE_JUMP_TABLE_TYPE          // S
#define P186_DETCR_RES                       1020  // HD_PHYS_PSN,TEST_MODE,HD_LGC_PSN,BIAS_CURRENT,BIAS_VOLTAGE,DETCR_RESISTANCE
//      P186_DETCR_RES_COL_WIDTH                   //          11,        9,        10,          12,          12,              16
//      P186_DETCR_RES_COL_MASK                    //           1,        1,         1,           1,           1,               1
//      P186_DETCR_RES_COL_TYPES                   //           N,        V,         N,           N,           N,               N
//      P186_DETCR_RES_TABLE_TYPE                  // S
#define P227_SWD_DH_ADJUSTMENT               1021  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,DIODE_TEMP,PRE_WRT_CLR_ADJ,WRT_CLR_ADJ,RD_CLR_ADJ,WRT_CLR_ADJ_PCT,RD_CLR_ADJ_PCT
//      P227_SWD_DH_ADJUSTMENT_COL_WIDTH           //          11,        9,        10,        10,             15,         11,        10,             15,            14
//      P227_SWD_DH_ADJUSTMENT_COL_MASK            //           0,        0,         0,         0,              0,          0,         0,              0,             0
//      P227_SWD_DH_ADJUSTMENT_COL_TYPES           // *
//      P227_SWD_DH_ADJUSTMENT_TABLE_TYPE          // M
#define P074_FAFH_CAL                        1022  // HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,DIAMETER,ACTIVE_HEATER,MODE,HTR_DAC,FUND_HI_FREQ,GAIN_LOOP,ATTC,ATTC_RD,ATT2R,VGAR,PREAMP_GAIN,CHAN_GAIN,LF_STDEV_REF,LF_STDEV_ACT,HF_STDEV_REF,HF_STDEV_ACT,HIRP_STDEV,AR_STDEV,GAIN_PICK,HD_PHYS_PSN
//      P074_FAFH_CAL_COL_WIDTH                    //         10,         11,         11,       8,           13,   4,      7,          12,        9,   4,      7,    5,   4,         11,        9,          12,          12,          12,          12,        10,       8,        9,         11
//      P074_FAFH_CAL_COL_MASK                     //          0,          0,          0,       0,            0,   0,      0,           0,        0,   0,      0,    0,   0,          0,        0,           0,           0,           0,           0,         0,       0,        0,          0
//      P074_FAFH_CAL_COL_TYPES                    // *
//      P074_FAFH_CAL_TABLE_TYPE                   // S
#define P074_TA_DETECT                       1023  // HD_LGC_PSN,LGC_TRK_NUM,STATUS,HD_PHYS_PSN
//      P074_TA_DETECT_COL_WIDTH                   //         10,         11,     6,         11
//      P074_TA_DETECT_COL_MASK                    //          0,          0,     0,          0
//      P074_TA_DETECT_COL_TYPES                   // *
//      P074_TA_DETECT_TABLE_TYPE                  // S
#define P074_MEASUREMENT                     1024  // HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,DIAMETER,HI_FREQ,ACTIVE_HEATER,POINT_NUM,HTR_DAC,NORM_LF_REF,NORM_LF_REF_STDEV,NORM_LF_ACT,NORM_LF_ACT_STDEV,NORM_HF_REF,NORM_HF_REF_STDEV,NORM_HF_ACT,NORM_HF_ACT_STDEV,ATTC,ATTC_RD,ATT2R,VGAR,PREAMP_GAIN,MSRD_HIRP,AMPL_RATIO,CTFFR,ZFR_BOOTST,DIODE_TEMP,PRE_PREAMP_TEMP,POST_PREAMP_TEMP,CHAN_TEMP,CMD_DUR_MSEC,HD_PHYS_PSN
//      P074_MEASUREMENT_COL_WIDTH                 //         10,         11,         11,       8,     12,           13,        9,      7,         11,               17,         11,               17,         11,               17,         11,               17,   4,      7,    5,   4,         11,        9,        10,    5,        10,        10,             15,              16,        9,          12,         11
//      P074_MEASUREMENT_COL_MASK                  //          0,          0,          0,       0,      0,            0,        0,      0,          0,                0,          0,                0,          0,                0,          0,                0,   0,      0,    0,   0,          0,        0,         0,    0,         0,         0,              0,               0,        0,           0,          0
//      P074_MEASUREMENT_COL_TYPES                 // *
//      P074_MEASUREMENT_TABLE_TYPE                // S
#define P074_TEST_TRACK_DATA                 1025  // HD_LGC_PSN,SCALED_NOM_TRK,DIAMETER,TEMPERATURE_IDX,GAMMA_H,CONTACT_DAC,PASSIVE_WRT_CLRNC,BETA_VALUE,COEF_ORDER,COEF_VALUE,HD_PHYS_PSN
//      P074_TEST_TRACK_DATA_COL_WIDTH             //         10,            14,       8,             15,      7,         11,               17,        10,        10,        10,         11
//      P074_TEST_TRACK_DATA_COL_MASK              //          0,             0,       0,              0,      0,          0,                0,         0,         0,         0,          0
//      P074_TEST_TRACK_DATA_COL_TYPES             // *
//      P074_TEST_TRACK_DATA_TABLE_TYPE            // S
#define P135_DH_CONTACT_AFH_RAP              1026  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,ACTIVE_HEATER,CONTACT_TEMP,MIX_RATIO_RAP,MIX_RATIO_FLOAT,RAW_HUMIDITY,CALC_HUMIDITY,PRESSURE,TEMPERATURE_SERVO,RAW_HUMIDITY_PCT_SERVO,PRESSURE_SERVO,DEBUG_PRESSURE_SERVO,REGISTER_18_SERVO
//      P135_DH_CONTACT_AFH_RAP_COL_WIDTH          //          11,        10,        9,      7,           13,          12,           13,             15,          12,           13,       8,               17,                    22,            14,                  20,               17
//      P135_DH_CONTACT_AFH_RAP_COL_MASK           //           1,         1,        1,      1,            1,           1,            1,              1,           1,            1,       1,                1,                     1,             1,                   1,                1
//      P135_DH_CONTACT_AFH_RAP_COL_TYPES          //           N,         N,        N,      N,            V,           N,            N,              N,           N,            N,       N,                N,                     N,             N,                   N,                N
//      P135_DH_CONTACT_AFH_RAP_TABLE_TYPE         // S
#define P056_U_ACTUATOR_GAIN_STAT            1027  // HD_PHYS_PSN,HD_LGC_PSN,UACT_GAIN_MEAN,UACT_GAIN_STDEV,NUM_OUTLIERS,HD_STATUS
//      P056_U_ACTUATOR_GAIN_STAT_COL_WIDTH        //          12,        11,            15,             16,          13,       10
//      P056_U_ACTUATOR_GAIN_STAT_COL_MASK         //           0,         0,             0,              0,           0,        0
//      P056_U_ACTUATOR_GAIN_STAT_COL_TYPES        // *
//      P056_U_ACTUATOR_GAIN_STAT_TABLE_TYPE       // S
#define P172_FORMAT_BUDGET_TABLE             1028  // HD_LGC_PSN,DATA_ZONE,PLO1_LEN,PLO_LEN,ISG,GAP_BS,GAP_AS,SEQ_PLO1,SEQ_PLO,SEQ_ISG_WR,SEQ_ISG_RD1,SEQ_ISG_RD,SEQ_SG_TO_WG,SEQ_SG_TO_RG,SM_TIMEOUT,HD_PHYS_PSN,SQZ_DIR,SQZ_OFST
//      P172_FORMAT_BUDGET_TABLE_COL_WIDTH         //         11,        9,       8,      7,  3,     6,     6,       8,      7,        10,         11,        10,          12,          12,        10,         11,      6,       7
//      P172_FORMAT_BUDGET_TABLE_COL_MASK          //          0,        0,       0,      0,  0,     0,     0,       0,      0,         0,          0,         0,           0,           0,         0,          0,      0,       0
//      P172_FORMAT_BUDGET_TABLE_COL_TYPES         // *
//      P172_FORMAT_BUDGET_TABLE_TABLE_TYPE        // S
#define P235_DRIVE_TEMP_HUMIDITY             1029  // INITIAL_TEMPERATURE,CURRENT_TEMPERATURE,MIX_RATIO_FLOAT,MEASURED_HUMIDITY,CALC_HUMIDITY,PRESSURE,TIMESTAMP,TEMPERATURE_SERVO,RAW_HUMIDITY_PCT_SERVO,PRESSURE_SERVO,DEBUG_PRESSURE_SERVO,REGISTER_18_SERVO
//      P235_DRIVE_TEMP_HUMIDITY_COL_WIDTH         //                  20,                 19,             15,               17,           13,       8,       21,               17,                    22,            14,                  20,               17
//      P235_DRIVE_TEMP_HUMIDITY_COL_MASK          //                   1,                  1,              1,                1,            1,       1,        1,                1,                     1,             1,                   1,                1
//      P235_DRIVE_TEMP_HUMIDITY_COL_TYPES         //                   N,                  N,              N,                N,            N,       N,        V,                N,                     N,             N,                   N,                N
//      P235_DRIVE_TEMP_HUMIDITY_TABLE_TYPE        // S
#define P088_CLR_BER_MRGN                    1030  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,TEST_MODE,WRT_CLR_OFST,RD_CLR_OFST,NOM_CLR_BER,OFFSET_CLR_BER,DELTA_CLR_BER,DELTA_THRESHOLD_BER,MAX_THRESHOLD_BER,HD_STATUS,TOT_CWD,TOT_UNCVG_CWD,UNCVG_RATIO
//      P088_CLR_BER_MRGN_COL_WIDTH                //          11,        9,        10,      7,       12,          12,         12,         11,            14,           13,                 19,               17,        9,      7,           13,         11
//      P088_CLR_BER_MRGN_COL_MASK                 //           1,        1,         1,      1,        1,           1,          1,          1,             1,            1,                  1,                1,        1,      1,            1,          1
//      P088_CLR_BER_MRGN_COL_TYPES                //           N,        N,         N,      N,        V,           N,          N,          N,             N,            N,                  N,                N,        N,      N,            N,          N
//      P088_CLR_BER_MRGN_TABLE_TYPE               // S
#define P074_FIELD_CLEARANCE                 1031  // HD_LGC_PSN,LGC_TRK_NUM,SCALED_NOM_TRK,DIAMETER,TEMPERATURE_IDX,HIRP_SCALE,HIRP_OFFSET,WHIRP_SCALE,WHIRP_OFFSET,RAP_CLRNC,RAP_ACTUATION,FAFH_DAC_TO_TARGET,FAFH_TARGET_WRT_CLRNC,RAP_TARGET_WRT_CLRNC,HD_PHYS_PSN
//      P074_FIELD_CLEARANCE_COL_WIDTH             //         10,         11,            14,       8,             15,        10,         11,         11,          12,        9,           13,                18,                   21,                  20,         11
//      P074_FIELD_CLEARANCE_COL_MASK              //          0,          0,             0,       0,              0,         0,          0,          0,           0,        0,            0,                 0,                    0,                   0,          0
//      P074_FIELD_CLEARANCE_COL_TYPES             // *
//      P074_FIELD_CLEARANCE_TABLE_TYPE            // S
#define P074_XFER_FUNC_COEFS                 1032  // HD_LGC_PSN,LGC_TRK_NUM,SCALED_NOM_TRK,DIAMETER,ACTIVE_HEATER,GAMMA_H,CONTACT_DAC,PASSIVE_WRT_CLRNC,BETA_VALUE,XFER_FNC_COEF_ORDER,XFER_FNC_COEF_VALUE,CORR_COEF_SQR,RESIDUAL_STDEV,HD_PHYS_PSN
//      P074_XFER_FUNC_COEFS_COL_WIDTH             //         10,         11,            14,       8,           13,      7,         11,               17,        10,                 19,                 19,           13,            14,         11
//      P074_XFER_FUNC_COEFS_COL_MASK              //          0,          0,             0,       0,            0,      0,          0,                0,         0,                  0,                  0,            0,             0,          0
//      P074_XFER_FUNC_COEFS_COL_TYPES             // *
//      P074_XFER_FUNC_COEFS_TABLE_TYPE            // S
#define P074_AVG_HIRP_V_DAC_COEFS            1033  // HD_LGC_PSN,LGC_TRK_NUM,SCALED_NOM_TRK,DIAMETER,ACTIVE_HEATER,GAMMA_H,CONTACT_DAC,PASSIVE_WRT_CLRNC,BETA_VALUE,AVG_HRIP_VS_DAC_COEF_ORDER,AVG_HRIP_VS_DAC_COEF_VALUE,LOCAL_HIRP_VS_DAC_SLOPE,HD_PHYS_PSN
//      P074_AVG_HIRP_V_DAC_COEFS_COL_WIDTH        //         10,         11,            14,       8,           13,      7,         11,               17,        10,                        26,                        26,                     23,         11
//      P074_AVG_HIRP_V_DAC_COEFS_COL_MASK         //          0,          0,             0,       0,            0,      0,          0,                0,         0,                         0,                         0,                      0,          0
//      P074_AVG_HIRP_V_DAC_COEFS_COL_TYPES        // *
//      P074_AVG_HIRP_V_DAC_COEFS_TABLE_TYPE       // S
#define P074_AVG_BETA                        1034  // AVG_HIRP_VS_DAC_BETA
//      P074_AVG_BETA_COL_WIDTH                    //                   20
//      P074_AVG_BETA_COL_MASK                     //                    0
//      P074_AVG_BETA_COL_TYPES                    // *
//      P074_AVG_BETA_TABLE_TYPE                   // S
#define P172_PS_ADJUSTMENT_DATA              1035  // HD_PHYS_PSN,DATA_ZN,TRK_NUM,CLR_ADJ
//      P172_PS_ADJUSTMENT_DATA_COL_WIDTH          //          11,      7,      7,      9
//      P172_PS_ADJUSTMENT_DATA_COL_MASK           //           0,      0,      0,      0
//      P172_PS_ADJUSTMENT_DATA_COL_TYPES          // *
//      P172_PS_ADJUSTMENT_DATA_TABLE_TYPE         // S
#define P315_CAL_THLD                        1036  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,ZONE_POS,BIE_MEAN,BIE_STD
//      P315_CAL_THLD_COL_WIDTH                    //          11,        10,        9,      7,       8,       8,      7
//      P315_CAL_THLD_COL_MASK                     //           0,         0,        0,      0,       0,       0,      0
//      P315_CAL_THLD_COL_TYPES                    // *
//      P315_CAL_THLD_TABLE_TYPE                   // S
#define P135_METRIC_STATS2                   1037  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,OVS_AMP,OVS_DUR,WRT_CUR,HTR_DAC,RELATIVE_DAC,TEST_ITERATION,STAGE,STEP,CONTACT,NORM_AGC_REF,NORM_AGC_STRESSED,STRESSED_RRO,STRESSED_LOCAL_REF_RRO,REF_AGC_MAX,REF_AGC_MIN,REF_AGC_STDEV,REF_AGC_MEAN,AGC_RANGE,ACTIVE_HEATER,INACTIVE_HEATER_DAC
//      P135_METRIC_STATS2_COL_WIDTH               //          11,        9,      7,        10,      7,      7,      7,      7,          12,            14,    5,   6,      7,          12,               17,          12,                    22,         11,         11,           13,          12,        9,           10,                 15
//      P135_METRIC_STATS2_COL_MASK                //           1,        1,      1,         1,      1,      1,      1,      1,           1,             1,    1,   1,      1,           1,                1,           1,                     1,          1,          1,            1,           1,        1,            1,                  1
//      P135_METRIC_STATS2_COL_TYPES               //           N,        N,      N,         N,      N,      N,      N,      N,           N,             N,    V,   V,      N,           N,                N,           N,                     N,          N,          N,            N,           N,        N,            V,                  N
//      P135_METRIC_STATS2_TABLE_TYPE              // M
#define P255_NPTARG_MARVELL                  1038  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,TARG_T0,TARG_T1,TARG_T2,SMPATT,SMTHRESH,SMOFFSET_0,SMOFFSET_1,SMOFFSET_2,SMOFFSET_3,SMOFFSET_4,SMOFFSET_5,SMOFFSET_6,SMOFFSET_7,SMOFFSET_8
//      P255_NPTARG_MARVELL_COL_WIDTH              //          10,        11,   4,      7,      7,      7,     6,       8,        10,        10,        10,        10,        10,        10,        10,        10,        10
//      P255_NPTARG_MARVELL_COL_MASK               //           1,         1,   1,      1,      1,      1,     1,       1,         1,         1,         1,         1,         1,         1,         1,         1,         1
//      P255_NPTARG_MARVELL_COL_TYPES              //           N,         N,   N,      N,      N,      N,     N,       N,         N,         N,         N,         N,         N,         N,         N,         N,         N
//      P255_NPTARG_MARVELL_TABLE_TYPE             // S
#define P315_CAL_THRSHLD_RESULT              1039  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,OD_TRK_NUM,OD_BIE_MEAN,OD_BIE_STDEV,OD_ADJ_MEAN,ID_TRK_NUM,ID_BIE_MEAN,ID_BIE_STDEV,ID_ADJ_MEAN,BIE_SLOPE
//      P315_CAL_THRSHLD_RESULT_COL_WIDTH          //          11,        10,        9,        10,         11,          12,         11,        10,         11,          12,         11,        9
//      P315_CAL_THRSHLD_RESULT_COL_MASK           //           1,         1,        1,         1,          1,           1,          1,         1,          1,           1,          1,        1
//      P315_CAL_THRSHLD_RESULT_COL_TYPES          //           N,         N,        N,         N,          N,           N,          N,         N,          N,           N,          N,        N
//      P315_CAL_THRSHLD_RESULT_TABLE_TYPE         // S
#define P282_BODE_DETAILS                    1040  // HD_PHYS_PSN,HD_LGC_PSN,FREQUENCY,INJ_AMPL,SAMPLE_CNT
//      P282_BODE_DETAILS_COL_WIDTH                //          11,        10,        9,       8,        10
//      P282_BODE_DETAILS_COL_MASK                 //           0,         0,        0,       0,         0
//      P282_BODE_DETAILS_COL_TYPES                // *
//      P282_BODE_DETAILS_TABLE_TYPE               // S
#define P185_V3BAR_ID_DATA                   1041  // HD_PHYS_PSN,TARGET_CYL,INTEGRATOR,CUR_SLOPE,AVG_SLOPE
//      P185_V3BAR_ID_DATA_COL_WIDTH               //          11,        10,        10,        9,        9
//      P185_V3BAR_ID_DATA_COL_MASK                //           0,         0,         0,        0,        0
//      P185_V3BAR_ID_DATA_COL_TYPES               // *
//      P185_V3BAR_ID_DATA_TABLE_TYPE              // S
#define P320_OTC_CAPABILITY                  1042  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,RD_RETRIES,SQZ_OFST,TEST_MODE,POS_MEAN,POS_MIN,POS_MAX,POS_STDEV,NEG_MEAN,NEG_MIN,NEG_MAX,NEG_STDEV,TOTAL_MEAN,TOTAL_MIN,TOTAL_MAX,TOTAL_STDEV,CSL_SECTOR,CSL_SIZE,CSL_POS_MEAN,CSL_POS_MIN,CSL_POS_MAX,CSL_POS_STDEV,CSL_NEG_MEAN,CSL_NEG_MIN,CSL_NEG_MAX,CSL_NEG_STDEV,CSL_TOTAL_MEAN,CSL_TOTAL_MIN,CSL_TOTAL_MAX,CSL_TOTAL_STDEV,POS_50_PCT,NEG_50_PCT,SQZ_WRT_CNT,LOG10_0_OFST_BER,TOTAL_MEDIAN,COV_MEAN
//      P320_OTC_CAPABILITY_COL_WIDTH              //          11,        10,        9,      7,        10,       8,        9,       8,      7,      7,        9,       8,      7,      7,        9,        10,        9,        9,         11,        10,       8,          12,         11,         11,           13,          12,         11,         11,           13,            14,           13,           13,             15,        10,        10,         11,              16,          12,       8
//      P320_OTC_CAPABILITY_COL_MASK               //           1,         1,        1,      1,         1,       1,        1,       1,      1,      1,        1,       1,      1,      1,        1,         1,        1,        1,          1,         1,       1,           1,          1,          1,            1,           1,          1,          1,            1,             1,            1,            1,              1,         1,         1,          1,               1,           1,       1
//      P320_OTC_CAPABILITY_COL_TYPES              //           N,         N,        N,      N,         N,       N,        V,       N,      N,      N,        N,       N,      N,      N,        N,         N,        N,        N,          N,         N,       N,           N,          N,          N,            N,           N,          N,          N,            N,             N,            N,            N,              N,         N,         N,          N,               N,           N,       N
//      P320_OTC_CAPABILITY_TABLE_TYPE             // S
#define P198_DELTA_THRSHLD_RGSTR2            1043  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,SMOOTHING_FLG,DVGA_RGSTR,RVGA_RGSTR,FVGA_RGSTR
//      P198_DELTA_THRSHLD_RGSTR2_COL_WIDTH        //          11,        9,        10,           13,        10,        10,        10
//      P198_DELTA_THRSHLD_RGSTR2_COL_MASK         //           1,        1,         1,            1,         1,         1,         1
//      P198_DELTA_THRSHLD_RGSTR2_COL_TYPES        //           N,        N,         N,            V,         N,         N,         N
//      P198_DELTA_THRSHLD_RGSTR2_TABLE_TYPE       // M
#define P043_SKEW_TMNG_POINTS                1044  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,MAX_SKEW_TIME,DELTA_SKEW_TIME
//      P043_SKEW_TMNG_POINTS_COL_WIDTH            //          11,     10,        10,           13,             15
//      P043_SKEW_TMNG_POINTS_COL_MASK             //           0,      0,         0,            0,              0
//      P043_SKEW_TMNG_POINTS_COL_TYPES            // *
//      P043_SKEW_TMNG_POINTS_TABLE_TYPE           // S
#define P043_MAX_DELTA_SKEW_TMNG             1045  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,MAX_DELTA_SKEW
//      P043_MAX_DELTA_SKEW_TMNG_COL_WIDTH         //          11,     10,        10,            14
//      P043_MAX_DELTA_SKEW_TMNG_COL_MASK          //           0,      0,         0,             0
//      P043_MAX_DELTA_SKEW_TMNG_COL_TYPES         // *
//      P043_MAX_DELTA_SKEW_TMNG_TABLE_TYPE        // S
#define P011_DO_SERVO_CMD10                  1046  // REG0_HEX,REG1_HEX,REG2_HEX,REG3_HEX,REG4_HEX,REG5_HEX,REG6_HEX,REG7_HEX,REG8_HEX,REG9_HEX,DIAG_HEX,CMD_STAT_HEX
//      P011_DO_SERVO_CMD10_COL_WIDTH              //        8,       8,       8,       8,       8,       8,       8,       8,       8,       8,       8,          12
//      P011_DO_SERVO_CMD10_COL_MASK               //        0,       0,       0,       0,       0,       0,       0,       0,       0,       0,       0,           0
//      P011_DO_SERVO_CMD10_COL_TYPES              // *
//      P011_DO_SERVO_CMD10_TABLE_TYPE             // S
#define P275_ZAP_AUDIT_STATS                 1047  // HD_PHYS_PSN,HD_LGC_PSN,ZAP_PSN,SPAN_INDEX,AUDIT_TYPE,MEAN_3SIGRRO,MAX_3SIGRRO,SIG_3SIGRRO
//      P275_ZAP_AUDIT_STATS_COL_WIDTH             //          11,        10,      7,        10,        10,          12,         11,         11
//      P275_ZAP_AUDIT_STATS_COL_MASK              //           0,         0,      0,         0,         0,           0,          0,          0
//      P275_ZAP_AUDIT_STATS_COL_TYPES             // *
//      P275_ZAP_AUDIT_STATS_TABLE_TYPE            // M
#define P275_ZAP_SUMMARY                     1048  // HD_PHYS_PSN,HD_LGC_PSN,ZAP_PSN,SPAN_INDEX,WRT_FAIL_CNT,RD_FAIL_CNT,WC_ERR_CNT,NRWC_ERR_CNT,RC_ERR_CNT,NRRC_ERR_CNT,RRO_FAIL_CNT,ITRTN_TRK_CNT,REV_ITRTN_CNT,MEAS_TRK_CNT,ZAP_CRRCT_WRT_TRK_CNT,SEEK_FAIL_TRK_CNT,IO_FAIL_TRK_CNT,OSE_SMPATT_TRK_CNT,IFEST_CNT,TNU_CNT,ZFS_FAIL_CNT,SKIP_TRK_CNT,ETIME,SAT_RETRIED_CNT,SAT_SKIPPED_CNT,AVG_REV_PER_TRK,WRT_FAIL_CNT_NORM,RD_FAIL_CNT_NORM
//      P275_ZAP_SUMMARY_COL_WIDTH                 //          11,        10,      7,        10,          12,         11,        10,          12,        10,          12,          12,           13,           13,          12,                   21,               17,             15,                18,        9,      7,          12,          12,    8,             15,             15,             15,               17,              16
//      P275_ZAP_SUMMARY_COL_MASK                  //           1,         1,      1,         1,           1,          1,         1,           1,         1,           1,           1,            1,            1,           1,                    1,                1,              1,                 1,        1,      1,           1,           1,    1,              1,              1,              1,                1,               1
//      P275_ZAP_SUMMARY_COL_TYPES                 //           N,         N,      V,         N,           N,          N,         N,           N,         N,           N,           N,            N,            N,           N,                    N,                N,              N,                 N,        N,      N,           N,           N,    N,              N,              N,              N,                N,               N
//      P275_ZAP_SUMMARY_TABLE_TYPE                // S
#define P211_RESULTS                         1049  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,WPOWER,METRIC,VALUE
//      P211_RESULTS_COL_WIDTH                     //          11,        10,        9,     6,    12,    9
//      P211_RESULTS_COL_MASK                      //           0,         0,        0,     0,     0,    0
//      P211_RESULTS_COL_TYPES                     // *
//      P211_RESULTS_TABLE_TYPE                    // S
#define P185_AOD_SUMMARY                     1050  // OLD_OST_MULTIPLIER,NEW_OST_MULTIPLIER,PCT_STROKE_EXPANDED,ORIG_TPI,NEW_TPI,AOD_SERPENTS,AOD_SZ,CAPACITY_GAIN,TOT_CAP_EXP,CUMULATIVE_STROKE_EXPNDED,AOD_HEAD_MAP
//      P185_AOD_SUMMARY_COL_WIDTH                 //                 18,                18,                 19,       8,      7,          12,     6,           13,         11,                       25,          12
//      P185_AOD_SUMMARY_COL_MASK                  //                  0,                 0,                  0,       0,      0,           0,     0,            0,          0,                        0,           0
//      P185_AOD_SUMMARY_COL_TYPES                 // *
//      P185_AOD_SUMMARY_TABLE_TYPE                // S
#define P185_AOD_DETAILS                     1051  // HDS_IN_AOD,MAX_SZ_AVAIL,MAX_SRPT_SZ_AVAIL,MAX_CAP_GAIN,MAX_SRPT_CAP_GAIN
//      P185_AOD_DETAILS_COL_WIDTH                 //         10,          12,               17,          12,               17
//      P185_AOD_DETAILS_COL_MASK                  //          0,           0,                0,           0,                0
//      P185_AOD_DETAILS_COL_TYPES                 // *
//      P185_AOD_DETAILS_TABLE_TYPE                // S
#define P152_BODE_VCM_PZT_GAINS              1052  // HD_PHYS_PSN,HD_LGC_PSN,FREQUENCY,VCM_GAIN,PZT_GAIN
//      P152_BODE_VCM_PZT_GAINS_COL_WIDTH          //          11,        10,        9,       7,       7
//      P152_BODE_VCM_PZT_GAINS_COL_MASK           //           0,         0,        0,       0,       0
//      P152_BODE_VCM_PZT_GAINS_COL_TYPES          // *
//      P152_BODE_VCM_PZT_GAINS_TABLE_TYPE         // V
#define P211_VBAR_DFLT_CHAN_MRVL             1053  // TW0,TW1,TW2,TW3,TW4,TW5,TW6,TW7,TW8,TW9,BANDWIDTH,BNDWTHRNG,PRC_VAL0,BOOST
//      P211_VBAR_DFLT_CHAN_MRVL_COL_WIDTH         //   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,        9,        9,       8,    5
//      P211_VBAR_DFLT_CHAN_MRVL_COL_MASK          //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,        0,        0,       0,    0
//      P211_VBAR_DFLT_CHAN_MRVL_COL_TYPES         // *
//      P211_VBAR_DFLT_CHAN_MRVL_TABLE_TYPE        // S
#define P080_HTR_CURVE_FIT                   1054  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,ACTIVE_HEATER,FIT_CUBIC_COEF,FIT_SQR_COEF,FIT_LIN_COEF,FIT_INTERCEPT,RMSE,R_SQR,MDL_HTR_PWR_OTCLR,MDL_HTR_RES_OTCLR,MDL_HTR_TEMP_CHG_OTCLR,HTR_TEMP_PWR_RATIO_OTCLR,HTR_TCR
//      P080_HTR_CURVE_FIT_COL_WIDTH               //          11,        10,        9,      8,           13,            14,          12,          12,           13,   7,    7,               17,               17,                    22,                      24,      8
//      P080_HTR_CURVE_FIT_COL_MASK                //           1,         1,        1,      1,            1,             1,           1,           1,            1,   1,    1,                1,                1,                     1,                       1,      1
//      P080_HTR_CURVE_FIT_COL_TYPES               //           N,         N,        N,      N,            V,             N,           N,           N,            N,   N,    N,                N,                N,                     N,                       N,      N
//      P080_HTR_CURVE_FIT_TABLE_TYPE              // S
#define P234_EAW_ERROR_RATE4                 1055  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,T_LEVEL,NUM_WRITES,WRT_CNT,DEGAUSS,BITS_READ_LOG10,BASELINE_BER_CHUNK1,BASELINE_BER_CHUNK2,BASELINE_BER_CHUNK3,EAW_BER_CHUNK1,EAW_BER_CHUNK2,EAW_BER_CHUNK3,DEGAUSS_ON_LIMIT,DEGAUSS_OFF_LIMIT,FAIL_CODE,RELATIVE_TRK,DELTA_BER_CHUNK1,MAX_SIDE_DELTA_BER_CHUNK1,DELTA_BER_CHUNK2,MAX_SIDE_DELTA_BER_CHUNK2,DELTA_BER_CHUNK3,MAX_SIDE_DELTA_BER_CHUNK3
//      P234_EAW_ERROR_RATE4_COL_WIDTH             //          11,        10,        9,      7,      7,        10,      7,      7,             15,                 19,                 19,                 19,            14,            14,            14,              16,               17,        9,          12,              16,                       25,              16,                       25,              16,                       25
//      P234_EAW_ERROR_RATE4_COL_MASK              //           1,         1,        1,      1,      1,         1,      1,      1,              1,                  1,                  1,                  1,             1,             1,             1,               1,                1,        1,           0,               0,                        0,               0,                        0,               0,                        0
//      P234_EAW_ERROR_RATE4_COL_TYPES             //           N,         N,        N,      N,      N,         N,      N,      V,              N,                  N,                  N,                  N,             N,             N,             N,               N,                N,        N
//      P234_EAW_ERROR_RATE4_TABLE_TYPE            // S
#define P135_FINAL_CURVE_FIT_STAT            1056  // HD_PHYS_PSN,HD_LGC_PSN,MAX_ID_OD_DELTA_DAC,MIN_ID_OD_DELTA_DAC,MAX_DAC_RANGE,MAX_ZONE_TO_ZONE_DELTA_DAC,MIN_INTERPOLATED_DAC,MAX_WICD_DAC,RESIDUAL_STDEV_DAC,MAX_PI_DAC,MAX_ID_OD_DELTA_CLR,MIN_ID_OD_DELTA_CLR,MAX_CLR_RANGE,MAX_MODE_CONSISTENCY_CLR,MIN_MODE_CONSISTENCY_CLR,MAX_CROSS_HTR_CONSISTENCY_CLR,MIN_CROSS_HTR_CONSISTENCY_CLR,MAX_RAP_CONSISTENCY_CLR,MIN_MIN_CONSISTENCY_CLR,ACTIVE_HEATER,INACTIVE_HEATER_DAC,ERROR_CODE
//      P135_FINAL_CURVE_FIT_STAT_COL_WIDTH        //          11,        10,                 19,                 19,           13,                        26,                  20,          12,                18,        10,                 19,                 19,           13,                      24,                      24,                           29,                           29,                     23,                     23,           13,                 19,        10
//      P135_FINAL_CURVE_FIT_STAT_COL_MASK         //           1,         1,                  1,                  1,            1,                         1,                   1,           1,                 1,         1,                  1,                  1,            1,                       1,                       1,                            1,                            1,                      1,                      1,            1,                  1,         1
//      P135_FINAL_CURVE_FIT_STAT_COL_TYPES        //           N,         N,                  N,                  N,            N,                         N,                   N,           N,                 N,         N,                  N,                  N,            N,                       N,                       N,                            N,                            N,                      N,                      N,            V,                  N,         N
//      P135_FINAL_CURVE_FIT_STAT_TABLE_TYPE       // S
#define P172_AFH_CLR_SETTLING                1057  // HD_PHYS_PSN,HD_LGC_PSN,CLR_SETTLING_CORRECTION,MIN_THRSHLD_CLR,CLR_SETTLING_DECAY
//      P172_AFH_CLR_SETTLING_COL_WIDTH            //          11,        10,                     23,             15,                18
//      P172_AFH_CLR_SETTLING_COL_MASK             //           0,         0,                      0,              0,                 0
//      P172_AFH_CLR_SETTLING_COL_TYPES            // *
//      P172_AFH_CLR_SETTLING_TABLE_TYPE           // S
#define P251_MARVELL_DIBIT                   1058  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,PEAK,NLTS1,NLTS2,NLTS3,DEF_ERROR_RATE,DBE_ERROR_RATE,PRC_VAL0,PRC_VAL1,PRC_VAL2,PRC_VAL3,PRC_VAL4,PRC_VAL5,PRC_VAL6,PRC_VAL7,DBE_RETCODE,DBE_STATUS,STATUS
//      P251_MARVELL_DIBIT_COL_WIDTH               //          11,        9,      7,   4,    5,    5,    5,            14,            14,       8,       8,       8,       8,       8,       8,       8,       8,         11,        10,     6
//      P251_MARVELL_DIBIT_COL_MASK                //           0,        0,      0,   0,    0,    0,    0,             0,             0,       0,       0,       0,       0,       0,       0,       0,       0,          0,         0,     0
//      P251_MARVELL_DIBIT_COL_TYPES               // *
//      P251_MARVELL_DIBIT_TABLE_TYPE              // S
#define P094_TA_THRSHLD_HEAD                 1059  // HD_PHYS_PSN,HD_LGC_PSN,PREAMP_ID,PREAMP_REV,TCR_BIAS,TCR_GAIN,TCR_POLARITY,TCR_FILTER,TCR_V_TH_RANGE,TCR_RES_BIAS_1,TCR_RES_BIAS_2,TCR_RES_BIAS_3,TCR_RES_BIAS_4,TCR_RES_BIAS_5,THRSHLD_OFFSET,MEAN_BSLN_THRSHLD,MAX_BSLN_THRSHLD,STDEV_BSLN_THRSHLD,TCR_RES_SLOPE,TCR_RES_BIAS_0_MV,RSQUARED_FIT_RES_1_5
//      P094_TA_THRSHLD_HEAD_COL_WIDTH             //          11,        10,        9,        10,       8,       8,          12,        10,            14,            14,            14,            14,            14,            14,            14,               17,              16,                18,           13,               17,                  20
//      P094_TA_THRSHLD_HEAD_COL_MASK              //           1,         1,        1,         1,       1,       1,           1,         1,             1,             1,             1,             1,             1,             1,             1,                1,               1,                 1,            1,                1,                   1
//      P094_TA_THRSHLD_HEAD_COL_TYPES             //           N,         N,        V,         V,       N,       N,           N,         N,             N,             N,             N,             N,             N,             N,             N,                N,               N,                 N,            N,                N,                   N
//      P094_TA_THRSHLD_HEAD_TABLE_TYPE            // S
#define P135_HD_STBLTY_AGC_STATS2            1060  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,HTR_DAC,TEST_ITERATION,SERVO_WEDGE,MEAN_AGC,STDEV_AGC,COV_AGC,WRT_CUR_DAC,ACTIVE_HEATER,DELTA_DAC
//      P135_HD_STBLTY_AGC_STATS2_COL_WIDTH        //          11,        10,        9,      7,            14,         11,       8,        9,      7,         11,           13,        9
//      P135_HD_STBLTY_AGC_STATS2_COL_MASK         //           1,         1,        1,      1,             1,          1,       1,        1,      1,          1,            1,        1
//      P135_HD_STBLTY_AGC_STATS2_COL_TYPES        //           N,         N,        N,      N,             N,          N,       N,        N,      N,          N,            V,        N
//      P135_HD_STBLTY_AGC_STATS2_TABLE_TYPE       // S
#define P135_HD_STABILITY_COUNTS2            1061  // HD_PHYS_PSN,HD_LGC_PSN,TOTAL_MEASURED,MEAN_STDEV_AGC,MEAN_COV_AGC,STDEV_STDEV_AGC,STDEV_COV_AGC,MEDIAN_STDEV_AGC,MEDIAN_COV_AGC,STDEV_AGC_CNT,COV_AGC_CNT,STDEV_AGC_PCT,COV_AGC_PCT,HD_STATUS,RMSE_MEAN,RMSE_SIGMA,RMSE_MAX,ZN_RMSE_LIMIT_EXCD_CNT,ZN_RMSE_LIMIT_EXCD_PCT,ACTIVE_HEATER
//      P135_HD_STABILITY_COUNTS2_COL_WIDTH        //          11,        10,            14,            14,          12,             15,           13,              16,            14,           13,         11,           13,         11,        9,        9,        10,       8,                    22,                    22,           13
//      P135_HD_STABILITY_COUNTS2_COL_MASK         //           1,         1,             1,             1,           1,              1,            1,               1,             1,            1,          1,            1,          1,        1,        1,         1,       1,                     1,                     1,            1
//      P135_HD_STABILITY_COUNTS2_COL_TYPES        //           N,         N,             N,             N,           N,              N,            N,               N,             N,            N,          N,            N,          N,        N,        N,         N,       N,                     N,                     N,            V
//      P135_HD_STABILITY_COUNTS2_TABLE_TYPE       // S
#define P315_CAL_THRSHLD_PICK                1062  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,OD_TRK_NUM,OD_PICK_MIN,OD_PICK_MAX,OD_PICK_MEAN,ID_TRK_NUM,ID_PICK_MIN,ID_PICK_MAX,ID_PICK_MEAN,BIE_SLOPE
//      P315_CAL_THRSHLD_PICK_COL_WIDTH            //          11,        10,        9,        10,         11,         11,          12,        11,         11,         11,          12,        9
//      P315_CAL_THRSHLD_PICK_COL_MASK             //           1,         1,        1,         1,          1,          1,           1,         1,          1,          1,           1,        1
//      P315_CAL_THRSHLD_PICK_COL_TYPES            //           N,         N,        N,         N,          N,          N,           N,         N,          N,          N,           N,        N
//      P315_CAL_THRSHLD_PICK_TABLE_TYPE           // S
#define P315_INSTABILITY_METRIC              1063  // HD_PHYS_PSN,HD_LGC_PSN,MSRD_SAMPLE_CNT,HD_INSTABILITY_METRIC,MAX_OD_MEAN_DELTA,MAX_ID_MEAN_DELTA,MAX_OD_MEAN_DELTA_FAT,MAX_ID_MEAN_DELTA_FAT
//      P315_INSTABILITY_METRIC_COL_WIDTH          //          11,        10,             15,                   21,               17,               17,                   21,                   21
//      P315_INSTABILITY_METRIC_COL_MASK           //           1,         1,              1,                    1,                1,                1,                    1,                    1
//      P315_INSTABILITY_METRIC_COL_TYPES          //           N,         N,              N,                    N,                N,                N,                    N,                    N
//      P315_INSTABILITY_METRIC_TABLE_TYPE         // S
#define P172_NVC_ACCESS_TIME                 1064  // SUB_BLOCKS,ERASE_USECS,PROGRAM_USECS
//      P172_NVC_ACCESS_TIME_COL_WIDTH             //         10,         11,           13
//      P172_NVC_ACCESS_TIME_COL_MASK              //          1,          1,            1
//      P172_NVC_ACCESS_TIME_COL_TYPES             //          N,          N,            N
//      P172_NVC_ACCESS_TIME_TABLE_TYPE            // S
#define P109_DETCR_SUM_HD_ZONE               1065  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,VFYD_ERRS,UNVFYD_ERRS,HD_STATUS,SERVO_VFYD_ERRS,SERVO_UNVFYD_ERRS
//      P109_DETCR_SUM_HD_ZONE_COL_WIDTH           //          11,        9,        10,        9,         11,        9,             15,               17
//      P109_DETCR_SUM_HD_ZONE_COL_MASK            //           1,        1,         1,        1,          1,        1,              0,                0
//      P109_DETCR_SUM_HD_ZONE_COL_TYPES           //           N,        N,         N,        N,          N,        N
//      P109_DETCR_SUM_HD_ZONE_TABLE_TYPE          // M
#define P140_DETCR_FLAW_COUNT                1066  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,VERIFIED_FLAW_COUNT,UNVERIFIED_FLAW_COUNT,HD_STATUS
//      P140_DETCR_FLAW_COUNT_COL_WIDTH            //          11,        9,        10,                 19,                   21,        9
//      P140_DETCR_FLAW_COUNT_COL_MASK             //           1,        1,         1,                  1,                    1,        1
//      P140_DETCR_FLAW_COUNT_COL_TYPES            //           N,        N,         N,                  N,                    N,        N
//      P140_DETCR_FLAW_COUNT_TABLE_TYPE           // M
#define P140_DETCR_FLAW_SUMMARY              1067  // VERIFIED_FLAW_COUNT,UNVERIFIED_FLAW_COUNT
//      P140_DETCR_FLAW_SUMMARY_COL_WIDTH          //                  19,                   21
//      P140_DETCR_FLAW_SUMMARY_COL_MASK           //                   1,                    1
//      P140_DETCR_FLAW_SUMMARY_COL_TYPES          //                   N,                    N
//      P140_DETCR_FLAW_SUMMARY_TABLE_TYPE         // S
#define P107_DETCR_UNVER_FLAW_CNT            1068  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,UNVERIFIED_FLAW_COUNT
//      P107_DETCR_UNVER_FLAW_CNT_COL_WIDTH        //          11,        9,        10,                   21
//      P107_DETCR_UNVER_FLAW_CNT_COL_MASK         //           1,        1,         1,                    1
//      P107_DETCR_UNVER_FLAW_CNT_COL_TYPES        //           N,        N,         N,                    N
//      P107_DETCR_UNVER_FLAW_CNT_TABLE_TYPE       // M
#define P288_PES_EVENT                       1069  // HD_PHYS_PSN,HD_LGC_PSN,ORIG_CYL,NEW_CYL,FAIL_CODE,TOTAL_RETRY,SEEK_RETRIES,LOOP_CODE,RW_ERROR_CODE,SEEK_PSN,DATA_RETRIES,UNSAFES,UNSAFE_FLAGS,CONS_FLTR_PTS,FLTR_OVR_LMT,ACFF,CHROME,VCAT,ZAP,ZEST
//      P288_PES_EVENT_COL_WIDTH                   //          11,        10,       8,      8,        9,         11,          12,        9,           13,       8,          12,      7,          12,           13,          12,   5,     6,   5,  5,   5
//      P288_PES_EVENT_COL_MASK                    //           0,         0,       0,      0,        0,          0,           0,        0,            0,       0,           0,      0,           0,            0,           0,   0,     0,   0,  0,   0
//      P288_PES_EVENT_COL_TYPES                   // *
//      P288_PES_EVENT_TABLE_TYPE                  // S
#define P288_TRK_FOLLOW_INFO                 1070  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SEEK_PSN,MODE_OVRRDE,VCAT,CHROME,ACFF,ZAP,3_SIGMA_RRO
//      P288_TRK_FOLLOW_INFO_COL_WIDTH             //          11,        10,      7,       8,         11,   4,     6,   8,  3,         11
//      P288_TRK_FOLLOW_INFO_COL_MASK              //           0,         0,      0,       0,          0,   0,     0,   0,  0,          0
//      P288_TRK_FOLLOW_INFO_COL_TYPES             // *
//      P288_TRK_FOLLOW_INFO_TABLE_TYPE            // S
#define P109_LOG_ERR_SRV_FSB                 1071  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SECTOR,OFFSET,SYM_POS,SYM_LEN,RPT_CNT,sv,_,F,S,B,_,S,T,A,T,U,S,_
//      P109_LOG_ERR_SRV_FSB_COL_WIDTH             //          11,        10,      7,     6,     6,      7,      7,      7, 3,1,1,1,1,1,1,1,1,1,1,1,1
//      P109_LOG_ERR_SRV_FSB_COL_MASK              //           0,         0,      0,     0,     0,      0,      0,      0, 0,0,0,0,0,0,0,0,0,0,0,0,0
//      P109_LOG_ERR_SRV_FSB_COL_TYPES             // *
//      P109_LOG_ERR_SRV_FSB_TABLE_TYPE            // S
#define P211_WRT_PWR_TBL                     1072  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,WPOWER,ZEROHEATCLR,CLRWWHT,WPWGHT,BPICAP,FBPICAP,TPICAP,FTPICAP,SATURATION,CAPCTY,BPI_FREQ_CAP,TPI_MEAS_FREQ
//      P211_WRT_PWR_TBL_COL_WIDTH                 //          11,        10,        9,     6,         11,      7,     6,     6,      7,     6,      7,        10,     6,          12,           13
//      P211_WRT_PWR_TBL_COL_MASK                  //           0,         0,        0,     0,          0,      0,     0,     0,      0,     0,      0,         0,     0,           0,            0
//      P211_WRT_PWR_TBL_COL_TYPES                 // *
//      P211_WRT_PWR_TBL_TABLE_TYPE                // M
#define P237_SEEK_ANOMALY_EVENT              1073  // ANOMALY_ID,HD_PHYS_PSN,SEEK_TYPE,SEEK_SPEED,SEEK_LENGTH,SEEK_TIME_AVG,SEEK_TIME_STDEV,STDEV_LIMIT
//      P237_SEEK_ANOMALY_EVENT_COL_WIDTH          //         10,         11,        8,         9,         11,           13,             15,         11
//      P237_SEEK_ANOMALY_EVENT_COL_MASK           //          0,          0,        0,         0,          0,            0,              0,          0
//      P237_SEEK_ANOMALY_EVENT_COL_TYPES          // *
//      P237_SEEK_ANOMALY_EVENT_TABLE_TYPE         // S
#define P237_SEEK_ANOMALY_DETAIL             1074  // ANOMALY_ID,SEEK_NUM,START_LGC_CYL,DEST_LGC_CYL,SEEK_TIME,PCT_FROM_MEAN,STATUS
//      P237_SEEK_ANOMALY_DETAIL_COL_WIDTH         //         10,       8,           13,          12,        9,           16,     6
//      P237_SEEK_ANOMALY_DETAIL_COL_MASK          //          0,       0,            0,           0,        0,            0,     0
//      P237_SEEK_ANOMALY_DETAIL_COL_TYPES         // *
//      P237_SEEK_ANOMALY_DETAIL_TABLE_TYPE        // S
#define P237_SEEK_ANOMALY_STATS              1075  // OUTLIER_THRESH,NUM_RD_OUTLIERS,NUM_WR_OUTLIERS,NUM_RD_RETRIES,NUM_WR_RETRIES
//      P237_SEEK_ANOMALY_STATS_COL_WIDTH          //             14,             15,             15,            14,            14
//      P237_SEEK_ANOMALY_STATS_COL_MASK           //              0,              0,              0,             0,             0
//      P237_SEEK_ANOMALY_STATS_COL_TYPES          // *
//      P237_SEEK_ANOMALY_STATS_TABLE_TYPE         // S
#define P263_FIR_TAP_SCAN                    1076  // HD_PHYS_PSN,HD_LGC_PSN,TAP1S,TAP2S,NO_TMD,OBSERVER_SECTOR_COUNT
//      P263_FIR_TAP_SCAN_COL_WIDTH                //          11,        10,    5,    5,     6,                   21
//      P263_FIR_TAP_SCAN_COL_MASK                 //           1,         1,    1,    1,     1,                    1
//      P263_FIR_TAP_SCAN_COL_TYPES                //           N,         N,    N,    N,     N,                    N
//      P263_FIR_TAP_SCAN_TABLE_TYPE               // S
#define P263_CURRENT_FIR_TAP_EVAL            1077  // HD_PHYS_PSN,HD_LGC_PSN,NO_TMD,OBSERVER_SECTOR_COUNT
//      P263_CURRENT_FIR_TAP_EVAL_COL_WIDTH        //          11,        10,     6,                   21
//      P263_CURRENT_FIR_TAP_EVAL_COL_MASK         //           1,         1,     1,                    1
//      P263_CURRENT_FIR_TAP_EVAL_COL_TYPES        //           N,         N,     N,                    N
//      P263_CURRENT_FIR_TAP_EVAL_TABLE_TYPE       // S
#define P263_TRACK_INTERVAL                  1078  // HD_PHYS_PSN,HD_LGC_PSN,START_CYL,END_CYL
//      P263_TRACK_INTERVAL_COL_WIDTH              //          11,        10,        9,      7
//      P263_TRACK_INTERVAL_COL_MASK               //           0,         0,        0,      0
//      P263_TRACK_INTERVAL_COL_TYPES              // *
//      P263_TRACK_INTERVAL_TABLE_TYPE             // S
#define P229_ZN_CIRCUM_ERR_RATE              1079  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ZONE_BER_MEDIAN,ZONE_BER_MEAN,ZONE_TRK_2_TRK_BER_STDEV,ZONE_TRK_2_TRK_BER_RANGE,WORST_TRK_BER,WORST_TRK,ZONE_BER_WRT_2_WRT_STDEV,BIN_BER_STDEV,BIN_BER_RANGE,WORST_BIN_BER,WORST_BIN_BER_MEDIAN,BIN_BER_WRT_2_WRT_STDEV,TRKS_TESTED_PER_ZN,T_LEVEL,ZONE_SFR,SCTRS_PER_BIN,REPEAT_SFR
//      P229_ZN_CIRCUM_ERR_RATE_COL_WIDTH          //          11,        10,        9,             15,           13,                      24,                      24,           13,        9,                      24,           13,           13,           13,                  20,                     23,                18,      7,       8,           13,        10
//      P229_ZN_CIRCUM_ERR_RATE_COL_MASK           //           1,         1,        1,              1,            1,                       1,                       1,            1,        1,                       1,            1,            1,            1,                   1,                      1,                 1,      1,       1,            1,         0
//      P229_ZN_CIRCUM_ERR_RATE_COL_TYPES          //           N,         N,        N,              N,            N,                       N,                       N,            N,        N,                       N,            N,            N,            N,                   N,                      N,                 N,      N,       N,            N
//      P229_ZN_CIRCUM_ERR_RATE_TABLE_TYPE         // S
#define P215_TA_DETCR_PADDING                1080  // DFCT_NUM,PAD_TYPE,HD_PHYS_PSN,HD_LGC_PSN,TA_START_TRK_NUM,TA_END_TRK_NUM,TRK_UJOG,DETCR_UJOG,PAD_START_TRK_NUM,PAD_END_TRK_NUM,TA_SEVERITY,ADDED_PAD,DETCR_TA_START_TRK,DETCR_TA_END_TRK
//      P215_TA_DETCR_PADDING_COL_WIDTH            //        8,      18,         11,        10,              16,            14,       8,        10,               17,             15,         11,        9,                18,              16
//      P215_TA_DETCR_PADDING_COL_MASK             //        1,       1,          1,         1,               1,             1,       1,         1,                1,              1,          1,        1,                 1,               1
//      P215_TA_DETCR_PADDING_COL_TYPES            //        N,       V,          N,         N,               N,             N,       N,         N,                N,              N,          N,        N,                 N,               N
//      P215_TA_DETCR_PADDING_TABLE_TYPE           // S
#define P395_AFS_THRESHOLD_SUM               1081  // HD_PHYS_PSN,ZN_PSN,TRK_NUM,ADC_THRESHOLD,CSM_AVE_DATA
//      P395_AFS_THRESHOLD_SUM_COL_WIDTH           //          11,     6,      7,           13,          12
//      P395_AFS_THRESHOLD_SUM_COL_MASK            //           0,     0,      0,            0,           0
//      P395_AFS_THRESHOLD_SUM_COL_TYPES           // *
//      P395_AFS_THRESHOLD_SUM_TABLE_TYPE          // S
#define P395_AFS_THRESHOLD_SUM2              1082  // HD_PHYS_PSN,ZN_PSN,ADC_THRESHOLD,AFS_THRESHOLD
//      P395_AFS_THRESHOLD_SUM2_COL_WIDTH          //          11,     6,           13,           13
//      P395_AFS_THRESHOLD_SUM2_COL_MASK           //           0,     0,            0,            0
//      P395_AFS_THRESHOLD_SUM2_COL_TYPES          // *
//      P395_AFS_THRESHOLD_SUM2_TABLE_TYPE         // S
#define P229_CIRCUMFER_ERROR_RATE            1083  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZN,TRK_NUM,TRK_ERR_RATE,TRK_ERR_RATE_W2W_STDEV,BIN_ERR_RATE_STDEV,BIN_ERR_RATE_RANGE,BEST_BIN_ERR_RATE,WORST_BIN_ERR_RATE,WORST_BIN,BIN_W2W_STDEV
//      P229_CIRCUMFER_ERROR_RATE_COL_WIDTH        //          11,        10,      7,      7,          12,                    22,                18,                18,               17,                18,        9,           13
//      P229_CIRCUMFER_ERROR_RATE_COL_MASK         //           0,         0,      0,      0,           0,                     0,                 0,                 0,                0,                 0,        0,            0
//      P229_CIRCUMFER_ERROR_RATE_COL_TYPES        // *
//      P229_CIRCUMFER_ERROR_RATE_TABLE_TYPE       // V
#define P351_RESULTS                         1084  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,OPT_IW,OPT_OS,OPT_OD
//      P351_RESULTS_COL_WIDTH                     //          11,        9,      7,        10,     6,     6,     6
//      P351_RESULTS_COL_MASK                      //           0,        0,      0,         0,     0,     0,     0
//      P351_RESULTS_COL_TYPES                     // *
//      P351_RESULTS_TABLE_TYPE                    // S
#define P025_RETRACT_STAT_EXT                1085  // STD_DEV,VARIANCE,AVERAGE,MAX_RAW_TRK,MIN_RAW_TRK,NO_RETRY,ONE_RETRY,TWO_RETRY,THREE_RETRY
//      P025_RETRACT_STAT_EXT_COL_WIDTH            //       7,       8,      7,         11,         11,       8,        9,        9,         11
//      P025_RETRACT_STAT_EXT_COL_MASK             //       0,       0,      0,          0,          0,       0,        0,        0,          0
//      P025_RETRACT_STAT_EXT_COL_TYPES            // *
//      P025_RETRACT_STAT_EXT_TABLE_TYPE           // S
#define P246_RESULTS                         1086  // DISC_NBR,CRRO_TRK,HARMONIC,FFT_MAG,HARM_LMT,OOS
//      P246_RESULTS_COL_WIDTH                     //        8,       8,       8,      9,       8,  3
//      P246_RESULTS_COL_MASK                      //        0,       0,       0,      0,       0,  0
//      P246_RESULTS_COL_TYPES                     // *
//      P246_RESULTS_TABLE_TYPE                    // S
#define P321_BIAS_CAL2                       1087  // HD_PHYS_PSN,TEST_MODE,HD_LGC_PSN,ORIGINAL_CURRENT,NEW_CURRENT,BIAS_VOLTAGE,MRE_RESISTANCE,NEW_CURRENT_DAC,FAIL_CODE,MRE_BIAS_RANGE
//      P321_BIAS_CAL2_COL_WIDTH                   //          11,        9,        10,              16,         11,          12,            14,             15,        9,            14
//      P321_BIAS_CAL2_COL_MASK                    //           1,        1,         1,               1,          1,           1,             1,              1,        1,             1
//      P321_BIAS_CAL2_COL_TYPES                   //           N,        V,         N,               N,          N,           N,             N,              N,        N,             N
//      P321_BIAS_CAL2_TABLE_TYPE                  // M
#define P130_TA_LIST_DETAILED                1088  // FLAW_NUM,HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,FLAW_TYPE
//      P130_TA_LIST_DETAILED_COL_WIDTH            //        8,         11,        10,      7,        9
//      P130_TA_LIST_DETAILED_COL_MASK             //        0,          0,         0,      0,        0
//      P130_TA_LIST_DETAILED_COL_TYPES            // *
//      P130_TA_LIST_DETAILED_TABLE_TYPE           // S
#define P130_TAS_FLAW_HD                     1089  // HD_PHYS_PSN,HD_LGC_PSN,SKIP_TRACKS
//      P130_TAS_FLAW_HD_COL_WIDTH                 //          11,        10,         11
//      P130_TAS_FLAW_HD_COL_MASK                  //           0,         0,          0
//      P130_TAS_FLAW_HD_COL_TYPES                 // *
//      P130_TAS_FLAW_HD_TABLE_TYPE                // V
#define P130_TA_FLAW_DRV                     1090  // TOTAL_TA_FLAW_CNT
//      P130_TA_FLAW_DRV_COL_WIDTH                 //                17
//      P130_TA_FLAW_DRV_COL_MASK                  //                 0
//      P130_TA_FLAW_DRV_COL_TYPES                 // *
//      P130_TA_FLAW_DRV_TABLE_TYPE                // S
#define P095_WRT_BACKOFF_SUMMARY             1091  // HD_PHYS_PSN,HD_LGC_PSN,LOW_DAC_ZONE_CNT,BACKOFF_FLAG
//      P095_WRT_BACKOFF_SUMMARY_COL_WIDTH         //          11,        10,              16,          12
//      P095_WRT_BACKOFF_SUMMARY_COL_MASK          //           1,         1,               1,           1
//      P095_WRT_BACKOFF_SUMMARY_COL_TYPES         //           N,         N,               N,           V
//      P095_WRT_BACKOFF_SUMMARY_TABLE_TYPE        // S
#define P095_WRT_BACKOFF_RESULTS             1092  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,INITIAL_WRT_CUR_DAC,REDUCED_WRT_CUR_DAC,WRT_CUR_OVS_DAC,WRT_CUR_OVS_DUR,INITIAL_HTR_DAC_CNTCT,HTR_DAC_LIMIT,WRITE_LOSS,REVISED_HTR_DAC_CNTCT,BACKOFF_FLAG
//      P095_WRT_BACKOFF_RESULTS_COL_WIDTH         //          11,        10,        9,                 19,                 19,             15,             15,                   21,           13,        10,                   21,          12
//      P095_WRT_BACKOFF_RESULTS_COL_MASK          //           1,         1,        1,                  1,                  1,              1,              1,                    1,            1,         1,                    1,           1
//      P095_WRT_BACKOFF_RESULTS_COL_TYPES         //           N,         N,        N,                  N,                  N,              N,              N,                    N,            N,         N,                    N,           V
//      P095_WRT_BACKOFF_RESULTS_TABLE_TYPE        // S
#define P352_SINGLE_PARAM_OPTI               1093  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,RGSTR_ID,PRIOR_RGSTR_VAL,PRIOR_BER,FEATURE_OPTI_VAL,BEST_ERR_RATE,CLEARANCE_PCT,SQUEEZE_PCT,SIMPLE_PICK,MOVING_AVG_PICK,QUAD_PICK,SMLR_PICK,SMLR_QUAD_PICK,M_ESTIMATE,META_DATA,TEST_STATUS
//      P352_SINGLE_PARAM_OPTI_COL_WIDTH           //          11,        10,        9,      7,       8,             15,        9,              16,           13,           13,         11,         11,             15,        9,        9,            14,        10,        9,         11
//      P352_SINGLE_PARAM_OPTI_COL_MASK            //           0,         0,        0,      0,       0,              0,        0,               0,            0,            0,          0,          0,              0,        0,        0,             0,         0,        0,          0
//      P352_SINGLE_PARAM_OPTI_COL_TYPES           // *
//      P352_SINGLE_PARAM_OPTI_TABLE_TYPE          // S
#define P109_DFS_BER_STATS                   1094  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RBIT,QM_ERR_BITS,QM_ITRTN_NUM,RRAW_BER,SER,SSER,HARD_BER
//      P109_DFS_BER_STATS_COL_WIDTH               //          11,        11,       10,  10,         13,          13,       9,  9,   9,       9
//      P109_DFS_BER_STATS_COL_MASK                //           1,         1,        1,   1,          1,           1,       1,  1,   1,       1
//      P109_DFS_BER_STATS_COL_TYPES               //           N,         N,        N,   N,          N,           N,       N,  N,   N,       N
//      P109_DFS_BER_STATS_TABLE_TYPE              // S
#define P109_DFS_BER_ID_STATS                1095  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RBIT,QM_ERR_BITS,QM_ITRTN_NUM,RRAW_BER,SER,SSER,HARD_BER
//      P109_DFS_BER_ID_STATS_COL_WIDTH            //          11,        11,       10,  10,         13,          13,       9,  9,   9,       9
//      P109_DFS_BER_ID_STATS_COL_MASK             //           1,         1,        1,   1,          1,           1,       1,  1,   1,       1
//      P109_DFS_BER_ID_STATS_COL_TYPES            //           N,         N,        N,   N,          N,           N,       N,  N,   N,       N
//      P109_DFS_BER_ID_STATS_TABLE_TYPE           // S
#define P109_DFS_ERROR_STATS                 1096  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,UNVFYD_ERR_CNT,RD_VFYD_ERR_CNT,WRT_VFYD_ERR_CNT,MISSED_REVS,LBA_PAD_CNT,SKIPPED_TRKS_CNT
//      P109_DFS_ERROR_STATS_COL_WIDTH             //          11,        11,       10,            15,             16,              17,         12,         12,              17
//      P109_DFS_ERROR_STATS_COL_MASK              //           1,         1,        1,             1,              1,               1,          1,          1,               1
//      P109_DFS_ERROR_STATS_COL_TYPES             //           N,         N,        N,             N,              N,               N,          N,          N,               N
//      P109_DFS_ERROR_STATS_TABLE_TYPE            // S
#define P109_DFS_ERROR_SUMMARY               1097  // UNVFYD_ERR_CNT,RD_VFYD_ERR_CNT,WRT_VFYD_ERR_CNT,MISSED_REVS,LBA_PAD_CNT,SKIPPED_TRKS_CNT
//      P109_DFS_ERROR_SUMMARY_COL_WIDTH           //             14,             17,              18,         13,         13,              18
//      P109_DFS_ERROR_SUMMARY_COL_MASK            //              1,              1,               1,          1,          1,               1
//      P109_DFS_ERROR_SUMMARY_COL_TYPES           //              N,              N,               N,          N,          N,               N
//      P109_DFS_ERROR_SUMMARY_TABLE_TYPE          // S
#define P175_POLY_SERVO_WRT_DELAY            1098  // HD_PHYS_PSN,HD_LGC_PSN,STEP,DELAY,PHYS_STEP_CYL,LGCL_STEP_CYL
//      P175_POLY_SERVO_WRT_DELAY_COL_WIDTH        //          11,        10,   4,    5,           13,           13
//      P175_POLY_SERVO_WRT_DELAY_COL_MASK         //           0,         0,   0,    0,            0,            0
//      P175_POLY_SERVO_WRT_DELAY_COL_TYPES        // *
//      P175_POLY_SERVO_WRT_DELAY_TABLE_TYPE       // S
#define P176_POLY_SERVO_WRT_DELAY            1099  // HD_PHYS_PSN,HD_LGC_PSN,STEP,DELAY,PHYS_STEP_CYL,LGCL_STEP_CYL
//      P176_POLY_SERVO_WRT_DELAY_COL_WIDTH        //          11,        10,   4,    5,           13,           13
//      P176_POLY_SERVO_WRT_DELAY_COL_MASK         //           0,         0,   0,    0,            0,            0
//      P176_POLY_SERVO_WRT_DELAY_COL_TYPES        // *
//      P176_POLY_SERVO_WRT_DELAY_TABLE_TYPE       // S
#define P010_FORCE_CONSTANT_EXT              1100  // ITER,POINT,ZTAB,BDRAG,FORCE_CONSTANT,MIN_BDRAG,MAX_BDRAG,DELTA_BDRAG
//      P010_FORCE_CONSTANT_EXT_COL_WIDTH          //    4,    5,   4,    5,            14,        9,        9,         11
//      P010_FORCE_CONSTANT_EXT_COL_MASK           //    0,    0,   0,    0,             0,        0,        0,          0
//      P010_FORCE_CONSTANT_EXT_COL_TYPES          // *
//      P010_FORCE_CONSTANT_EXT_TABLE_TYPE         // S
#define P135_DETCR_FAULT_COUNT               1101  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,OPTI_CONTACT,REFHEAT,HEATDAC,PHASECHEAT,OVRSHT_AMP,OVRSHT_DUR,WRT_CUR,BF_REF_FLT_CNT,BF_STRESS_FLT_CNT,BF_TWOREV_FLT_CNT,FIO_1ST_SEC_FLT_CNT,FIO_REF_FLT_CNT,FIO_STRESS_FLT_CNT
//      P135_DETCR_FAULT_COUNT_COL_WIDTH           //          11,        9,      7,        10,          13,      7,      7,        10,        10,        10,      7,            14,               17,               17,                 19,             15,                18
//      P135_DETCR_FAULT_COUNT_COL_MASK            //           0,        0,      0,         0,           0,      0,      0,         0,         0,         0,      0,             0,                0,                0,                  0,              0,                 0
//      P135_DETCR_FAULT_COUNT_COL_TYPES           // *
//      P135_DETCR_FAULT_COUNT_TABLE_TYPE          // S
#define P135_MEASUREMENT_DATA2               1102  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,SENSOR_NUM,SENSOR_METHOD,SENSOR_METRIC,SENSOR_AVG_TYPE,OVRSHT_AMP,OVRSHT_DUR,WRT_CUR_DAC,HTR_DAC,DELTA_DAC,TEST_ITERATION,CNTCT_TEST_STAGE,HTR_DAC_STEP_SIZE,CONTACT,TRIP,LIMIT,MEASURED,SNR,RMS_NM,ACTIVE_HEATER,INACTIVE_HEATER_DAC,DETCR_COUNT
//      P135_MEASUREMENT_DATA2_COL_WIDTH           //          11,        9,      7,        10,        10,           13,           13,             15,        10,        10,         11,      7,        9,            14,              16,               17,      7,   7,    7,       8,  7,     9,           13,                 19,         11
//      P135_MEASUREMENT_DATA2_COL_MASK            //           0,        0,      0,         0,         0,            0,            0,              0,         0,         0,          0,      0,        0,             0,               0,                0,      0,   0,    0,       0,  0,     0,            0,                  0,          0
//      P135_MEASUREMENT_DATA2_COL_TYPES           // *
//      P135_MEASUREMENT_DATA2_TABLE_TYPE          // S
#define P135_SEARCH_RESULTS_DAC2             1103  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,NOM_TRK_NUM,RETRY_NUM,POLY_ORDER,WPH_START,WPH_END,WPH_CONTACT,HO_END,HO_CONTACT,WPH_ZONE_LIMIT,HO_ZONE_LIMIT,WPH_INTERVAL,HO_INTERVAL,ERROR_FLAGS,DETECTOR_MASK
//      P135_SEARCH_RESULTS_DAC2_COL_WIDTH         //          11,        10,        9,      7,         11,        9,        10,        9,      7,         11,     6,        10,            14,           13,          12,         11,         11,           13
//      P135_SEARCH_RESULTS_DAC2_COL_MASK          //           0,         0,        0,      0,          0,        0,         0,        0,      0,          0,     0,         0,             0,            0,           0,          0,          0,            0
//      P135_SEARCH_RESULTS_DAC2_COL_TYPES         // *
//      P135_SEARCH_RESULTS_DAC2_TABLE_TYPE        // S
#define P135_FINAL_CONTACT2                  1104  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,MSRD_INTRPLTD,WRT_CNTCT_DAC,RD_CNTCT_DAC,NOM_TRK_NUM,TRK_RADIUS,OVRSHT_AMP,OVRSHT_DUR,WRT_CUR,WRT_FREQ,CONTACT_TEMP,WRT_LOSS,WRT_CLR,RD_CLR,RETRY_COUNT,DETECTOR_MASK,ACTIVE_HEATER,INACTIVE_HEATER_DAC
//      P135_FINAL_CONTACT2_COL_WIDTH              //          11,        9,      7,        10,           13,           13,          12,         11,        10,        10,        10,      7,       8,          12,       8,      7,     7,         11,           13,           13,                 19
//      P135_FINAL_CONTACT2_COL_MASK               //           0,        0,      0,         0,            0,            0,           0,          0,         0,         0,         0,      0,       0,           0,       0,      0,     0,          0,            0,            0,                  0
//      P135_FINAL_CONTACT2_COL_TYPES              // *
//      P135_FINAL_CONTACT2_TABLE_TYPE             // S
#define P135_DETCR_OPTI_SETTINGS             1105  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,WORKING_BIAS,WORKING_GAIN,WORKING_THRL,MEASURED,PARITY,REG15,REG17,REG19,REG1A,WPH
//      P135_DETCR_OPTI_SETTINGS_COL_WIDTH         //          11,        9,      7,        10,          12,          12,          12,       8,     6,    5,    5,    5,    5,  3
//      P135_DETCR_OPTI_SETTINGS_COL_MASK          //           0,        0,      0,         0,           0,           0,           0,       0,     0,    0,    0,    0,    0,  0
//      P135_DETCR_OPTI_SETTINGS_COL_TYPES         // *
//      P135_DETCR_OPTI_SETTINGS_TABLE_TYPE        // S
#define P246_AXIAL_DIST                      1106  // DISC_NBR,CRRO_TRK,HARMONIC,FFT_MAG,FFT_PHASE,MAG_HARM_LMT,OOS
//      P246_AXIAL_DIST_COL_WIDTH                  //        8,       8,       8,      9,        9,          12,  3
//      P246_AXIAL_DIST_COL_MASK                   //        0,       0,       0,      0,        0,           0,  0
//      P246_AXIAL_DIST_COL_TYPES                  // *
//      P246_AXIAL_DIST_TABLE_TYPE                 // S
#define P094_VTH_THRSHLD_SUMMARY             1107  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,BSLN_THRSHLD_DAC,SMOOTHED_THRSHLD_DAC,CALC_THRSHLD_DAC,POLARITY
//      P094_VTH_THRSHLD_SUMMARY_COL_WIDTH         //          11,        10,        9,              16,                  20,              16,       8
//      P094_VTH_THRSHLD_SUMMARY_COL_MASK          //           1,         1,        1,               1,                   1,               1,       1
//      P094_VTH_THRSHLD_SUMMARY_COL_TYPES         //           N,         N,        N,               N,                   N,               N,       N
//      P094_VTH_THRSHLD_SUMMARY_TABLE_TYPE        // S
#define P334_TA_DATA_DETCR                   1108  // DFCT_NUM,HD_PHYS_PSN,HD_LGC_PSN,DETCR_TRK_NUM,TA_TRK_NUM,SRVO_WEDGE,TA_PSN_SFI,TA_LEN_SYMBL,ACT_AVG_AMP,PSV_AVG_AMP,ACT_AFH_MAX_HGT,TA_TYPE,TA_STATUS
//      P334_TA_DATA_DETCR_COL_WIDTH               //        8,         11,        10,           13,        10,        10,        10,          12,         11,         11,             15,      7,        9
//      P334_TA_DATA_DETCR_COL_MASK                //        0,          0,         0,            0,         0,         0,         0,           0,          0,          0,              0,      0,        0
//      P334_TA_DATA_DETCR_COL_TYPES               // *
//      P334_TA_DATA_DETCR_TABLE_TYPE              // S
#define P334_TA_DETCR_DETAIL                 1109  // DFCT_NUM,DWELL_TA,HD_PHYS_PSN,HD_LGC_PSN,DETCR_TRK_NUM,DETCR_UJOG,TA_TRK_NUM,TA_WIDTH_TRKS,SRVO_WEDGE,TA_PSN_SFI,TA_LEN_SYMBL,MAX_TA_TRK,MAX_PSV_TA_TRK,MAX_AVG_AMP,PSV_MAX_AMP,MAX_FLY_HGT,TA_TYPE_NUM,RANK_NUM,RANK_PCT
//      P334_TA_DETCR_DETAIL_COL_WIDTH             //        8,       8,         11,        10,           13,        10,        10,           13,        10,        10,          12,        10,            14,         11,         11,         11,         11,       8,       8
//      P334_TA_DETCR_DETAIL_COL_MASK              //        0,       0,          0,         0,            0,         0,         0,            0,         0,         0,           0,         0,             0,          0,          0,          0,          0,       0,       0
//      P334_TA_DETCR_DETAIL_COL_TYPES             // *
//      P334_TA_DETCR_DETAIL_TABLE_TYPE            // S
#define P238_UJOG_MEAS_SUMMARY               1110  // HEAD,INDEX,PHYS_CYL,LOG_CYL1,LOG_CYL2,LOG_CYL3,LOG_CYL4,LOG_CYL5,MEAS_OFFSET1,MEAS_OFFSET2,MEAS_OFFSET3,MEAS_OFFSET4,MEAS_OFFSET5,MEAN_OFFSET
//      P238_UJOG_MEAS_SUMMARY_COL_WIDTH           //    4,    5,       8,       8,       8,       8,       8,       8,          12,          12,          12,          12,          12,         11
//      P238_UJOG_MEAS_SUMMARY_COL_MASK            //    0,    0,       0,       0,       0,       0,       0,       0,           0,           0,           0,           0,           0,          0
//      P238_UJOG_MEAS_SUMMARY_COL_TYPES           // *
//      P238_UJOG_MEAS_SUMMARY_TABLE_TYPE          // S
#define P172_VCBZ_RAP_SUMMARY                1111  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RD_HT_CORR_DAC,WR_HT_CORR_DAC,WR_PLUS_HT_CORR_DAC
//      P172_VCBZ_RAP_SUMMARY_COL_WIDTH            //          11,        10,       10,            14,            14,                 19
//      P172_VCBZ_RAP_SUMMARY_COL_MASK             //           0,         0,        0,             0,             0,                  0
//      P172_VCBZ_RAP_SUMMARY_COL_TYPES            // *
//      P172_VCBZ_RAP_SUMMARY_TABLE_TYPE           // S
#define P130_SLIP_SCTR_CNT2                  1112  // DRV_SLIP_SCTR_CNT,AVAIL_SPARES,MAX_SCTR_SPARES,MAX_SCTR_SPARES_PCT,MAX_LBA_IN_LIST
//      P130_SLIP_SCTR_CNT2_COL_WIDTH              //                17,          12,             15,                 19,             15
//      P130_SLIP_SCTR_CNT2_COL_MASK               //                 1,           1,              1,                  1,              1
//      P130_SLIP_SCTR_CNT2_COL_TYPES              //                 N,           N,              N,                  N,              N
//      P130_SLIP_SCTR_CNT2_TABLE_TYPE             // S
#define P248_CLEARANCE_SETTLE                1113  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,WRT_CLRNC,DWELL_TIME,HARD_ERR_RATE_SETTLE,RAW_ERR_RATE_SETTLE,HARD_ERR_RATE_TIME_0,RAW_ERR_RATE_TIME_0,RAP_TARGET_WRT_CLRNC,HD_CLRNC_SETTLE,SETTLE_SLOPE,SETTLE_INTERCEPT,SETTLE_R_SQUARED
//      P248_CLEARANCE_SETTLE_COL_WIDTH            //          11,        10,        9,        8,        10,                  20,                 19,                  20,                 19,                  20,             15,          12,              16,              16
//      P248_CLEARANCE_SETTLE_COL_MASK             //           0,         0,        0,        0,         0,                   0,                  0,                   0,                  0,                   0,              0,           0,               0,               0
//      P248_CLEARANCE_SETTLE_COL_TYPES            // *
//      P248_CLEARANCE_SETTLE_TABLE_TYPE           // S
#define P395_AFS_THRESHOLD_SUM3              1114  // HD_PHYS_PSN,ZN_PSN,AFS_VGAR,AFS_THRESHOLD
//      P395_AFS_THRESHOLD_SUM3_COL_WIDTH          //          11,     6,       8,           13
//      P395_AFS_THRESHOLD_SUM3_COL_MASK           //           0,     0,       0,            0
//      P395_AFS_THRESHOLD_SUM3_COL_TYPES          // *
//      P395_AFS_THRESHOLD_SUM3_TABLE_TYPE         // S
#define P395_AFS_THRESHOLD_SUM4              1115  // HD_PHYS_PSN,ZN_PSN,AFS_VGAR_FINAL,AFS_THRES_FINAL
//      P395_AFS_THRESHOLD_SUM4_COL_WIDTH          //          11,     6,            14,             15
//      P395_AFS_THRESHOLD_SUM4_COL_MASK           //           0,     0,             0,              0
//      P395_AFS_THRESHOLD_SUM4_COL_TYPES          // *
//      P395_AFS_THRESHOLD_SUM4_TABLE_TYPE         // S
#define P095_CONCURRENT_AFH                  1116  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,TEST_ITERATION,TEST_MODE,CNTCT_TEST_STAGE,WRT_CUR_DAC,WRT_CUR_OVS_DAC,WRT_CUR_OVS_DUR,HTR_DAC,HSC_1,HSC_2,DELTA_FLY_HGT,COV_PCT,WR_PRE_HEAT,WR_WRITE_HEAT,WR_READ_HEAT,RD_PRE_HEAT,RD_WRITE_HEAT,RD_READ_HEAT
//      P095_CONCURRENT_AFH_COL_WIDTH              //          11,        10,        9,      8,            14,        9,              16,         11,             15,             15,      7,   10,   10,           13,      7,         11,           13,          12,         11,           13,          12
//      P095_CONCURRENT_AFH_COL_MASK               //           1,         1,        1,      1,             1,        1,               1,          1,              1,              1,      1,    1,    1,            1,      1,          0,            0,           0,          0,            0,           0
//      P095_CONCURRENT_AFH_COL_TYPES              //           N,         N,        N,      N,             N,        V,               V,          N,              N,              N,      N,    N,    N,            N,      N
//      P095_CONCURRENT_AFH_TABLE_TYPE             // S
#define P095_HIRP_TRACK_CURVE_FIT            1117  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,TEST_MODE,HTR_DAC_CONTACT,CLRNC_TRGT,GAMMA,STATUS_FLG,FINAL_FLG,RMSE,R_SQR,PART_RMSE_RANGE,PARTITION_COUNT,FITTED_SQR_COEF,FITTED_LIN_COEF,FITTED_BACKOFF_DAC,SLOPE_AT_OP_HEAT,SLOPE_AT_ZERO_HEAT,BAD_POINT_CNT,COV_MEAN,COV_OUTLIERS,TRACK_OUTLIERS,READER_ACTN_CONTACT,EXPLAIN_STATUS,FITTED_INTCP_COEF
//      P095_HIRP_TRACK_CURVE_FIT_COL_WIDTH        //          11,        10,        9,      8,        9,             15,        10,    5,        10,        9,   8,    8,             15,             15,             15,             15,                18,              16,                18,           13,       8,          12,            14,                 19,            31,               17
//      P095_HIRP_TRACK_CURVE_FIT_COL_MASK         //           1,         1,        1,      1,        1,              1,         1,    1,         1,        1,   1,    1,              1,              1,              1,              1,                 1,               1,                 1,            1,       1,           1,             1,                  1,             1,                0
//      P095_HIRP_TRACK_CURVE_FIT_COL_TYPES        //           N,         N,        N,      N,        V,              N,         N,    N,         V,        N,   N,    N,              N,              N,              N,              N,                 N,               N,                 N,            N,       N,           N,             N,                  N,             V
//      P095_HIRP_TRACK_CURVE_FIT_TABLE_TYPE       // S
#define P095_HIRP_HD_SURFACE_FIT             1118  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TEST_MODE,STATUS_FLG,FITTED_SQR_COEF,FITTED_LIN_COEF,FITTED_BACKOFF_DAC,FITTED_SLOPE,RAP_SQR_COEF,RAP_LIN_COEF,RAP_BACKOFF_DAC,RAP_SLOPE
//      P095_HIRP_HD_SURFACE_FIT_COL_WIDTH         //          11,        10,        9,        9,        10,             15,             15,                18,          12,          12,          12,             15,        9
//      P095_HIRP_HD_SURFACE_FIT_COL_MASK          //           1,         1,        1,        1,         1,              1,              1,                 1,           1,           1,           1,              1,        1
//      P095_HIRP_HD_SURFACE_FIT_COL_TYPES         //           N,         N,        N,        V,         V,              N,              N,                 N,           N,           N,           N,              N,        N
//      P095_HIRP_HD_SURFACE_FIT_TABLE_TYPE        // S
#define P238_UJOG_POLYFIT                    1119  // HD_PHYS_PSN,HD_LGC_PSN,POLYFIT_DESC,COEF_C7,COEF_C6,COEF_C5,COEF_C4,COEF_C3,COEF_C2,COEF_C1,COEF_C0,Y_OFFSET,Y_SCALE
//      P238_UJOG_POLYFIT_COL_WIDTH                //          11,        10,          12,      7,      7,      7,      7,      7,      7,      7,      7,       8,      7
//      P238_UJOG_POLYFIT_COL_MASK                 //           0,         0,           0,      0,      0,      0,      0,      0,      0,      0,      0,       0,      0
//      P238_UJOG_POLYFIT_COL_TYPES                // *
//      P238_UJOG_POLYFIT_TABLE_TYPE               // S
#define P134_TA_DETCR_SUM_HD                 1120  // HD_PHYS_PSN,HD_LGC_PSN,DRV_TA_CNT,TA_CNT,PASSIVE_TA_CNT,SERVO_TA_CNT,PBS_TA_CNT,VOID_CNT,MAX_WIDTH,MAX_LENGTH,MAX_HGT_WIDTH,MAX_LGTH_WIDTH,MAX_LGTH_WIDTH_HEIGHT,AMP0_CNT,AMP1_CNT,AMP2_CNT,AMP3_CNT,AMP4_CNT,AMP5_CNT,AMP6_CNT,AMP7_CNT,PASS_FAIL_FLG,MAX_PSV_TA_WIDTH_TRKS,MAX_PSV_TA_TRK_CNT,MAX_INTL_PSV_TA_WIDTH_TRKS,MAX_INTL_PSV_TA_TRK_CNT,PSV_RESCAN_DONE
//      P134_TA_DETCR_SUM_HD_COL_WIDTH             //          11,        10,        10,     6,            14,          12,        10,       8,        9,        10,           13,            14,                   21,       8,       8,       8,       8,       8,       8,       8,       8,           13,                   21,                18,                        26,                     23,             15
//      P134_TA_DETCR_SUM_HD_COL_MASK              //           1,         1,         1,     1,             1,           1,         1,       1,        1,         1,            1,             1,                    1,       1,       1,       1,       1,       1,       1,       1,       1,            1,                    1,                 1,                         1,                      1,              1
//      P134_TA_DETCR_SUM_HD_COL_TYPES             //           N,         N,         N,     N,             N,           N,         N,       N,        N,         N,            N,             N,                    N,       N,       N,       N,       N,       N,       N,       N,       N,            V,                    N,                 N,                         N,                      N,              V
//      P134_TA_DETCR_SUM_HD_TABLE_TYPE            // S
#define P248_CLEARANCE_MEASURE               1121  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,CYCLES_SAMPLES,SAMPLE_TIME,PRE_POST,WRT_CLRNC,DWELL_TIME,HARD_ERR_RATE_SETTLE,RAW_ERR_RATE_SETTLE,HARD_ERR_RATE_TIME_0,RAW_ERR_RATE_TIME_0,RAP_TARGET_WRT_CLRNC,HD_CLRNC_SETTLE,SETTLE_SLOPE,SETTLE_INTERCEPT,SETTLE_R_SQUARED
//      P248_CLEARANCE_MEASURE_COL_WIDTH           //          11,        10,        9,            14,         11,       8,        8,        10,                  20,                 19,                  20,                 19,                  20,             15,          12,              16,              16
//      P248_CLEARANCE_MEASURE_COL_MASK            //           0,         0,        0,             0,          0,       0,        0,         0,                   0,                  0,                   0,                  0,                   0,              0,           0,               0,               0
//      P248_CLEARANCE_MEASURE_COL_TYPES           // *
//      P248_CLEARANCE_MEASURE_TABLE_TYPE          // S
#define P230_VAR_SPARE_ALLOC                 1122  // MEAN_BER_PRE,MEAN_BER_POST,BER_STDEV_PRE,BER_STDEV_POST,BER_PRE_97_PCT,BER_POST_97_PCT,WORST_BER_PRE,WORST_BER_POST,ZONE_CHG_PCT,MIN_SPARE_PCT_PRE,MIN_SPARE_PCT_POST,TOTAL_NUM_BPI_CHG,AVG_BPI_PRE,AVG_BPI_POST,AVG_BPI_DELTA_ALL,AVG_BPI_DELTA_ADJ,MAX_BPI_DELTA,FAIL_CODE,BPI_STEP_SIZE
//      P230_VAR_SPARE_ALLOC_COL_WIDTH             //           12,           13,           13,            14,            14,             15,           13,            14,          12,               17,                18,               17,         11,          12,               17,               17,           13,        9,           13
//      P230_VAR_SPARE_ALLOC_COL_MASK              //            1,            1,            1,             1,             1,              1,            1,             1,           1,                1,                 1,                1,          1,           1,                1,                1,            1,        1,            1
//      P230_VAR_SPARE_ALLOC_COL_TYPES             //            N,            N,            N,             N,             N,              N,            N,             N,           N,                N,                 N,                N,          N,           N,                N,                N,            N,        N,            N
//      P230_VAR_SPARE_ALLOC_TABLE_TYPE            // S
#define P172_FACTORY_HEAD_MEASURE            1123  // HD_PHYS_PSN,HD_LGN_PSN,REVISION,RES_LIMIT,TEMPERATURE,VOLTAGE,CURRENT,RESISTANCE
//      P172_FACTORY_HEAD_MEASURE_COL_WIDTH        //          11,        10,       8,        9,         11,      7,      7,        10
//      P172_FACTORY_HEAD_MEASURE_COL_MASK         //           0,         0,       0,        0,          0,      0,      0,         0
//      P172_FACTORY_HEAD_MEASURE_COL_TYPES        // *
//      P172_FACTORY_HEAD_MEASURE_TABLE_TYPE       // S
#define P047_VCAT_AUDIT_INFO                 1124  // HD_PHYS_PSN,HD_LGC_PSN,ITER_CNT,SIN_COEFF,COS_COEFF
//      P047_VCAT_AUDIT_INFO_COL_WIDTH             //          11,        10,       8,        9,        9
//      P047_VCAT_AUDIT_INFO_COL_MASK              //           0,         0,       0,        0,        0
//      P047_VCAT_AUDIT_INFO_COL_TYPES             // *
//      P047_VCAT_AUDIT_INFO_TABLE_TYPE            // S
#define P172_DUMP_PREAMP                     1125  // *
//      P172_DUMP_PREAMP_COL_WIDTH                 // 2
//      P172_DUMP_PREAMP_COL_MASK                  // 0
//      P172_DUMP_PREAMP_COL_TYPES                 // *
//      P172_DUMP_PREAMP_TABLE_TYPE                // S
#define P070_BER_STATS_DRV                   1126  // MEAN_BER_PRE,MEAN_BER_POST,BER_STDEV_PRE,BER_STDEV_POST,BER_PRE_97_PCT,BER_POST_97_PCT,WORST_BER_PRE,WORST_BER_POST,ZONE_CHG_PCT,TOTAL_NUM_BPI_CHG,AVG_BPI_PRE,AVG_BPI_POST,AVG_BPI_DELTA_ADJ,MAX_BPI_DELTA,FAIL_CODE
//      P070_BER_STATS_DRV_COL_WIDTH               //           12,           13,           13,            14,            14,             15,           13,            14,          12,               17,         11,          12,               17,           13,        9
//      P070_BER_STATS_DRV_COL_MASK                //            1,            1,            1,             1,             1,              1,            1,             1,           1,                1,          1,           1,                1,            1,        1
//      P070_BER_STATS_DRV_COL_TYPES               //            N,            N,            N,             N,             N,              N,            N,             N,           N,                N,          N,           N,                N,            N,        N
//      P070_BER_STATS_DRV_TABLE_TYPE              // S
#define P_FOCUS_MASTER_HEADER                1127  // *
//      P_FOCUS_MASTER_HEADER_COL_WIDTH            // 4
//      P_FOCUS_MASTER_HEADER_COL_MASK             // 0
//      P_FOCUS_MASTER_HEADER_COL_TYPES            // *
//      P_FOCUS_MASTER_HEADER_TABLE_TYPE           // S
#define P_FOCUS_SEGMENT_HEADER               1128  // HD_LGC_PSN,SEGMENT_INDEX,HDR_0,HDR_1,HDR_2,HDR_3,HDR_4,HDR_5,HDR_6,HDR_7,HDR_8,HDR_9,HDR_A,HDR_B,HDR_C,HDR_D,HDR_E,HDR_F,HD_PHYS_PSN
//      P_FOCUS_SEGMENT_HEADER_COL_WIDTH           //         10,           13,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,         11
//      P_FOCUS_SEGMENT_HEADER_COL_MASK            //          0,            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,          0
//      P_FOCUS_SEGMENT_HEADER_COL_TYPES           // *
//      P_FOCUS_SEGMENT_HEADER_TABLE_TYPE          // S
#define P_FOCUS_SEGMENT_DATA                 1129  // *
//      P_FOCUS_SEGMENT_DATA_COL_WIDTH             // 4
//      P_FOCUS_SEGMENT_DATA_COL_MASK              // 0
//      P_FOCUS_SEGMENT_DATA_COL_TYPES             // *
//      P_FOCUS_SEGMENT_DATA_TABLE_TYPE            // S
#define P_FOCUS_STABILITY_HISTGRM            1130  // HD_LGC_PSN,SEEK_PSN,FOCUS_ZONE,BINSTRT,BINEND,COUNT,HD_PHYS_PSN
//      P_FOCUS_STABILITY_HISTGRM_COL_WIDTH        //         10,       8,        10,      7,     7,    6,         11
//      P_FOCUS_STABILITY_HISTGRM_COL_MASK         //          0,       0,         0,      0,     0,    0,          0
//      P_FOCUS_STABILITY_HISTGRM_COL_TYPES        // *
//      P_FOCUS_STABILITY_HISTGRM_TABLE_TYPE       // S
#define P_FOCUS_DELTA_REV_STATS              1131  // HD_LGC_PSN,SEEK_PSN,FOCUS_ZONE,DELTA_REV_MEAN,DELTA_REV_SIGMA,HD_PHYS_PSN
//      P_FOCUS_DELTA_REV_STATS_COL_WIDTH          //         10,       8,        10,            14,             15,         11
//      P_FOCUS_DELTA_REV_STATS_COL_MASK           //          0,       0,         0,             0,              0,          0
//      P_FOCUS_DELTA_REV_STATS_COL_TYPES          // *
//      P_FOCUS_DELTA_REV_STATS_TABLE_TYPE         // S
#define P282_SENSITIVITY_DATA                1132  // HD_PHYS_PSN,FREQUENCY,HD_LGC_PSN,PHASE,MAGNITUDE
//      P282_SENSITIVITY_DATA_COL_WIDTH            //          11,        9,        10,    9,        9
//      P282_SENSITIVITY_DATA_COL_MASK             //           0,        0,         0,    0,        0
//      P282_SENSITIVITY_DATA_COL_TYPES            // *
//      P282_SENSITIVITY_DATA_TABLE_TYPE           // S
#define P282_SENSITIVITY_MARGIN2             1133  // HD_PHYS_PSN,TRK_NUM,FREQUENCY,FREQ_ZONE,HD_LGC_PSN,PHASE,MAGNITUDE,ALLOWED_MAG_LIMIT,STATUS
//      P282_SENSITIVITY_MARGIN2_COL_WIDTH         //          11,      7,        9,        9,        10,   10,       10,               17,     6
//      P282_SENSITIVITY_MARGIN2_COL_MASK          //           1,      1,        1,        1,         1,    1,        1,                1,     1
//      P282_SENSITIVITY_MARGIN2_COL_TYPES         //           N,      N,        N,        N,         N,    N,        N,                N,     N
//      P282_SENSITIVITY_MARGIN2_TABLE_TYPE        // M
#define P351_RESULTS2                        1134  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,PICK_METHOD,T_RISE,T_FALL,PRECOMP,OSD,OS,IW,IW_BOFF,BIE_BER,SQZ_FIVE_PCT_SFR,PDW_IOS
//      P351_RESULTS2_COL_WIDTH                    //          11,        9,      7,        10,         11,     6,     6,      7,  3, 2, 2,      7,      7,              16,      7
//      P351_RESULTS2_COL_MASK                     //           1,        1,      1,         1,          1,     1,     1,      1,  1, 1, 1,      1,      1,               1,      0
//      P351_RESULTS2_COL_TYPES                    //           N,        N,      N,         N,          V,     N,     N,      N,  N, N, N,      N,      N,               N
//      P351_RESULTS2_TABLE_TYPE                   // S
#define P350_ERROR_RATE_BY_ZONE              1135  // HD_PHYS_PSN,DATA_ZONE,ERROR_RATE_TYPE,HD_LGC_PSN,START_TRK_NUM,BITS_READ_LOG10,NON_CVG_CNT,SYNC_ERR_CNT,BITS_IN_ERROR_CNT,RAW_ERROR_RATE,RAW_STDEV,WORST_5PCT_BER,SECTOR_FAILURE_RATE,AVG_ITRTN_PER_CWORD,FAIL_CODE,ZONE_STATUS
//      P350_ERROR_RATE_BY_ZONE_COL_WIDTH          //          11,        9,             15,        10,           13,             15,         11,          12,               16,            14,        9,            14,                 19,                 19,        9,         11
//      P350_ERROR_RATE_BY_ZONE_COL_MASK           //           0,        0,              0,         0,            0,              0,          0,           0,                0,             0,        0,             0,                  0,                  0,        0,          0
//      P350_ERROR_RATE_BY_ZONE_COL_TYPES          // *
//      P350_ERROR_RATE_BY_ZONE_TABLE_TYPE         // S
#define P350_ONCE_AROUND                     1136  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRACK_NUM,1ST_HARMONIC,2ND_HARMONIC,3RD_PLUS_HARMONIC,FAIL_CODE,ZONE_STATUS
//      P350_ONCE_AROUND_COL_WIDTH                 //          11,        9,        10,        9,          12,          12,               17,        9,         11
//      P350_ONCE_AROUND_COL_MASK                  //           0,        0,         0,        0,           0,           0,                0,        0,          0
//      P350_ONCE_AROUND_COL_TYPES                 // *
//      P350_ONCE_AROUND_TABLE_TYPE                // S
#define P350_TWICE_AROUND                    1137  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRACK_NUM,1ST_HARMONIC,2ND_HARMONIC,3RD_PLUS_HARMONIC,FAIL_CODE,ZONE_STATUSw
//      P350_TWICE_AROUND_COL_WIDTH                //          11,        9,        10,        9,          12,          12,               17,        9,          11
//      P350_TWICE_AROUND_COL_MASK                 //           0,        0,         0,        0,           0,           0,                0,        0,           0
//      P350_TWICE_AROUND_COL_TYPES                // *
//      P350_TWICE_AROUND_TABLE_TYPE               // S
#define P_FOCUS_STATS                        1138  // HD_LGC_PSN,SEEK_PSN,FOCUS_ZONE,FOCUS_MEAN,FOCUS_SIGMA,POS_SAT_CNT,NEG_SAT_CNT,HD_PHYS_PSN
//      P_FOCUS_STATS_COL_WIDTH                    //         10,       8,        10,        10,         11,         11,         11,         11
//      P_FOCUS_STATS_COL_MASK                     //          0,       0,         0,         0,          0,          0,          0,          0
//      P_FOCUS_STATS_COL_TYPES                    // *
//      P_FOCUS_STATS_TABLE_TYPE                   // S
#define P_FOCUS_WRT_TO_WRT_STATS             1139  // HD_LGC_PSN,FOCUS_ZONE,WRT_TO_WRT_MEAN,WRT_TO_WRT_SIGMA,HD_PHYS_PSN
//      P_FOCUS_WRT_TO_WRT_STATS_COL_WIDTH         //         10,        10,             15,              16,         11
//      P_FOCUS_WRT_TO_WRT_STATS_COL_MASK          //          0,         0,              0,               0,          0
//      P_FOCUS_WRT_TO_WRT_STATS_COL_TYPES         // *
//      P_FOCUS_WRT_TO_WRT_STATS_TABLE_TYPE        // S
#define P135_DETCR_DETECT                    1140  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,OVRSHT_AMP,OVRSHT_DUR,WRT_CUR_DAC,HTR_DAC,TEST_ITERATION,DETCR_CAPTURED_METHOD,MSRD_THRSHLD_CNT,DETCR_FAULT_CNT,DETCR_THRSHLD,ACTIVE_HEATER,INACTIVE_HEATER_DAC
//      P135_DETCR_DETECT_COL_WIDTH                //          11,        9,      7,        10,        10,        10,         11,      7,            14,                   21,              16,             15,           13,           13,                 19
//      P135_DETCR_DETECT_COL_MASK                 //           0,        0,      0,         0,         0,         0,          0,      0,             0,                    0,               0,              0,            0,            0,                  0
//      P135_DETCR_DETECT_COL_TYPES                // *
//      P135_DETCR_DETECT_TABLE_TYPE               // S
#define P_FOCUS_ENABLE                       1141  // FOCUS_ENABLE
//      P_FOCUS_ENABLE_COL_WIDTH                   //           12
//      P_FOCUS_ENABLE_COL_MASK                    //            0
//      P_FOCUS_ENABLE_COL_TYPES                   // *
//      P_FOCUS_ENABLE_TABLE_TYPE                  // S
#define P063_ERR                             1142  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TARGET_CYL,AV_TT_BER,AV_PCT_SEC_BER_STD,AV_PCT_SEC_BER_RANGE,MAX_PCT_SEC_BER_RANGE
//      P063_ERR_COL_WIDTH                         //          11,        10,        9,        10,        9,                18,                  20,                   21
//      P063_ERR_COL_MASK                          //           0,         0,        0,         0,        0,                 0,                   0,                    0
//      P063_ERR_COL_TYPES                         // *
//      P063_ERR_TABLE_TYPE                        // S
#define P_HEAD_MARGINING_SYSTEM              1143  // CLEARANCE_PCT,SQUEEZE_PCT,SQZ_SERVO_TICKS,MEASURED_BER
//      P_HEAD_MARGINING_SYSTEM_COL_WIDTH          //            13,         11,             15,          12
//      P_HEAD_MARGINING_SYSTEM_COL_MASK           //             0,          0,              0,           0
//      P_HEAD_MARGINING_SYSTEM_COL_TYPES          // *
//      P_HEAD_MARGINING_SYSTEM_TABLE_TYPE         // S
#define P_REGVAL_VS_SWEEP_DATA               1144  // REGISTER_VALUE,MEASURED_BER
//      P_REGVAL_VS_SWEEP_DATA_COL_WIDTH           //             14,          12
//      P_REGVAL_VS_SWEEP_DATA_COL_MASK            //              0,           0
//      P_REGVAL_VS_SWEEP_DATA_COL_TYPES           // *
//      P_REGVAL_VS_SWEEP_DATA_TABLE_TYPE          // S
#define P134_TAGGED_DETCR_SUMMARY            1145  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,TA_PSN_SFI,TA_WEDGE,TA_LENGTH,TA_WIDTH,TA_AMP,TA_TRK_DETECTED_CNT,TA_PASSIVE_AMP_MV,MAX_FLY_HGT,TA_SEVERITY,TA_TYPE_NUM,TRK_RADIUS,TA_SFI_ANGLE,TA_TAGGED
//      P134_TAGGED_DETCR_SUMMARY_COL_WIDTH        //          11,        10,      7,        10,       8,        9,       8,     6,                 19,               17,         11,         11,         11,        10,          13,        9
//      P134_TAGGED_DETCR_SUMMARY_COL_MASK         //           0,         0,      0,         0,       0,        0,       0,     0,                  0,                0,          0,          0,          0,         0,           0,        0
//      P134_TAGGED_DETCR_SUMMARY_COL_TYPES        // *
//      P134_TAGGED_DETCR_SUMMARY_TABLE_TYPE       // S
#define P_FOCUS_AUDIT                        1146  // HD_LGC_PSN,SEEK_PSN,CYL,FOCUS,AGC,READER_READ_HEAT,READER_WRITE_HEAT,WRITER_READ_HEAT,WRITER_WRITE_HEAT,HD_PHYS_PSN
//      P_FOCUS_AUDIT_COL_WIDTH                    //         10,       8,  7,    5,  5,              16,               17,              16,               17,         11
//      P_FOCUS_AUDIT_COL_MASK                     //          0,       0,  0,    0,  0,               0,                0,               0,                0,          0
//      P_FOCUS_AUDIT_COL_TYPES                    // *
//      P_FOCUS_AUDIT_TABLE_TYPE                   // S
#define P_FOCUS_AUDIT_STATS                  1147  // HD_LGC_PSN,SEEK_PSN,FOCUS_MEAN,FOCUS_SIGMA,FOCUS_MABS,HD_PHYS_PSN
//      P_FOCUS_AUDIT_STATS_COL_WIDTH              //         10,       8,        10,         11,        10,         11
//      P_FOCUS_AUDIT_STATS_COL_MASK               //          0,       0,         0,          0,         0,          0
//      P_FOCUS_AUDIT_STATS_COL_TYPES              // *
//      P_FOCUS_AUDIT_STATS_TABLE_TYPE             // S
#define P246_HD_PAIR_INFO                    1148  // DISC_NBR,PAIR_EXISTS,LGC_HD_1_OF_PAIR,LGC_HD_2_OF_PAIR
//      P246_HD_PAIR_INFO_COL_WIDTH                //        8,         11,              16,              16
//      P246_HD_PAIR_INFO_COL_MASK                 //        0,          0,               0,               0
//      P246_HD_PAIR_INFO_COL_TYPES                // *
//      P246_HD_PAIR_INFO_TABLE_TYPE               // S
#define P180_PES_AGC_RSNC                    1149  // HD_PHYS_PSN,FREQ_RANGE_NUM,TRK_NUM,HD_LGC_PSN,LOW_FREQ,HIGH_FREQ,NRRO_FFT_AMP,NRRO_PEAK_PES_FREQ,RRO_FFT_AMP,RRO_PEAK_PES_FREQ,NRAGC_FFT_AMP,NRAGC_PEAK_AGC_FREQ,RAGC_FFT_AMP,RAGC_PEAK_AGC_FREQ,HD_STATUS
//      P180_PES_AGC_RSNC_COL_WIDTH                //          11,            14,      7,        10,       8,        9,          12,                18,         11,               17,           13,                 19,          12,                18,        9
//      P180_PES_AGC_RSNC_COL_MASK                 //           1,             1,      1,         1,       1,        1,           1,                 1,          1,                1,            1,                  1,           1,                 1,        1
//      P180_PES_AGC_RSNC_COL_TYPES                //           N,             N,      N,         N,       N,        N,           N,                 N,          N,                N,            N,                  N,           N,                 N,        N
//      P180_PES_AGC_RSNC_TABLE_TYPE               // S
#define P180_RSNC_SUMMARY2                   1150  // HD_PHYS_PSN,HD_LGC_PSN,MAX_FFT_RRO_AMP,MAX_RRO_FREQ,MAX_RRO_TRK_NUM,MAX_RRO_ZONE,MAX_FFT_NRRO_AMP,MAX_NRRO_FREQ,MAX_NRRO_TRK_NUM,MAX_NRRO_ZONE,MAX_FFT_RAGC_AMP,MAX_RAGC_FREQ,MAX_RAGC_TRK_NUM,MAX_RAGC_ZONE,MAX_FFT_NRAGC_AMP,MAX_NRAGC_FREQ,MAX_NRAGC_TRK_NUM,MAX_NRAGC_ZONE,SYMBOL_INDEX
//      P180_RSNC_SUMMARY2_COL_WIDTH               //          11,        10,             15,          12,             15,          12,              16,           13,              16,           13,              16,           13,              16,           13,               17,            14,               17,            14,          14
//      P180_RSNC_SUMMARY2_COL_MASK                //           1,         1,              1,           1,              1,           1,               1,            1,               1,            1,               1,            1,               1,            1,                1,             1,                1,             1,           1
//      P180_RSNC_SUMMARY2_COL_TYPES               //           N,         N,              N,           N,              N,           V,               N,            N,               N,            V,               N,            N,               N,            V,                N,             N,                N,             V,           N
//      P180_RSNC_SUMMARY2_TABLE_TYPE              // S
#define P063_DVGA_STABILITY                  1151  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TARGET_CYL,AV_TT_VGA,STD_TT_VGA,RANGE_TT_VGA,N_PCT_RANGE_TT_VGA,N_PCT_STD_TT_VGA,FAIL_CODE
//      P063_DVGA_STABILITY_COL_WIDTH              //          11,        10,        9,        10,        9,        10,          12,                18,              16,        9
//      P063_DVGA_STABILITY_COL_MASK               //           0,         0,        0,         0,        0,         0,           0,                 0,               0,        0
//      P063_DVGA_STABILITY_COL_TYPES              // *
//      P063_DVGA_STABILITY_TABLE_TYPE             // S
#define P063_SVGA_STABILITY                  1152  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,AVG_TST_TRK_SVGA,STDEV_TST_TRK_SVGA,RANGE_TST_TRK_SVGA,NORM_RANGE_TST_TRK_SVGA,NORM_STDEV_TST_TRK_SVGA,FAIL_CODE
//      P063_SVGA_STABILITY_COL_WIDTH              //          11,        10,        9,      7,              16,                18,                18,                     23,                     23,        9
//      P063_SVGA_STABILITY_COL_MASK               //           1,         1,        1,      1,               1,                 1,                 1,                      1,                      1,        1
//      P063_SVGA_STABILITY_COL_TYPES              //           N,         N,        N,      N,               N,                 N,                 N,                      N,                      N,        N
//      P063_SVGA_STABILITY_TABLE_TYPE             // S
#define P063_ERR_RATE_STABILITY              1153  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TARGET_CYL,AV_TT_BER,AV_PCT_SEC_BER_STD,AV_PCT_SEC_BER_RANGE,MAX_PCT_SEC_BER_RANGE,FAIL_CODE
//      P063_ERR_RATE_STABILITY_COL_WIDTH          //          11,        10,        9,        10,        9,                18,                  20,                   21,        9
//      P063_ERR_RATE_STABILITY_COL_MASK           //           0,         0,        0,         0,        0,                 0,                   0,                    0,        0
//      P063_ERR_RATE_STABILITY_COL_TYPES          // *
//      P063_ERR_RATE_STABILITY_TABLE_TYPE         // S
#define P255_FIR_LSI_DATA2                   1154  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,TDTARGR,TAP1R,TAP2R,TAP3R,TAP4R,TAP5R,TAP6R,TAP7R,TAP8R,TAP9R,TAP10R,TAP11R,TAP12R,TAP13R,TAP14R,TAP15R,TAP16R,NLTAPR,NYTAPR,DCTAPR,DCAVGR
//      P255_FIR_LSI_DATA2_COL_WIDTH               //          11,        10,   4,      7,    5,    5,    5,    5,    5,    5,    5,    5,    5,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6
//      P255_FIR_LSI_DATA2_COL_MASK                //           1,         1,   1,      1,    1,    1,    1,    1,    1,    1,    1,    1,    1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1
//      P255_FIR_LSI_DATA2_COL_TYPES               //           N,         N,   N,      N,    N,    N,    N,    N,    N,    N,    N,    N,    N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N
//      P255_FIR_LSI_DATA2_TABLE_TYPE              // S
#define P255_FIR_LSI2                        1155  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,TDTARGR,TAP1R,TAP2R,TAP3R,TAP4R,TAP5R,TAP6R,TAP7R,TAP8R,TAP9R,TAP10R,TAP11R,TAP12R,TAP13R,TAP14R,TAP15R,TAP16R,NLTAPR,NYTAPR,DCTAPR,DCAVGR
//      P255_FIR_LSI2_COL_WIDTH                    //          11,        10,   4,      7,    5,    5,    5,    5,    5,    5,    5,    5,    5,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6
//      P255_FIR_LSI2_COL_MASK                     //           0,         0,   0,      0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0
//      P255_FIR_LSI2_COL_TYPES                    // *
//      P255_FIR_LSI2_TABLE_TYPE                   // S
#define P211_COMBINED_CAPABILITY             1156  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ZERO_HEAT_CLR,MEAS_INTERP,BPI_VALID,BPI_CAP,BPI_CAP_SLOPE,TPI_VALID,TPI_CAP,TPI_CAP_SLOPE,HMS_VALID,HMS_CAP,HMS_CAP_SLOPE,HMS_PENALTY
//      P211_COMBINED_CAPABILITY_COL_WIDTH         //          11,        9,        10,           11,         11,        9,      7,           13,        9,      7,           13,        9,      7,           13,         11
//      P211_COMBINED_CAPABILITY_COL_MASK          //           0,        0,         0,            0,          0,        0,      0,            0,        0,      0,            0,        0,      0,            0,          0
//      P211_COMBINED_CAPABILITY_COL_TYPES         // *
//      P211_COMBINED_CAPABILITY_TABLE_TYPE        // S
#define P2109_DFS_HICCUP_SUMMARY             1157  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,FINAL_THRSHLD,FINAL_SLOPE,INIT_THRSHLD,INIT_SLOPE,HICCUP_FLAGS,HICCUP_CNT
//      P2109_DFS_HICCUP_SUMMARY_COL_WIDTH         //          11,        10,        9,           13,         11,          12,        10,          12,        10
//      P2109_DFS_HICCUP_SUMMARY_COL_MASK          //           1,         1,        1,            1,          1,           1,         1,           1,         1
//      P2109_DFS_HICCUP_SUMMARY_COL_TYPES         //           N,         N,        N,            N,          N,           N,         N,           N,         N
//      P2109_DFS_HICCUP_SUMMARY_TABLE_TYPE        // S
#define P071_SERVO_HEAT_CAL_DATA             1158  // HD_PHYS_PSN,HD_LGC_PSN,SRVO_ZONE,ZONE,CYLINDER,HTR_DAC,NO_TMD,OBSERVER_SECTOR_COUNT,PREAMBLE_THRESHOLD,ERROR_CNT
//      P071_SERVO_HEAT_CAL_DATA_COL_WIDTH         //          11,        10,        9,   4,       8,      7,     6,                   21,                18,        9
//      P071_SERVO_HEAT_CAL_DATA_COL_MASK          //           0,         0,        0,   0,       0,      0,     0,                    0,                 0,        0
//      P071_SERVO_HEAT_CAL_DATA_COL_TYPES         // *
//      P071_SERVO_HEAT_CAL_DATA_TABLE_TYPE        // S
#define P071_SERVO_HEAT_COEF                 1159  // HD_PHYS_PSN,HD_LGC_PSN,SRVO_ZONE,POLY_ORDER,MULTIPLIER,COEF_0,COEF_1,COEF_2,COEF_3,COEF_4,COEF_5,COEF_6,COEF_7,COEF_8
//      P071_SERVO_HEAT_COEF_COL_WIDTH             //          11,        10,        9,        10,        10,     8,     8,     8,     8,     8,     8,     8,     8,     8
//      P071_SERVO_HEAT_COEF_COL_MASK              //           0,         0,        0,         0,         0,     0,     0,     0,     0,     0,     0,     0,     0,     0
//      P071_SERVO_HEAT_COEF_COL_TYPES             // *
//      P071_SERVO_HEAT_COEF_TABLE_TYPE            // S
#define P080_DETCR_RESISTANCE                1160  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,ACTIVE_HEATER,HTR_DAC,DETCR_BIAS_DAC,DETCR_RESISTANCE,DELTA_TEMP,RAW_PREAMP_ADC,DETCR_VOLTAGE,DETCR_CURRENT,READER_TEMP
//      P080_DETCR_RESISTANCE_COL_WIDTH            //          11,        10,        9,      8,           13,      7,            14,              16,        10,            14,           13,           13,         12
//      P080_DETCR_RESISTANCE_COL_MASK             //           1,         1,        1,      1,            1,      1,             1,               1,         1,             1,            1,            1,          0
//      P080_DETCR_RESISTANCE_COL_TYPES            //           N,         N,        N,      N,            V,      N,             N,               N,         N,             N,            N,            N
//      P080_DETCR_RESISTANCE_TABLE_TYPE           // S
#define P080_DUAL_HTR_RESISTANCE2            1161  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,ACTIVE_HEATER,HTR_DAC,HTR_CUR_DAC,HTR_PWR,HTR_CURRENT,PREAMP_HTR_RES,HTR_STATUS,MDL_HTR_PWR,MDL_HTR_RESISTANCE,MDL_HTR_TEMP_DELTA
//      P080_DUAL_HTR_RESISTANCE2_COL_WIDTH        //          11,        10,        9,      8,           13,      7,         11,      8,         11,            14,        10,         11,                18,                18
//      P080_DUAL_HTR_RESISTANCE2_COL_MASK         //           1,         1,        1,      1,            1,      1,          1,      1,          1,             1,         1,          1,                 1,                 1
//      P080_DUAL_HTR_RESISTANCE2_COL_TYPES        //           N,         N,        N,      N,            V,      N,          N,      N,          N,             N,         N,          N,                 N,                 N
//      P080_DUAL_HTR_RESISTANCE2_TABLE_TYPE       // S
#define P095_HEAD_MODE_STABILITY             1162  // HD_PHYS_PSN,HD_LGC_PSN,TEST_MODE,STATUS_FLG,TOTAL_TESTED_TRACKS,TOTAL_TESTED_POINTS,RMSE_MEAN,COV_MEAN,FIT_OUTLIER_PCT,COV_OUTLIER_PCT,TRACK_RMSE_FAIL_PCT,TRACK_OUTLIER_FAIL_PCT,TRACK_COV_FAIL_PCT,TOTAL_TRACK_FAIL_PCT,EXPLAIN_STATUS
//      P095_HEAD_MODE_STABILITY_COL_WIDTH         //          11,        10,        9,        10,                 19,                 19,        9,       8,             15,             15,                 19,                    22,                20,                  20,            14
//      P095_HEAD_MODE_STABILITY_COL_MASK          //           1,         1,        1,         1,                  1,                  1,        1,       1,              1,              1,                  1,                     1,                 1,                   1,             1
//      P095_HEAD_MODE_STABILITY_COL_TYPES         //           N,         N,        V,         V,                  N,                  N,        N,       N,              N,              N,                  N,                     N,                 N,                   N,             V
//      P095_HEAD_MODE_STABILITY_TABLE_TYPE        // S
#define P095_HIRP_HEAD_SUMMARY               1163  // HD_PHYS_PSN,HD_LGC_PSN,TEST_MODE,RAP_UPDATE_STATUS_FLG,HEAD_RMSE,HEAD_R_SQR,RMSD_BACKOFF_DAC,EXPLAIN_STATUS
//      P095_HIRP_HEAD_SUMMARY_COL_WIDTH           //          11,        10,        9,                   21,        9,        10,              16,            36
//      P095_HIRP_HEAD_SUMMARY_COL_MASK            //           1,         1,        1,                    1,        1,         1,               1,             1
//      P095_HIRP_HEAD_SUMMARY_COL_TYPES           //           N,         N,        V,                    V,        N,         N,               N,             V
//      P095_HIRP_HEAD_SUMMARY_TABLE_TYPE          // S
#define P095_AGGR_HEAD_STABILITY             1164  // HD_PHYS_PSN,HD_LGC_PSN,INSTABILITY_SCORE,RMSE_MEAN_WEIGHTED,COV_MEAN_WEIGHTED,FIT_OUTLIER_PCT_WEIGHTED,COV_OUTLIER_PCT_WEIGHTED,FAIL_TRACK_PCT_WEIGHTED
//      P095_AGGR_HEAD_STABILITY_COL_WIDTH         //          11,        10,               17,                18,               17,                      24,                      24,                     23
//      P095_AGGR_HEAD_STABILITY_COL_MASK          //           1,         1,                1,                 1,                1,                       1,                       1,                      1
//      P095_AGGR_HEAD_STABILITY_COL_TYPES         //           N,         N,                N,                 N,                N,                       N,                       N,                      N
//      P095_AGGR_HEAD_STABILITY_TABLE_TYPE        // S
#define P236_SMR_FINE_MICROJOG               1165  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,DATA_ZONE,COARSE_UJOG,SMR_UJOG,START_NARROW_TRK_BIE,START_WIDE_TRK_BIE,FINISH_NARROW_TRK_BIE,FINISH_WIDE_TRK_BIE
//      P236_SMR_FINE_MICROJOG_COL_WIDTH           //          11,        10,       8,        4,         11,       8,                  20,                17,                   21,                 19
//      P236_SMR_FINE_MICROJOG_COL_MASK            //           1,         1,       1,        1,          1,       1,                   1,                 1,                    1,                  1
//      P236_SMR_FINE_MICROJOG_COL_TYPES           //           N,         N,       N,        N,          N,       N,                   N,                 N,                    N,                  N
//      P236_SMR_FINE_MICROJOG_TABLE_TYPE          // S
#define P325_THERMAL_ANNEAL                  1166  // HD_PHYS_PSN,HD_LGC_PSN,HEAT_TYPE,TIME_DURATION,HEATER_POWER,HEATER_DAC,MR_RES_PRE,MR_RES_POST,DELTA_MR_RES,PCT_MR_RES,WH_RES_PRE,WH_RES_POST,RH_RES_PRE,RH_RES_POST
//      P325_THERMAL_ANNEAL_COL_WIDTH              //          11,        10,        9,           14,          12,        10,        10,         11,          12,        10,        10,         11,        10,         11
//      P325_THERMAL_ANNEAL_COL_MASK               //           1,         1,        1,            1,           1,         1,         1,          1,           1,         1,         1,          1,         1,          1
//      P325_THERMAL_ANNEAL_COL_TYPES              //           N,         N,        V,            N,           N,         N,         N,          N,           N,         N,         N,          N,         N,          N
//      P325_THERMAL_ANNEAL_TABLE_TYPE             // S
#define P061_OW_MEASUREMENT                  1167  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,HSC_2T,DEV_2T,DEV_DIV_AVE_2T,HSC_MIN_2T,MIN_2T_SS,HSC_MAX_2T,MAX_2T_SS,DELTA_2T,HSC_13T,DEV_13T,DEV_DIV_AVE_13T,OW,MODE
//      P061_OW_MEASUREMENT_COL_WIDTH              //          11,        9,        10,      7,    13,    17,            17,        13,       13,        13,       13,      13,     13,     17,             17,17,  10
//      P061_OW_MEASUREMENT_COL_MASK               //           0,        0,         0,      0,     0,     0,             0,         0,        0,         0,        0,       0,      0,      0,              0, 0,   0
//      P061_OW_MEASUREMENT_COL_TYPES              // *
//      P061_OW_MEASUREMENT_TABLE_TYPE             // M
#define P210_SWEEP_ERR_RATE                  1168  // HD_LGC_PSN,DATA_ZONE,ITERATION,VBAR_TPI,VBAR_BPI,ERR_RATE,HD_PHYS_PSN
//      P210_SWEEP_ERR_RATE_COL_WIDTH              //         10,        9,        9,       8,       8,       8,         11
//      P210_SWEEP_ERR_RATE_COL_MASK               //          0,        0,        0,       0,       0,       0,          0
//      P210_SWEEP_ERR_RATE_COL_TYPES              // *
//      P210_SWEEP_ERR_RATE_TABLE_TYPE             // S
#define P210_TPI_THRESHOLD                   1169  // HD_LGC_PSN,DATA_ZONE,THRESHOLD,HD_PHYS_PSN
//      P210_TPI_THRESHOLD_COL_WIDTH               //         10,        9,        9,         11
//      P210_TPI_THRESHOLD_COL_MASK                //          0,        0,        0,          0
//      P210_TPI_THRESHOLD_COL_TYPES               // *
//      P210_TPI_THRESHOLD_TABLE_TYPE              // S
#define P210_BPI_CAPABILITY                  1170  // HD_LGC_PSN,DATA_ZONE,BPIC,HD_PHYS_PSN
//      P210_BPI_CAPABILITY_COL_WIDTH              //         10,        9,   4,         11
//      P210_BPI_CAPABILITY_COL_MASK               //          0,        0,   0,          0
//      P210_BPI_CAPABILITY_COL_TYPES              // *
//      P210_BPI_CAPABILITY_TABLE_TYPE             // S
#define P069_EWAC_HSC                        1171  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,HSC_DATA,OFFSET
//      P069_EWAC_HSC_COL_WIDTH                    //          11,        9,        10,      7,      13,    17
//      P069_EWAC_HSC_COL_MASK                     //           0,        0,         0,      0,       0,     0
//      P069_EWAC_HSC_COL_TYPES                    // *
//      P069_EWAC_HSC_TABLE_TYPE                   // M
#define P083_AGC                             1172  // HD_PHYS_PSN,HD_LGC_PSN,WEDGE_NUM,TRK_NUM,MIN_MA_AGC,MAX_MA_AGC,DELTA_MA_AGC,HD_STATUS
//      P083_AGC_COL_WIDTH                         //          11,        10,        9,      7,        10,        10,          12,        9
//      P083_AGC_COL_MASK                          //           1,         1,        1,      1,         1,         1,           1,        1
//      P083_AGC_COL_TYPES                         //           N,         N,        N,      N,         N,         N,           N,        N
//      P083_AGC_TABLE_TYPE                        // S
#define P295_INSTABILITY_GROUPS              1173  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,LPF,SQZ_OFST,FLY_HGT_PCT,RD_HEAT,THRSHLD,PATTERN,GROUP_0_CNT,GROUP_0_SUM,GROUP_1_CNT,GROUP_1_SUM,GROUP_2_CNT,GROUP_2_SUM,GROUP_3_CNT,GROUP_3_SUM,GROUP_4_CNT,GROUP_4_SUM
//      P295_INSTABILITY_GROUPS_COL_WIDTH          //          11,        10,        9,      7,  5,       8,         11,      7,      7,      7,         11,         11,         11,         11,         11,         11,         11,         11,         11,         11
//      P295_INSTABILITY_GROUPS_COL_MASK           //           1,         1,        1,      1,  1,       1,          1,      1,      1,      1,          1,          1,          1,          1,          1,          1,          1,          1,          1,          1
//      P295_INSTABILITY_GROUPS_COL_TYPES          //           N,         N,        N,      N,  N,       N,          N,      N,      N,      N,          N,          N,          N,          N,          N,          N,          N,          N,          N,          N
//      P295_INSTABILITY_GROUPS_TABLE_TYPE         // S
#define P072_VMM_DATA                        1174  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,ITERATION,VMM_DATA,DATA_TYPE
//      P072_VMM_DATA_COL_WIDTH                    //          11,        9,      7,        9,       8,        9
//      P072_VMM_DATA_COL_MASK                     //           0,        0,      0,        0,       0,        0
//      P072_VMM_DATA_COL_TYPES                    // *
//      P072_VMM_DATA_TABLE_TYPE                   // M
#define P072_VMM_STATS                       1175  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HEATER_POW,RAW_VMM_STDEV,DELTA_VMM_STDEV,VMM_STDEV_THRESH
//      P072_VMM_STATS_COL_WIDTH                   //          11,        9,      7,        10,           13,             15,              18
//      P072_VMM_STATS_COL_MASK                    //           0,        0,      0,         0,            0,              0,               0
//      P072_VMM_STATS_COL_TYPES                   // *
//      P072_VMM_STATS_TABLE_TYPE                  // M
#define P072_SUMMARY                         1176  // HD_PHYS_PSN,HD_STATUS
//      P072_SUMMARY_COL_WIDTH                     //          11,        9
//      P072_SUMMARY_COL_MASK                      //           0,        0
//      P072_SUMMARY_COL_TYPES                     // *
//      P072_SUMMARY_TABLE_TYPE                    // V
#define P072_MRE_DATA                        1177  // HD_PHYS_PSN,WRT_HEATER_POW,RD_HEATER_POW,NEW_MRE_RESISTANCE,REF_MRE_RESISTANCE
//      P072_MRE_DATA_COL_WIDTH                    //          11,            14,           13,                18,                18
//      P072_MRE_DATA_COL_MASK                     //           0,             0,            0,                 0,                 0
//      P072_MRE_DATA_COL_TYPES                    // *
//      P072_MRE_DATA_TABLE_TYPE                   // V
#define P251_DIBIT_OPTI_VALUES2              1178  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,LATE0R_VALUE,LATE0F_VALUE,LATE1R_VALUE,LATE1F_VALUE,LATE2R_VALUE,LATE2F_VALUE
//      P251_DIBIT_OPTI_VALUES2_COL_WIDTH          //          11,        9,        10,          12,          12,          12,          12,          12,          12
//      P251_DIBIT_OPTI_VALUES2_COL_MASK           //           0,        0,         0,           0,           0,           0,           0,           0,           0
//      P251_DIBIT_OPTI_VALUES2_COL_TYPES          // *
//      P251_DIBIT_OPTI_VALUES2_TABLE_TYPE         // S
#define P292_HSC                             1179  // HD_PHYS_PSN,DATA_ZONE,POINT_NUM,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,RADIUS,HTR_DAC,HSC_MSRD_HIRP,COEF_CALC_HIRP,HSC_MSRD_WIRP,COEF_CALC_WIRP,HTR_TAU_USECS,HTR_TAU_CORR_COEF,TRY_CNT,WHIRP_POINT_CNT,WRT_CUR,WRT_DUMP,WRT_DUMPDUR,ACTIVE_HEATER,INACTIVE_HEATER_DAC
//      P292_HSC_COL_WIDTH                         //          11,        9,        9,        10,         11,         11,     6,      7,           13,            14,           13,            14,           13,               17,      7,             15,      7,       8,         11,           13,                 19
//      P292_HSC_COL_MASK                          //           0,        0,        0,         0,          0,          0,     0,      0,            0,             0,            0,             0,            0,                0,      0,              0,      0,       0,          0,            0,                  0
//      P292_HSC_COL_TYPES                         // *
//      P292_HSC_TABLE_TYPE                        // M
#define P292_HSC_COMPOUND                    1180  // HD_PHYS_PSN,DATA_ZONE,POINT_NUM,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,RADIUS,HTR_DAC,HSC_MSRD_HIRP,COEF_CALC_HIRP,HSC_MSRD_WIRP,COEF_CALC_WIRP,HTR_TAU_USECS,HTR_TAU_CORR_COEF,TRY_CNT,WHIRP_POINT_CNT,WRT_CUR,WRT_DUMP,WRT_DUMPDUR,ACTIVE_HEATER,INACTIVE_HEATER_DAC
//      P292_HSC_COMPOUND_COL_WIDTH                //          11,        9,        9,        10,         11,         11,     6,      7,           13,            14,           13,            14,           13,               17,      7,             15,      7,       8,         11,           13,                 19
//      P292_HSC_COMPOUND_COL_MASK                 //           0,        0,        0,         0,          0,          0,     0,      0,            0,             0,            0,             0,            0,                0,      0,              0,      0,       0,          0,            0,                  0
//      P292_HSC_COMPOUND_COL_TYPES                // *
//      P292_HSC_COMPOUND_TABLE_TYPE               // M
#define P292_DELTA_WL                        1181  // HD_PHYS_PSN,ZN_PSN,DF_WC,DF_DUMP,DF_DUR,N_WC,N_DUMP,N_DUR,DELTA_WL,DF_WPHCLR,N_WPHCLR
//      P292_DELTA_WL_COL_WIDTH                    //          11,     6,    5,      7,     6,   4,     6,    5,       8,        9,       8
//      P292_DELTA_WL_COL_MASK                     //           0,     0,    0,      0,     0,   0,     0,    0,       0,        0,       0
//      P292_DELTA_WL_COL_TYPES                    // *
//      P292_DELTA_WL_TABLE_TYPE                   // M
#define P285_HUNT_SEEK_ERR                   1182  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SEEK_RETRY_CNT,TRK_RETRY_CNT,LOOP_CODE,SENSE_DATA,FINAL_SEEK_STATUS
//      P285_HUNT_SEEK_ERR_COL_WIDTH               //          11,        10,      7,            14,           13,        9,        10,               17
//      P285_HUNT_SEEK_ERR_COL_MASK                //           0,         0,      0,             0,            0,        0,         0,                0
//      P285_HUNT_SEEK_ERR_COL_TYPES               // *
//      P285_HUNT_SEEK_ERR_TABLE_TYPE              // S
#define P285_V3BAR_ID_DATA                   1183  // HD_PHYS_PSN,TARGET_CYL,INTEGRATOR,CUR_SLOPE,AVG_SLOPE
//      P285_V3BAR_ID_DATA_COL_WIDTH               //          11,        10,        10,        9,        9
//      P285_V3BAR_ID_DATA_COL_MASK                //           0,         0,         0,        0,        0
//      P285_V3BAR_ID_DATA_COL_TYPES               // *
//      P285_V3BAR_ID_DATA_TABLE_TYPE              // S
#define P285_RAMP_HARM_DATA                  1184  // HD_PHYS_PSN,HD_LGC_PSN,TARGET_CYL,ACFF_2F,ACFF_3F,ACFF_4F,ACFF_5F,AGC_AVG
//      P285_RAMP_HARM_DATA_COL_WIDTH              //          11,        10,        10,      7,      7,      7,      7,      7
//      P285_RAMP_HARM_DATA_COL_MASK               //           0,         0,         0,      0,      0,      0,      0,      0
//      P285_RAMP_HARM_DATA_COL_TYPES              // *
//      P285_RAMP_HARM_DATA_TABLE_TYPE             // S
#define P285_RAMP_DETECT_THRSHLD             1185  // HD_PHYS_PSN,HD_LGC_PSN,HI_2F_THRESH,LO_2F_THRESH,HI_3F_THRESH,LO_3F_THRESH,HI_4F_THRESH,LO_4F_THRESH,HI_5F_THRESH,LO_5F_THRESH
//      P285_RAMP_DETECT_THRSHLD_COL_WIDTH         //          11,        10,          12,          12,          12,          12,          12,          12,          12,          12
//      P285_RAMP_DETECT_THRSHLD_COL_MASK          //           0,         0,           0,           0,           0,           0,           0,           0,           0,           0
//      P285_RAMP_DETECT_THRSHLD_COL_TYPES         // *
//      P285_RAMP_DETECT_THRSHLD_TABLE_TYPE        // S
#define P285_RAMP_DETECT_DATA                1186  // HD_PHYS_PSN,HD_LGC_PSN,ITERATION,TARGET_CYL,ACFF_2F,ACFF_3F,ACFF_4F,ACFF_5F,NUM_FREQ_EXC,BREAK_CNT
//      P285_RAMP_DETECT_DATA_COL_WIDTH            //          11,        10,        9,        10,      7,      7,      7,      7,          12,        9
//      P285_RAMP_DETECT_DATA_COL_MASK             //           1,         1,        1,         1,      1,      1,      1,      1,           1,        1
//      P285_RAMP_DETECT_DATA_COL_TYPES            //           N,         N,        N,         N,      N,      N,      N,      N,           N,        N
//      P285_RAMP_DETECT_DATA_TABLE_TYPE           // S
#define P285_OD_SUMMARY                      1187  // HD_PHYS_PSN,HD_LGC_PSN,RAMP_CYL,RAMP_RANGE,NUM_HDS,LIFT_CYL
//      P285_OD_SUMMARY_COL_WIDTH                  //          11,        10,       8,        10,      7,       8
//      P285_OD_SUMMARY_COL_MASK                   //           0,         0,       0,         0,      0,       0
//      P285_OD_SUMMARY_COL_TYPES                  // *
//      P285_OD_SUMMARY_TABLE_TYPE                 // S
#define P285_ID_SUMMARY                      1188  // HD_PHYS_PSN,HD_LGC_PSN,ID_DETECT_CYL,MIN_TRK_ID,MAX_TRK_ID
//      P285_ID_SUMMARY_COL_WIDTH                  //          11,        10,           13,        10,        10
//      P285_ID_SUMMARY_COL_MASK                   //           0,         0,            0,         0,         0
//      P285_ID_SUMMARY_COL_TYPES                  // *
//      P285_ID_SUMMARY_TABLE_TYPE                 // S
#define P285_OST_SUMMARY                     1189  // HD_PHYS_PSN,HD_LGC_PSN,HD_VALID,ORIG_OST,NEW_OST,MEAS_MAX_CYL,NOM_MAX_CYL,TPI_RATIO
//      P285_OST_SUMMARY_COL_WIDTH                 //          11,        10,       8,       8,      7,          12,         11,        9
//      P285_OST_SUMMARY_COL_MASK                  //           0,         0,       0,       0,      0,           0,          0,        0
//      P285_OST_SUMMARY_COL_TYPES                 // *
//      P285_OST_SUMMARY_TABLE_TYPE                // S
#define P285_TRK_0_V3BAR_CAL_HD              1190  // HD_PHYS_PSN,HD_LGC_PSN,TRK_DC_OFST,RAMP_CYL,CRASH_STOP_CYL,TRK_0_CYL,PHYS_MAX_CYL,RAW_STROKE,OD_GAIN,ID_GAIN,ID_PAD,LIFT_CYL
//      P285_TRK_0_V3BAR_CAL_HD_COL_WIDTH          //          11,        10,         11,       8,            14,        9,          12,        10,      7,      7,     6,       8
//      P285_TRK_0_V3BAR_CAL_HD_COL_MASK           //           1,         1,          1,       1,             1,        1,           1,         1,      1,      1,     1,       1
//      P285_TRK_0_V3BAR_CAL_HD_COL_TYPES          //           N,         N,          N,       N,             N,        N,           N,         N,      N,      N,     N,       N
//      P285_TRK_0_V3BAR_CAL_HD_TABLE_TYPE         // S
#define P285_VTPI_POLY_COEFS                 1191  // NUM_VTPI_COEF,PRE_NOM_TO_VCAT_COEF_0,PRE_NOM_TO_VCAT_COEF_1,PRE_NOM_TO_VCAT_COEF_2,PRE_NOM_TO_VCAT_COEF_3,PRE_NOM_TO_VCAT_COEF_4,PRE_NOM_TO_VCAT_COEF_5,PRE_NOM_TO_VCAT_COEF_6,POST_NOM_TO_VCAT_COEF_0,POST_NOM_TO_VCAT_COEF_1,POST_NOM_TO_VCAT_COEF_2,POST_NOM_TO_VCAT_COEF_3,POST_NOM_TO_VCAT_COEF_4,POST_NOM_TO_VCAT_COEF_5,POST_NOM_TO_VCAT_COEF_6,POST_TPI_SCALING_COEF_0,POST_TPI_SCALING_COEF_1,POST_TPI_SCALING_COEF_2,POST_TPI_SCALING_COEF_3,POST_TPI_SCALING_COEF_4,POST_TPI_SCALING_COEF_5,POST_TPI_SCALING_COEF_6
//      P285_VTPI_POLY_COEFS_COL_WIDTH             //            13,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23
//      P285_VTPI_POLY_COEFS_COL_MASK              //             1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1
//      P285_VTPI_POLY_COEFS_COL_TYPES             //             N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N
//      P285_VTPI_POLY_COEFS_TABLE_TYPE            // S
#define P285_OFFSET_SUMMARY                  1192  // HD_PHYS_PSN,HD_LGC_PSN,HD_OFFSET
//      P285_OFFSET_SUMMARY_COL_WIDTH              //          11,        10,        9
//      P285_OFFSET_SUMMARY_COL_MASK               //           1,         1,        1
//      P285_OFFSET_SUMMARY_COL_TYPES              //           N,         N,        N
//      P285_OFFSET_SUMMARY_TABLE_TYPE             // S
#define P285_DEFAULTS                        1193  // DFLT_MAX_CYLINDER,DFLT_TRK_0
//      P285_DEFAULTS_COL_WIDTH                    //                17,        10
//      P285_DEFAULTS_COL_MASK                     //                 0,         0
//      P285_DEFAULTS_COL_TYPES                    // *
//      P285_DEFAULTS_TABLE_TYPE                   // S
#define P285_RAMP_CYL_SUMMARY                1194  // ITERATION,RAMP_CYL,LGC_HD_RAMP,OFFSET,LIFT_CYL
//      P285_RAMP_CYL_SUMMARY_COL_WIDTH            //         9,       8,         11,     6,       8
//      P285_RAMP_CYL_SUMMARY_COL_MASK             //         0,       0,          0,     0,       0
//      P285_RAMP_CYL_SUMMARY_COL_TYPES            // *
//      P285_RAMP_CYL_SUMMARY_TABLE_TYPE           // S
#define P285_IDCS_SUMMARY                    1195  // MAX_CYL_IDCS,MAX_CYL_HD,MIN_CYL_IDCS,MIN_CYL_HD,MAX_MIN_DELTA,ALLOWABLE_DELTA
//      P285_IDCS_SUMMARY_COL_WIDTH                //           12,        10,          12,        10,           13,             15
//      P285_IDCS_SUMMARY_COL_MASK                 //            0,         0,           0,         0,            0,              0
//      P285_IDCS_SUMMARY_COL_TYPES                // *
//      P285_IDCS_SUMMARY_TABLE_TYPE               // S
#define P315_CAL_THRSHLD_PICK_SMR            1196  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,OD_TRK_NUM,OD_PICK_MIN,OD_PICK_MAX,OD_PICK_MEAN,OD_PICK_MIN_FAT,OD_PICK_MAX_FAT,OD_PICK_MEAN_FAT,ID_TRK_NUM,ID_PICK_MIN,ID_PICK_MAX,ID_PICK_MEAN,ID_PICK_MIN_FAT,ID_PICK_MAX_FAT,ID_PICK_MEAN_FAT,BIE_SLOPE,BIE_SLOPE_FAT
//      P315_CAL_THRSHLD_PICK_SMR_COL_WIDTH        //          11,        10,        9,        10,         11,         11,          12,             15,             15,              16,        11,         11,         11,          12,             15,             15,              16,        9,           13
//      P315_CAL_THRSHLD_PICK_SMR_COL_MASK         //           0,         0,        0,         0,          0,          0,           0,              0,              0,               0,         0,          0,          0,           0,              0,              0,               0,        0,            0
//      P315_CAL_THRSHLD_PICK_SMR_COL_TYPES        // *
//      P315_CAL_THRSHLD_PICK_SMR_TABLE_TYPE       // S
#define P315_CAL_THRSHLD_SMR                 1197  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,OD_TRK_NUM,OD_BIE_MEAN,OD_BIE_STDEV,OD_ADJ_MEAN,OD_BIE_MEAN_FAT,OD_BIE_STDEV_FAT,OD_ADJ_MEAN_FAT,ID_TRK_NUM,ID_BIE_MEAN,ID_BIE_STDEV,ID_ADJ_MEAN,ID_BIE_MEAN_FAT,ID_BIE_STDEV_FAT,ID_ADJ_MEAN_FAT,BIE_SLOPE,BIE_SLOPE_FAT
//      P315_CAL_THRSHLD_SMR_COL_WIDTH             //          11,        10,        9,        10,         11,          12,         11,             15,              16,             15,        10,         11,          12,         11,             15,              16,             15,        9,           13
//      P315_CAL_THRSHLD_SMR_COL_MASK              //           0,         0,        0,         0,          0,           0,          0,              0,               0,              0,         0,          0,           0,          0,              0,               0,              0,        0,            0
//      P315_CAL_THRSHLD_SMR_COL_TYPES             // *
//      P315_CAL_THRSHLD_SMR_TABLE_TYPE            // S
#define P321_BIAS_VOLTAGE_MODE               1198  // HD_PHYS_PSN,HD_LGC_PSN,BIAS_VOLTAGE,VOLTAGE_DAC
//      P321_BIAS_VOLTAGE_MODE_COL_WIDTH           //          11,        10,          12,         11
//      P321_BIAS_VOLTAGE_MODE_COL_MASK            //           1,         1,           1,          1
//      P321_BIAS_VOLTAGE_MODE_COL_TYPES           //           N,         N,           N,          N
//      P321_BIAS_VOLTAGE_MODE_TABLE_TYPE          // S
#define P109_TRACK_DATA                      1199  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,THRESHOLD,UNVER_CNTS,VER_CNTS
//      P109_TRACK_DATA_COL_WIDTH                  //          11,        10,        9,      7,        9,        10,       8
//      P109_TRACK_DATA_COL_MASK                   //           0,         0,        0,      0,        0,         0,       0
//      P109_TRACK_DATA_COL_TYPES                  // *
//      P109_TRACK_DATA_TABLE_TYPE                 // S
#define P109_THRESHOLD_DATA                  1200  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,THRESHOLD,NUM_TEST_TRACK,TOT_UNVER_CNTS,TOT_VER_CNTS,BAD_TRACK,QUAL_TRACK,QUAL_CNT,STATUS
//      P109_THRESHOLD_DATA_COL_WIDTH              //          11,        10,        9,        9,            14,            14,          12,        9,        10,       8,     6
//      P109_THRESHOLD_DATA_COL_MASK               //           0,         0,        0,        0,             0,             0,           0,        0,         0,       0,     0
//      P109_THRESHOLD_DATA_COL_TYPES              // *
//      P109_THRESHOLD_DATA_TABLE_TYPE             // M
#define P109_THRESHOLD_SUM                   1201  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ADAPT_VGAR,ORIG_THRES,NEW_THRES,NUM_TEST_TRACK,TOT_UNVER_CNTS,TOT_VER_CNTS,BAD_TRACK,QUAL_TRACK,QUAL_CNT,STATUS
//      P109_THRESHOLD_SUM_COL_WIDTH               //          11,        10,        9,        10,        10,        9,            14,            14,          12,        9,        10,       8,     6
//      P109_THRESHOLD_SUM_COL_MASK                //           0,         0,        0,         0,         0,        0,             0,             0,           0,        0,         0,       0,     0
//      P109_THRESHOLD_SUM_COL_TYPES               // *
//      P109_THRESHOLD_SUM_TABLE_TYPE              // M
#define P295_ADC_THRES_DATA                  1202  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,LOOP,ADC_START,ADC_END,VGAR,ADJ_VGAR,COEF_C,COEF_B,COEF_A,RSQD,OPTIMUM_ADC
//      P295_ADC_THRES_DATA_COL_WIDTH              //          11,        10,        9,      7,   4,        9,      7,   4,       8,     6,     6,     6,   4,         11
//      P295_ADC_THRES_DATA_COL_MASK               //           0,         0,        0,      0,   0,        0,      0,   0,       0,     0,     0,     0,   0,          0
//      P295_ADC_THRES_DATA_COL_TYPES              // *
//      P295_ADC_THRES_DATA_TABLE_TYPE             // M
#define P337_OVERWRITE                       1203  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,OVERWRITE,HD_STATUS
//      P337_OVERWRITE_COL_WIDTH                   //          11,        9,        10,      7,        9,        9
//      P337_OVERWRITE_COL_MASK                    //           1,        1,         1,      1,        1,        1
//      P337_OVERWRITE_COL_TYPES                   //           N,        N,         N,      N,        N,        N
//      P337_OVERWRITE_TABLE_TYPE                  // S
#define P337_OVERWRITE_PER_SECTOR            1204  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,SECTOR,OVERWRITE
//      P337_OVERWRITE_PER_SECTOR_COL_WIDTH        //          11,        9,        10,      7,     6,        9
//      P337_OVERWRITE_PER_SECTOR_COL_MASK         //           1,        1,         1,      1,     1,        1
//      P337_OVERWRITE_PER_SECTOR_COL_TYPES        //           N,        N,         N,      N,     N,        N
//      P337_OVERWRITE_PER_SECTOR_TABLE_TYPE       // S
#define P2109_DFS_HICCUP_SUM_SMR             1205  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,FINAL_THRSHLD,FINAL_SLOPE,INIT_THRSHLD,INIT_SLOPE,FINAL_THRSHLD_FAT,FINAL_SLOPE_FAT,INIT_THRSHLD_FAT,INIT_SLOPE_FAT,HICCUP_FLAGS,HICCUP_CNT
//      P2109_DFS_HICCUP_SUM_SMR_COL_WIDTH         //          11,        10,        9,           13,         11,          12,        10,               17,             15,              16,            14,          12,        10
//      P2109_DFS_HICCUP_SUM_SMR_COL_MASK          //           1,         1,        1,            1,          1,           1,         1,                1,              1,               1,             1,           1,         1
//      P2109_DFS_HICCUP_SUM_SMR_COL_TYPES         //           N,         N,        N,            N,          N,           N,         N,                N,              N,               N,             N,           N,         N
//      P2109_DFS_HICCUP_SUM_SMR_TABLE_TYPE        // S
#define P010_TEMPERATURE                     1206  // START_TEMP,END_TEMP
//      P010_TEMPERATURE_COL_WIDTH                 //         10,       8
//      P010_TEMPERATURE_COL_MASK                  //          0,       0
//      P010_TEMPERATURE_COL_TYPES                 // *
//      P010_TEMPERATURE_TABLE_TYPE                // S
#define P232_NOMINAL_PZT_VALUES              1207  // NOMINAL_PZT_GAIN,NOMINAL_PZT_STROKE
//      P232_NOMINAL_PZT_VALUES_COL_WIDTH          //               16,                18
//      P232_NOMINAL_PZT_VALUES_COL_MASK           //                0,                 0
//      P232_NOMINAL_PZT_VALUES_COL_TYPES          // *
//      P232_NOMINAL_PZT_VALUES_TABLE_TYPE         // S
#define P246_AXIAL_DISTORTION                1208  // DISC_NUM,CRRO_TRK,HARMONIC,FFT_MAG,FFT_PHASE,MAG_HARM_LIMIT,OOS
//      P246_AXIAL_DISTORTION_COL_WIDTH            //        8,       8,       8,      9,        9,            14,  3
//      P246_AXIAL_DISTORTION_COL_MASK             //        1,       1,       1,      1,        1,             1,  1
//      P246_AXIAL_DISTORTION_COL_TYPES            //        N,       N,       N,      N,        N,             N,  V
//      P246_AXIAL_DISTORTION_TABLE_TYPE           // S
#define P063_BER_STABILITY                   1209  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,AVG_TST_TRK_BER,AVG_NORM_SCTR_BER_STDEV,AVG_NORM_SCTR_BER_RANGE,MAX_NORM_SCTR_BER_RANGE,FAIL_CODE,MAX_SCTR_BER_RANGE,AVG_TST_TRK_BIE,AVG_SCTR_BIE_STDEV,MAX_SCTR_BIE_STDEV,QNTL_SCTR_BIE_STDEV,AVG_SCTR_BIE_RANGE,MAX_SCTR_BIE_RANGE,QNTL_SCTR_BIE_RANGE
//      P063_BER_STABILITY_COL_WIDTH               //          11,        10,        9,      7,             15,                     23,                     23,                     23,        9,                18,             15,                18,                18,                 19,                18,                18,                 19
//      P063_BER_STABILITY_COL_MASK                //           1,         1,        1,      1,              1,                      1,                      1,                      1,        1,                 1,              1,                 1,                 1,                  1,                 1,                 1,                  1
//      P063_BER_STABILITY_COL_TYPES               //           N,         N,        N,      N,              N,                      N,                      N,                      N,        N,                 N,              N,                 N,                 N,                  N,                 N,                 N,                  N
//      P063_BER_STABILITY_TABLE_TYPE              // S
#define P063_DATA_VGA_STABILITY              1210  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,AVG_TST_TRK_VGA,STDEV_TST_TRK_VGA,RANGE_TST_TRK_VGA,NORM_RANGE_TST_TRK_VGA,NORM_STDEV_TST_TRK_VGA,FAIL_CODE
//      P063_DATA_VGA_STABILITY_COL_WIDTH          //          11,        10,        9,      7,             15,               17,               17,                    22,                    22,        9
//      P063_DATA_VGA_STABILITY_COL_MASK           //           1,         1,        1,      1,              1,                1,                1,                     1,                     1,        1
//      P063_DATA_VGA_STABILITY_COL_TYPES          //           N,         N,        N,      N,              N,                N,                N,                     N,                     N,        N
//      P063_DATA_VGA_STABILITY_TABLE_TYPE         // S
#define P318_CLAMPING_DATA                   1211  // HD_PHYS_PSN,HD_LGC_PSN,ZN_PSN,TRK_NUM,SECTOR,SCT_BER,DELTA_FLY_HGT,ADJ_DELTA_FLY_HGT
//      P318_CLAMPING_DATA_COL_WIDTH               //          11,        10,     6,      7,     6,      7,           13,               17
//      P318_CLAMPING_DATA_COL_MASK                //           0,         0,     0,      0,     0,      0,            0,                0
//      P318_CLAMPING_DATA_COL_TYPES               // *
//      P318_CLAMPING_DATA_TABLE_TYPE              // S
#define P318_CLAMPING_SUMMARY                1212  // HD_PHYS_PSN,HD_LGC_PSN,ZN_PSN,TRK_NUM,DFH_STDEV,DFH_MIN,DFH_MAX,F_DC,F_1X,F_2X,F_3X,F_4X,F_5X,F_6X,F_7X,F_8X,F_9X,F_10X
//      P318_CLAMPING_SUMMARY_COL_WIDTH            //          11,        10,     6,      7,        9,      7,      7,   6,   6,   6,   6,   6,   6,   6,   6,   6,   6,    6
//      P318_CLAMPING_SUMMARY_COL_MASK             //           0,         0,     0,      0,        0,      0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,    0
//      P318_CLAMPING_SUMMARY_COL_TYPES            // *
//      P318_CLAMPING_SUMMARY_TABLE_TYPE           // S
#define P135_CLAMPING                        1213  // DISC_NUM,HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,OVRSHT_AMP,OVRSHT_DUR,WRT_CUR_DAC,HTR_DAC,HARMONIC,SPACING,SIN_SPACING,COS_SPACING
//      P135_CLAMPING_COL_WIDTH                    //        8,         11,        9,      7,        10,        10,        10,         11,      7,       8,      7,         11,         11
//      P135_CLAMPING_COL_MASK                     //        0,          0,        0,      0,         0,         0,         0,          0,      0,       0,      0,          0,          0
//      P135_CLAMPING_COL_TYPES                    // *
//      P135_CLAMPING_TABLE_TYPE                   // S
#define P062_BIAS_DATA                       1214  // HD_PHYS_PSN,HD_LGC_PSN,LGC_CYL,VGAR,BIAS_VALUE,BIAS_DAC,INCR_CNT,BER10,BEST_BER10,DELTA_BER10,RTY_CNT
//      P062_BIAS_DATA_COL_WIDTH                   //          11,        10,      7,   4,        10,       8,       8,    8,        10,         11,      7
//      P062_BIAS_DATA_COL_MASK                    //           1,         1,      1,   1,         1,       1,       1,    1,         1,          1,      0
//      P062_BIAS_DATA_COL_TYPES                   //           N,         N,      N,   N,         N,       N,       N,    N,         N,          N
//      P062_BIAS_DATA_TABLE_TYPE                  // S
#define P149_SUMMARY_BY_HEAD                 1215  // HD_PHYS_PSN,DEFECT_COUNT
//      P149_SUMMARY_BY_HEAD_COL_WIDTH             //          11,          12
//      P149_SUMMARY_BY_HEAD_COL_MASK              //           0,           0
//      P149_SUMMARY_BY_HEAD_COL_TYPES             // *
//      P149_SUMMARY_BY_HEAD_TABLE_TYPE            // S
#define P150_GAIN_SUM2                       1216  // HD_PHYS_PSN,HD_LGC_PSN,PK_PK_CYL,MAX_PK_PK,PK_PK_FAIL,CORR_GAIN_CYL,MAX_CORR_GAIN,CORR_GAIN_FAIL
//      P150_GAIN_SUM2_COL_WIDTH                   //          11,        10,        9,        9,        10,           13,           13,            14
//      P150_GAIN_SUM2_COL_MASK                    //           1,         1,        1,        1,         1,            1,            1,             1
//      P150_GAIN_SUM2_COL_TYPES                   //           N,         N,        N,        N,         V,            N,            N,             V
//      P150_GAIN_SUM2_TABLE_TYPE                  // S
#define P150_RAW_LINEARITY_GAINS             1217  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,ITER,PK_PK,DESCRIPTOR,IDX01,IDX02,IDX03,IDX04,IDX05,IDX06,IDX07,IDX08,IDX09,IDX10,IDX11,IDX12,IDX13,IDX14,IDX15,IDX16
//      P150_RAW_LINEARITY_GAINS_COL_WIDTH         //          11,      7,        10,   4,    5,        10,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7
//      P150_RAW_LINEARITY_GAINS_COL_MASK          //           0,      0,         0,   0,    0,         0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
//      P150_RAW_LINEARITY_GAINS_COL_TYPES         // *
//      P150_RAW_LINEARITY_GAINS_TABLE_TYPE        // S
#define P245_TWEAK_DATA                      1218  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TEMPERATURE_C,MIX_RATIO_FLOAT,PRESSURE,WRT_CUR_DAC,WRT_CUR_OVS_DAC,WRT_CUR_OVS_DUR,WRITER_PRE_HEAT,WRITER_WRITE_HEAT,WRITER_READ_HEAT,READER_PRE_HEAT,READER_WRITE_HEAT,READER_READ_HEAT
//      P245_TWEAK_DATA_COL_WIDTH                  //          11,        10,        9,           13,             15,       8,         11,             15,             15,             15,               17,              16,             15,               17,              16
//      P245_TWEAK_DATA_COL_MASK                   //           0,         0,        0,            0,              0,       0,          0,              0,              0,              0,                0,               0,              0,                0,               0
//      P245_TWEAK_DATA_COL_TYPES                  // *
//      P245_TWEAK_DATA_TABLE_TYPE                 // S
#define P208_INPUT_VOLTAGE                   1219  // MOTOR_12V_INPUT_VOLTAGE,PCBA_5V_INPUT_VOLTAGE
//      P208_INPUT_VOLTAGE_COL_WIDTH               //                      23,                   21
//      P208_INPUT_VOLTAGE_COL_MASK                //                       0,                    0
//      P208_INPUT_VOLTAGE_COL_TYPES               // *
//      P208_INPUT_VOLTAGE_TABLE_TYPE              // S
#define P210_VBAR_THRSHLD_CAP                1220  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,BPI_FIXED_THRSHLD_CAP,TPI_FIXED_THRSHLD_CAP,BPI_FIXED_THRSHLD_CAP_NORM,TPI_FIXED_THRSHLD_CAP_NORM
//      P210_VBAR_THRSHLD_CAP_COL_WIDTH            //          11,        10,        9,                   21,                   21,                        26,                        26
//      P210_VBAR_THRSHLD_CAP_COL_MASK             //           1,         1,        1,                    1,                    1,                         1,                         1
//      P210_VBAR_THRSHLD_CAP_COL_TYPES            //           N,         N,        N,                    N,                    N,                         N,                         N
//      P210_VBAR_THRSHLD_CAP_TABLE_TYPE           // S
#define P210_VBAR_ZONE                       1221  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,BER_VAR_THRSHLD,BER_FINAL,VBAR_BPI_INDEX,VBAR_TPI_INDEX,AREAL_DENSITY_BPI_NORM,AREAL_DENSITY_TPI_NORM,BER_SLOPE
//      P210_VBAR_ZONE_COL_WIDTH                   //          11,        10,        9,             15,        9,            14,            14,                    22,                    22,        9
//      P210_VBAR_ZONE_COL_MASK                    //           1,         1,        1,              1,        1,             1,             1,                     1,                     1,        1
//      P210_VBAR_ZONE_COL_TYPES                   //           N,         N,        N,              N,        N,             N,             N,                     N,                     N,        N
//      P210_VBAR_ZONE_TABLE_TYPE                  // S
#define P210_VBAR_HEAD                       1222  // HD_PHYS_PSN,HD_LGC_PSN,MEAN_BPI,MEAN_TPI,AREAL_DENSITY_BPI,AREAL_DENSITY_TPI
//      P210_VBAR_HEAD_COL_WIDTH                   //          11,        10,       8,       8,               17,               17
//      P210_VBAR_HEAD_COL_MASK                    //           1,         1,       1,       1,                1,                1
//      P210_VBAR_HEAD_COL_TYPES                   //           N,         N,       N,       N,                N,                N
//      P210_VBAR_HEAD_TABLE_TYPE                  // S
#define P175_IFEST_EVENT                     1223  // HD_PHYS_PSN,HD_LGC_PSN,LOG_CYL,FREQ_BIN,START_FREQ,END_FREQ,PES_THRSHLD,MAX_ABS_PES,LIMIT,PERCENT_BAD_SECTORS,TOTAL_PTS,BAD_TRACK_LIMIT,NUM_BAD_TRACKS
//      P175_IFEST_EVENT_COL_WIDTH                 //          11,        10,      7,       8,        10,       8,         11,         11,    5,                 19,        9,             15,            14
//      P175_IFEST_EVENT_COL_MASK                  //           0,         0,      0,       0,         0,       0,          0,          0,    0,                  0,        0,              0,             0
//      P175_IFEST_EVENT_COL_TYPES                 // *
//      P175_IFEST_EVENT_TABLE_TYPE                // S
#define P074_FAFH_CAL_REG_DATA               1224  // HD_LGC_PSN,DIAMETER,COLX,ROW00,ROW01,ROW02,ROW03,ROW04,ROW05,ROW06,ROW07,ROW08,ROW09,ROW0A,ROW0B,ROW0C,ROW0D,ROW0E,ROW0F,HD_PHYS_PSN
//      P074_FAFH_CAL_REG_DATA_COL_WIDTH           //         10,       8,   4,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,         11
//      P074_FAFH_CAL_REG_DATA_COL_MASK            //          0,       0,   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,          0
//      P074_FAFH_CAL_REG_DATA_COL_TYPES           // *
//      P074_FAFH_CAL_REG_DATA_TABLE_TYPE          // S
#define P074_FAFH_PARM_FILE_HDR1             1225  // REV_MAJ,REV_MIN,TRIG_FLAGS,DEBUG_FLAGS,FILE_INIT,FILE_VALID,MAX_DIAMETERS,DIAMETERS,MAX_HEADS,HEADS,TIMER_INT_ENTRIES,MAX_HEAD_TESTS,MAX_SENSORS,SENSOR,MAX_CMD_STEPS,CMD_STEPS
//      P074_FAFH_PARM_FILE_HDR1_COL_WIDTH         //       7,      7,        10,         12,        9,        11,           13,        9,        9,    5,               17,            14,         11,     6,           13,        9
//      P074_FAFH_PARM_FILE_HDR1_COL_MASK          //       0,      0,         0,          0,        0,         0,            0,        0,        0,    0,                0,             0,          0,     0,            0,        0
//      P074_FAFH_PARM_FILE_HDR1_COL_TYPES         // *
//      P074_FAFH_PARM_FILE_HDR1_TABLE_TYPE        // S
#define P074_FAFH_HDR2_BYTES_ALOC            1226  // FILE_ALLOC,FILE_REQD,FILE_HDR,DRIVE,DRV_TRIGGR,DRV_FHA_FILTER,DRV_FHA_LMT,DRV_FHA_LMT_DIAMTR,DRV_IDLE_REQD,DRV_FLD_TGT_CLRNC,HD_TEST
//      P074_FAFH_HDR2_BYTES_ALOC_COL_WIDTH        //         10,        9,       8,    5,        10,            14,         11,                18,           13,               17,      7
//      P074_FAFH_HDR2_BYTES_ALOC_COL_MASK         //          0,        0,       0,    0,         0,             0,          0,                 0,            0,                0,      0
//      P074_FAFH_HDR2_BYTES_ALOC_COL_TYPES        // *
//      P074_FAFH_HDR2_BYTES_ALOC_TABLE_TYPE       // S
#define P074_FAFH_HDR3_BYTES_ALOC            1227  // SENSOR,SENSOR_HDR,SENSOR_DESCR,SENSOR_DESCR_HDR,SENSOR_DESCR_DATA,CMD_STEP,CMD_STEP_ENTRY,SFT_DATA,NEW_PARM
//      P074_FAFH_HDR3_BYTES_ALOC_COL_WIDTH        //      6,         9,          12,              16,               17,       8,            15,       8,       8
//      P074_FAFH_HDR3_BYTES_ALOC_COL_MASK         //      0,         0,           0,               0,                0,       0,             0,       0,       0
//      P074_FAFH_HDR3_BYTES_ALOC_COL_TYPES        // *
//      P074_FAFH_HDR3_BYTES_ALOC_TABLE_TYPE       // S
#define P074_FAFH_DRIVE_INFO1                1228  // TEMP_CHG_TRIGR_THRESH,SECONDS_ON_RAMP_SETTLE,HD_LOAD_SETTLE_TIMER,HD_LOAD_NO_SETTLE_TIMER,PWR_UP_TIMER,HUMID_RATIO_THRESH,ALTITUDE_THRESH
//      P074_FAFH_DRIVE_INFO1_COL_WIDTH            //                    19,                    17,                  20,                     23,          12,                18,             15
//      P074_FAFH_DRIVE_INFO1_COL_MASK             //                     0,                     0,                   0,                      0,           0,                 0,              0
//      P074_FAFH_DRIVE_INFO1_COL_TYPES            // *
//      P074_FAFH_DRIVE_INFO1_TABLE_TYPE           // S
#define P074_FAFH_DRV_PERIODC_TMR            1229  // STARTING_TIMER_INT,TIMER_INTRVL_MULT,TIMER_INTRVL_INC,MAX_TIMER_TRIGS,NEXT_ENTRY,CLRNC_SETTLE_ACTIVE
//      P074_FAFH_DRV_PERIODC_TMR_COL_WIDTH        //                 18,               17,              16,             15,        10,                 19
//      P074_FAFH_DRV_PERIODC_TMR_COL_MASK         //                  0,                0,               0,              0,         0,                  0
//      P074_FAFH_DRV_PERIODC_TMR_COL_TYPES        // *
//      P074_FAFH_DRV_PERIODC_TMR_TABLE_TYPE       // S
#define P074_FAFH_DRV_EWMA_FILTER            1230  // CLR_SETTLE_TMR_TRIG_ALPHA,STEADY_STATE_TMR_TRIG_ALPHA
//      P074_FAFH_DRV_EWMA_FILTER_COL_WIDTH        //                        25,                         27
//      P074_FAFH_DRV_EWMA_FILTER_COL_MASK         //                         0,                          0
//      P074_FAFH_DRV_EWMA_FILTER_COL_TYPES        // *
//      P074_FAFH_DRV_EWMA_FILTER_TABLE_TYPE       // S
#define P074_FAFH_DRV_RNG_RESTRIC            1231  // RESTRICTION_TYPE,DIAMETER,HEAD,MIN_CLEARANCE_CHG_ANG,MAX_CLEARANCE_ADJ_AWAY_FRM_DSK,MAX_CLEARANCE_ADJ_TO_DSK
//      P074_FAFH_DRV_RNG_RESTRIC_COL_WIDTH        //               17,       8,   4,                   20,                            30,                      25
//      P074_FAFH_DRV_RNG_RESTRIC_COL_MASK         //                0,       0,   0,                    0,                             0,                       0
//      P074_FAFH_DRV_RNG_RESTRIC_COL_TYPES        // *
//      P074_FAFH_DRV_RNG_RESTRIC_TABLE_TYPE       // S
#define P046_RUNOUT_CRRO_PER_HEAD            1232  // HD_PHYS_PSN,HD_LGC_PSN,CYL_PSN,MAX_CRRO,MIN_CRRO
//      P046_RUNOUT_CRRO_PER_HEAD_COL_WIDTH        //          11,        10,      7,       8,       8
//      P046_RUNOUT_CRRO_PER_HEAD_COL_MASK         //           0,         0,      0,       0,       0
//      P046_RUNOUT_CRRO_PER_HEAD_COL_TYPES        // *
//      P046_RUNOUT_CRRO_PER_HEAD_TABLE_TYPE       // S
#define P175_RRO_SPECTRUM                    1233  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,FREQUENCY,ZAP_DATA_FFT_MONITOR
//      P175_RRO_SPECTRUM_COL_WIDTH                //          11,        10,       8,        9,                  20
//      P175_RRO_SPECTRUM_COL_MASK                 //           0,         0,       0,        0,                   0
//      P175_RRO_SPECTRUM_COL_TYPES                // *
//      P175_RRO_SPECTRUM_TABLE_TYPE               // S
#define P172_NVC_BEMF_TIME                   1234  // BEMF_USECS,BURN_USECS
//      P172_NVC_BEMF_TIME_COL_WIDTH               //         10,        10
//      P172_NVC_BEMF_TIME_COL_MASK                //          1,         0
//      P172_NVC_BEMF_TIME_COL_TYPES               //          N
//      P172_NVC_BEMF_TIME_TABLE_TYPE              // S
#define P175_TNU_SUMMARY                     1235  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,MAX_TNU_SEC,MAX_TNU,MIN_SS_SEC,MIN_SS_TNU,MAX_SS_SEC,MAX_SS_TNU,MIN_DS_SEC,MIN_DS_TNU,MAX_DS_SEC,MAX_DS_TNU
//      P175_TNU_SUMMARY_COL_WIDTH                 //          11,        10,      7,         11,      7,        10,        10,        10,        10,        10,        10,        10,        10
//      P175_TNU_SUMMARY_COL_MASK                  //           0,         0,      0,          0,      0,         0,         0,         0,         0,         0,         0,         0,         0
//      P175_TNU_SUMMARY_COL_TYPES                 // *
//      P175_TNU_SUMMARY_TABLE_TYPE                // S
#define P057_VCM_TEST_DETAILS                1236  // CHIP_TYPE,MFG_TEST_STAT,VCM_INJ_CURRENT,A1_OFFSET_COLD,A1_OFFSET_HOT,OFFSET_SCRN_SKIPPED
//      P057_VCM_TEST_DETAILS_COL_WIDTH            //         9,           13,             15,            14,           13,                 19
//      P057_VCM_TEST_DETAILS_COL_MASK             //         0,            0,              0,             0,            0,                  0
//      P057_VCM_TEST_DETAILS_COL_TYPES            // *
//      P057_VCM_TEST_DETAILS_TABLE_TYPE           // S
#define P336_FLEX_BIAS_BY_ZONE               1237  // DATA_ZONE,CENTER_TRK,HYST_BIAS_EXT,DC_BIAS,IN_POLY0,IN_POLY1,IN_POLY2,OUT_POLY0,OUT_POLY1,OUT_POLY2
//      P336_FLEX_BIAS_BY_ZONE_COL_WIDTH           //         9,        10,           13,      7,       8,       8,       8,        9,        9,        9
//      P336_FLEX_BIAS_BY_ZONE_COL_MASK            //         0,         0,            0,      0,       0,       0,       0,        0,        0,        0
//      P336_FLEX_BIAS_BY_ZONE_COL_TYPES           // *
//      P336_FLEX_BIAS_BY_ZONE_TABLE_TYPE          // S
#define P336_BIAS_DATA_BY_ZONE               1238  // DATA_ZONE,SEEK_NUM,SEEK_DIST,SEEK_POS,RAW_ALPHA,UNADJSTD_BIAS,ADJSTD_BIAS,PRED_BIAS,FIT_ERROR
//      P336_BIAS_DATA_BY_ZONE_COL_WIDTH           //         9,       8,        9,       8,        9,           13,         11,        9,        9
//      P336_BIAS_DATA_BY_ZONE_COL_MASK            //         0,       0,        0,       0,        0,            0,          0,        0,        0
//      P336_BIAS_DATA_BY_ZONE_COL_TYPES           // *
//      P336_BIAS_DATA_BY_ZONE_TABLE_TYPE          // S
#define P336_ALPHA_TABLE                     1239  // TBL_ENTRY,RAW_ALPHA_INDEX,RAW_ALPHA,FIT_ALPHA,ALPHA_TABLE,CURRENT_ALPHA
//      P336_ALPHA_TABLE_COL_WIDTH                 //         9,             15,        9,        9,         11,           13
//      P336_ALPHA_TABLE_COL_MASK                  //         0,              0,        0,        0,          0,            0
//      P336_ALPHA_TABLE_COL_TYPES                 // *
//      P336_ALPHA_TABLE_TABLE_TYPE                // S
#define P336_GROSS_FLEX_BIAS                 1240  // INDEX,PHY_IN_TRK,IN_BIAS_DATA,OUT_BIAS_DATA
//      P336_GROSS_FLEX_BIAS_COL_WIDTH             //     5,        10,          12,           13
//      P336_GROSS_FLEX_BIAS_COL_MASK              //     0,         0,           0,            0
//      P336_GROSS_FLEX_BIAS_COL_TYPES             // *
//      P336_GROSS_FLEX_BIAS_TABLE_TYPE            // S
#define P000_TEMPERATURE_INFO                1241  // TEST_NUM,START_TEMP,END_TEMP
//      P000_TEMPERATURE_INFO_COL_WIDTH            //        8,        10,       8
//      P000_TEMPERATURE_INFO_COL_MASK             //        0,         0,       0
//      P000_TEMPERATURE_INFO_COL_TYPES            // *
//      P000_TEMPERATURE_INFO_TABLE_TYPE           // S
#define P249_HEAD_DEGRADATION                1242  // HD_PHYS_PSN,HD_LGC_PSN,TIME_DELTA,DRIVE_TEMP,TRK_NUM,READ_WRITE,NLFR,VGAR,VGAS,BCI_QM,BCI_ITER_CNT,BCI_BIE,VGAR_SIGMA,BIE_SIGMA
//      P249_HEAD_DEGRADATION_COL_WIDTH            //          11,        10,        10,        10,      7,        10,   4,   7,   7,     6,          12,      7,        10,        9
//      P249_HEAD_DEGRADATION_COL_MASK             //           1,         1,         1,         1,      1,         1,   1,   1,   1,     1,           1,      1,         1,        1
//      P249_HEAD_DEGRADATION_COL_TYPES            //           N,         N,         N,         N,      N,         V,   N,   N,   N,     N,           N,      N,         N,        N
//      P249_HEAD_DEGRADATION_TABLE_TYPE           // S
#define P074_FAFH_DRV_IDLE_REQ_MS            1243  // INIT_BUS_PERIOD,INIT_GRACE_PERIOD,SUSPEND_BUS_PERIOD,SUSPEND_GRACE_PERIOD
//      P074_FAFH_DRV_IDLE_REQ_MS_COL_WIDTH        //              15,               17,                18,                  20
//      P074_FAFH_DRV_IDLE_REQ_MS_COL_MASK         //               0,                0,                 0,                   0
//      P074_FAFH_DRV_IDLE_REQ_MS_COL_TYPES        // *
//      P074_FAFH_DRV_IDLE_REQ_MS_TABLE_TYPE       // S
#define P074_FAFH_DRV_FIELD                  1244  // DIAMETER,HEAD,TARGET_CLEARANCE
//      P074_FAFH_DRV_FIELD_COL_WIDTH              //        8,   4,              16
//      P074_FAFH_DRV_FIELD_COL_MASK               //        0,   0,               0
//      P074_FAFH_DRV_FIELD_COL_TYPES              // *
//      P074_FAFH_DRV_FIELD_TABLE_TYPE             // S
#define P074_FAFH_HEAD_TEST                  1245  // TEST_ENABLE_FLAGS,TEST_FREQ_0,TEST_FREQ_1,TEST_FREQ_2,MAX_HD_RESISTANCE_PCT_CHG,TRIG_CNT_AR_CONVG_RATE_CALC,HD_EN_MIN_TRIG_PCT_AR_CONVG
//      P074_FAFH_HEAD_TEST_COL_WIDTH              //                17,         11,         11,         11,                       24,                         26,                         26
//      P074_FAFH_HEAD_TEST_COL_MASK               //                 0,          0,          0,          0,                        0,                          0,                          0
//      P074_FAFH_HEAD_TEST_COL_TYPES              // *
//      P074_FAFH_HEAD_TEST_TABLE_TYPE             // S
#define P074_FAFH_HEAD_RESISTANCE            1246  // HEAD,ORIG_RESISTANCE
//      P074_FAFH_HEAD_RESISTANCE_COL_WIDTH        //    4,             15
//      P074_FAFH_HEAD_RESISTANCE_COL_MASK         //    0,              0
//      P074_FAFH_HEAD_RESISTANCE_COL_TYPES        // *
//      P074_FAFH_HEAD_RESISTANCE_TABLE_TYPE       // S
#define P074_FAFH_SENSOR_TBL_HDR             1247  // NUM_SENSORS,SENSOR_ENABLES,RSVD
//      P074_FAFH_SENSOR_TBL_HDR_COL_WIDTH         //          11,            14,   4
//      P074_FAFH_SENSOR_TBL_HDR_COL_MASK          //           0,             0,   0
//      P074_FAFH_SENSOR_TBL_HDR_COL_TYPES         // *
//      P074_FAFH_SENSOR_TBL_HDR_TABLE_TYPE        // S
#define P074_FAFH_SENSOR_COMMON_1            1248  // SENSOR_TYPE,MAX_MEAS_ITERATIONS
//      P074_FAFH_SENSOR_COMMON_1_COL_WIDTH        //          11,                 19
//      P074_FAFH_SENSOR_COMMON_1_COL_MASK         //           0,                  0
//      P074_FAFH_SENSOR_COMMON_1_COL_TYPES        // *
//      P074_FAFH_SENSOR_COMMON_1_TABLE_TYPE       // S
#define P074_FAFH_SENSOR_COMMON_2            1249  // DIAMETER,HEAD,MEAS_RW_CYL,MEAS_NOM_CYL,MEAS_CYL_DATA_ZONE,ZONE_TO_DIAMETER_MULT
//      P074_FAFH_SENSOR_COMMON_2_COL_WIDTH        //        8,   4,         11,          12,                18,                   17
//      P074_FAFH_SENSOR_COMMON_2_COL_MASK         //        0,   0,          0,           0,                 0,                    0
//      P074_FAFH_SENSOR_COMMON_2_COL_TYPES        // *
//      P074_FAFH_SENSOR_COMMON_2_TABLE_TYPE       // S
#define P074_FAFH_SENSOR_COMMON_3            1250  // ZONE_GROUP,HEAD,ZONE_ODMDID_INTERPOLAT_MULT,ZONE_ODID_INTERPOLAT_MULT
//      P074_FAFH_SENSOR_COMMON_3_COL_WIDTH        //         10,   4,                         27,                       25
//      P074_FAFH_SENSOR_COMMON_3_COL_MASK         //          0,   0,                          0,                        0
//      P074_FAFH_SENSOR_COMMON_3_COL_TYPES        // *
//      P074_FAFH_SENSOR_COMMON_3_TABLE_TYPE       // S
#define P074_FAFH_SENSOR_COMMON_4            1251  // HEAD,SYS_ZONE_ODMDID_INTERPOLAT_MUL,SYS_ZONE_ODID_INTERPOLAT_MULT
//      P074_FAFH_SENSOR_COMMON_4_COL_WIDTH        //    4,                            30,                           29
//      P074_FAFH_SENSOR_COMMON_4_COL_MASK         //    0,                             0,                            0
//      P074_FAFH_SENSOR_COMMON_4_COL_TYPES        // *
//      P074_FAFH_SENSOR_COMMON_4_TABLE_TYPE       // S
#define P074_FAFH_AR_SENSOR_1                1252  // OPTIONS_FLAGS,HIRP_VS_DAC_BETA,PREDICT_INTVL_LIMIT,PREDICT_INTVL_LIMIT_LAST_ITER,TGT_CLEARANCE_MULT_SAFE_DAC,SAFEDAC_CALC_EXTRAP_DIST_XCEED,CALC_PREDICT_HIRP_SLOPE_COEFFS,MAX_ACT_TO_PRED_HIRP_SLOPE_DLT
//      P074_FAFH_AR_SENSOR_1_COL_WIDTH            //            13,              16,                 19,                           29,                         26,                            30,                            30,                            30
//      P074_FAFH_AR_SENSOR_1_COL_MASK             //             0,               0,                  0,                            0,                          0,                             0,                             0,                             0
//      P074_FAFH_AR_SENSOR_1_COL_TYPES            // *
//      P074_FAFH_AR_SENSOR_1_TABLE_TYPE           // S
#define P074_FAFH_AR_SENSOR_2                1253  // MEAS_EXTRAP_DIST_UL_CONVG,MEAS_EXTRAP_DIST_LL_TGT_CLR_CV,MAX_HEAT_DAC_DIFF_CONVG,BYTES_PER_DIAM_AND_HEAD,CAL_PROC_REGS_SUPPORTED,MEAS_TO_CLR_XFER_FN_COEFS_SUPP,HIRP_VS_DAC_TERMS_SUPPORTED
//      P074_FAFH_AR_SENSOR_2_COL_WIDTH            //                        25,                            30,                     23,                     22,                     23,                            30,                         27
//      P074_FAFH_AR_SENSOR_2_COL_MASK             //                         0,                             0,                      0,                      0,                      0,                             0,                          0
//      P074_FAFH_AR_SENSOR_2_COL_TYPES            // *
//      P074_FAFH_AR_SENSOR_2_TABLE_TYPE           // S
#define P074_FAFH_AR_SNSR_DIAM_1             1254  // HEAD,DIAMETER,CHANNEL_FREQ,VGAR,ATT2R,CTF_RANGE,CTFFR,ZFR,FREQ_INT_DIV,FREQ_FRACT_DIV,LOCAL_HIRP_VS_DAC_SLOPE
//      P074_FAFH_AR_SNSR_DIAM_1_COL_WIDTH         //    4,       8,          12,   4,    5,        9,    5,  3,          12,            14,                     23
//      P074_FAFH_AR_SNSR_DIAM_1_COL_MASK          //    0,       0,           0,   0,    0,        0,    0,  0,           0,             0,                      0
//      P074_FAFH_AR_SNSR_DIAM_1_COL_TYPES         // *
//      P074_FAFH_AR_SNSR_DIAM_1_TABLE_TYPE        // S
#define P074_FAFH_AR_SNSR_DIAM_2             1255  // HEAD,DIAMETER,NRZ_SYMBOL_CNT_PUSH_FREQ,PREAMP_GAIN,ATTC_RD,HSC_START,HSC_LENGTH,ST_PASSIVE_HIRP_SLOPE,ST_PASSIVE_CLEARANCE
//      P074_FAFH_AR_SNSR_DIAM_2_COL_WIDTH         //    4,       8,                      24,         11,      7,        9,        10,                   21,                  20
//      P074_FAFH_AR_SNSR_DIAM_2_COL_MASK          //    0,       0,                       0,          0,      0,        0,         0,                    0,                   0
//      P074_FAFH_AR_SNSR_DIAM_2_COL_TYPES         // *
//      P074_FAFH_AR_SNSR_DIAM_2_TABLE_TYPE        // S
#define P074_FAFH_AR_SENS0R_CALC             1256  // DIAMETER,PRED_HIRP_DLTA_XFER_FCT_COEF_A,PRED_HIRP_DLTA_XFER_FCT_COEF_B,PRED_HIRP_DLTA_XFER_FCT_COEF_C,PRED_HIRP_DLTA_XFER_FCT_COEF_D,PRED_HIRP_DLTA_XFER_FCT_COEF_E
//      P074_FAFH_AR_SENS0R_CALC_COL_WIDTH         //        8,                            30,                            30,                            30,                            30,                            30
//      P074_FAFH_AR_SENS0R_CALC_COL_MASK          //        0,                             0,                             0,                             0,                             0,                             0
//      P074_FAFH_AR_SENS0R_CALC_COL_TYPES         // *
//      P074_FAFH_AR_SENS0R_CALC_TABLE_TYPE        // S
#define P074_FAFH_AR_SNSR_POLY               1257  // DIAMETER,POLY_COEFF_ORDER,AR_XFER_FN_COEF_A,HIRP_VS_DAC_TERMS,LF_XFER_FN_COEF_A,HF_XFER_FN_COEF_A
//      P074_FAFH_AR_SNSR_POLY_COL_WIDTH           //        8,              16,               14,               17,               14,               14
//      P074_FAFH_AR_SNSR_POLY_COL_MASK            //        0,               0,                0,                0,                0,                0
//      P074_FAFH_AR_SNSR_POLY_COL_TYPES           // *
//      P074_FAFH_AR_SNSR_POLY_TABLE_TYPE          // S
#define P074_FAFH_CMD_STEPS_DIAM             1258  // CMD_STEP_TABLE,DIAMETER,MASK_TYPE,HEAD_MASK,QUICK_CHK_HEAD_MASK
//      P074_FAFH_CMD_STEPS_DIAM_COL_WIDTH         //             14,       8,       25,        9,                 19
//      P074_FAFH_CMD_STEPS_DIAM_COL_MASK          //              0,       0,        0,        0,                  0
//      P074_FAFH_CMD_STEPS_DIAM_COL_TYPES         // *
//      P074_FAFH_CMD_STEPS_DIAM_TABLE_TYPE        // S
#define P074_FAFH_CMD_STEPS                  1259  // CMD_STEP_TABLE,SENSOR_TYPE,MAX_RETRY_CNT,NEXT_STEP_IF_MAX_RETRIES,TRIM_MEAN_THRESH,MAX_TRIM_MEAN_SPREAD,MAX_DIA_POS_SPREAD,NEXT_STEP_IF_OUTLIERS_MAX,ADJ_FLY_HGT_BASED_ON_RES
//      P074_FAFH_CMD_STEPS_COL_WIDTH              //             14,         11,           13,                      24,              16,                  20,                18,                       25,                      24
//      P074_FAFH_CMD_STEPS_COL_MASK               //              0,          0,            0,                       0,               0,                   0,                 0,                        0,                       0
//      P074_FAFH_CMD_STEPS_COL_TYPES              // *
//      P074_FAFH_CMD_STEPS_TABLE_TYPE             // S
#define P074_FAFH_135_AR_SENSOR              1260  // ST_TEMPERATURE,DIAMETER,HEAD,READ_CONTACT_DAC,WRITE_CONTACT_DAC,TEMPERATURE_C
//      P074_FAFH_135_AR_SENSOR_COL_WIDTH          //             14,       8,   4,              16,               17,           13
//      P074_FAFH_135_AR_SENSOR_COL_MASK           //              0,       0,   0,               0,                0,            0
//      P074_FAFH_135_AR_SENSOR_COL_TYPES          // *
//      P074_FAFH_135_AR_SENSOR_TABLE_TYPE         // S
#define P074_FAFH_74_AR_SENSOR_1             1261  // ST_TEMPERATURE,DIAMETER,HEAD,HEATER_DACS_FOR_AR,HIRP_VALUE,AR_VALUE,TEMPERATURE_C,HEATER_DAC,READER_CLEARANCE_ANGSTROMS
//      P074_FAFH_74_AR_SENSOR_1_COL_WIDTH         //             14,       8,   4,                18,        10,       8,           13,        10,                        26
//      P074_FAFH_74_AR_SENSOR_1_COL_MASK          //              0,       0,   0,                 0,         0,       0,            0,         0,                         0
//      P074_FAFH_74_AR_SENSOR_1_COL_TYPES         // *
//      P074_FAFH_74_AR_SENSOR_1_TABLE_TYPE        // S
#define P074_FAFH_74_AR_SENSOR_2             1262  // ST_TEMPERATURE,DIAMETER,HEAD,VALID_INDICIES,HIRP_VS_DAC_TERMS_2,HIRP_VS_DAC_TERMS_1,HIRP_VS_DAC_TERMS_0,HIRP_VS_DAC_BETA
//      P074_FAFH_74_AR_SENSOR_2_COL_WIDTH         //             14,       8,   4,            14,                 19,                 19,                 19,              16
//      P074_FAFH_74_AR_SENSOR_2_COL_MASK          //              0,       0,   0,             0,                  0,                  0,                  0,               0
//      P074_FAFH_74_AR_SENSOR_2_COL_TYPES         // *
//      P074_FAFH_74_AR_SENSOR_2_TABLE_TYPE        // S
#define P246_DUO_AXIAL_DISTORTION            1263  // DISC_NUM,CRRO_TRK,HARMONIC,PES_FFT_MAG,PES_FFT_PHASE,PES_HARM_LIMIT,PES_OOS,AGC_FFT_MAG,AGC_FFT_PHASE,AGC_HARM_LIMIT,AGC_OOS
//      P246_DUO_AXIAL_DISTORTION_COL_WIDTH        //        8,       8,       8,         11,           13,            14,      7,         11,           13,            14,      7
//      P246_DUO_AXIAL_DISTORTION_COL_MASK         //        1,       1,       1,          1,            1,             1,      1,          1,            1,             1,      1
//      P246_DUO_AXIAL_DISTORTION_COL_TYPES        //        N,       N,       N,          N,            N,             N,      V,          N,            N,             N,      V
//      P246_DUO_AXIAL_DISTORTION_TABLE_TYPE       // S
#define P172_WRITE_LOSS_COEFF                1264  // HD_PHYS_PSN,HD_LGC_PSN,WIRP_COEF_1,WIRP_COEF_2,WIRP_COEF_3,WIRP_COEF_4,WIRP_COEF_5,WIRP_COEF_6,WIRP_COEF_7,WIRP_COEF_8,WIRP_COEF_9,WIRP_COEF_10,WIRP_COEF_11,WIRP_COEF_12,WIRP_COEF_13,WIRP_COEF_14,WIRP_COEF_15,WIRP_COEF_16,WIRP_COEF_17,WIRP_COEF_18,WIRP_COEF_19,WIRP_COEF_20,WIRP_COEF_21,WIRP_COEF_22
//      P172_WRITE_LOSS_COEFF_COL_WIDTH            //          11,        10,         11,         11,         11,         11,         11,         11,         11,         11,         11,          12,          12,          12,          12,          12,          12,          12,          12,          12,          12,          12,          12,          12
//      P172_WRITE_LOSS_COEFF_COL_MASK             //           0,         0,          0,          0,          0,          0,          0,          0,          0,          0,          0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0,           0
//      P172_WRITE_LOSS_COEFF_COL_TYPES            // *
//      P172_WRITE_LOSS_COEFF_TABLE_TYPE           // S
#define P213_ERROR_RATE3                     1265  // HD_PHYS_PSN,DATA_ZN,HD_LGC_PSN,TRK_NUM,RD_OFST,SQZ_OFST,ITRTN,STEP_DOWN_ITERATION,BPI_SETTING_USED,SYMBL_ERR_RATE,SCTR_ERR_RATE,UNRCVR_RATE,WRITE_CURRENT_DAC,WRT_CUR_OVS_DAC,TOT_CWD,TOT_UNCVG_CWD,UNCVG_RATIO,WRT_CYCLE_CNT,WRITE_DIR,BER_SWEEP_NUM
//      P213_ERROR_RATE3_COL_WIDTH                 //          11,      7,        10,      7,      7,       8,    5,                 19,              16,            14,           13,         11,               17,             15,      7,           13,         11,           13,        9,           13
//      P213_ERROR_RATE3_COL_MASK                  //           1,      1,         1,      1,      1,       1,    1,                  1,               1,             1,            1,          1,                1,              1,      1,            1,          1,            1,        0,            0
//      P213_ERROR_RATE3_COL_TYPES                 //           N,      N,         N,      N,      N,       N,    N,                  N,               N,             N,            N,          N,                N,              N,      N,            N,          N,            N
//      P213_ERROR_RATE3_TABLE_TYPE                // S
#define P172_HCS_COEFFICIENTS                1266  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,HCS,TCS_ADDER
//      P172_HCS_COEFFICIENTS_COL_WIDTH            //          11,        10,        9,  9,        9
//      P172_HCS_COEFFICIENTS_COL_MASK             //           1,         1,        1,  1,        1
//      P172_HCS_COEFFICIENTS_COL_TYPES            //           N,         N,        N,  N,        N
//      P172_HCS_COEFFICIENTS_TABLE_TYPE           // S
#define P226_TNU_SUMMARY                     1267  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,MAX_TNU_SEC,MAX_TNU,MIN_SS_SEC,MIN_SS_TNU,MAX_SS_SEC,MAX_SS_TNU,MIN_DS_SEC,MIN_DS_TNU,MAX_DS_SEC,MAX_DS_TNU
//      P226_TNU_SUMMARY_COL_WIDTH                 //          11,        10,      7,         11,      7,        10,        10,        10,        10,        10,        10,        10,        10
//      P226_TNU_SUMMARY_COL_MASK                  //           0,         0,      0,          0,      0,         0,         0,         0,         0,         0,         0,         0,         0
//      P226_TNU_SUMMARY_COL_TYPES                 // *
//      P226_TNU_SUMMARY_TABLE_TYPE                // S
#define P226_TNU_10K_LIST                    1268  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,MAX_TNU_SEC,MAX_TNU,TNU_TYPE
//      P226_TNU_10K_LIST_COL_WIDTH                //          11,        10,      7,         11,      7,       8
//      P226_TNU_10K_LIST_COL_MASK                 //           0,         0,      0,          0,      0,       0
//      P226_TNU_10K_LIST_COL_TYPES                // *
//      P226_TNU_10K_LIST_TABLE_TYPE               // S
#define P296_HD_INSTABILITY_BIE              1269  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,PATTERN,NUM_READS,OCLIM,BEST_ADJ,BER_LOG10,FULL_MEAN,FULL_SIGMA,PROBABILITY_0,MEAN_0,SIGMA_0,PROBABILITY_1,MEAN_1,SIGMA_1,DELTA_BER_LOG10,Z_SCORE,HD_STATUS
//      P296_HD_INSTABILITY_BIE_COL_WIDTH          //          11,        10,        9,      7,      7,        9,    5,       8,        9,        9,        10,           13,     9,      9,           13,     9,      9,             15,      8,        9
//      P296_HD_INSTABILITY_BIE_COL_MASK           //           1,         1,        1,      1,      1,        1,    1,       1,        1,        1,         1,            1,     1,      1,            1,     1,      1,              1,      1,        1
//      P296_HD_INSTABILITY_BIE_COL_TYPES          //           N,         N,        N,      N,      N,        N,    N,       N,        N,        N,         N,            N,     N,      N,            N,     N,      N,              N,      N,        N
//      P296_HD_INSTABILITY_BIE_TABLE_TYPE         // S
#define P269_HSC_AMP_BUCKET                  1270  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CYLINDER,RD_OFST,SQZ_WRT_OFST,HSC_AMP,MODE
//      P269_HSC_AMP_BUCKET_COL_WIDTH              //          11,        9,        10,       8,      7,          12,      7,   7
//      P269_HSC_AMP_BUCKET_COL_MASK               //           0,        0,         0,       0,      0,           0,      0,   0
//      P269_HSC_AMP_BUCKET_COL_TYPES              // *
//      P269_HSC_AMP_BUCKET_TABLE_TYPE             // M
#define P269_MT50_PROFILE                    1271  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CYLINDER,SQZ_WRT_OFST,HSC_AMP_PEAK,MT50_RD_OFST_CNT,MT10_RD_OFST_CNT,MT50_WIDTH,MT10_WIDTH,MTXX_RD_OFST_CNT,MTXX_WIDTH
//      P269_MT50_PROFILE_COL_WIDTH                //          11,        9,        10,       8,          12,          12,              16,              16,        10,        10,              16,        10
//      P269_MT50_PROFILE_COL_MASK                 //           0,        0,         0,       0,           0,           0,               0,               0,         0,         0,               0,         0
//      P269_MT50_PROFILE_COL_TYPES                // *
//      P269_MT50_PROFILE_TABLE_TYPE               // M
#define P269_MT50_RESULT_DATA                1272  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CYLINDER,MT50_WIDTH,MT10_WIDTH,MTXX_WIDTH,MT50_CENTER,MT10_CENTER,MTXX_CENTER
//      P269_MT50_RESULT_DATA_COL_WIDTH            //          11,        9,        10,       8,        10,        10,        10,         11,         11,         11
//      P269_MT50_RESULT_DATA_COL_MASK             //           1,        1,         1,       1,         1,         1,         0,          0,          0,          0
//      P269_MT50_RESULT_DATA_COL_TYPES            //           N,        N,         N,       N,         N,         N
//      P269_MT50_RESULT_DATA_TABLE_TYPE           // S
#define P290_SCRATCH_INFO                    1273  // CLUSTER_NUM,HD_PHYS_PSN,HD_LGC_PSN,NUM_DEFECTS,LINEARITY,START_CYL,END_CYL,CYL_RANGE,ANGLE_RANGE,LIN_SLOPE_CALC,EDGE_SCRATCH_FLG,REGION_NUM,SCRATCH_TYPE,NUM_HD
//      P290_SCRATCH_INFO_COL_WIDTH                //          11,         11,        10,         11,        9,        9,      7,        9,         11,            14,              16,        10,          12,     6
//      P290_SCRATCH_INFO_COL_MASK                 //           1,          1,         1,          1,        1,        1,      1,        1,          1,             1,               1,         1,           1,     1
//      P290_SCRATCH_INFO_COL_TYPES                //           N,          N,         N,          N,        N,        N,      N,        N,          N,             N,               N,         N,           V,     N
//      P290_SCRATCH_INFO_TABLE_TYPE               // S
#define P221_CLR_BACKOFF_DATA                1274  // HD_PHYS_PSN,HD_LGC_PSN,BACKOFF_ANG,DAC_AVG,ZONE_1,DAC_1,ZONE_1,DAC_1,ZONE_1,DAC_1,ZONE_1,DAC_1,ZONE_1,DAC_1,ZONE_1,DAC_1
//      P221_CLR_BACKOFF_DATA_COL_WIDTH            //          11,        10,         11,      7,     6,    5,     6,    5,     6,    5,     6,    5,     6,    5,     6,    5
//      P221_CLR_BACKOFF_DATA_COL_MASK             //           0,         0,          0,      0,     0,    0,     0,    0,     0,    0,     0,    0,     0,    0,     0,    0
//      P221_CLR_BACKOFF_DATA_COL_TYPES            // *
//      P221_CLR_BACKOFF_DATA_TABLE_TYPE           // S
#define P221_CLR_BACKOFF_SUMMARY             1275  // HD_PHYS_PSN,HD_LGC_PSN,RD_CLRNC_TRGT_NOM,HEATER_DAC_AVG_NOM,HEAT_PWR_NOM,RD_CLRNC_TRGT_FINAL,HEATER_DAC_AVG_FINAL,HEAT_PWR_FINAL,HEATER_DAC_THRESH,HEAT_MWATTS_THRESH,TOTAL_BACKOFF_ANG,PASS
//      P221_CLR_BACKOFF_SUMMARY_COL_WIDTH         //          11,        10,               17,                18,          12,                 19,                  20,            14,               17,                18,               17,   4
//      P221_CLR_BACKOFF_SUMMARY_COL_MASK          //           0,         0,                0,                 0,           0,                  0,                   0,             0,                0,                 0,                0,   0
//      P221_CLR_BACKOFF_SUMMARY_COL_TYPES         // *
//      P221_CLR_BACKOFF_SUMMARY_TABLE_TYPE        // S
#define P109_UNVFYD_ADPTV_THRSHLD            1276  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ADPTV_THRSHLD_1,ADPTV_THRSHLD_2
//      P109_UNVFYD_ADPTV_THRSHLD_COL_WIDTH        //          11,        9,        10,             15,             15
//      P109_UNVFYD_ADPTV_THRSHLD_COL_MASK         //           1,        1,         1,              1,              1
//      P109_UNVFYD_ADPTV_THRSHLD_COL_TYPES        //           N,        N,         N,              N,              N
//      P109_UNVFYD_ADPTV_THRSHLD_TABLE_TYPE       // S
#define P118_SCRATCH_DATA                    1277  // HD_PHYS_PSN,HD_LGC_PSN,START_ZONE,END_ZONE,START_CYL,END_CYL,BPIP_01,BPIP_02,TPIP_01,TPIP_02,TYPE
//      P118_SCRATCH_DATA_COL_WIDTH                //          11,        10,        10,       8,        9,      7,      7,      7,      7,      7,   4
//      P118_SCRATCH_DATA_COL_MASK                 //           0,         0,         0,       0,        0,      0,      0,      0,      0,      0,   0
//      P118_SCRATCH_DATA_COL_TYPES                // *
//      P118_SCRATCH_DATA_TABLE_TYPE               // S
#define P2108_FSB_ERR_DATA                   1278  // BLOCK_NUM,ERROR_CNT,ERR_CNT_0,ERR_CNT_1,ERR_CNT_2,ERR_CNT_3,ERR_CNT_4,ERR_CNT_5,ERR_CNT_NRZ,SYNC,MAX_BURST,LLI,FILTER
//      P2108_FSB_ERR_DATA_COL_WIDTH               //         9,        9,        9,        9,        9,        9,        9,        9,         12,   4,        9,  3,     6
//      P2108_FSB_ERR_DATA_COL_MASK                //         0,        0,        0,        0,        0,        0,        0,        0,          0,   0,        0,  0,     0
//      P2108_FSB_ERR_DATA_COL_TYPES               // *
//      P2108_FSB_ERR_DATA_TABLE_TYPE              // M
#define P2108_DFS_FSB_ERROR                  1279  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SECTOR,TRK_OFFSET,SEC_OFFSET,LENGTH,TARGET_PBA,_,F,S,B,_,S,T,A,T,U,S,_
//      P2108_DFS_FSB_ERROR_COL_WIDTH              //          11,        10,      7,     6,        10,        10,     6,        10,1,1,1,1,1,1,1,1,1,1,1,1
//      P2108_DFS_FSB_ERROR_COL_MASK               //           0,         0,      0,     0,         0,         0,     0,         0,0,0,0,0,0,0,0,0,0,0,0,0
//      P2108_DFS_FSB_ERROR_COL_TYPES              // *
//      P2108_DFS_FSB_ERROR_TABLE_TYPE             // S
#define P152_PHASE_DELTA                     1280  // HD_PHYS_PSN,HD_LGC_PSN,MAX_PHASE_GAIN_FREQ,MAX_PHASE_GAIN,MAX_PHASE_LOSS_FREQ,MAX_PHASE_LOSS,ERROR_CODE
//      P152_PHASE_DELTA_COL_WIDTH                 //          11,        10,                 19,            14,                 19,            14,        10
//      P152_PHASE_DELTA_COL_MASK                  //           1,         1,                  1,             1,                  1,             1,         1
//      P152_PHASE_DELTA_COL_TYPES                 //           N,         N,                  N,             N,                  N,             N,         N
//      P152_PHASE_DELTA_TABLE_TYPE                // S
#define P_HCS_SUMMARY                        1281  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,HCS,DEFAULT_HCS,DEFAULT_TCS_RH,DEFAULT_TCS_WH,DEFAULT_TCS_ADDER,AFH2_REF_TEMP,AFH2_REF_REL_HUMIDITY,AFH2_REF_MIX_RATIO,AFH3_REF_TEMP,AFH3_REF_REL_HUMIDITY,AFH3_REF_MIX_RATIO,AFH4_REF_TEMP,AFH4_REF_REL_HUMIDITY,AFH4_REF_MIX_RATIO,TCS_RH,TCS_WH,TCS_ADDER
//      P_HCS_SUMMARY_COL_WIDTH                    //          11,        10,        9,  9,         11,            14,            14,               17,           13,                   21,                18,           13,                   21,                18,           13,                   21,                18,     6,     6,        9
//      P_HCS_SUMMARY_COL_MASK                     //           1,         1,        1,  1,          1,             1,             1,                1,            1,                    1,                 1,            1,                    1,                 1,            1,                    1,                 1,     1,     1,        1
//      P_HCS_SUMMARY_COL_TYPES                    //           N,         N,        N,  N,          N,             N,             N,                N,            N,                    N,                 N,            N,                    N,                 N,            N,                    N,                 N,     N,     N,        N
//      P_HCS_SUMMARY_TABLE_TYPE                   // S
#define P253_PREHEAT_ELT_CODEWORD            1282  // HD_PHYS_PSN,DATA_ZONE,LGC_TRK_NUM,CWD_00,CWD_01,CWD_02,CWD_03,CWD_04,CWD_05,CWD_06,CWD_07,CWD_08,CWD_09,CWD_REF,PREHEAT,TRG_CLR
//      P253_PREHEAT_ELT_CODEWORD_COL_WIDTH        //          11,        9,         11,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,      7,      7,      7
//      P253_PREHEAT_ELT_CODEWORD_COL_MASK         //           0,        0,          0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,      0,      0,      0
//      P253_PREHEAT_ELT_CODEWORD_COL_TYPES        // *
//      P253_PREHEAT_ELT_CODEWORD_TABLE_TYPE       // M
#define P253_WGC_ELT_CODEWORD                1283  // HD_PHYS_PSN,DATA_ZONE,LGC_TRK_NUM,CWD_00,CWD_01,CWD_02,CWD_03,CWD_04,CWD_05,CWD_06,CWD_07,CWD_08,CWD_09,CWD_REF,WRTHEAT,TRG_CLR,CW_CNT
//      P253_WGC_ELT_CODEWORD_COL_WIDTH            //          11,        9,         11,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,      7,      7,      7,     6
//      P253_WGC_ELT_CODEWORD_COL_MASK             //           0,        0,          0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,      0,      0,      0,     0
//      P253_WGC_ELT_CODEWORD_COL_TYPES            // *
//      P253_WGC_ELT_CODEWORD_TABLE_TYPE           // M
#define P257_REP_HEAD_STATS                  1284  // HD_PHYS_PSN,HD_LGC_PSN,ZONE_TYPE,TRK_NUM,ALL_3_SIGMA,ALL_MABS_VAL,ALL_MABS_NDX,ALL_PK_PK,ZAP_3_SIGMA,ZAP_MABS_VAL,ZAP_MABS_NDX,ZAP_PK_PK,NON_3_SIGMA,NON_MABS_VAL,NON_MABS_NDX,NON_PK_PK
//      P257_REP_HEAD_STATS_COL_WIDTH              //          11,        11,       10,      8,         12,          13,          13,       10,         12,          13,          13,       10,         10,          12,          12,        8
//      P257_REP_HEAD_STATS_COL_MASK               //           1,         1,        1,      1,          1,           1,           1,        1,          1,           1,           1,        1,          1,           1,           1,        1
//      P257_REP_HEAD_STATS_COL_TYPES              //           N,         N,        N,      N,          N,           N,           N,        N,          N,           N,           N,        N,          N,           N,           N,        N
//      P257_REP_HEAD_STATS_TABLE_TYPE             // S
#define P257_RHP_DATA                        1285  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SEEK_TYPE,WEDGE,RHP_SUM,RHP_NON_ZAP,RHP_ZAP
//      P257_RHP_DATA_COL_WIDTH                    //          11,        10,     10,        9,    5,     12,         12,     12
//      P257_RHP_DATA_COL_MASK                     //           0,         0,      0,        0,    0,      0,          0,      0
//      P257_RHP_DATA_COL_TYPES                    // *
//      P257_RHP_DATA_TABLE_TYPE                   // S
#define P072_BAKING_DATA                     1286  // HD_PHYS_PSN,WRT_HEATER_POW,RD_HEATER_POW,BAKING_TIME,BIAS
//      P072_BAKING_DATA_COL_WIDTH                 //          11,            14,           13,         11,   4
//      P072_BAKING_DATA_COL_MASK                  //           0,             0,            0,          0,   0
//      P072_BAKING_DATA_COL_TYPES                 // *
//      P072_BAKING_DATA_TABLE_TYPE                // V
#define P189_HD_SKEW_DETAILS2                1287  // HD_PHYS_PSN,POINT,PHYS_TRK,LGC_TRK,HD_LGC_PSN,DC_SKEW_I,TIMING_SKEW_I,DC_SKEW,TIMING_SKEW,DCINTERP,TEINTERP
//      P189_HD_SKEW_DETAILS2_COL_WIDTH            //          11,    5,       8,      7,        10,        9,           13,      7,         11,       8,       8
//      P189_HD_SKEW_DETAILS2_COL_MASK             //           0,    0,       0,      0,         0,        0,            0,      0,          0,       0,       0
//      P189_HD_SKEW_DETAILS2_COL_TYPES            // *
//      P189_HD_SKEW_DETAILS2_TABLE_TYPE           // S
#define P189_DC_POINTS2                      1288  // HD_PHYS_PSN,POINT,PHYS_TRK,LGC_TRK,HD_LGC_PSN,NORM_PHYS_TRK,INV_Q12_DATA,DC_POLY_FIT
//      P189_DC_POINTS2_COL_WIDTH                  //          11,    5,       8,      7,        10,           13,          12,         11
//      P189_DC_POINTS2_COL_MASK                   //           0,    0,       0,      0,         0,            0,           0,          0
//      P189_DC_POINTS2_COL_TYPES                  // *
//      P189_DC_POINTS2_TABLE_TYPE                 // S
#define P189_RDL_TMNG_POINTS2                1289  // HD_PHYS_PSN,POINT,PHYS_TRK,LGC_TRK,HD_LGC_PSN,NORM_PHYS_TRK,TMNG_ERR_RAW,TMNG_POLY_FIT
//      P189_RDL_TMNG_POINTS2_COL_WIDTH            //          11,    5,       8,      7,        10,           13,          12,           13
//      P189_RDL_TMNG_POINTS2_COL_MASK             //           0,    0,       0,      0,         0,            0,           0,            0
//      P189_RDL_TMNG_POINTS2_COL_TYPES            // *
//      P189_RDL_TMNG_POINTS2_TABLE_TYPE           // S
#define P189_TMNG_DELTA                      1290  // HD_PHYS_PSN,TEST_MODE,HD_LGC_PSN,TMNG_OD,TMNG_ID,TMNG_DELTA
//      P189_TMNG_DELTA_COL_WIDTH                  //          11,        9,        10,      7,      7,        10
//      P189_TMNG_DELTA_COL_MASK                   //           0,        0,         0,      0,      0,         0
//      P189_TMNG_DELTA_COL_TYPES                  // *
//      P189_TMNG_DELTA_TABLE_TYPE                 // S
#define P288_TEST_RUNNING                    1291  // TEST_RUNNING
//      P288_TEST_RUNNING_COL_WIDTH                //           13
//      P288_TEST_RUNNING_COL_MASK                 //            0
//      P288_TEST_RUNNING_COL_TYPES                // *
//      P288_TEST_RUNNING_TABLE_TYPE               // S
#define P288_GEN_DATA                        1292  // HD_TESTED,TRK_NUM,FREQ
//      P288_GEN_DATA_COL_WIDTH                    //         9,     10,  12
//      P288_GEN_DATA_COL_MASK                     //         0,      0,   0
//      P288_GEN_DATA_COL_TYPES                    // *
//      P288_GEN_DATA_TABLE_TYPE                   // S
#define P288_COMP_MODES                      1293  // ZAP,CHROME,VCAT,ACFF
//      P288_COMP_MODES_COL_WIDTH                  //   3,     6,   4,   4
//      P288_COMP_MODES_COL_MASK                   //   0,     0,   0,   0
//      P288_COMP_MODES_COL_TYPES                  // *
//      P288_COMP_MODES_TABLE_TYPE                 // S
#define P136_BIAS_HYSTERESIS_RAW             1294  // CYL,FWD_BIAS,REV_BIAS
//      P136_BIAS_HYSTERESIS_RAW_COL_WIDTH         //   3,       8,       8
//      P136_BIAS_HYSTERESIS_RAW_COL_MASK          //   1,       1,       1
//      P136_BIAS_HYSTERESIS_RAW_COL_TYPES         //   N,       N,       N
//      P136_BIAS_HYSTERESIS_RAW_TABLE_TYPE        // S
#define P136_BIAS_HYSTERESIS_MAX             1295  // STATIC_FRICTION_POS,HYSTERESIS_FRICTION_MAX
//      P136_BIAS_HYSTERESIS_MAX_COL_WIDTH         //                  19,                     23
//      P136_BIAS_HYSTERESIS_MAX_COL_MASK          //                   1,                      1
//      P136_BIAS_HYSTERESIS_MAX_COL_TYPES         //                   N,                      N
//      P136_BIAS_HYSTERESIS_MAX_TABLE_TYPE        // S
#define P136_BIAS_TRANSITION_CURV            1296  // TEST_ITERATION,TRANSITION_CURVE,TRANSITION_CURVE_Z
//      P136_BIAS_TRANSITION_CURV_COL_WIDTH        //             14,              16,                18
//      P136_BIAS_TRANSITION_CURV_COL_MASK         //              1,               1,                 1
//      P136_BIAS_TRANSITION_CURV_COL_TYPES        //              N,               N,                 N
//      P136_BIAS_TRANSITION_CURV_TABLE_TYPE       // S
#define P109_SUM_HD_UNVER                    1297  // HD_PHYS_PSN,HD_LGC_PSN,ZN_CNT,SUM_UNVER,AVG_UNVER
//      P109_SUM_HD_UNVER_COL_WIDTH                //          11,        10,     6,        9,        9
//      P109_SUM_HD_UNVER_COL_MASK                 //           1,         1,     1,        1,        1
//      P109_SUM_HD_UNVER_COL_TYPES                //           N,         N,     N,        N,        N
//      P109_SUM_HD_UNVER_TABLE_TYPE               // S
#define P285_RAMP_DETECT_PROBLEM             1298  // HD_PHYS_PSN,HD_LGC_PSN,MAX_RAMP_LIMIT,MIN_RAMP_LIMIT,TRK_NUM,RANGE,ERROR_STATUS
//      P285_RAMP_DETECT_PROBLEM_COL_WIDTH         //          11,        10,            14,            14,      7,    6,          12
//      P285_RAMP_DETECT_PROBLEM_COL_MASK          //           0,         0,             0,             0,      0,    0,           0
//      P285_RAMP_DETECT_PROBLEM_COL_TYPES         // *
//      P285_RAMP_DETECT_PROBLEM_TABLE_TYPE        // S
#define P069_WPE_HSC                         1299  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,HSC_DATA_N,OFFSET
//      P069_WPE_HSC_COL_WIDTH                     //          11,        9,        10,      7,        13,    17
//      P069_WPE_HSC_COL_MASK                      //           0,        0,         0,      0,         0,     0
//      P069_WPE_HSC_COL_TYPES                     // *
//      P069_WPE_HSC_TABLE_TYPE                    // M
#define P069_WPE_HSC2                        1300  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,HSC_DATA_N,OFFSET,HSC_DATA_P
//      P069_WPE_HSC2_COL_WIDTH                    //          11,        9,        10,      7,        13,    17,        13
//      P069_WPE_HSC2_COL_MASK                     //           0,        0,         0,      0,         0,     0,         0
//      P069_WPE_HSC2_COL_TYPES                    // *
//      P069_WPE_HSC2_TABLE_TYPE                   // M
#define P069_EWAC_SUMMARY                    1301  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,EWAC_UIN,EWAC_NM
//      P069_EWAC_SUMMARY_COL_WIDTH                //          11,        10,        9,      7,      14,     14
//      P069_EWAC_SUMMARY_COL_MASK                 //           1,         1,        1,      1,       1,      1
//      P069_EWAC_SUMMARY_COL_TYPES                //           N,         N,        N,      N,       N,      N
//      P069_EWAC_SUMMARY_TABLE_TYPE               // S
#define P069_WPE_SUMMARY                     1302  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,WPE_NEG,WPE_POS,WPE_UIN,WPE_NM
//      P069_WPE_SUMMARY_COL_WIDTH                 //          11,        10,        9,      7,     14,     14,     14,    14
//      P069_WPE_SUMMARY_COL_MASK                  //           1,         1,        1,      1,      1,      1,      1,     1
//      P069_WPE_SUMMARY_COL_TYPES                 //           N,         N,        N,      N,      N,      N,      N,     N
//      P069_WPE_SUMMARY_TABLE_TYPE                // S
#define P285_CRASH_STOP_FAILURE              1303  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,ERROR_STATUS
//      P285_CRASH_STOP_FAILURE_COL_WIDTH          //          11,        10,      7,          12
//      P285_CRASH_STOP_FAILURE_COL_MASK           //           0,         0,      0,           0
//      P285_CRASH_STOP_FAILURE_COL_TYPES          // *
//      P285_CRASH_STOP_FAILURE_TABLE_TYPE         // S
#define P2109_DEFECT_LIST_SUMMARY            1304  // P_LIST_CNT,TA_LIST_CNT,S_LIST_CNT,ASFT_CNT,TOTAL_SLIPS
//      P2109_DEFECT_LIST_SUMMARY_COL_WIDTH        //         10,         11,        10,       8,         11
//      P2109_DEFECT_LIST_SUMMARY_COL_MASK         //          0,          0,         0,       0,          0
//      P2109_DEFECT_LIST_SUMMARY_COL_TYPES        // *
//      P2109_DEFECT_LIST_SUMMARY_TABLE_TYPE       // S
#define P109_DETCR_LUL_SUM_HD                1305  // HD_PHYS_PSN,HD_LGC_PSN,VFYD_ERRS,UNVFYD_ERRS,SERVO_VFYD_ERRS,SERVO_UNVFYD_ERRS
//      P109_DETCR_LUL_SUM_HD_COL_WIDTH            //          11,        10,        9,         11,             15,               17
//      P109_DETCR_LUL_SUM_HD_COL_MASK             //           1,         1,        1,          1,              0,                0
//      P109_DETCR_LUL_SUM_HD_COL_TYPES            //           N,         N,        N,          N
//      P109_DETCR_LUL_SUM_HD_TABLE_TYPE           // S
#define P109_LUL_VER_ERR_FSB                 1306  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SCTR_NUM,SCTR_OFST,SFI,RPT_CNT,_,F,S,B,_,S,T,A,T,U,S,_
//      P109_LUL_VER_ERR_FSB_COL_WIDTH             //          11,        10,      7,       8,        9,  9,      7,5,1,1,1,1,1,1,1,1,1,1,1
//      P109_LUL_VER_ERR_FSB_COL_MASK              //           1,         1,      1,       1,        1,  1,      1,0,0,0,0,0,0,0,0,0,0,0,0
//      P109_LUL_VER_ERR_FSB_COL_TYPES             //           N,         N,      N,       N,        N,  N,      N
//      P109_LUL_VER_ERR_FSB_TABLE_TYPE            // S
#define P282_NOTCH_TABLE_VALUES              1307  // NOTCH_NUM,HD_PHYS_PSN,HD_LGC_PSN,A2,A1,B2,B1,B0,NOTCH_TBL_NUM
//      P282_NOTCH_TABLE_VALUES_COL_WIDTH          //         9,         11,        10, 6, 6, 6, 6, 6,           13
//      P282_NOTCH_TABLE_VALUES_COL_MASK           //         0,          0,         0, 0, 0, 0, 0, 0,            0
//      P282_NOTCH_TABLE_VALUES_COL_TYPES          // *
//      P282_NOTCH_TABLE_VALUES_TABLE_TYPE         // S
#define P282_PEAK_SUMMARY                    1308  // HD_PHYS_PSN,TRK_NUM,PEAK_RANK,HD_LGC_PSN,PEAK_MAGNITUDE,PEAK_FREQUENCY,SNO_METHOD
//      P282_PEAK_SUMMARY_COL_WIDTH                //          11,      7,        9,        10,            14,            14,        10
//      P282_PEAK_SUMMARY_COL_MASK                 //           1,      1,        1,         1,             1,             1,         1
//      P282_PEAK_SUMMARY_COL_TYPES                //           N,      N,        N,         N,             N,             N,         V
//      P282_PEAK_SUMMARY_TABLE_TYPE               // M
#define P282_PHASE_PEAK_SUMMARY              1309  // HD_PHYS_PSN,TRK_NUM,PEAK_RANK,HD_LGC_PSN,PEAK_PHASE,PEAK_FREQUENCY
//      P282_PHASE_PEAK_SUMMARY_COL_WIDTH          //          11,      7,        9,        10,        10,            14
//      P282_PHASE_PEAK_SUMMARY_COL_MASK           //           0,      0,        0,         0,         0,             0
//      P282_PHASE_PEAK_SUMMARY_COL_TYPES          // *
//      P282_PHASE_PEAK_SUMMARY_TABLE_TYPE         // S
#define P282_BODE_SENSITIVE_SCORE            1310  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,BODE_SENSITIVITY_FREQ,BODE_SENSITIVITY_SCORE,BODE_SENSITIVITY_LIMIT,MARGIN_NUM,BODE_SENSITIVITY_HEALTH
//      P282_BODE_SENSITIVE_SCORE_COL_WIDTH        //          11,      7,        10,                   21,                    22,                    22,        10,                     23
//      P282_BODE_SENSITIVE_SCORE_COL_MASK         //           1,      1,         1,                    1,                     1,                     1,         1,                      1
//      P282_BODE_SENSITIVE_SCORE_COL_TYPES        //           N,      N,         N,                    N,                     N,                     N,         N,                      N
//      P282_BODE_SENSITIVE_SCORE_TABLE_TYPE       // M
#define P282_BODE_GAIN_PHASE                 1311  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,PEAK_FREQUENCY,GAIN,PHASE
//      P282_BODE_GAIN_PHASE_COL_WIDTH             //          11,      7,        10,            14,   7,    7
//      P282_BODE_GAIN_PHASE_COL_MASK              //           1,      1,         1,             1,   1,    1
//      P282_BODE_GAIN_PHASE_COL_TYPES             //           N,      N,         N,             N,   N,    N
//      P282_BODE_GAIN_PHASE_TABLE_TYPE            // M
#define P282_MAX_GAIN_POINTS                 1312  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,NOTCH_NUM,PEAK_FREQUENCY,MAX_GAIN
//      P282_MAX_GAIN_POINTS_COL_WIDTH             //          11,      7,        10,        9,            14,       8
//      P282_MAX_GAIN_POINTS_COL_MASK              //           1,      1,         1,        1,             1,       1
//      P282_MAX_GAIN_POINTS_COL_TYPES             //           N,      N,         N,        N,             N,       N
//      P282_MAX_GAIN_POINTS_TABLE_TYPE            // M
#define P282_BODE_GAIN_ONLY                  1313  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,FREQUENCY,GAIN
//      P282_BODE_GAIN_ONLY_COL_WIDTH              //          11,      7,        10,        9,   7
//      P282_BODE_GAIN_ONLY_COL_MASK               //           0,      0,         0,        0,   0
//      P282_BODE_GAIN_ONLY_COL_TYPES              // *
//      P282_BODE_GAIN_ONLY_TABLE_TYPE             // S
#define P282_SNO_TEMPERATURE                 1314  // TEMPERATURE,SAVED_TO_SERVO
//      P282_SNO_TEMPERATURE_COL_WIDTH             //          11,            14
//      P282_SNO_TEMPERATURE_COL_MASK              //           0,             0
//      P282_SNO_TEMPERATURE_COL_TYPES             // *
//      P282_SNO_TEMPERATURE_TABLE_TYPE            // S
#define P282_SENSITIVITY_DATA2               1315  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,FREQUENCY,PHASE,MAGNITUDE
//      P282_SENSITIVITY_DATA2_COL_WIDTH           //          11,      7,        10,        9,    9,        9
//      P282_SENSITIVITY_DATA2_COL_MASK            //           0,      0,         0,        0,    0,        0
//      P282_SENSITIVITY_DATA2_COL_TYPES           // *
//      P282_SENSITIVITY_DATA2_TABLE_TYPE          // S
#define P285_IDCS_INTEGRATOR_DATA            1316  // HD_PHYS_PSN,HD_LGC_PSN,TARGET_CYL,INTEGRATOR,CUR_SLOPE
//      P285_IDCS_INTEGRATOR_DATA_COL_WIDTH        //          11,        10,        10,        10,        9
//      P285_IDCS_INTEGRATOR_DATA_COL_MASK         //           0,         0,         0,         0,        0
//      P285_IDCS_INTEGRATOR_DATA_COL_TYPES        // *
//      P285_IDCS_INTEGRATOR_DATA_TABLE_TYPE       // S
#define P073_ZONE_SRVO_OFST                  1317  // HD_PHYS_PSN,HD_LGC_PSN,SUPER_ZONE,ITERATION,TIME_OFFSET,TRK_OFST_CNT,MSRD_TRK_ID_CNT,TESTED_TRK_ID_NUM,MSRD_TMD_CNT,TESTED_TMD_NUM,TIME_AC,TRK_AC_CNT
//      P073_ZONE_SRVO_OFST_COL_WIDTH              //          11,        10,        10,        9,         11,          12,             15,               17,          12,            14,      7,        10
//      P073_ZONE_SRVO_OFST_COL_MASK               //           1,         1,         1,        1,          1,           1,              1,                1,           1,             1,      1,         1
//      P073_ZONE_SRVO_OFST_COL_TYPES              //           N,         N,         N,        N,          N,           N,              N,                N,           N,             N,      N,         N
//      P073_ZONE_SRVO_OFST_TABLE_TYPE             // S
#define P135_COMBO_TABLE                     1318  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,HTR_DAC,REF_HTR_DAC,DELTA_DAC,TEST_ITERATION,CNTCT_TEST_STAGE,MODE,TRIP_MASK,AGC_REF,AGC_STRESSED,STRESSED_RRO,LOCAL_REF_RRO,DETECTOR1,DETECTOR2,DETECTOR3,DETECTOR4,DETECTOR5,DETECTOR6,DETCR_THRSH,REF_DETCR_THRSH,ACTIVE_HEATER,INACTIVE_HEATER_DAC
//      P135_COMBO_TABLE_COL_WIDTH                 //          11,        9,      7,        10,      7,         11,        9,            14,              16,   4,        9,      7,          12,          12,           13,       10,       10,       10,       10,       10,       10,         11,             15,           13,                 19
//      P135_COMBO_TABLE_COL_MASK                  //           0,        0,      0,         0,      0,          0,        0,             0,               0,   0,        0,      0,           0,           0,            0,        0,        0,        0,        0,        0,        0,          0,              0,            0,                  0
//      P135_COMBO_TABLE_COL_TYPES                 // *
//      P135_COMBO_TABLE_TABLE_TYPE                // S
#define P361_RELI_SIM_ERR_RATE               1319  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,BPI,TPI,LOG10_BIE,LOG10_SFR,LOG10_BITS
//      P361_RELI_SIM_ERR_RATE_COL_WIDTH           //          11,        10,        9,      7,  8,  8,        9,        9,        10
//      P361_RELI_SIM_ERR_RATE_COL_MASK            //           0,         0,        0,      0,  0,  0,        0,        0,         0
//      P361_RELI_SIM_ERR_RATE_COL_TYPES           // *
//      P361_RELI_SIM_ERR_RATE_TABLE_TYPE          // S
#define P362_TPI_ADJ                         1320  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ORIG_TPI,NEW_TPI
//      P362_TPI_ADJ_COL_WIDTH                     //          11,        10,        9,       8,      8
//      P362_TPI_ADJ_COL_MASK                      //           0,         0,        0,       0,      0
//      P362_TPI_ADJ_COL_TYPES                     // *
//      P362_TPI_ADJ_TABLE_TYPE                    // S
#define P362_BPI_ADJ                         1321  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ORIG_BPI,NEW_BPI
//      P362_BPI_ADJ_COL_WIDTH                     //          11,        10,        9,       8,      8
//      P362_BPI_ADJ_COL_MASK                      //           0,         0,        0,       0,      0
//      P362_BPI_ADJ_COL_TYPES                     // *
//      P362_BPI_ADJ_TABLE_TYPE                    // S
#define P362_TEST_SPACE                      1322  // HD_LGC_PSN_STRT,HD_LGC_PSN_END,DATA_ZONE,ZONE_PSN,NUM_TRKS,NUM_RTY
//      P362_TEST_SPACE_COL_WIDTH                  //              15,            14,        9,       8,       8,      7
//      P362_TEST_SPACE_COL_MASK                   //               0,             0,        0,       0,       0,      0
//      P362_TEST_SPACE_COL_TYPES                  // *
//      P362_TEST_SPACE_TABLE_TYPE                 // S
#define P362_ERR_LOG                         1323  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SECTOR,ERR_CNT
//      P362_ERR_LOG_COL_WIDTH                     //          11,        10,      7,     6,      7
//      P362_ERR_LOG_COL_MASK                      //           0,         0,      0,     0,      0
//      P362_ERR_LOG_COL_TYPES                     // *
//      P362_ERR_LOG_TABLE_TYPE                    // S
#define P362_ERR_LOG_CNT                     1324  // ENTRY_CNT,OVERFLOW_CNT
//      P362_ERR_LOG_CNT_COL_WIDTH                 //         8,          12
//      P362_ERR_LOG_CNT_COL_MASK                  //         0,           0
//      P362_ERR_LOG_CNT_COL_TYPES                 // *
//      P362_ERR_LOG_CNT_TABLE_TYPE                // S
#define P362_TGT_RTY                         1325  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,RETRY_NUM,OFFSET,PBA,ERR_CODE,OPERATION
//      P362_TGT_RTY_COL_WIDTH                     //          11,        10,      7,        9,     6, 10,       9,        9
//      P362_TGT_RTY_COL_MASK                      //           0,         0,      0,        0,     0,  0,       0,        0
//      P362_TGT_RTY_COL_TYPES                     // *
//      P362_TGT_RTY_TABLE_TYPE                    // S
#define P363_TGT_CMD                         1326  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,OPERATION
//      P363_TGT_CMD_COL_WIDTH                     //          11,        10,      7,        9
//      P363_TGT_CMD_COL_MASK                      //           0,         0,      0,        0
//      P363_TGT_CMD_COL_TYPES                     // *
//      P363_TGT_CMD_TABLE_TYPE                    // S
#define P363_TGT_ERROR                       1327  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SECTOR,PBA,ERR_CODE,OPERATION
//      P363_TGT_ERROR_COL_WIDTH                   //          11,        10,      7,     6, 10,       9,        9
//      P363_TGT_ERROR_COL_MASK                    //           0,         0,      0,     0,  0,       0,        0
//      P363_TGT_ERROR_COL_TYPES                   // *
//      P363_TGT_ERROR_TABLE_TYPE                  // S
#define P364_TGT_CMD                         1328  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,OPERATION
//      P364_TGT_CMD_COL_WIDTH                     //          11,        10,      7,        9
//      P364_TGT_CMD_COL_MASK                      //           0,         0,      0,        0
//      P364_TGT_CMD_COL_TYPES                     // *
//      P364_TGT_CMD_TABLE_TYPE                    // S
#define P364_TGT_RTY                         1329  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,OPERATION
//      P364_TGT_RTY_COL_WIDTH                     //          11,        10,      7,        9
//      P364_TGT_RTY_COL_MASK                      //           0,         0,      0,        0
//      P364_TGT_RTY_COL_TYPES                     // *
//      P364_TGT_RTY_TABLE_TYPE                    // S
#define P364_TGT_ERROR                       1330  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SECTOR,PBA,ERR_CODE,OPERATION
//      P364_TGT_ERROR_COL_WIDTH                   //          11,        10,      7,     6, 10,       9,        9
//      P364_TGT_ERROR_COL_MASK                    //           0,         0,      0,     0,  0,       0,        0
//      P364_TGT_ERROR_COL_TYPES                   // *
//      P364_TGT_ERROR_TABLE_TYPE                  // S
#define P150_ZONED_LINEARITY_POLY            1331  // HD_PHYS_PSN,COEF_INDEX,HD_LGC_PSN,SERVO_ZONE,SURF_COEF_1,SURF_COEF_0
//      P150_ZONED_LINEARITY_POLY_COL_WIDTH        //          11,        10,        10,        10,         11,         11
//      P150_ZONED_LINEARITY_POLY_COL_MASK         //           1,         1,         1,         1,          1,          1
//      P150_ZONED_LINEARITY_POLY_COL_TYPES        //           N,         N,         N,         N,          N,          N
//      P150_ZONED_LINEARITY_POLY_TABLE_TYPE       // S
#define P150_LINEARITY_GAINS3                1332  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,SCAN_MODE,SERVO_ZONE,PK_PK,DESCRIPTOR,IDX01,IDX02,IDX03,IDX04,IDX05,IDX06,IDX07,IDX08,IDX09,IDX10,IDX11,IDX12,IDX13,IDX14,IDX15,IDX16
//      P150_LINEARITY_GAINS3_COL_WIDTH            //          11,      7,        10,        9,        10,    5,        10,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7
//      P150_LINEARITY_GAINS3_COL_MASK             //           1,      1,         1,        1,         1,    1,         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1
//      P150_LINEARITY_GAINS3_COL_TYPES            //           N,      N,         N,        N,         N,    N,         V,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N
//      P150_LINEARITY_GAINS3_TABLE_TYPE           // S
#define P257_HISTOGRAMS                      1333  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,DATA_NAME,BIN,BIN_CNT
//      P257_HISTOGRAMS_COL_WIDTH                  //          11,        10,        9,       13,  6,      7
//      P257_HISTOGRAMS_COL_MASK                   //           0,         0,        0,        0,  0,      0
//      P257_HISTOGRAMS_COL_TYPES                  // *
//      P257_HISTOGRAMS_TABLE_TYPE                 // S
#define P074_FAFH_PARM_FILE_HDR2             1334  // MAX_ZONES,ZONES
//      P074_FAFH_PARM_FILE_HDR2_COL_WIDTH         //         9,    5
//      P074_FAFH_PARM_FILE_HDR2_COL_MASK          //         0,    0
//      P074_FAFH_PARM_FILE_HDR2_COL_TYPES         // *
//      P074_FAFH_PARM_FILE_HDR2_TABLE_TYPE        // S
#define P074_FAFH_SENSOR_COMMON_6            1335  // DIAMETER,HEAD,RW_CYL,NOM_CYL,SCALED_NOM_CYL,ZONE_GROUP,FLEX_ZONE,HIRP_SCAL,HIRP_OFF,WIRP_SCAL,WIRP_OFF,PAS_CLR,WRT_TGT_CLR,ZONE_TO_DIAMETER_MULT
//      P074_FAFH_SENSOR_COMMON_6_COL_WIDTH        //        8,   4,     6,      9,            14,        10,        9,        9,       8,        9,       8,      7,         11,                   21
//      P074_FAFH_SENSOR_COMMON_6_COL_MASK         //        0,   0,     0,      0,             0,         0,        0,        0,       0,        0,       0,      0,          0,                    0
//      P074_FAFH_SENSOR_COMMON_6_COL_TYPES        // *
//      P074_FAFH_SENSOR_COMMON_6_TABLE_TYPE       // S
#define P074_FAFH_SENSOR_COMMON_7            1336  // ZONE_GROUP,HEAD,ZONE_INTERPOLAT_MULT
//      P074_FAFH_SENSOR_COMMON_7_COL_WIDTH        //         10,   4,                  20
//      P074_FAFH_SENSOR_COMMON_7_COL_MASK         //          0,   0,                   0
//      P074_FAFH_SENSOR_COMMON_7_COL_TYPES        // *
//      P074_FAFH_SENSOR_COMMON_7_TABLE_TYPE       // S
#define P074_FAFH_SENSOR_COMMON_8            1337  // HEAD,SYS_ZONE_INTERPOLAT_MULT,ODID_TO_MD_INTERPOLAT_MULT
//      P074_FAFH_SENSOR_COMMON_8_COL_WIDTH        //    4,                      24,                        26
//      P074_FAFH_SENSOR_COMMON_8_COL_MASK         //    0,                       0,                         0
//      P074_FAFH_SENSOR_COMMON_8_COL_TYPES        // *
//      P074_FAFH_SENSOR_COMMON_8_TABLE_TYPE       // S
#define P297_HD_INSTBY_BIE_DATA              1338  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,PATTERN,OP_MODE,PROBABILITY,AVERAGE,SIGMA,MODE_BER_LOG10,DURATION,ID_PATTERN,RD_OFST
//      P297_HD_INSTBY_BIE_DATA_COL_WIDTH          //          11,        10,        9,      7,      7,      7,         11,      8,    8,            14,       8,        10,      7
//      P297_HD_INSTBY_BIE_DATA_COL_MASK           //           1,         1,        1,      1,      1,      1,          1,      1,    1,             1,       1,         0,      0
//      P297_HD_INSTBY_BIE_DATA_COL_TYPES          //           N,         N,        N,      N,      N,      N,          N,      N,    N,             N,       N
//      P297_HD_INSTBY_BIE_DATA_TABLE_TYPE         // S
#define P297_HD_INSTBY_BIE_SUM               1339  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,PATTERN,NUM_READS,OCLIM,BPI_ADJ,ADJ_BER_LOG10,FULL_MEAN,SIGMA,NUM_MODES,NUM_SIGMA,SIGMA_LOSS,NUM_DECAY,DECAY_LOSS,MODE_LOSS,Z_SCORE,SIGMA_RATIO,HD_STATUS,GLITCH_LOSS,SIGMA_BIE_DELTA,FULL_SIGMA,WORST_MODE_BER_LOG10,RD_HEAT,FULL_COV,ID_PATTERN,RD_OFST,TTL_NCCW_CNT,TTL_TRK_FAIL_CNT,ITERATION_MEAN,ITERATION_SIGMA,VAR_MAX_ITRTN,READER_SELECT
//      P297_HD_INSTBY_BIE_SUM_COL_WIDTH           //          11,        10,        9,      7,      7,        9,    5,      7,           13,        9,    7,        9,        9,        10,        9,        10,        9,      7,         11,        9,         11,             15,        10,                  20,      7,       9,        10,      7,          12,              16,            14,             15,           13,           13
//      P297_HD_INSTBY_BIE_SUM_COL_MASK            //           1,         1,        1,      1,      1,        1,    1,      1,            1,        1,    1,        1,        1,         1,        1,         1,        1,      1,          1,        1,          1,              1,         1,                   1,      1,       1,         1,      1,           1,               1,             1,              1,            1,            1
//      P297_HD_INSTBY_BIE_SUM_COL_TYPES           //           N,         N,        N,      N,      N,        N,    N,      N,            N,        N,    N,        N,        N,         N,        N,         N,        N,      N,          N,        N,          N,              N,         N,                   N,      N,       N,         N,      N,           N,               N,             N,              N,            N,            N
//      P297_HD_INSTBY_BIE_SUM_TABLE_TYPE          // S
#define P297_HD_INSTBY_BIE_RAW               1340  // TRK_BIE,TRK_ITR
//      P297_HD_INSTBY_BIE_RAW_COL_WIDTH           //       7,      7
//      P297_HD_INSTBY_BIE_RAW_COL_MASK            //       0,      0
//      P297_HD_INSTBY_BIE_RAW_COL_TYPES           // *
//      P297_HD_INSTBY_BIE_RAW_TABLE_TYPE          // S
#define P074_FAFH_SENSOR_COMMON_5            1341  // SENSOR_TYPE
//      P074_FAFH_SENSOR_COMMON_5_COL_WIDTH        //          11
//      P074_FAFH_SENSOR_COMMON_5_COL_MASK         //           0
//      P074_FAFH_SENSOR_COMMON_5_COL_TYPES        // *
//      P074_FAFH_SENSOR_COMMON_5_TABLE_TYPE       // S
#define P074_FAFH_AR_SENSOR_3                1342  // OPTIONS_FLAGS,HIRP_VS_DAC_BETA,TGT_CLEARANCE_MULT_SAFE_DAC,SAFEDAC_CALC_EXTRAP_DIST_XCEED,CALC_PREDICT_HIRP_SLOPE_COEFFS
//      P074_FAFH_AR_SENSOR_3_COL_WIDTH            //            13,              16,                         27,                            30,                            30
//      P074_FAFH_AR_SENSOR_3_COL_MASK             //             0,               0,                          0,                             0,                             0
//      P074_FAFH_AR_SENSOR_3_COL_TYPES            // *
//      P074_FAFH_AR_SENSOR_3_TABLE_TYPE           // S
#define P074_FAFH_AR_SENSOR_4                1343  // BYTES_PER_DIAM_AND_HEAD,CAL_PROC_REGS_SUPPORTED,MEAS_TO_CLR_XFER_FN_COEFS_SUPP,HIRP_VS_DAC_TERMS_SUPPORTED
//      P074_FAFH_AR_SENSOR_4_COL_WIDTH            //                      23,                     23,                            30,                         27
//      P074_FAFH_AR_SENSOR_4_COL_MASK             //                       0,                      0,                             0,                          0
//      P074_FAFH_AR_SENSOR_4_COL_TYPES            // *
//      P074_FAFH_AR_SENSOR_4_TABLE_TYPE           // S
#define P074_FAFH_AR_CONVG_LIMITS            1344  // MEAS_TYPE,MAX_MEAS_ITERATIONS,MAX_HEAT_DAC_DIFF_CONVG,PREDICT_INTVL_LIMIT,PREDICT_INTVL_LIMIT_LAST_ITER,MEAS_EXTRAP_DIST_UL_CONVG,MEAS_EXTRAP_DIST_LL_TGT_CLR_CV,MAX_ACT_TO_PRED_HIRP_SLOPE_DLT
//      P074_FAFH_AR_CONVG_LIMITS_COL_WIDTH        //        16,                 19,                     23,                 19,                           29,                       25,                            30,                            30
//      P074_FAFH_AR_CONVG_LIMITS_COL_MASK         //         0,                  0,                      0,                  0,                            0,                        0,                             0,                             0
//      P074_FAFH_AR_CONVG_LIMITS_COL_TYPES        // *
//      P074_FAFH_AR_CONVG_LIMITS_TABLE_TYPE       // S
#define P220_BAR_HMS_DATA                    1345  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,DELTA_BPI_PCT,DELTA_TPI_PCT,ORIG_HMS_CAP,HMS_CAP,NORMALIZED_HMS_CAP,HMS_CAP_SLOPE,ORIG_RD_OFFSET,RD_OFFSET,MED_FILT,MOVE_AVG,PICK,TPI_ERR,AREAL_DENSITY
//      P220_BAR_HMS_DATA_COL_WIDTH                //          11,        9,        11,           13,           13,          12,      7,                18,           13,            14,        9,       8,       8,   4,      7,           13
//      P220_BAR_HMS_DATA_COL_MASK                 //           0,        0,         0,            0,            0,           0,      0,                 0,            0,             0,        0,       0,       0,   0,      0,            0
//      P220_BAR_HMS_DATA_COL_TYPES                // *
//      P220_BAR_HMS_DATA_TABLE_TYPE               // S
#define P220_BAR_HMS_STATS                   1346  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,PICK_TYPE,MAX_HMS_CAP,MIN_HMS_CAP,MAX1_INDX,MAX2_INDX,MAX3_INDX,MIN_INDX,R_SQUARED,STD_DEV,CONFIDENCE,QUAD_PT_CNT,X_SQRD_COEF,X_COEF,CONSTANT
//      P220_BAR_HMS_STATS_COL_WIDTH               //          11,        9,        11,        9,         11,         11,        9,        9,        9,       8,        9,      8,        11,         11,         11,     8,       8
//      P220_BAR_HMS_STATS_COL_MASK                //           0,        0,         0,        0,          0,          0,        0,        0,        0,       0,        0,      0,         0,          0,          0,     0,       0
//      P220_BAR_HMS_STATS_COL_TYPES               // *
//      P220_BAR_HMS_STATS_TABLE_TYPE              // S
#define P220_BAR_HMS_SUM                     1347  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,DELTA_BPI_PCT,DELTA_TPI_PCT,HMS_CAP,HMS_CAP_SLOPE,RD_OFFSET,PICK_TYPE,CONFIDENCE,R_SQUARED,AREAL_DENSITY
//      P220_BAR_HMS_SUM_COL_WIDTH                 //          11,        9,        11,           13,           13,      7,           13,        9,        9,        10,        9,           13
//      P220_BAR_HMS_SUM_COL_MASK                  //           0,        0,         0,            0,            0,      0,            0,        0,        0,         0,        0,            0
//      P220_BAR_HMS_SUM_COL_TYPES                 // *
//      P220_BAR_HMS_SUM_TABLE_TYPE                // S
#define P220_BAR_HMS_DETAIL_SUM              1348  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BASE_SQZ_BEST,BASE_SQZ_WORST,DELTA_BPI_PCT,DELTA_TPI_PCT,HMS_CAP,HMS_CAP_SLOPE,RD_OFFSET,PICK_TYPE,CONFIDENCE,R_SQUARED,STD_DEV,QUAD_PT_CNT,X_SQRD_COEF,X_COEF,CONSTANT,PICK_INDX,MAX1_INDX,MAX2_INDX,MAX3_INDX,MIN_INDX,AREAL_DENSITY
//      P220_BAR_HMS_DETAIL_SUM_COL_WIDTH          //          11,        9,        11,           13,            14,           13,           13,      7,           13,        9,        9,        10,        9,      7,         11,         11,     8,       8,        9,        9,        9,        9,       8,           13
//      P220_BAR_HMS_DETAIL_SUM_COL_MASK           //           0,        0,         0,            0,             0,            0,            0,      0,            0,        0,        0,         0,        0,      0,          0,          0,     0,       0,        0,        0,        0,        0,       0,            0
//      P220_BAR_HMS_DETAIL_SUM_COL_TYPES          // *
//      P220_BAR_HMS_DETAIL_SUM_TABLE_TYPE         // S
#define P073_ZONE_SRVO_BNDRY_CAL             1349  // HD_PHYS_PSN,HD_LGC_PSN,SUPER_ZONE,SRVO_SUB_ZONE,SRVO_ZN_IN_RAP,START_SERPENT,SERPENT_CNT,SGATE_WIDTH,DESIRED_PHYS_TRK_DECMT,ACTUAL_PHYS_TRK_DECMT,SERPENT_LOSS_PCT,SAM_SEQ_FALL_TIME
//      P073_ZONE_SRVO_BNDRY_CAL_COL_WIDTH         //          11,        10,        10,           13,            14,           13,         11,         11,                    22,                   21,              16,               18
//      P073_ZONE_SRVO_BNDRY_CAL_COL_MASK          //           1,         1,         1,            1,             1,            1,          1,          1,                     1,                    1,               1,                0
//      P073_ZONE_SRVO_BNDRY_CAL_COL_TYPES         //           N,         N,         N,            N,             N,            N,          N,          N,                     N,                    N,               N
//      P073_ZONE_SRVO_BNDRY_CAL_TABLE_TYPE        // S
#define P061_OVERWRITE_PER_SECTOR            1350  // HD_PHYS_PSN,ZONE,HD_LGC_PSN,TRK_NUM,SECTOR,OVER_WRITE
//      P061_OVERWRITE_PER_SECTOR_COL_WIDTH        //          11,   4,        10,      7,     6,        10
//      P061_OVERWRITE_PER_SECTOR_COL_MASK         //           0,   0,         0,      0,     0,         0
//      P061_OVERWRITE_PER_SECTOR_COL_TYPES        // *
//      P061_OVERWRITE_PER_SECTOR_TABLE_TYPE       // S
#define P2109_DFS_HEADER                     1351  // TOTAL_LBAS,TOTAL_PBAS,MAX_SLIPS,SLIPS,SLIP_PCT,SCTR_SZ,WDG_TRK,DISK_RPS,NUM_HDS
//      P2109_DFS_HEADER_COL_WIDTH                 //         10,        10,        9,    5,       8,      7,      7,       8,      7
//      P2109_DFS_HEADER_COL_MASK                  //          0,         0,        0,    0,       0,      0,      0,       0,      0
//      P2109_DFS_HEADER_COL_TYPES                 // *
//      P2109_DFS_HEADER_TABLE_TYPE                // S
#define P399_RAW_ASYM_PS                     1352  // HD_PHYS_PSN,HD_LGC_PSN,TARGET_CYL,POINT,SIDE,SAMPLE_TO_AVG,AVERAGE_PS
//      P399_RAW_ASYM_PS_COL_WIDTH                 //          11,        10,        10,    5,   4,           13,        10
//      P399_RAW_ASYM_PS_COL_MASK                  //           0,         0,         0,    0,   0,            0,         0
//      P399_RAW_ASYM_PS_COL_TYPES                 // *
//      P399_RAW_ASYM_PS_TABLE_TYPE                // S
#define P399_ASYM_SUMMARY                    1353  // HD_PHYS_PSN,HD_LGC_PSN,TARGET_CYL,ERROR_ASYM,TEST_STATUS
//      P399_ASYM_SUMMARY_COL_WIDTH                //          11,        10,        10,        10,         11
//      P399_ASYM_SUMMARY_COL_MASK                 //           1,         1,         1,         1,          1
//      P399_ASYM_SUMMARY_COL_TYPES                //           N,         N,         N,         N,          N
//      P399_ASYM_SUMMARY_TABLE_TYPE               // S
#define P043_HEAD_SKEW_AUDIT                 1354  // HD_PHYS_PSN,HD_LGC_PSN,GOOD_TM_CNT,PATTERN_FOUND,TM_VALID_CNT,TM_ERR_AVG
//      P043_HEAD_SKEW_AUDIT_COL_WIDTH             //          11,        10,         11,           13,          12,        10
//      P043_HEAD_SKEW_AUDIT_COL_MASK              //           1,         1,          1,            1,           1,         1
//      P043_HEAD_SKEW_AUDIT_COL_TYPES             //           N,         N,          N,            N,           N,         N
//      P043_HEAD_SKEW_AUDIT_TABLE_TYPE            // S
#define P_STS_ECCENTRICITY                   1355  // HD_PHYS_PSN,HD_LGC_PSN,ECCENTRICITY,ANGLE,HD_STATUS
//      P_STS_ECCENTRICITY_COL_WIDTH               //          11,        10,          12,    5,        9
//      P_STS_ECCENTRICITY_COL_MASK                //           0,         0,           0,    0,        0
//      P_STS_ECCENTRICITY_COL_TYPES               // *
//      P_STS_ECCENTRICITY_TABLE_TYPE              // S
#define P109_SS_WRITE_ERR_EXT                1356  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,ERROR_CODE,FAILED_PBA,FAULT_CAUSE,DATA_TRK_NUM,PHYS_TRK_NUM
//      P109_SS_WRITE_ERR_EXT_COL_WIDTH            //          11,        10,      7,        10,        10,         11,          12,          12
//      P109_SS_WRITE_ERR_EXT_COL_MASK             //           0,         0,      0,         0,         0,          0,           0,           0
//      P109_SS_WRITE_ERR_EXT_COL_TYPES            // *
//      P109_SS_WRITE_ERR_EXT_TABLE_TYPE           // S
#define P219_HMSC_QUAL_METRIC                1357  // HD_PHYS_PSN,HD_LGC_PSN,QUALITY_LEVEL,AVG_HMS_CAP_TARGET,AVG_HMS_CAP,SQUEEZE_PCT
//      P219_HMSC_QUAL_METRIC_COL_WIDTH            //          11,        10,           13,                18,         11,         11
//      P219_HMSC_QUAL_METRIC_COL_MASK             //           0,         0,            0,                 0,          0,          0
//      P219_HMSC_QUAL_METRIC_COL_TYPES            // *
//      P219_HMSC_QUAL_METRIC_TABLE_TYPE           // S
#define P219_HMSC_QUAL_METRIC_SUM            1358  // QUALITY_LEVEL,AVG_HMS_CAP_TARGET,AVG_HMS_CAP,SQUEEZE_PCT
//      P219_HMSC_QUAL_METRIC_SUM_COL_WIDTH        //            13,                18,         11,         11
//      P219_HMSC_QUAL_METRIC_SUM_COL_MASK         //             0,                 0,          0,          0
//      P219_HMSC_QUAL_METRIC_SUM_COL_TYPES        // *
//      P219_HMSC_QUAL_METRIC_SUM_TABLE_TYPE       // S
#define P275_ZAP_DATA                        1359  // *
//      P275_ZAP_DATA_COL_WIDTH                    // 4
//      P275_ZAP_DATA_COL_MASK                     // 0
//      P275_ZAP_DATA_COL_TYPES                    // *
//      P275_ZAP_DATA_TABLE_TYPE                   // S
#define P275_ZONED_ZAP_SUMMARY               1360  // HD_PHYS_PSN,ZAP_ZONE,HD_LGC_PSN,OD_CYLINDER,GRAND_3SIG_RRO,ZBZ_METRIC,ZAP_ENABLED,ZAP_PCT
//      P275_ZONED_ZAP_SUMMARY_COL_WIDTH           //          11,       8,        10,         11,            14,        10,         11,      7
//      P275_ZONED_ZAP_SUMMARY_COL_MASK            //           1,       1,         1,          1,             1,         1,          1,      1
//      P275_ZONED_ZAP_SUMMARY_COL_TYPES           //           N,       N,         N,          N,             N,         N,          N,      N
//      P275_ZONED_ZAP_SUMMARY_TABLE_TYPE          // M
#define P198_VGA_THRSHLD_STATS               1361  // HD_PHYS_PSN,HD_LGC_PSN,SMOOTHING_FLG,D_VGA_MAX,D_VGA_STDEV,D_VGA_AVG,R_VGA_MAX,R_VGA_STDEV,R_VGA_AVG,F_VGA_MAX,F_VGA_STDEV,F_VGA_AVG
//      P198_VGA_THRSHLD_STATS_COL_WIDTH           //          11,        10,           13,        9,         11,        9,        9,         11,        9,        9,         11,        9
//      P198_VGA_THRSHLD_STATS_COL_MASK            //           1,         1,            1,        1,          1,        1,        1,          1,        1,        1,          1,        1
//      P198_VGA_THRSHLD_STATS_COL_TYPES           //           N,         N,            V,        N,          N,        N,        N,          N,        N,        N,          N,        N
//      P198_VGA_THRSHLD_STATS_TABLE_TYPE          // S
#define P061_BAND_OW_MEASUREMENT             1362  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,BAND_SIZE,OFFSET,OW_0,OW_1,OW_2
//      P061_BAND_OW_MEASUREMENT_COL_WIDTH         //          11,        9,        10,      7,        7,     7,  13,  13,  13
//      P061_BAND_OW_MEASUREMENT_COL_MASK          //           0,        0,         0,      0,        0,     0,   0,   0,   0
//      P061_BAND_OW_MEASUREMENT_COL_TYPES         // *
//      P061_BAND_OW_MEASUREMENT_TABLE_TYPE        // M
#define P2109_PADDING_SUMMARY                1363  // HD_PHYS_PSN,CYLINDER,PAD_START,PAD_END,MIN_PAD_LBA
//      P2109_PADDING_SUMMARY_COL_WIDTH            //          11,       8,        9,      7,         11
//      P2109_PADDING_SUMMARY_COL_MASK             //           0,       0,        0,      0,          0
//      P2109_PADDING_SUMMARY_COL_TYPES            // *
//      P2109_PADDING_SUMMARY_TABLE_TYPE           // S
#define P380_TTPE_SCREEN_DATA                1364  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,WORST_TTPE_FREQ,WORST_TTPE_MAG
//      P380_TTPE_SCREEN_DATA_COL_WIDTH            //          11,        10,      7,             15,            14
//      P380_TTPE_SCREEN_DATA_COL_MASK             //           1,         1,      1,              1,             1
//      P380_TTPE_SCREEN_DATA_COL_TYPES            //           N,         N,      N,              N,             N
//      P380_TTPE_SCREEN_DATA_TABLE_TYPE           // S
#define P294_WRITER_RESISTANCE               1365  // HD_PHYS_PSN,HD_LGC_PSN,WRITER_RESISTANCE,WRITE_VOLTAGE,READ_VOLTAGE,SET_CUR,HD_STATUS
//      P294_WRITER_RESISTANCE_COL_WIDTH           //          11,        10,               17,           13,          12,      7,        9
//      P294_WRITER_RESISTANCE_COL_MASK            //           1,         1,                1,            1,           1,      1,        1
//      P294_WRITER_RESISTANCE_COL_TYPES           //           N,         N,                N,            N,           N,      N,        N
//      P294_WRITER_RESISTANCE_TABLE_TYPE          // S
#define P198_STDEV_MAX_THRSHLD               1366  // HD_PHYS_PSN,HD_LGC_PSN,D_VGA_MAX,D_VGA_STDEV,R_VGA_MAX,R_VGA_STDEV,F_VGA_MAX,F_VGA_STDEV
//      P198_STDEV_MAX_THRSHLD_COL_WIDTH           //          11,        10,        9,         11,        9,         11,        9,         11
//      P198_STDEV_MAX_THRSHLD_COL_MASK            //           0,         0,        0,          0,        0,          0,        0,          0
//      P198_STDEV_MAX_THRSHLD_COL_TYPES           // *
//      P198_STDEV_MAX_THRSHLD_TABLE_TYPE          // S
#define P275_SERVO_WRITE_DELAY               1367  // HD_PHYS_PSN,ZONE,HD_LGC_PSN,OD_CYL,SLOPE,INTRCPT,DELAY
//      P275_SERVO_WRITE_DELAY_COL_WIDTH           //          11,   4,        10,    10,    5,      7,    5
//      P275_SERVO_WRITE_DELAY_COL_MASK            //           0,   0,         0,     0,    0,      0,    0
//      P275_SERVO_WRITE_DELAY_COL_TYPES           // *
//      P275_SERVO_WRITE_DELAY_TABLE_TYPE          // S
#define P198_FIR_TUNE_PS_DATA                1368  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,PS1_MEANS,PS2_MEANS,MAX_PS
//      P198_FIR_TUNE_PS_DATA_COL_WIDTH            //          11,      7,        10,        9,        9,     6
//      P198_FIR_TUNE_PS_DATA_COL_MASK             //           0,      0,         0,        0,        0,     0
//      P198_FIR_TUNE_PS_DATA_COL_TYPES            // *
//      P198_FIR_TUNE_PS_DATA_TABLE_TYPE           // S
#define P198_FIR_ZONE_DATA                   1369  // HD_PHYS_PSN,HD_LGC_PSN,FIR_ZONE2,FIR_ZONE3
//      P198_FIR_ZONE_DATA_COL_WIDTH               //          11,        10,        9,        9
//      P198_FIR_ZONE_DATA_COL_MASK                //           0,         0,        0,        0
//      P198_FIR_ZONE_DATA_COL_TYPES               // *
//      P198_FIR_ZONE_DATA_TABLE_TYPE              // S
#define P_FREQUENCY_SETTINGS                 1370  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,DESC,M,F,SEQ_SG2WG,SEQ_SG2RG,FB_GAS,FB_GBS,FB_IPLO,SEQ_IPLO,SCALAR,WEDGE_SIZE
//      P_FREQUENCY_SETTINGS_COL_WIDTH             //          11,        10,   4,   8,3,3,        9,        9,     6,     6,      7,       8,     6,        10
//      P_FREQUENCY_SETTINGS_COL_MASK              //           0,         0,   0,   0,0,0,        0,        0,     0,     0,      0,       0,     0,         0
//      P_FREQUENCY_SETTINGS_COL_TYPES             // *
//      P_FREQUENCY_SETTINGS_TABLE_TYPE            // S
#define P_M_FREQUENCY_SETTINGS               1371  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,DESC,N,R,D,SEQ_SG2WG,SEQ_SG2RG,FB_GAS,FB_GBS,FB_IPLO,SEQ_IPLO,SCALAR,WEDGE_SIZE
//      P_M_FREQUENCY_SETTINGS_COL_WIDTH           //          11,        10,   4,   8,3,3,3,        9,        9,     6,     6,      7,       8,     6,        10
//      P_M_FREQUENCY_SETTINGS_COL_MASK            //           0,         0,   0,   0,0,0,0,        0,        0,     0,     0,      0,       0,     0,         0
//      P_M_FREQUENCY_SETTINGS_COL_TYPES           // *
//      P_M_FREQUENCY_SETTINGS_TABLE_TYPE          // S
#define P330_SQZ_BIN_DATA                    1372  // HD_PHYS_PSN,HD_LGC_PSN,TARGET_ZONE,TARGET_CYL,MR_TYPE,SQZ_TYPE,SQZ_PCT,CW_READ,UNCONVERGED_CW_ERR,UNCONVERGED_CW_ERR_RATE
//      P330_SQZ_BIN_DATA_COL_WIDTH                //          11,        10,         11,        10,      7,       8,      7,      7,                18,                     23
//      P330_SQZ_BIN_DATA_COL_MASK                 //           1,         1,          1,         1,      1,       1,      1,      1,                 1,                      1
//      P330_SQZ_BIN_DATA_COL_TYPES                //           N,         N,          N,         N,      V,       V,      N,      N,                 N,                      N
//      P330_SQZ_BIN_DATA_TABLE_TYPE               // S
#define P109_TMOUT_ERRS_BY_HD                1373  // HD_LGC_PSN,SVO_ERR,SKIP_TRK_CNT,RW_ERR,UNCERT_CNT
//      P109_TMOUT_ERRS_BY_HD_COL_WIDTH            //         10,      7,          12,     7,        10
//      P109_TMOUT_ERRS_BY_HD_COL_MASK             //          0,      0,           0,     0,         0
//      P109_TMOUT_ERRS_BY_HD_COL_TYPES            // *
//      P109_TMOUT_ERRS_BY_HD_TABLE_TYPE           // S
#define P109_TMOUT_ERRS_BY_HD_ZN             1374  // HD_LGC_PSN,ZONE,VFYD_ERRS,UNVFYD_ERRS
//      P109_TMOUT_ERRS_BY_HD_ZN_COL_WIDTH         //         10,   4,        9,         11
//      P109_TMOUT_ERRS_BY_HD_ZN_COL_MASK          //          0,   0,        0,          0
//      P109_TMOUT_ERRS_BY_HD_ZN_COL_TYPES         // *
//      P109_TMOUT_ERRS_BY_HD_ZN_TABLE_TYPE        // S
#define P_STS_SUPER_TABLE                    1375  // STS_COLUMN,HD_PHYS_PSN,HD_LGC_PSN,STS_VALUE
//      P_STS_SUPER_TABLE_COL_WIDTH                //         10,         11,        10,        9
//      P_STS_SUPER_TABLE_COL_MASK                 //          0,          0,         0,        0
//      P_STS_SUPER_TABLE_COL_TYPES                // *
//      P_STS_SUPER_TABLE_TABLE_TYPE               // S
#define P229_BCI_READ_RESULT                 1376  // HD_LGC_PSN,ZONE,CYL,N,WRITE_N,READ_N,UNCNVRGD,MAX_CW_SOVA1,MEAN_CW_SOVA1,DELTA_CW_SOVA1,MIN_ITER,MAX_ITER,MEAN_ITER,BITS_READ,BITS_IN_ERR,SOVA1,LOWLLR,SOFTSUM,QNTL_CW_SOVA1,QNTL_ITRTN,5TH_WORST_CW_SOVA1,5TH_WORST_CW_SOVA1_CW,4TH_WORST_CW_SOVA1,4TH_WORST_CW_SOVA1_CW,3RD_WORST_CW_SOVA1,3RD_WORST_CW_SOVA1_CW,2ND_WORST_CW_SOVA1,2ND_WORST_CW_SOVA1_CW,1ST_WORST_CW_SOVA1,1ST_WORST_CW_SOVA1_CW,5TH_WORST_ITRTN,5TH_WORST_ITRTN_CW,4TH_WORST_ITRTN,4TH_WORST_ITRTN_CW,3RD_WORST_ITRTN,3RD_WORST_ITRTN_CW,2ND_WORST_ITRTN,2ND_WORST_ITRTN_CW,1ST_WORST_ITRTN,1ST_WORST_ITRTN_CW,MEAN_CW_BIE,QNTL_CW_BIE,MAX_CW_BIE
//      P229_BCI_READ_RESULT_COL_WIDTH             //         10,   4,  7,6,      7,     6,      10,          12,           13,            14,       8,       8,        9,        9,         11,   12,     6,      7,           13,        10,                18,                   21,                18,                   21,                18,                   21,                18,                   21,                18,                   21,             15,                18,             15,                18,             15,                18,             15,                18,             15,                18,         13,         11,        10
//      P229_BCI_READ_RESULT_COL_MASK              //          0,   0,  0,0,      0,     0,       0,           0,            0,             0,       0,       0,        0,        0,          0,    0,     0,      0,            0,         0,                 0,                    0,                 0,                    0,                 0,                    0,                 0,                    0,                 0,                    0,              0,                 0,              0,                 0,              0,                 0,              0,                 0,              0,                 0,          0,          0,         0
//      P229_BCI_READ_RESULT_COL_TYPES             // *
//      P229_BCI_READ_RESULT_TABLE_TYPE            // S
#define P229_BCI_TRACK_RESULT                1377  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,MAX_WRT_NUM,MAX_NUM_RD,SUM_UNCNVRG,MAX_MAX_ITRTN,AVG_MAX_ITRTN,VAR_MAX_ITRTN,AVG_MEAN_ITRTN,VAR_MEAN_ITRTN,AVG_MAX_CW_SOVA1,VAR_MAX_CW_SOVA1,AVG_MEAN_CW_SOVA1,VAR_MEAN_CW_SOVA1,VAR_DELTA_CW_SOVA1,VAR_NORM_DELTA_CW_SOVA1,RATIO_SUM_HI_CW_SOVA1,AVG_FFD_MAX_ITRTN,VAR_FFD_MAX_ITRTN,AVG_FFD_MEAN_ITRTN,VAR_FFD_MEAN_ITRTN,AVG_FFD_MAX_CW_SOVA1,VAR_FFD_MAX_CW_SOVA1,AVG_FFD_MEAN_CW_SOVA1,VAR_FFD_MEAN_CW_SOVA1,VAR_FFD_DELTA_CW_SOVA1,VAR_FFD_SOVA1,FAIL_CODE,MAX_QNTL_CW_SOVA1,MAX_QNTL_ITRTN,VAR_QNTL_CW_SOVA1,VAR_QNTL_ITRTN,AVG_QNTL_CW_SOVA1,AVG_QNTL_ITRTN,CWFR,TOTAL_CW,MAX_MAX_CW_BIE,AVG_MAX_CW_BIE,VAR_MAX_CW_BIE,AVG_MEAN_CW_BIE,VAR_MEAN_CW_BIE,MAX_QNTL_CW_BIE,VAR_QNTL_CW_BIE,AVG_QNTL_CW_BIE,AVG_TRK_BIE,VAR_TRK_BIE,MAX_TRK_BIE
//      P229_BCI_TRACK_RESULT_COL_WIDTH            //          11,        10,        9,      7,         11,        10,         11,           13,           13,           13,            14,            14,              16,              16,               17,               17,                18,                     23,                   21,               17,               17,                18,                18,                  20,                  20,                   21,                   21,                    22,           13,        9,               17,            14,               17,            14,               17,            14,  13,      10,            14,            14,            14,             15,             15,             15,             15,             15,         11,         11,         11
//      P229_BCI_TRACK_RESULT_COL_MASK             //           1,         1,        1,      1,          1,         1,          1,            1,            1,            1,             1,             1,               1,               1,                1,                1,                 1,                      1,                    1,                1,                1,                 1,                 1,                   1,                   1,                    1,                    1,                     1,            1,        1,                1,             1,                1,             1,                1,             1,   0,       0,             0,             0,             0,              0,              0,              0,              0,              0,          0,          0,          0
//      P229_BCI_TRACK_RESULT_COL_TYPES            //           N,         N,        N,      N,          N,         N,          N,            N,            N,            N,             N,             N,               N,               N,                N,                N,                 N,                      N,                    N,                N,                N,                 N,                 N,                   N,                   N,                    N,                    N,                     N,            N,        N,                N,             N,                N,             N,                N,             N
//      P229_BCI_TRACK_RESULT_TABLE_TYPE           // S
#define P172_ZONED_SERVO                     1378  // HD_PHYS_PSN,DATA_ZONE,SERVO_ZONE,SERVO_ZONE_INDEX,HD_LGC_PSN,ZONE_START_CYL,TRK_NUM,PBA_TRACK,WEDGE_SIZE,SSAW_SIZE,SSAR_SIZE,GAP_SIZE_BEF_SRVO_FLD,GAP_SIZE_AFT_SRVO_FLD,NRZ_FREQ,SPARITY_PBA_TRACK
//      P172_ZONED_SERVO_COL_WIDTH                 //          11,        9,        10,              16,        10,            14,      7,        9,        10,        9,        9,                   21,                   21,       8,               17
//      P172_ZONED_SERVO_COL_MASK                  //           1,        1,         1,               1,         1,             1,      1,        1,         1,        1,        1,                    1,                    1,       1,                1
//      P172_ZONED_SERVO_COL_TYPES                 //           N,        N,         N,               N,         N,             N,      N,        N,         N,        N,        N,                    N,                    N,       N,                N
//      P172_ZONED_SERVO_TABLE_TYPE                // S
#define P172_RSVD_ZONED_SERVO                1379  // HD_PHYS_PSN,DATA_ZONE,SERVO_ZONE,SERVO_ZONE_INDEX,HD_LGC_PSN,ZONE_START_CYL,TRK_NUM,PBA_TRACK,WEDGE_SIZE,SSAW_SIZE,SSAR_SIZE,GAP_SIZE_BEF_SRVO_FLD,GAP_SIZE_AFT_SRVO_FLD,NRZ_FREQ,SPARITY_PBA_TRACK
//      P172_RSVD_ZONED_SERVO_COL_WIDTH            //          11,        9,        10,              16,        10,            14,      7,        9,        10,        9,        9,                   21,                   21,       8,               17
//      P172_RSVD_ZONED_SERVO_COL_MASK             //           1,        1,         1,               1,         1,             1,      1,        1,         1,        1,        1,                    1,                    1,       1,                1
//      P172_RSVD_ZONED_SERVO_COL_TYPES            //           N,        N,         N,               N,         N,             N,      N,        N,         N,        N,        N,                    N,                    N,       N,                N
//      P172_RSVD_ZONED_SERVO_TABLE_TYPE           // S
#define P275_ZONED_ZAP_SUMMARY2              1380  // HD_PHYS_PSN,ZAP_ZONE,HD_LGC_PSN,OD_CYLINDER,GRAND_3SIG_RRO,ZBZ_METRIC,ZAP_ENABLED,ZAP_PCT
//      P275_ZONED_ZAP_SUMMARY2_COL_WIDTH          //          11,       8,        10,         11,            14,        10,         11,      7
//      P275_ZONED_ZAP_SUMMARY2_COL_MASK           //           0,       0,         0,          0,             0,         0,          0,      0
//      P275_ZONED_ZAP_SUMMARY2_COL_TYPES          // *
//      P275_ZONED_ZAP_SUMMARY2_TABLE_TYPE         // M
#define P136_SATURATION_WARNING              1381  // BDRAG_FCONS,BSLOPE1,BSLOPE2
//      P136_SATURATION_WARNING_COL_WIDTH          //          11,      7,      7
//      P136_SATURATION_WARNING_COL_MASK           //           0,      0,      0
//      P136_SATURATION_WARNING_COL_TYPES          // *
//      P136_SATURATION_WARNING_TABLE_TYPE         // S
#define P275_ZAP_DRV_CONDITIONS1             1382  // PES_FIFO_STATE,SAP_MISC_FLAG_ORGNL,SAP_MISC_FLAG_ALTERED_VAL,SHOCK_SENSOR_SUPPT,INITL_SHOCK_SENSOR_STATE,SHOCK_SENSOR_STATE,IFEST_SVO_SUPPT,IFEST_STATE,IFEST_SETUP_ERR,VERIFICATION_INTERVAL
//      P275_ZAP_DRV_CONDITIONS1_COL_WIDTH         //             14,                 19,                       25,                18,                      24,                18,             15,         11,             15,                   21
//      P275_ZAP_DRV_CONDITIONS1_COL_MASK          //              0,                  0,                        0,                 0,                       0,                 0,              0,          0,              0,                    0
//      P275_ZAP_DRV_CONDITIONS1_COL_TYPES         // *
//      P275_ZAP_DRV_CONDITIONS1_TABLE_TYPE        // S
#define P275_ZAP_DRV_CONDITIONS2             1383  // INITL_SWD_STATE,SWD_STATE,CHANNEL_FREQ_SCALED,CHANNEL_FREQ_SCALED_VAL,CHANNEL_SCALE_ERR,ZBZ_STATE,ZBZ_FILE,ZBZ_FILE_ERR,ZEST_SAP_STATE,ZEST_STATE,ZAP_READ_SEEK,BULK_MEMORY_TRANSFER,GAP_DELAY_SOURCE
//      P275_ZAP_DRV_CONDITIONS2_COL_WIDTH         //              15,        9,                 19,                     23,               17,        9,      15,          12,            14,        10,           13,                  20,              16
//      P275_ZAP_DRV_CONDITIONS2_COL_MASK          //               0,        0,                  0,                      0,                0,        0,       0,           0,             0,         0,            0,                   0,               0
//      P275_ZAP_DRV_CONDITIONS2_COL_TYPES         // *
//      P275_ZAP_DRV_CONDITIONS2_TABLE_TYPE        // S
#define P275_ZAP_HD_CONDITIONS1              1384  // HD_PHYS_PSN,HD_LGC_PSN,ZFS_STATE,TRK_COVERAGE,LGC_START_CYL,LGC_END_CYL,TRACK_STEP_SIZE
//      P275_ZAP_HD_CONDITIONS1_COL_WIDTH          //          11,        10,        9,          12,           13,         11,             15
//      P275_ZAP_HD_CONDITIONS1_COL_MASK           //           0,         0,        0,           0,            0,          0,              0
//      P275_ZAP_HD_CONDITIONS1_COL_TYPES          // *
//      P275_ZAP_HD_CONDITIONS1_TABLE_TYPE         // S
#define P275_ZAP_HD_CONDITIONS2              1385  // HD_PHYS_PSN,HD_LGC_PSN,ZFS_STATE,TRK_COVERAGE,LGC_START_CYL,LGC_END_CYL,DATA_START_CYL,DATA_START_CYL_STATUS,DATA_END_CYL,DATA_END_CYL_STATUS,TRACK_STEP_SIZE
//      P275_ZAP_HD_CONDITIONS2_COL_WIDTH          //          11,        10,        9,          12,           13,         11,            14,                   21,          12,                 19,             15
//      P275_ZAP_HD_CONDITIONS2_COL_MASK           //           0,         0,        0,           0,            0,          0,             0,                    0,           0,                  0,              0
//      P275_ZAP_HD_CONDITIONS2_COL_TYPES          // *
//      P275_ZAP_HD_CONDITIONS2_TABLE_TYPE         // S
#define P275_DISABLED_HARMONICS              1386  // HARMONIC
//      P275_DISABLED_HARMONICS_COL_WIDTH          //        8
//      P275_DISABLED_HARMONICS_COL_MASK           //        0
//      P275_DISABLED_HARMONICS_COL_TYPES          // *
//      P275_DISABLED_HARMONICS_TABLE_TYPE         // S
#define P330_CALC_SQZ_DATA                   1387  // HD_PHYS_PSN,HD_LGC_PSN,TARGET_ZONE,TARGET_CYL,MR_TYPE,SQZ_TYPE,TARGET_CWFR,SQZ_AT_CWFR,CUR_SERP,NEW_SERP
//      P330_CALC_SQZ_DATA_COL_WIDTH               //          11,        10,         11,        10,      7,       8,         11,         11,       8,       8
//      P330_CALC_SQZ_DATA_COL_MASK                //           1,         1,          1,         1,      1,       1,          1,          1,       1,       1
//      P330_CALC_SQZ_DATA_COL_TYPES               //           N,         N,          N,         N,      V,       V,          N,          N,       N,       N
//      P330_CALC_SQZ_DATA_TABLE_TYPE              // S
#define P_SYNCLESS_SERVO_WRT_DLY             1388  // HD_PHYS_PSN,HD_LGC_PSN,SAMPLE_INDEX,PHYS_SAMPLE_CYL,PHYS_NORM_SAMPLE_CYL,LGCL_SAMPLE_CYL,DELAY
//      P_SYNCLESS_SERVO_WRT_DLY_COL_WIDTH         //          11,        10,          12,             15,                  20,             15,    7
//      P_SYNCLESS_SERVO_WRT_DLY_COL_MASK          //           0,         0,           0,              0,                   0,              0,    0
//      P_SYNCLESS_SERVO_WRT_DLY_COL_TYPES         // *
//      P_SYNCLESS_SERVO_WRT_DLY_TABLE_TYPE        // S
#define P2108_SUM_HD_ZONE                    1389  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,UNVFYD_EVM,UNVFYD_FSCN,UNVFYD_OTHER,VFYD_EVM,VFYD_FSCN,VFYD_OTHER
//      P2108_SUM_HD_ZONE_COL_WIDTH                //          11,        10,        9,        10,         11,          12,       8,        9,        10
//      P2108_SUM_HD_ZONE_COL_MASK                 //           0,         0,        0,         0,          0,           0,       0,        0,         0
//      P2108_SUM_HD_ZONE_COL_TYPES                // *
//      P2108_SUM_HD_ZONE_TABLE_TYPE               // M
#define P2108_BCI_SUM_HD_ZONE                1390  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,UNVFYD_BCI,VFYD_BCI
//      P2108_BCI_SUM_HD_ZONE_COL_WIDTH            //          11,        10,        9,        10,       8
//      P2108_BCI_SUM_HD_ZONE_COL_MASK             //           0,         0,        0,         0,       0
//      P2108_BCI_SUM_HD_ZONE_COL_TYPES            // *
//      P2108_BCI_SUM_HD_ZONE_TABLE_TYPE           // M
#define P2108_TOT_FLAW_CNT                   1391  // TOT_VFYD_EVM,TOT_VFYD_FSCN,TOT_VFYD_OTHER,TOT_UNVFYD_EVM,TOT_UNVFYD_FSCN,TOT_UNVFYD_OTHER
//      P2108_TOT_FLAW_CNT_COL_WIDTH               //           12,           13,            14,            14,             15,              16
//      P2108_TOT_FLAW_CNT_COL_MASK                //            0,            0,             0,             0,              0,               0
//      P2108_TOT_FLAW_CNT_COL_TYPES               // *
//      P2108_TOT_FLAW_CNT_TABLE_TYPE              // S
#define P2108_TOT_BCI_FLAW_CNT               1392  // TOT_VFYD_BCI,TOT_UNVFYD_BCI
//      P2108_TOT_BCI_FLAW_CNT_COL_WIDTH           //           12,            14
//      P2108_TOT_BCI_FLAW_CNT_COL_MASK            //            0,             0
//      P2108_TOT_BCI_FLAW_CNT_COL_TYPES           // *
//      P2108_TOT_BCI_FLAW_CNT_TABLE_TYPE          // S
#define P275_ZAP_EXCEPTION                   1393  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,TRK_SKIPPED,USER_AREA_TRK,SKIP_WRITE_EVENT,ZFS_FAIL,FAST_IO_RESP_FAIL,SEEK_FAIL,ZAP_WRT_DATA_ERR,ZAP_RD_DATA_ERR,R_ZAP_WRT_CMD_ERR,NR_ZAP_WRT_CMD_ERR,R_ZAP_RD_CMD_ERR,NR_ZAP_RD_CMD_ERR,BD_SMP_TRACK_ERR,MABS_RRO_FAIL,ZAP_SATURATION_OCCURRED,ZAP_ENAB_DISAB_CMD_FAIL,ZFS_SERVO_CMD_FAIL,MISSED_FASTIO_SAMPLES,MAX_ITER_ERROR,SVO_FS_SKIPPED,ZFS_EC1,ZFS_EC2,SERVO_FAULT_ERR
//      P275_ZAP_EXCEPTION_COL_WIDTH               //          11,        10,      7,         11,           13,              17,       9,               17,        9,              16,             15,               17,                18,              16,               17,              16,           13,                     23,                     23,                18,                   21,            14,            14,      9,      9,             15
//      P275_ZAP_EXCEPTION_COL_MASK                //           0,         0,      0,          0,            0,               0,       0,                0,        0,               0,              0,                0,                 0,               0,                0,               0,            0,                      0,                      0,                 0,                    0,             0,             0,      0,      0,              0
//      P275_ZAP_EXCEPTION_COL_TYPES               // *
//      P275_ZAP_EXCEPTION_TABLE_TYPE              // S
#define P211_TPI_MEASUREMENT3                1394  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,SQZ_PCT,N_OFST,P_OFST,OFST_SER,OTC_PCT,RD_OFST,DIR,KTPI,OTC_INCH,BEST_SFR
//      P211_TPI_MEASUREMENT3_COL_WIDTH            //          11,        9,        10,      7,      7,     6,     6,       8,      7,      7,  3,   7,       7,       8
//      P211_TPI_MEASUREMENT3_COL_MASK             //           0,        0,         0,      0,      0,     0,     0,       0,      0,      0,  0,   0,       0,       0
//      P211_TPI_MEASUREMENT3_COL_TYPES            // *
//      P211_TPI_MEASUREMENT3_TABLE_TYPE           // S
#define P211_OTC_MEASUREMENT                 1395  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,SQZ_PCT,OFST,OFST_SER,DIR,FLAG
//      P211_OTC_MEASUREMENT_COL_WIDTH             //          11,        9,        10,      7,      7,   4,       8,  3,   4
//      P211_OTC_MEASUREMENT_COL_MASK              //           0,        0,         0,      0,      0,   0,       0,  0,   0
//      P211_OTC_MEASUREMENT_COL_TYPES             // *
//      P211_OTC_MEASUREMENT_TABLE_TYPE            // S
#define P_TNU_SUMMARY                        1396  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,MAX_TNU_SEC,MAX_TNU,MIN_SS_SEC,MIN_SS_TNU,MAX_SS_SEC,MAX_SS_TNU,MIN_DS_SEC,MIN_DS_TNU,MAX_DS_SEC,MAX_DS_TNU
//      P_TNU_SUMMARY_COL_WIDTH                    //          11,        10,      7,         11,      7,        10,        10,        10,        10,        10,        10,        10,        10
//      P_TNU_SUMMARY_COL_MASK                     //           0,         0,      0,          0,      0,         0,         0,         0,         0,         0,         0,         0,         0
//      P_TNU_SUMMARY_COL_TYPES                    // *
//      P_TNU_SUMMARY_TABLE_TYPE                   // S
#define P_IFEST_EVENT                        1397  // HD_PHYS_PSN,HD_LGC_PSN,LOG_CYL,FREQ_BIN,START_FREQ,END_FREQ,PES_THRSHLD,MAX_ABS_PES,LIMIT,PERCENT_BAD_SECTORS,TOTAL_PTS,BAD_TRACK_LIMIT,NUM_BAD_TRACKS
//      P_IFEST_EVENT_COL_WIDTH                    //          11,        10,      7,       8,        10,       8,         11,         11,    5,                 19,        9,             15,            14
//      P_IFEST_EVENT_COL_MASK                     //           0,         0,      0,       0,         0,       0,          0,          0,    0,                  0,        0,              0,             0
//      P_IFEST_EVENT_COL_TYPES                    // *
//      P_IFEST_EVENT_TABLE_TYPE                   // S
#define P335_FAIL_DETAILS                    1398  // HD_PHYS_PSN,HD_LGC_PSN,TOTAL_FAIL_CNT,SEEK_FAIL_CNT,NOISY_PREAMB_FAIL_CNT,SERVO_DATA_FAIL_CNT,SERVO_DATA_FAIL_STATUS
//      P335_FAIL_DETAILS_COL_WIDTH                //          11,        10,            14,           13,                   21,                 19,                    22
//      P335_FAIL_DETAILS_COL_MASK                 //           0,         0,             0,            0,                    0,                  0,                     0
//      P335_FAIL_DETAILS_COL_TYPES                // *
//      P335_FAIL_DETAILS_TABLE_TYPE               // S
#define P335_FAIL_SUMMARY                    1399  // MAX_TOTAL_FAIL_CNT,MAX_SEEK_FAIL_CNT,MAX_NOISY_PREAMB_FAIL_CNT,MAX_SERVO_DATA_FAIL_CNT
//      P335_FAIL_SUMMARY_COL_WIDTH                //                 18,               17,                       25,                     23
//      P335_FAIL_SUMMARY_COL_MASK                 //                  0,                0,                        0,                      0
//      P335_FAIL_SUMMARY_COL_TYPES                // *
//      P335_FAIL_SUMMARY_TABLE_TYPE               // S
#define P047_MOTOR_FF_POLY                   1400  // TRACK_STEP,AVG_PHY_TRACK,AVG_MTR_CURR,AVG_FIT_MTR_CURR,AVG_FIT_ERR
//      P047_MOTOR_FF_POLY_COL_WIDTH               //         10,           13,          12,              16,         11
//      P047_MOTOR_FF_POLY_COL_MASK                //          1,            1,           1,               1,          1
//      P047_MOTOR_FF_POLY_COL_TYPES               //          N,            N,           N,               N,          N
//      P047_MOTOR_FF_POLY_TABLE_TYPE              // S
#define P047_MOTOR_FF_COEFFS                 1401  // FIT_ORDER,COEFF_0,COEFF_1,COEFF_2,IDOD_MTR_DELTA,FIT_ERR_SUM,DRIVE_TEMP
//      P047_MOTOR_FF_COEFFS_COL_WIDTH             //         9,      7,      7,      7,            14,         11,        10
//      P047_MOTOR_FF_COEFFS_COL_MASK              //         1,      1,      1,      1,             1,          1,         1
//      P047_MOTOR_FF_COEFFS_COL_TYPES             //         N,      N,      N,      N,             N,          N,         N
//      P047_MOTOR_FF_COEFFS_TABLE_TYPE            // S
#define P198_NUM_FAILED_ZONES                1402  // HD_PHYS_PSN,HD_LGC_PSN,TOTAL_FAIL_CNT
//      P198_NUM_FAILED_ZONES_COL_WIDTH            //          11,        10,            14
//      P198_NUM_FAILED_ZONES_COL_MASK             //           0,         0,             0
//      P198_NUM_FAILED_ZONES_COL_TYPES            // *
//      P198_NUM_FAILED_ZONES_TABLE_TYPE           // S
#define P059_SERVO_CNTRS                     1403  // HD_PHYS_PSN,HD_LGC_PSN,MODE_TYPE,TMND_STS,TM_TMNG_ERR_STS,OBSERVER_SCTR_ERR_STS,LV_SHOCK_STS,UNSF_ONTRK_STS,TMND_VEL_STS,TM_TMNG_ERR_VEL_STS,OBSERVER_SCTR_ERR_VEL_STS,PES_DTCTD_SHOCK_STS,PREDICTED_OFTRK_STS,INTR_OVERRUN_STS,FALSE_PREDICTED_OFTRK_STS,RRO_PRTY_STS,AGC_DELTA_TRIP_STS,AGC_RAVG_TRIP_STS,AGC_BP_FILTER_TRIP_STS,SENSOR_DTCTD_SHOCK_STS,SHOCK_SENSOR_LVL_LOW_STS,TMND_CNT,TM_TMNG_ERR,OBSERVER_SCTR_ERR,LV_SHOCK,UNSF_ONTRK,TMND_VEL,TM_TMNG_ERR_VEL,OBSERVER_SCTR_ERR_VEL,PES_DTCTD_SHOCK,PREDICTED_OFTRK,INTR_OVERRUN,FALSE_PREDICTED_OFTRK,RRO_PRTY,AGC_DELTA_TRIP,AGC_RAVG_TRIP,AGC_BP_FILTER_TRIP,SENSOR_DTCTD_SHOCK,SHOCK_SENSOR_LVL_LOW
//      P059_SERVO_CNTRS_COL_WIDTH                 //          11,        10,        9,       8,             15,                   21,          12,            14,          12,                 19,                       25,                 19,                 19,              16,                       25,          12,                18,               17,                    22,                    22,                      24,       8,         11,               17,       8,        10,       8,             15,                   21,             15,             15,          12,                   21,       8,            14,           13,                18,                18,                  20
//      P059_SERVO_CNTRS_COL_MASK                  //           1,         1,        1,       1,              1,                    1,           1,             1,           1,                  1,                        1,                  1,                  1,               1,                        1,           1,                 1,                1,                     1,                     1,                       1,       1,          1,                1,       1,         1,       1,              1,                    1,              1,              1,           1,                    1,       1,             1,            1,                 1,                 1,                   1
//      P059_SERVO_CNTRS_COL_TYPES                 //           N,         N,        V,       V,              V,                    V,           V,             V,           V,                  V,                        V,                  V,                  V,               V,                        V,           V,                 V,                V,                     V,                     V,                       V,       N,          N,                N,       N,         N,       N,              N,                    N,              N,              N,           N,                    N,       N,             N,            N,                 N,                 N,                   N
//      P059_SERVO_CNTRS_TABLE_TYPE                // S
#define P149_DRIVE_FAILURE                   1404  // OPERATION,HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,SECTOR_NUM,WEDGE_NUM,SFI_PSN,OFFTRACK_PCT,RW_SENSE_CODE,RETRY_CNT
//      P149_DRIVE_FAILURE_COL_WIDTH               //         9,         11,        10,        9,      7,        10,        9,      7,          12,           13,        9
//      P149_DRIVE_FAILURE_COL_MASK                //         1,          1,         1,        1,      1,         1,        1,      1,           1,            1,        1
//      P149_DRIVE_FAILURE_COL_TYPES               //         V,          N,         N,        N,      N,         N,        V,      V,           N,            V,        N
//      P149_DRIVE_FAILURE_TABLE_TYPE              // S
#define P149_HEAD_FAIL_SUMMARY               1405  // HD_PHYS_PSN,HD_LGC_PSN,FAIL_COUNT,FMT_RETRY_COUNT
//      P149_HEAD_FAIL_SUMMARY_COL_WIDTH           //          11,        10,        10,             15
//      P149_HEAD_FAIL_SUMMARY_COL_MASK            //           1,         1,         1,              1
//      P149_HEAD_FAIL_SUMMARY_COL_TYPES           //           N,         N,         N,              N
//      P149_HEAD_FAIL_SUMMARY_TABLE_TYPE          // S
#define P257_HARMONIC_CONTENT                1406  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,HARMONIC,MEAN_ATWSQZ,SIGMA_ATWSQZ,MEAN_ATRSQZ,SIGMA_ATRSQZ,MEAN_JSQZ,SIGMA_JSQZ
//      P257_HARMONIC_CONTENT_COL_WIDTH            //          11,        10,   4,       8,         12,          12,         12,          12,       12,        12
//      P257_HARMONIC_CONTENT_COL_MASK             //           0,         0,   0,       0,          0,           0,          0,           0,        0,         0
//      P257_HARMONIC_CONTENT_COL_TYPES            // *
//      P257_HARMONIC_CONTENT_TABLE_TYPE           // S
#define P257_CWIRRO_STATS                    1407  // HD_PHYS_PSN,HD_LGC_PSN,ZONE_TYPE,SIGMA_ALL_FREQ,MABS_ALL_FREQ,NDX_ALL_FREQ,PK_TO_PK_ALL_FREQ,SIGMA_LTE_32_FREQ,MABS_LTE_32_FREQ,NDX_LTE_32_FREQ,PK_TO_PK_LTE_32_FREQ,SIGMA_GT_32_FREQ,MABS_GT_32_FREQ,NDX_GT_32_FREQ,PK_TO_PK_GT_32_FREQ,NRRO_VAR
//      P257_CWIRRO_STATS_COL_WIDTH                //          11,        10,        9,            14,           13,          12,               17,               17,              16,             15,                  20,              16,             15,            14,                 19,       8
//      P257_CWIRRO_STATS_COL_MASK                 //           1,         1,        1,             1,            1,           1,                1,                1,               1,              1,                   1,               1,              1,             1,                  1,       1
//      P257_CWIRRO_STATS_COL_TYPES                //           N,         N,        V,             N,            N,           N,                N,                N,               N,              N,                   N,               N,              N,             N,                  N,       N
//      P257_CWIRRO_STATS_TABLE_TYPE               // S
#define P_SERVO_MODES                        1408  // CONTROLLER,VCAT,CHROME,ZAP
//      P_SERVO_MODES_COL_WIDTH                    //         10,   4,     6,  3
//      P_SERVO_MODES_COL_MASK                     //          0,   0,     0,  0
//      P_SERVO_MODES_COL_TYPES                    // *
//      P_SERVO_MODES_TABLE_TYPE                   // S
#define P257_DRV_STATES                      1409  // ANTI_NOTCH_S,ANTI_NOTCH_E,ADPT_ANTI_NOTCH_S,ADPT_ANTI_NOTCH_E,ZONED_ACFF_S,ZONED_ACFF_E,LVFF_S,LVFF_E
//      P257_DRV_STATES_COL_WIDTH                  //           12,          12,               17,               17,          12,          12,     6,     6
//      P257_DRV_STATES_COL_MASK                   //            0,           0,                0,                0,           0,           0,     0,     0
//      P257_DRV_STATES_COL_TYPES                  // *
//      P257_DRV_STATES_TABLE_TYPE                 // S
#define P257_TRK_BANDS                       1410  // HD_PHYS_PSN,HD_LGC_PSN,BAND_IDX,START_TRK
//      P257_TRK_BANDS_COL_WIDTH                   //          11,        10,       8,        9
//      P257_TRK_BANDS_COL_MASK                    //           0,         0,       0,        0
//      P257_TRK_BANDS_COL_TYPES                   // *
//      P257_TRK_BANDS_TABLE_TYPE                  // S
#define P275_ZAP_AUDIT_STATS2                1411  // HD_PHYS_PSN,HD_LGC_PSN,ZAP_PSN,ZAP_SPAN,ZAP_ZONE,AUDIT_TYPE,MEAN_3SIGRRO,MAX_3SIGRRO,SIG_3SIGRRO
//      P275_ZAP_AUDIT_STATS2_COL_WIDTH            //          11,        10,      7,       8,       8,        10,          12,         11,         11
//      P275_ZAP_AUDIT_STATS2_COL_MASK             //           0,         0,      0,       0,       0,         0,           0,          0,          0
//      P275_ZAP_AUDIT_STATS2_COL_TYPES            // *
//      P275_ZAP_AUDIT_STATS2_TABLE_TYPE           // S
#define P285_RAMP_DTCT_THRSHLD               1412  // HD_PHYS_PSN,HD_LGC_PSN,ITERATION,SIGMA_OFFSET,LOW_2F_THRSHLD,HIGH_2F_THRSHLD,LOW_3F_THRSHLD,HIGH_3F_THRSHLD,LOW_4F_THRSHLD,HIGH_4F_THRSHLD,LOW_5F_THRSHLD,HIGH_5F_THRSHLD
//      P285_RAMP_DTCT_THRSHLD_COL_WIDTH           //          11,        10,        9,          12,            14,             15,            14,             15,            14,             15,            14,             15
//      P285_RAMP_DTCT_THRSHLD_COL_MASK            //           1,         1,        1,           1,             1,              1,             1,              1,             1,              1,             1,              1
//      P285_RAMP_DTCT_THRSHLD_COL_TYPES           //           N,         N,        N,           N,             N,              N,             N,              N,             N,              N,             N,              N
//      P285_RAMP_DTCT_THRSHLD_TABLE_TYPE          // S
#define P172_HEAD_BIAS_COEFFS                1413  // MRVBIAS_COEFF1,MRVBIAS_COEFF0,DETCR_VBIAS_COEFF1,DETCR_VBIAS_COEFF0
//      P172_HEAD_BIAS_COEFFS_COL_WIDTH            //             14,            14,                17,                17
//      P172_HEAD_BIAS_COEFFS_COL_MASK             //              0,             0,                 0,                 0
//      P172_HEAD_BIAS_COEFFS_COL_TYPES            // *
//      P172_HEAD_BIAS_COEFFS_TABLE_TYPE           // S
#define P080_HTR_VERIFICATION                1414  // HD_PHYS_PSN,HD_LGC_PSN,ACTIVE_HEATER,RETRY_NUM,FINAL_FLG,HTR_DAC,HTR_CUR_DAC,HTR_PWR,HTR_CURRENT,PREAMP_HTR_RES,STATUS
//      P080_HTR_VERIFICATION_COL_WIDTH            //          11,        10,           13,        9,        9,      7,         11,      8,         11,            14,    30
//      P080_HTR_VERIFICATION_COL_MASK             //           1,         1,            1,        1,        1,      1,          1,      1,          1,             1,     1
//      P080_HTR_VERIFICATION_COL_TYPES            //           N,         N,            V,        N,        N,      N,          N,      N,          N,             N,     V
//      P080_HTR_VERIFICATION_TABLE_TYPE           // S
#define P340_ENCROACH_DATA                   1415  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,START_CYL,END_CYL,BIE_MEAN_DELTA,BL_BIE_MEAN,BL_BIE_STD,ENC_BIE_MEAN,ENC_BIE_STD,ENC_WR_FAULTS,ENC_RD_FAULTS
//      P340_ENCROACH_DATA_COL_WIDTH               //          11,        10,        9,       10,     10,            14,         11,        10,          12,         11,           13,           13
//      P340_ENCROACH_DATA_COL_MASK                //           0,         0,        0,        0,      0,             0,          0,         0,           0,          0,            0,            0
//      P340_ENCROACH_DATA_COL_TYPES               // *
//      P340_ENCROACH_DATA_TABLE_TYPE              // S
#define P172_DETCR_OPERATING_INFO            1416  // COMP_SELECT,THRESH_RANGE,THRESH_ADJUST,GAIN,BIAS_VOLTAGE,BIAS,LP_FILTER,HP_FILTER,CONTACT_CNT,MODE_BLNK,MODE_BLNK_RANGE,HEAT_BLNK,TAVD_BLNK
//      P172_DETCR_OPERATING_INFO_COL_WIDTH        //          11,          12,           13,   4,          12,   4,        9,        9,         11,        9,             15,        9,        9
//      P172_DETCR_OPERATING_INFO_COL_MASK         //           0,           0,            0,   0,           0,   0,        0,        0,          0,        0,              0,        0,        0
//      P172_DETCR_OPERATING_INFO_COL_TYPES        // *
//      P172_DETCR_OPERATING_INFO_TABLE_TYPE       // S
#define P172_DETCR_THRESH_COEFFS             1417  // COEFF1,COEFF0
//      P172_DETCR_THRESH_COEFFS_COL_WIDTH         //      6,     6
//      P172_DETCR_THRESH_COEFFS_COL_MASK          //      0,     0
//      P172_DETCR_THRESH_COEFFS_COL_TYPES         // *
//      P172_DETCR_THRESH_COEFFS_TABLE_TYPE        // S
#define P109_TMOUT_DETCR_ERRS                1418  // HD_LGC_PSN,ZONE,VFYD_ERRS,UNVFYD_ERRS
//      P109_TMOUT_DETCR_ERRS_COL_WIDTH            //         10,   4,        9,         11
//      P109_TMOUT_DETCR_ERRS_COL_MASK             //          0,   0,        0,          0
//      P109_TMOUT_DETCR_ERRS_COL_TYPES            // *
//      P109_TMOUT_DETCR_ERRS_TABLE_TYPE           // S
#define P074_DISABLE_MASKS                   1419  // MASK_TYPE,CMD1_OD_HEAD_MASK,CMD1_ID_HEAD_MASK,CMD1_MD_HEAD_MASK,CMD2_OD_HEAD_MASK,CMD2_ID_HEAD_MASK,CMD2_MD_HEAD_MASK,DISABLE_FLAGS
//      P074_DISABLE_MASKS_COL_WIDTH               //        25,               16,               16,               16,               16,               16,               16,           13
//      P074_DISABLE_MASKS_COL_MASK                //         1,                1,                1,                1,                1,                1,                1,            1
//      P074_DISABLE_MASKS_COL_TYPES               //         V,                V,                V,                V,                V,                V,                V,            V
//      P074_DISABLE_MASKS_TABLE_TYPE              // S
#define P074_DISABLE_DIAMETER                1420  // HD_LGC_PSN,DIAMETER
//      P074_DISABLE_DIAMETER_COL_WIDTH            //         10,       8
//      P074_DISABLE_DIAMETER_COL_MASK             //          0,       0
//      P074_DISABLE_DIAMETER_COL_TYPES            // *
//      P074_DISABLE_DIAMETER_TABLE_TYPE           // S
#define P074_DIAMETER_SKIPPED                1421  // HD_LGC_PSN,DIAMETER
//      P074_DIAMETER_SKIPPED_COL_WIDTH            //         10,       8
//      P074_DIAMETER_SKIPPED_COL_MASK             //          0,       0
//      P074_DIAMETER_SKIPPED_COL_TYPES            // *
//      P074_DIAMETER_SKIPPED_TABLE_TYPE           // S
#define P316_BIE_DATA_STAT                   1422  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,SECTOR,BIE_AVG,BIE_MAX,BIE_MIN,BIE_DELTA,BIE_STD_DEV,SAMPLE_RANGE
//      P316_BIE_DATA_STAT_COL_WIDTH               //          11,        10,        9,      7,     6,      7,      7,      7,        9,         11,          12
//      P316_BIE_DATA_STAT_COL_MASK                //           0,         0,        0,      0,     0,      0,      0,      0,        0,          0,           0
//      P316_BIE_DATA_STAT_COL_TYPES               // *
//      P316_BIE_DATA_STAT_TABLE_TYPE              // S
#define P220_BAR_BIE_DATA                    1423  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BPI_ADJ_PCT,TPI_ADJ_PCT,CNV_NCNV_RATIO,CNV_CW_BIE,SETTLE_INDX,CNV_TRK_BIE,CNV_TRK_BER,NCNV_TRK_BIE,NCNV_TRK_BER,COMB_BER,ADC_BER_ADJ,NORMALIZED_BER,MED_FLTR,FLTR_THRESH,MOVE_AVG,PICK,TPI_ERR,AREAL_DENSITY,RD_OFFSET,MIN_RD_OFFSET,MAX_RD_OFFSET,AVG_ITERATIONS,ITER_LD_CNT
//      P220_BAR_BIE_DATA_COL_WIDTH                //          11,        9,        11,         11,         11,            14,        10,         11,         11,         11,          12,          12,       8,         11,            12,       8,         11,       8,   4,      7,           13,        9,           13,           13,            14,         11
//      P220_BAR_BIE_DATA_COL_MASK                 //           0,        0,         0,          0,          0,             0,         0,          0,          0,          0,           0,           0,       0,          0,             0,       0,          0,       0,   0,      0,            0,        0,            0,            0,             0,          0
//      P220_BAR_BIE_DATA_COL_TYPES                // *
//      P220_BAR_BIE_DATA_TABLE_TYPE               // S
#define P220_BAR_BIE_STATS                   1424  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,PICK_TYPE,MIN_BER,MAX_BER,MIN1_INDX,MIN2_INDX,MIN3_INDX,MAX_INDX,R_SQUARED,STD_DEV,CONFIDENCE,QUAD_PT_CNT,X_SQRD_COEF,X_COEF,CONSTANT,ITER_LD_CNT
//      P220_BAR_BIE_STATS_COL_WIDTH               //          11,        9,        11,        9,      7,      7,        9,        9,        9,       8,        9,      8,        11,         11,         11,     8,       8,         11
//      P220_BAR_BIE_STATS_COL_MASK                //           0,        0,         0,        0,      0,      0,        0,        0,        0,       0,        0,      0,         0,          0,          0,     0,       0,          0
//      P220_BAR_BIE_STATS_COL_TYPES               // *
//      P220_BAR_BIE_STATS_TABLE_TYPE              // S
#define P220_BAR_BIE_SUM                     1425  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BPI_ADJ_PCT,TPI_ADJ_PCT,ORIG_HMS_CAP,FNL_HMS_CAP,ORIG_BER,FNL_BER,RD_OFFSET,PICK_TYPE,CONFIDENCE,R_SQUARED,AREAL_DENSITY,ITER_LD_CNT,TEMP_CELSIUS
//      P220_BAR_BIE_SUM_COL_WIDTH                 //          11,        9,        11,         11,         11,          12,         11,       8,      7,        9,        9,        10,        9,           13,         11,          12
//      P220_BAR_BIE_SUM_COL_MASK                  //           0,        0,         0,          0,          0,           0,          0,       0,      0,        0,        0,         0,        0,            0,          0,           0
//      P220_BAR_BIE_SUM_COL_TYPES                 // *
//      P220_BAR_BIE_SUM_TABLE_TYPE                // S
#define P220_BAR_BIE_DETAIL_SUM              1426  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BASE_SQZ_BEST,BASE_SQZ_WORST,BPI_ADJ_PCT,TPI_ADJ_PCT,ORIG_HMS_CAP,FNL_HMS_CAP,ORIG_BER,FNL_BER,RD_OFFSET,PICK_TYPE,CONFIDENCE,R_SQUARED,STD_DEV,QUAD_PT_CNT,X_SQRD_COEF,X_COEF,CONSTANT,PICK_INDX,MIN1_INDX,MIN2_INDX,MIN3_INDX,MAX_INDX,AREAL_DENSITY,ITER_LD_CNT
//      P220_BAR_BIE_DETAIL_SUM_COL_WIDTH          //          11,        9,        11,           13,            14,         11,         11,          12,         11,       8,      7,        9,        9,        10,        9,      7,         11,         11,     8,       8,        9,        9,        9,        9,       8,           13,         11
//      P220_BAR_BIE_DETAIL_SUM_COL_MASK           //           0,        0,         0,            0,             0,          0,          0,           0,          0,       0,      0,        0,        0,         0,        0,      0,          0,          0,     0,       0,        0,        0,        0,        0,       0,            0,          0
//      P220_BAR_BIE_DETAIL_SUM_COL_TYPES          // *
//      P220_BAR_BIE_DETAIL_SUM_TABLE_TYPE         // S
#define P220_RD_OFST_AVG                     1427  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BPI_PCT,TPI_PCT,NUM_TRKS_TESTED,RD_OFST_AVG,RD_OFST_MIN,RD_OFST_MAX
//      P220_RD_OFST_AVG_COL_WIDTH                 //          11,        9,        10,      7,      7,             15,         11,         11,         11
//      P220_RD_OFST_AVG_COL_MASK                  //           0,        0,         0,      0,      0,              0,          0,          0,          0
//      P220_RD_OFST_AVG_COL_TYPES                 // *
//      P220_RD_OFST_AVG_TABLE_TYPE                // S
#define P321_RESISTANCE_MIN_MAX              1428  // HD_LGC_PSN,HD_PHYS_PSN,MAX_RES,MIN_RES,BASE_RES,PCNT_RANGE,HD_STATUS
//      P321_RESISTANCE_MIN_MAX_COL_WIDTH          //         10,         11,      7,      7,       8,        10,        9
//      P321_RESISTANCE_MIN_MAX_COL_MASK           //          0,          0,      0,      0,       0,         0,        0
//      P321_RESISTANCE_MIN_MAX_COL_TYPES          // *
//      P321_RESISTANCE_MIN_MAX_TABLE_TYPE         // S
#define P172_PREAMP_HAMR_LASER               1429  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,LASER_THRSHLD_CUR_DAC,LASER_OPERATING_CUR_DAC,CUR_RANGE_FLG
//      P172_PREAMP_HAMR_LASER_COL_WIDTH           //          11,        10,        9,                   21,                     23,           13
//      P172_PREAMP_HAMR_LASER_COL_MASK            //           1,         1,        1,                    1,                      1,            1
//      P172_PREAMP_HAMR_LASER_COL_TYPES           //           N,         N,        N,                    N,                      N,            N
//      P172_PREAMP_HAMR_LASER_TABLE_TYPE          // S
#define P218_LASER_CAL_VGA_DATA              1430  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,ITERATION,INDEX,VGA_DATA
//      P218_LASER_CAL_VGA_DATA_COL_WIDTH          //          11,        10,      7,        9,    5,       8
//      P218_LASER_CAL_VGA_DATA_COL_MASK           //           0,         0,      0,        0,    0,       0
//      P218_LASER_CAL_VGA_DATA_COL_TYPES          // *
//      P218_LASER_CAL_VGA_DATA_TABLE_TYPE         // V
#define P218_LASER_THRESH_CAL                1431  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,ITERATION,LASER_THRESHOLD,DIODE_CURRENT,DIODE_CURRENT_DELTA
//      P218_LASER_THRESH_CAL_COL_WIDTH            //          11,        10,      7,        9,             15,           13,                 19
//      P218_LASER_THRESH_CAL_COL_MASK             //           0,         0,      0,        0,              0,            0,                  0
//      P218_LASER_THRESH_CAL_COL_TYPES            // *
//      P218_LASER_THRESH_CAL_TABLE_TYPE           // V
#define P218_FINAL_BUCKET_SUMMARY            1432  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,VGA_BASELINE,DEPTH,TRACK_OFFSET,WIDTH
//      P218_FINAL_BUCKET_SUMMARY_COL_WIDTH        //          11,        10,      7,          12,    5,          12,    5
//      P218_FINAL_BUCKET_SUMMARY_COL_MASK         //           0,         0,      0,           0,    0,           0,    0
//      P218_FINAL_BUCKET_SUMMARY_COL_TYPES        // *
//      P218_FINAL_BUCKET_SUMMARY_TABLE_TYPE       // S
#define P074_TA_DETECT_PREP                  1433  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,DIAMETER,TA_TYPE
//      P074_TA_DETECT_PREP_COL_WIDTH              //          11,        10,     10,       8,      7
//      P074_TA_DETECT_PREP_COL_MASK               //           0,         0,      0,       0,      0
//      P074_TA_DETECT_PREP_COL_TYPES              // *
//      P074_TA_DETECT_PREP_TABLE_TYPE             // S
#define P336_SCORING_RESULTS                 1434  // MEAN_ERROR,SIGMA_ERROR,BEST_SCORE,CALC_BIAS_EXTENT,NUM_VALID_ZONES,FIT_ORDER,SAVED_BIAS_EXTENT
//      P336_SCORING_RESULTS_COL_WIDTH             //         10,         11,        10,              16,             15,        9,               17
//      P336_SCORING_RESULTS_COL_MASK              //          0,          0,         0,               0,              0,        0,                0
//      P336_SCORING_RESULTS_COL_TYPES             // *
//      P336_SCORING_RESULTS_TABLE_TYPE            // S
#define P074_TRK_PREP                        1435  // HD_PHYS_PSN,HD_LGC_PSN,INITIAL_TRK_NUM,TRGT_TRK_NUM,DIAMETER,JOG_TRK,TA_TRK_MARGIN,RD_CLRNC_TRGT,TA_COUNT,FAFH_SERPENT_START,FAFH_SERPENT_END
//      P074_TRK_PREP_COL_WIDTH                    //          11,        10,             15,          12,       8,      7,           13,           13,       8,                18,              16
//      P074_TRK_PREP_COL_MASK                     //           1,         1,              1,           1,       1,      1,            1,            1,       1,                 0,               0
//      P074_TRK_PREP_COL_TYPES                    //           N,         N,              N,           N,       N,      N,            N,            N,       N
//      P074_TRK_PREP_TABLE_TYPE                   // S
#define P109_LOG_SKIP_TRACK_SMR              1436  // HD_PHYS_PSN,SMR_TRK_NUM,HD_LGC_PSN,DATA_TRK_NUM,SFT_ERR_CODE,RW_ERR_CODE
//      P109_LOG_SKIP_TRACK_SMR_COL_WIDTH          //          11,         11,        10,          12,          12,         11
//      P109_LOG_SKIP_TRACK_SMR_COL_MASK           //           0,          0,         0,           0,           0,          0
//      P109_LOG_SKIP_TRACK_SMR_COL_TYPES          // *
//      P109_LOG_SKIP_TRACK_SMR_TABLE_TYPE         // S
#define P109_TRK_ERROR_SMR                   1437  // HD_PHYS_PSN,SMR_TRK_NUM,HD_LGC_PSN,DATA_TRK_NUM,FAILED_SECTOR,RW_ERROR,FAULT_STATUS,PREAMP_FAULT_STATUS
//      P109_TRK_ERROR_SMR_COL_WIDTH               //          11,         11,        10,          12,           13,       8,          12,                 19
//      P109_TRK_ERROR_SMR_COL_MASK                //           0,          0,         0,           0,            0,       0,           0,                  0
//      P109_TRK_ERROR_SMR_COL_TYPES               // *
//      P109_TRK_ERROR_SMR_TABLE_TYPE              // S
#define P2108_DFS_FSB_ERROR_SMR              1438  // HD_PHYS_PSN,SMR_TRK_NUM,HD_LGC_PSN,DATA_TRK_NUM,SECTOR,TRK_OFFSET,SEC_OFFSET,LENGTH,TARGET_PBA,_,F,S,B,_,S,T,A,T,U,S,_
//      P2108_DFS_FSB_ERROR_SMR_COL_WIDTH          //          11,         11,        10,          12,     6,        10,        10,     6,        10,1,1,1,1,1,1,1,1,1,1,1,1
//      P2108_DFS_FSB_ERROR_SMR_COL_MASK           //           0,          0,         0,           0,     0,         0,         0,     0,         0,0,0,0,0,0,0,0,0,0,0,0,0
//      P2108_DFS_FSB_ERROR_SMR_COL_TYPES          // *
//      P2108_DFS_FSB_ERROR_SMR_TABLE_TYPE         // S
#define P095_DEBUG_RAW_HSC                   1439  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,REV,WRT_CUR_DAC,WRT_CUR_OVS_DAC,WRT_CUR_OVS_DUR,HTR_DAC,HSC_1,HSC_2,TRIM
//      P095_DEBUG_RAW_HSC_COL_WIDTH               //          11,        10,        9,      8,  4,         11,             15,             15,      7,   10,   10,   4
//      P095_DEBUG_RAW_HSC_COL_MASK                //           0,         0,        0,      0,  0,          0,              0,              0,      0,    0,    0,   0
//      P095_DEBUG_RAW_HSC_COL_TYPES               // *
//      P095_DEBUG_RAW_HSC_TABLE_TYPE              // S
#define P095_LIWP_DATA                       1440  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,TEST_ITERATION,WRT_CUR_DAC,WRT_CUR_OVS_DAC,WRT_CUR_OVS_DUR,HTR_DAC,LASER_THRSHLD_CUR,LASER_CUR_ADD,LASER_CUR_RANGE,LASER_TOTAL_CUR,HSC_1,HSC_2,DELTA_FLY_HGT,COV_PCT
//      P095_LIWP_DATA_COL_WIDTH                   //          11,        10,        9,      8,            14,         11,             15,             15,      7,               17,           13,             15,             15,   10,   10,           13,      7
//      P095_LIWP_DATA_COL_MASK                    //           1,         1,        1,      1,             1,          1,              1,              1,      1,                1,            1,              1,              1,    1,    1,            1,      1
//      P095_LIWP_DATA_COL_TYPES                   //           N,         N,        N,      N,             N,          N,              N,              N,      N,                N,            N,              N,              N,    N,    N,            N,      N
//      P095_LIWP_DATA_TABLE_TYPE                  // S
#define P342_DH_BURNISH_CHECK                1441  // HD_PHYS_PSN,TEST_PSN,TEST_TYPE,ACTIVE_HEATER,CLR_ACTUATION_MODE,HD_LGC_PSN,WPH_HTR_CLR_1,WRT_HTR_CLR_1,WPH_HTR_CLR_2,WRT_HTR_CLR_2,MOD_CALC_AVG_1,MOD_CALC_AVG_2,DELTA_BURNISH_CHECK,BURNISH_USL,HD_STATUS,BURNISH_LSL
//      P342_DH_BURNISH_CHECK_COL_WIDTH            //          11,       8,        9,           13,                18,        10,           13,           13,           13,           13,            14,            14,                 19,         11,        9,         11
//      P342_DH_BURNISH_CHECK_COL_MASK             //           0,       0,        0,            0,                 0,         0,            0,            0,            0,            0,             0,             0,                  0,          0,        0,          0
//      P342_DH_BURNISH_CHECK_COL_TYPES            // *
//      P342_DH_BURNISH_CHECK_TABLE_TYPE           // S
#define P362_RETRY_COUNTS                    1442  // RETRY_NUM,RETRY_CNT
//      P362_RETRY_COUNTS_COL_WIDTH                //         9,        9
//      P362_RETRY_COUNTS_COL_MASK                 //         0,        0
//      P362_RETRY_COUNTS_COL_TYPES                // *
//      P362_RETRY_COUNTS_TABLE_TYPE               // S
#define P000_TRK_CONVERSION_FAIL             1443  // HD_PHYS_PSN,HD_LGC_PSN,PHYS_TRK_NUM
//      P000_TRK_CONVERSION_FAIL_COL_WIDTH         //          11,        10,          13
//      P000_TRK_CONVERSION_FAIL_COL_MASK          //           0,         0,           0
//      P000_TRK_CONVERSION_FAIL_COL_TYPES         // *
//      P000_TRK_CONVERSION_FAIL_TABLE_TYPE        // S
#define P074_FAFH_T74_STATUS                 1444  // DIAMETER,HEAD,DIAMETER_DISABLE_FLAGS,NUM_TA
//      P074_FAFH_T74_STATUS_COL_WIDTH             //        8,   4,                    22,     6
//      P074_FAFH_T74_STATUS_COL_MASK              //        0,   0,                     0,     0
//      P074_FAFH_T74_STATUS_COL_TYPES             // *
//      P074_FAFH_T74_STATUS_TABLE_TYPE            // S
#define P159_TRIP_ERR_SUM_V2                 1445  // HD_PHYS_PSN,HD_LGC_PSN,TM_NOT_DETECTED,TM_TIME_ERR,OBSERVER_SECTOR_ERR,LV_DETECTED_SHOCK,UNSAFE_ERR_ONTRACK,TM_NOT_DETECTED_VEL,TM_TIME_ERR_VEL,OBSERVER_SECTOR_ERR_VEL,PES_DETECTED_SHOCK,PREDICTED_OFFTRACK,INTERRUPT_OVERRUN_ERR,FALSE_PREDICTED_OFFTRACK,RRO_PARITY_ERR,AGC_DELTA_TRIP_ERR,AGC_RUNAVG_TRIP_ERR,AGC_BPFILTER_TRIP_ERR,SHOCK_SENSOR_DTCTD_SHOCK,SHOCK_SENSOR_LEVEL_LOW,SHOCK_SENSOR_LEVEL_HIGH,ZEST_DATA_ERR,PZT_OXIDATION_DETECTED,DLC_ERR_DETECTED_ONTRACK,STATESPACE_TRK_RCVRY_ERR,STATESPACE_SEEK_RCVRY_ERR,DUAL_STAGE_LOCK_OUT,RVFF_RELATED_SEEK_ERR
//      P159_TRIP_ERR_SUM_V2_COL_WIDTH             //          11,        10,             15,         11,                 19,               17,                18,                 19,             15,                     23,                18,                18,                   21,                      24,            14,                18,                 19,                   21,                      24,                    22,                     23,           13,                    22,                      24,                      24,                       25,                 19,                   21
//      P159_TRIP_ERR_SUM_V2_COL_MASK              //           1,         1,              1,          1,                  1,                1,                 1,                  1,              1,                      1,                 1,                 1,                    1,                       1,             1,                 1,                  1,                    1,                       1,                     1,                      1,            1,                     1,                       1,                       1,                        1,                  1,                    1
//      P159_TRIP_ERR_SUM_V2_COL_TYPES             //           N,         N,              N,          N,                  N,                N,                 N,                  N,              N,                      N,                 N,                 N,                    N,                       N,             N,                 N,                  N,                    N,                       N,                     N,                      N,            N,                     N,                       N,                       N,                        N,                  N,                    N
//      P159_TRIP_ERR_SUM_V2_TABLE_TYPE            // V
#define P074_FAFH_CALS                       1446  // HD_PHYS_PSN,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,DIAMETER,ACTIVE_HEATER,MODE_TYPE,START_BPI_PCT,FINAL_BPI_PCT,HI_FREQ,HTR_DAC,GAIN_LOOP,HF_STDEV_ACT,GAIN_PICK,HF_AMPL,LF_AMPL,LF_OFFSET,VGAS,ATTC,ATTC_RD,ATT2R,VGAR,CTF,PREAMP_GAIN,CHAN_GAIN,ERROR_FLAG,CTF_RANGE
//      P074_FAFH_CALS_COL_WIDTH                   //          11,        10,         11,         11,       8,           13,       10,           13,           13,      9,      7,        9,          12,        9,      9,      9,        9,   4,   4,      7,    5,   4,  4,         11,        9,        10,        9
//      P074_FAFH_CALS_COL_MASK                    //           1,         1,          1,          1,       1,            1,        1,            1,            1,      1,      1,        1,           1,        1,      1,      1,        1,   1,   1,      1,    1,   1,  1,          1,        1,         1,        1
//      P074_FAFH_CALS_COL_TYPES                   //           N,         N,          N,          N,       N,            V,        V,            N,            N,      N,      N,        N,           N,        N,      N,      N,        N,   N,   N,      N,    N,   N,  N,          N,        N,         N,        N
//      P074_FAFH_CALS_TABLE_TYPE                  // S
#define P074_AR_MEASUREMENT                  1447  // HD_PHYS_PSN,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,DIAMETER,ACTIVE_HEATER,HTR_DAC,LF_REF,LF_ACT,NORM_HF_REF,NORM_HF_ACT,MSRD_HIRP,READER_CLR,GAMMA,PASSIVE_CLR,AMPL_RATIO,DIODE_TEMP,CHAN_TEMP,TEMPERATURE_INDEX
//      P074_AR_MEASUREMENT_COL_WIDTH              //          11,        10,         11,         11,       8,           13,      7,    11,    11,         11,         11,        9,        10,    7,         11,        10,        10,        9,               17
//      P074_AR_MEASUREMENT_COL_MASK               //           1,         1,          1,          1,       1,            1,      1,     1,     1,          1,          1,        1,         1,    1,          1,         1,         1,        1,                1
//      P074_AR_MEASUREMENT_COL_TYPES              //           N,         N,          N,          N,       N,            V,      N,     N,     N,          N,          N,        N,         N,    N,          N,         N,         N,        N,                N
//      P074_AR_MEASUREMENT_TABLE_TYPE             // S
#define P074_AR_MEAS_CFG                     1448  // HD_PHYS_PSN,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,DIAMETER,HI_FREQ,ATTC,ATTC_RD,ATT2R,VGAR,PREAMP_GAIN,CTF_RANGE,CTF,CONTACT_DAC,ERROR_FLAG,HIRP_POLY_B0,HIRP_POLY_B1,HIRP_POLY_B2
//      P074_AR_MEAS_CFG_COL_WIDTH                 //          11,        10,         11,         11,       8,     12,   4,      7,    5,   4,         11,        9,  5,         11,        10,          12,          12,          12
//      P074_AR_MEAS_CFG_COL_MASK                  //           1,         1,          1,          1,       1,      1,   1,      1,    1,   1,          1,        1,  1,          1,         1,           1,           1,           1
//      P074_AR_MEAS_CFG_COL_TYPES                 //           N,         N,          N,          N,       N,      N,   N,      N,    N,   N,          N,        N,  N,          N,         V,           N,           N,           N
//      P074_AR_MEAS_CFG_TABLE_TYPE                // S
#define P135_COMBO_TABLE2                    1449  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,HTR_DAC,REF_HTR_DAC,DELTA_DAC,TEST_ITERATION,CNTCT_TEST_STAGE,WRITE_MODE,TRIP_MASK,AGC_REF,AGC_STRESSED,STRESSED_RRO,LOCAL_REF_RRO,DETECTOR1,DETECTOR2,DETECTOR3,DETECTOR4,DETECTOR5,DETECTOR6,LIMIT1,LIMIT2,LIMIT3,LIMIT4,LIMIT5,LIMIT6,DETCR_THRSHLD,REF_DETCR_THRSHLD,ACTIVE_HTR,INACTIVE_HTR_DAC
//      P135_COMBO_TABLE2_COL_WIDTH                //          11,        9,      7,        10,      7,         11,        9,            14,              16,        10,        9,      7,          12,          12,           13,        9,        9,        9,        9,        9,        9,     6,     6,     6,     6,     6,     6,           13,               17,        10,              16
//      P135_COMBO_TABLE2_COL_MASK                 //           1,        1,      1,         1,      1,          1,        1,             1,               1,         1,        1,      1,           1,           1,            1,        1,        1,        1,        1,        1,        1,     1,     1,     1,     1,     1,     1,            1,                1,         1,               1
//      P135_COMBO_TABLE2_COL_TYPES                //           N,        N,      N,         N,      N,          N,        N,             N,               V,         V,        N,      N,           N,           N,            N,        N,        N,        N,        N,        N,        N,     N,     N,     N,     N,     N,     N,            N,                N,         V,               N
//      P135_COMBO_TABLE2_TABLE_TYPE               // S
#define P270_AREA_PROFILE                    1450  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CYLINDER,SQZ_WRT_OFST,HSC_AMP_AREA
//      P270_AREA_PROFILE_COL_WIDTH                //          11,        9,        10,       8,          12,          12
//      P270_AREA_PROFILE_COL_MASK                 //           0,        0,         0,       0,           0,           0
//      P270_AREA_PROFILE_COL_TYPES                // *
//      P270_AREA_PROFILE_TABLE_TYPE               // M
#define P270_HSC_AMP_BUCKET                  1451  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CYLINDER,RD_OFST,SQZ_WRT_OFST,HSC_AMP
//      P270_HSC_AMP_BUCKET_COL_WIDTH              //          11,        9,        10,       8,      7,          12,      7
//      P270_HSC_AMP_BUCKET_COL_MASK               //           0,        0,         0,       0,      0,           0,      0
//      P270_HSC_AMP_BUCKET_COL_TYPES              // *
//      P270_HSC_AMP_BUCKET_TABLE_TYPE             // M
#define P270_EB_RESULT_DATA                  1452  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CYLINDER,EB_NEG_OFST_CNT,EB_POS_OFST_CNT,EB_NEG_WIDTH,EB_POS_WIDTH
//      P270_EB_RESULT_DATA_COL_WIDTH              //          11,        9,        10,       8,             15,             15,          12,          12
//      P270_EB_RESULT_DATA_COL_MASK               //           1,        1,         1,       1,              1,              1,           1,           1
//      P270_EB_RESULT_DATA_COL_TYPES              //           N,        N,         N,       N,              N,              N,           N,           N
//      P270_EB_RESULT_DATA_TABLE_TYPE             // S
#define P074_AR_CALCS                        1453  // HD_PHYS_PSN,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,DIAMETER,ACTIVE_HEATER,AVG_BETA,AVG_HIRP_2ND_ORDER,TARGET_HIRP_SLOPE,PASSIVE_WRT_CLR_REF,PASSIVE_HIRP_SLOPE_REF
//      P074_AR_CALCS_COL_WIDTH                    //          11,        10,         11,         11,       8,           13,       8,                18,               17,                 19,                    22
//      P074_AR_CALCS_COL_MASK                     //           1,         1,          1,          1,       1,            1,       1,                 1,                1,                  1,                     1
//      P074_AR_CALCS_COL_TYPES                    //           N,         N,          N,          N,       N,            V,       N,                 N,                N,                  N,                     N
//      P074_AR_CALCS_TABLE_TYPE                   // S
#define P074_HIRP_COEFS                      1454  // HD_PHYS_PSN,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,DIAMETER,ACTIVE_HEATER,TEMPERATURE_INDEX,GAMMA_H,BETA,CONTACT_DAC,HIRP_B2,HIRP_B1,HIRP_B0
//      P074_HIRP_COEFS_COL_WIDTH                  //          11,        10,         11,         11,       8,           13,               17,      7,   8,         11,      7,      7,      7
//      P074_HIRP_COEFS_COL_MASK                   //           1,         1,          1,          1,       1,            1,                1,      1,   1,          1,      1,      1,      1
//      P074_HIRP_COEFS_COL_TYPES                  //           N,         N,          N,          N,       N,            V,                N,      N,   N,          N,      N,      N,      N
//      P074_HIRP_COEFS_TABLE_TYPE                 // S
#define P074_AR_TRANSFER_FN                  1455  // HD_PHYS_PSN,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,DIAMETER,ACTIVE_HEATER,WORKING_HEAT,DRIVE_TARGET_CLR,FAFH_TARGET_CLR,RESIDUAL_STDEV,R_SQUARED,ERROR_FLAG,XFR_FN_A0,XFR_FN_A1,XFR_FN_A2,XFR_FN_A3,XFR_FN_A4
//      P074_AR_TRANSFER_FN_COL_WIDTH              //          11,        10,         11,         11,       8,           13,          12,              16,             15,            14,        9,        10,        9,        9,        9,        9,        9
//      P074_AR_TRANSFER_FN_COL_MASK               //           1,         1,          1,          1,       1,            1,           1,               1,              1,             1,        1,         1,        1,        1,        1,        1,        1
//      P074_AR_TRANSFER_FN_COL_TYPES              //           N,         N,          N,          N,       N,            V,           N,               N,              N,             N,        N,         V,        N,        N,        N,        N,        N
//      P074_AR_TRANSFER_FN_TABLE_TYPE             // S
#define P135_COMBO_MEASURE_DATA              1456  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,ACTIVE_HEATER,HEATER_MODE,CNTCT_TEST_STAGE,HTR_DAC_STEP_SIZE,HTR_DAC,DELTA_DAC,CONTACT,TRIP1,TRIP2,TRIP3,TRIP4,TRIP5,TRIP6,LIMIT1,LIMIT2,LIMIT3,LIMIT4,LIMIT5,LIMIT6,MEASURED1,MEASURED2,MEASURED3,MEASURED4,MEASURED5,MEASURED6,SNR1,SNR2,SNR3,SNR4,SNR5,SNR6,TEST_ITERATION,DETCR_THRESHOLD,DETCR_FAULT_COUNT
//      P135_COMBO_MEASURE_DATA_COL_WIDTH          //          11,        10,        9,      7,           13,         11,              16,               17,      7,        9,      7,    5,    5,    5,    5,    5,    5,     7,     7,     7,     7,     7,     7,       10,       10,       10,       10,       10,       10,   8,   8,   8,   8,   8,   8,            14,             15,               17
//      P135_COMBO_MEASURE_DATA_COL_MASK           //           0,         0,        0,      0,            0,          0,               0,                0,      0,        0,      0,    0,    0,    0,    0,    0,    0,     0,     0,     0,     0,     0,     0,        0,        0,        0,        0,        0,        0,   0,   0,   0,   0,   0,   0,             0,              0,                0
//      P135_COMBO_MEASURE_DATA_COL_TYPES          // *
//      P135_COMBO_MEASURE_DATA_TABLE_TYPE         // S
#define P172_SRV_ZONE_CONF_CMR               1457  // HD_PHYS_PSN,HD_LGC_PSN,SRVO_ZN_IN_RAP,ZN_START_CYL,NUM_TRK,START_SERPENT,SERPENT_CNT,SGATE_WIDTH
//      P172_SRV_ZONE_CONF_CMR_COL_WIDTH           //          11,        10,            14,          12,      7,           13,         11,         11
//      P172_SRV_ZONE_CONF_CMR_COL_MASK            //           0,         0,             0,           0,      0,            0,          0,          0
//      P172_SRV_ZONE_CONF_CMR_COL_TYPES           // *
//      P172_SRV_ZONE_CONF_CMR_TABLE_TYPE          // S
#define P172_SRV_ZONE_CONF_SMR               1458  // HD_PHYS_PSN,HD_LGC_PSN,SRVO_ZN_IN_RAP,ZN_START_CYL,NUM_TRK,START_NOM_TRK,NOM_TRK_CNT,SGATE_WIDTH
//      P172_SRV_ZONE_CONF_SMR_COL_WIDTH           //          11,        10,            14,          12,      7,           13,         11,         11
//      P172_SRV_ZONE_CONF_SMR_COL_MASK            //           0,         0,             0,           0,      0,            0,          0,          0
//      P172_SRV_ZONE_CONF_SMR_COL_TYPES           // *
//      P172_SRV_ZONE_CONF_SMR_TABLE_TYPE          // S
#define P172_HEAD_TPI_CONFIG_TBL             1459  // SHD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRACK_PITCH,TRACK_GUARD,UJOG_SQZ,DIRECTION,BAND_SIZE
//      P172_HEAD_TPI_CONFIG_TBL_COL_WIDTH         //           11,        9,        10,         11,         11,       8,        9,        9
//      P172_HEAD_TPI_CONFIG_TBL_COL_MASK          //            0,        0,         0,          0,          0,       0,        0,        0
//      P172_HEAD_TPI_CONFIG_TBL_COL_TYPES         // *
//      P172_HEAD_TPI_CONFIG_TBL_TABLE_TYPE        // S
#define P043_GEOMETRY_HD_STATUS              1460  // HD_PHYS_PSN,HD_LGC_PSN,STATUS_CODE
//      P043_GEOMETRY_HD_STATUS_COL_WIDTH          //          11,        10,         11
//      P043_GEOMETRY_HD_STATUS_COL_MASK           //           0,         0,          0
//      P043_GEOMETRY_HD_STATUS_COL_TYPES          // *
//      P043_GEOMETRY_HD_STATUS_TABLE_TYPE         // S
#define P2109_DFS_FOOTER                     1461  // TOT_SLIPS,SLIP_PCT,REAL_TRKS,FAKE_TRKS
//      P2109_DFS_FOOTER_COL_WIDTH                 //         9,       8,        9,        9
//      P2109_DFS_FOOTER_COL_MASK                  //         0,       0,        0,        0
//      P2109_DFS_FOOTER_COL_TYPES                 // *
//      P2109_DFS_FOOTER_TABLE_TYPE                // S
#define P2109_TRACK_EXAM_FAILURE             1462  // HD_LGC_PSN,CYLINDER,TRK_ERRORS,SYMBOL_LEN,PLIST_COUNT
//      P2109_TRACK_EXAM_FAILURE_COL_WIDTH         //         10,       8,        10,        10,         11
//      P2109_TRACK_EXAM_FAILURE_COL_MASK          //          0,       0,         0,         0,          0
//      P2109_TRACK_EXAM_FAILURE_COL_TYPES         // *
//      P2109_TRACK_EXAM_FAILURE_TABLE_TYPE        // S
#define P2109_SKIP_TRACK_PAD                 1463  // HD_LGC_PSN,CYLINDER,CONSEC,PAD_SIZE,STATUS
//      P2109_SKIP_TRACK_PAD_COL_WIDTH             //         10,       8,     6,       8,     6
//      P2109_SKIP_TRACK_PAD_COL_MASK              //          0,       0,     0,       0,     0
//      P2109_SKIP_TRACK_PAD_COL_TYPES             // *
//      P2109_SKIP_TRACK_PAD_TABLE_TYPE            // S
#define P2109_BEGIN_PASS                     1464  // PASS_TYPE,TRACK_MODE,SKIP_MODE,HRS_ELAPSED,MINS_ELAPSED,SECS_ELAPSED
//      P2109_BEGIN_PASS_COL_WIDTH                 //         9,        10,        9,         11,          12,          12
//      P2109_BEGIN_PASS_COL_MASK                  //         0,         0,        0,          0,           0,           0
//      P2109_BEGIN_PASS_COL_TYPES                 // *
//      P2109_BEGIN_PASS_TABLE_TYPE                // S
#define P2109_PLIST_SLIP_TRACK               1465  // HD_LGC_PSN,CYLINDER,TRACK_SYMS
//      P2109_PLIST_SLIP_TRACK_COL_WIDTH           //         10,       8,        10
//      P2109_PLIST_SLIP_TRACK_COL_MASK            //          0,       0,         0
//      P2109_PLIST_SLIP_TRACK_COL_TYPES           // *
//      P2109_PLIST_SLIP_TRACK_TABLE_TYPE          // S
#define P2109_SPARES_TRANSITION              1466  // SPARES_START_HD,SPARES_START_CYL,LAST_LBA,FIRST_SPARES_PBA,LAST_PBA,SPARES_END_HD,SPARES_END_CYL
//      P2109_SPARES_TRANSITION_COL_WIDTH          //              15,              16,       8,              16,       8,           13,            14
//      P2109_SPARES_TRANSITION_COL_MASK           //               0,               0,       0,               0,       0,            0,             0
//      P2109_SPARES_TRANSITION_COL_TYPES          // *
//      P2109_SPARES_TRANSITION_TABLE_TYPE         // S
#define P109_RZBX_LIMIT                      1467  // 3_SIGMA,MAX_ABS,VELOCITY,3_SIGMA_MA
//      P109_RZBX_LIMIT_COL_WIDTH                  //       7,      7,       8,        10
//      P109_RZBX_LIMIT_COL_MASK                   //       0,      0,       0,         0
//      P109_RZBX_LIMIT_COL_TYPES                  // *
//      P109_RZBX_LIMIT_TABLE_TYPE                 // M
#define P109_RZBX_STATS                      1468  // HEAD,TOTAL_TRKS,REL_TRKS,FAIL_REL,3_SIGMA,MAX_ABS,VELOCITY,3_SIGMA_MA,MISSED_REV,ZAP_PAR,ITRTN_TRK,REV_ITRTN
//      P109_RZBX_STATS_COL_WIDTH                  //    4,        10,       8,       8,      7,      7,       8,        10,        10,      7,        9,        9
//      P109_RZBX_STATS_COL_MASK                   //    0,         0,       0,       0,      0,      0,       0,         0,         0,      0,        0,        0
//      P109_RZBX_STATS_COL_TYPES                  // *
//      P109_RZBX_STATS_TABLE_TYPE                 // M
#define P074_FREQ_TRANSFER_FN                1469  // HD_PHYS_PSN,HD_LGC_PSN,DIAMETER,LF_RESIDUAL_STDEV,LF_R_SQUARED,LF_XFR_FN_A0,LF_XFR_FN_A1,LF_XFR_FN_A2,LF_XFR_FN_A3,LF_XFR_FN_A4,HF_RESIDUAL_STDEV,HF_R_SQUARED,HF_XFR_FN_A0,HF_XFR_FN_A1,HF_XFR_FN_A2,HF_XFR_FN_A3,HF_XFR_FN_A4
//      P074_FREQ_TRANSFER_FN_COL_WIDTH            //          11,        10,       8,               17,          12,          12,          12,          12,          12,          12,               17,          12,          12,          12,          12,          12,          12
//      P074_FREQ_TRANSFER_FN_COL_MASK             //           0,         0,       0,                0,           0,           0,           0,           0,           0,           0,                0,           0,           0,           0,           0,           0,           0
//      P074_FREQ_TRANSFER_FN_COL_TYPES            // *
//      P074_FREQ_TRANSFER_FN_TABLE_TYPE           // S
#define P172_PREAMP_WORKING_LASER            1470  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,LASER_THRSHLD_CUR_DAC,LASER_OPERATING_CUR_DAC,CUR_RANGE_FLG,LASER_MLCFCA
//      P172_PREAMP_WORKING_LASER_COL_WIDTH        //          11,        10,        9,                   21,                     23,           13,          12
//      P172_PREAMP_WORKING_LASER_COL_MASK         //           0,         0,        0,                    0,                      0,            0,           0
//      P172_PREAMP_WORKING_LASER_COL_TYPES        // *
//      P172_PREAMP_WORKING_LASER_TABLE_TYPE       // S
#define P062_BIAS_DATA_2                     1471  // HD_PHYS_PSN,HD_LGC_PSN,LGC_CYL,RTY_CNT,VGAR,BIAS_VALUE,BIAS_DAC,INCR_CNT,BER10,BEST_BER10,DELTA_BER10
//      P062_BIAS_DATA_2_COL_WIDTH                 //          11,        10,      7,      7,   4,        10,       8,       8,    8,        10,         11
//      P062_BIAS_DATA_2_COL_MASK                  //           1,         1,      1,      1,   1,         1,       1,       1,    1,         1,          1
//      P062_BIAS_DATA_2_COL_TYPES                 //           N,         N,      N,      N,   N,         N,       N,       N,    N,         N,          N
//      P062_BIAS_DATA_2_TABLE_TYPE                // S
#define P094_VTH_DELTA_ADJUST                1472  // HD_LGC_PSN,DATA_ZONE,NEG_VTH_THRESH,POS_VTH_THRESH,VTH_DELTA_ADJ,RAP_VTH_THRESH,VTH_ADJUST
//      P094_VTH_DELTA_ADJUST_COL_WIDTH            //         10,        9,            14,            14,           13,            14,        10
//      P094_VTH_DELTA_ADJUST_COL_MASK             //          0,        0,             0,             0,            0,             0,         0
//      P094_VTH_DELTA_ADJUST_COL_TYPES            // *
//      P094_VTH_DELTA_ADJUST_TABLE_TYPE           // S
#define P175_AGC_DATA                        1473  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,MAX_AGC,MEAN_AGC,SIGMA_AGC
//      P175_AGC_DATA_COL_WIDTH                    //          11,        10,      7,      7,       8,        9
//      P175_AGC_DATA_COL_MASK                     //           0,         0,      0,      0,       0,        0
//      P175_AGC_DATA_COL_TYPES                    // *
//      P175_AGC_DATA_TABLE_TYPE                   // S
#define P339_RESISTANCE_DELTA                1474  // HD_PHYS_PSN,ZONE,TRK_NUM,ACTIVE_HEATER,ACTIVE_HEATER_DAC,TARGET_ACTUATION,TEMP_INDEX,RES_DELTA_AVG,RES_DELTA_STDEV,RES_DELTA_MIN,RES_DELTA_MAX,PASSIVE_RES_AVG,ACTIVE_RES_AVG,DRIVE_TEMP
//      P339_RESISTANCE_DELTA_COL_WIDTH            //          11,   4,      7,           13,               17,              16,        10,           13,             15,           13,           13,             15,            14,        10
//      P339_RESISTANCE_DELTA_COL_MASK             //           0,   0,      0,            0,                0,               0,         0,            0,              0,            0,            0,              0,             0,         0
//      P339_RESISTANCE_DELTA_COL_TYPES            // *
//      P339_RESISTANCE_DELTA_TABLE_TYPE           // S
#define P339_TEMPERATURE_DELTA               1475  // HD_PHYS_PSN,ZONE,TRK_NUM,ACTIVE_HEATER,ACTIVE_HEATER_DAC,TARGET_ACTUATION,TEMP_INDEX,DETCR_TEMP_RISE_AVG,DETCR_TEMP_RISE_STD,DETCR_TEMP_RISE_MIN,DETCR_TEMP_RISE_MAX,DETCR_TEMP_RISE_PER_ANG,TCR_TYPE
//      P339_TEMPERATURE_DELTA_COL_WIDTH           //          11,   4,      7,           13,               17,              16,        10,                 19,                 19,                 19,                 19,                     23,       8
//      P339_TEMPERATURE_DELTA_COL_MASK            //           0,   0,      0,            0,                0,               0,         0,                  0,                  0,                  0,                  0,                      0,       0
//      P339_TEMPERATURE_DELTA_COL_TYPES           // *
//      P339_TEMPERATURE_DELTA_TABLE_TYPE          // S
#define P339_TCR_CAL                         1476  // HD_PHYS_PSN,DETCR_RES_AVG_0,DETCR_RES_AVG_1,DRIVE_TEMP_AVG_0,DRIVE_TEMP_AVG_1,RES_SENS_TO_TEMP,DETCR_TCR,TCR_TYPE
//      P339_TCR_CAL_COL_WIDTH                     //          11,             15,             15,              16,              16,              16,        9,       8
//      P339_TCR_CAL_COL_MASK                      //           0,              0,              0,               0,               0,               0,        0,       0
//      P339_TCR_CAL_COL_TYPES                     // *
//      P339_TCR_CAL_TABLE_TYPE                    // S
#define P236_SMR_SQUEEZE_MICROJOG            1477  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,UJOG_OFST
//      P236_SMR_SQUEEZE_MICROJOG_COL_WIDTH        //          11,        10,        9,        9
//      P236_SMR_SQUEEZE_MICROJOG_COL_MASK         //           0,         0,        0,        0
//      P236_SMR_SQUEEZE_MICROJOG_COL_TYPES        // *
//      P236_SMR_SQUEEZE_MICROJOG_TABLE_TYPE       // S
#define P285_SCOPY_SEEK_RES                  1478  // HD_PHYS_PSN,HD_LGC_PSN,MAX_TRACK_NUM
//      P285_SCOPY_SEEK_RES_COL_WIDTH              //          11,        10,           13
//      P285_SCOPY_SEEK_RES_COL_MASK               //           0,         0,            0
//      P285_SCOPY_SEEK_RES_COL_TYPES              // *
//      P285_SCOPY_SEEK_RES_TABLE_TYPE             // S
#define P285_SCOPY_HD_SWITCH_RES             1479  // HD_PHYS_PSN,HD_LGC_PSN,START_TRACK,LIMIT_TRACK
//      P285_SCOPY_HD_SWITCH_RES_COL_WIDTH         //          11,        10,         11,         11
//      P285_SCOPY_HD_SWITCH_RES_COL_MASK          //           0,         0,          0,          0
//      P285_SCOPY_HD_SWITCH_RES_COL_TYPES         // *
//      P285_SCOPY_HD_SWITCH_RES_TABLE_TYPE        // S
#define P285_SCOPY_MAX_TRACK_RES             1480  // LIM_HD_PHYS_PSN,LIM_HD_LGC_PSN,TRACK_0,LIMIT_TRACK,NEW_MAX_TRACK
//      P285_SCOPY_MAX_TRACK_RES_COL_WIDTH         //              15,            14,      7,         11,           13
//      P285_SCOPY_MAX_TRACK_RES_COL_MASK          //               0,             0,      0,          0,            0
//      P285_SCOPY_MAX_TRACK_RES_COL_TYPES         // *
//      P285_SCOPY_MAX_TRACK_RES_TABLE_TYPE        // S
#define P135_DETCR_RESISTANCE                1481  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,ACTIVE_HEATER,HTR_DAC,DETCR_BIAS_DAC,DETCR_RESISTANCE,DELTA_TEMP,RAW_PREAMP_ADC,DETCR_VOLTAGE,DETCR_CURRENT
//      P135_DETCR_RESISTANCE_COL_WIDTH            //          11,        10,        9,      8,           13,      7,            14,              16,        10,            14,           13,           13
//      P135_DETCR_RESISTANCE_COL_MASK             //           0,         0,        0,      0,            0,      0,             0,               0,         0,             0,            0,            0
//      P135_DETCR_RESISTANCE_COL_TYPES            // *
//      P135_DETCR_RESISTANCE_TABLE_TYPE           // S
#define P238_MICROJOG_ZERO_SKEW              1482  // HD_PHYS_PSN,HD_LGC_PSN,PHYS_CYL,LOG_CYL,ZONE
//      P238_MICROJOG_ZERO_SKEW_COL_WIDTH          //          11,        10,       8,      7,   4
//      P238_MICROJOG_ZERO_SKEW_COL_MASK           //           0,         0,       0,      0,   0
//      P238_MICROJOG_ZERO_SKEW_COL_TYPES          // *
//      P238_MICROJOG_ZERO_SKEW_TABLE_TYPE         // S
#define P185_SERVO_TRK_RANGE                 1483  // MAX_OD_SRVO_TRK,MIN_ID_SRVO_TRK
//      P185_SERVO_TRK_RANGE_COL_WIDTH             //              15,             15
//      P185_SERVO_TRK_RANGE_COL_MASK              //               0,              0
//      P185_SERVO_TRK_RANGE_COL_TYPES             // *
//      P185_SERVO_TRK_RANGE_TABLE_TYPE            // S
#define P_DETCR_RESISTANCE                   1484  // HD_PHYS_PSN,HD_LGC_PSN,TEST_MODE,BIAS_CURRENT,BIAS_VOLTAGE,DETCR_RESISTANCE
//      P_DETCR_RESISTANCE_COL_WIDTH               //          11,        10,        9,          12,          12,              16
//      P_DETCR_RESISTANCE_COL_MASK                //           0,         0,        0,           0,           0,               0
//      P_DETCR_RESISTANCE_COL_TYPES               // *
//      P_DETCR_RESISTANCE_TABLE_TYPE              // S
#define P355_AFS_THRESHOLD                   1485  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,SLIM_THRES,FAT_THRES,BAND_SIZE
//      P355_AFS_THRESHOLD_COL_WIDTH               //          11,        9,        10,        10,        9,        9
//      P355_AFS_THRESHOLD_COL_MASK                //           0,        0,         0,         0,        0,        0
//      P355_AFS_THRESHOLD_COL_TYPES               // *
//      P355_AFS_THRESHOLD_TABLE_TYPE              // S
#define P193_CRRO_PEAK_VALLEY                1486  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,CHROME_ZONE_NUM,PEAK_RAW_CRRO,VALLEY_RAW_CRRO,DELTA_PV_RAW_CRRO,SIG_RAW_CRRO,PEAK_FILTER_RAW_CRRO,VALLEY_FILTER_RAW_CRRO,DELTA_FILTER_PV_RAW_CRRO,SIG_FILTER_RAW_CRRO
//      P193_CRRO_PEAK_VALLEY_COL_WIDTH            //          11,      7,        10,             15,           13,             15,               17,          12,                  20,                    22,                      24,                 19
//      P193_CRRO_PEAK_VALLEY_COL_MASK             //           0,      0,         0,              0,            0,              0,                0,           0,                   0,                     0,                       0,                  0
//      P193_CRRO_PEAK_VALLEY_COL_TYPES            // *
//      P193_CRRO_PEAK_VALLEY_TABLE_TYPE           // S
#define P193_SURF_PEAK_VALLEY                1487  // HD_PHYS_PSN,HD_LGC_PSN,PEAK_SURF_RAW_CRRO,VALLEY_SURF_RAW_CRRO,DELTA_PV_SURF_RAW_CRRO,PEAK_FILTER_SURF_RAW_CRRO,VALLEY_FILTER_SURF_RAW_CRRO,DELTA_FILTER_PV_SURF_RAW_CRRO
//      P193_SURF_PEAK_VALLEY_COL_WIDTH            //          11,        10,                18,                  20,                    22,                       25,                         27,                           29
//      P193_SURF_PEAK_VALLEY_COL_MASK             //           0,         0,                 0,                   0,                     0,                        0,                          0,                            0
//      P193_SURF_PEAK_VALLEY_COL_TYPES            // *
//      P193_SURF_PEAK_VALLEY_TABLE_TYPE           // S
#define P193_DELTA_SURF_MAG_CRRO             1488  // HD_PHYS_PSN1,HD_PHYS_PSN2,CHROME_ZONE_NUM,HARMONIC,FFT_MAG
//      P193_DELTA_SURF_MAG_CRRO_COL_WIDTH         //           12,          12,             15,       8,      7
//      P193_DELTA_SURF_MAG_CRRO_COL_MASK          //            0,           0,              0,       0,      0
//      P193_DELTA_SURF_MAG_CRRO_COL_TYPES         // *
//      P193_DELTA_SURF_MAG_CRRO_TABLE_TYPE        // S
#define P193_SURF_MAG_CRRO                   1489  // HD_PHYS_PSN,HD_LGC_PSN,CHROME_ZONE_NUM,HARMONIC,FFT_MAG
//      P193_SURF_MAG_CRRO_COL_WIDTH               //          11,        10,             15,       8,      7
//      P193_SURF_MAG_CRRO_COL_MASK                //           0,         0,              0,       0,      0
//      P193_SURF_MAG_CRRO_COL_TYPES               // *
//      P193_SURF_MAG_CRRO_TABLE_TYPE              // S
#define P172_AFH_DH_TGT_WGC                  1490  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,WGC_TRGT_CLRNC,WGC_DECLINE_STEP,WGC_DECLINE_CNT
//      P172_AFH_DH_TGT_WGC_COL_WIDTH              //          11,        9,        10,            14,              16,             15
//      P172_AFH_DH_TGT_WGC_COL_MASK               //           0,        0,         0,             0,               0,              0
//      P172_AFH_DH_TGT_WGC_COL_TYPES              // *
//      P172_AFH_DH_TGT_WGC_TABLE_TYPE             // M
#define P285_TRK_INJECTED_HARMS              1491  // PERCENT_TRK,HARM_2F,HARM_3F,HARM_4F,HARM_5F
//      P285_TRK_INJECTED_HARMS_COL_WIDTH          //          11,      7,      7,      7,      7
//      P285_TRK_INJECTED_HARMS_COL_MASK           //           0,      0,      0,      0,      0
//      P285_TRK_INJECTED_HARMS_COL_TYPES          // *
//      P285_TRK_INJECTED_HARMS_TABLE_TYPE         // S
#define P249_HEAD_DEGRADATION_SUM            1492  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,READ_WRITE,PARM_TYPE,NUM_MODES,MODE_DELTA,MAX_VALUE,MIN_VALUE,TRIMMED_MEAN,WINSORIZED_STD,OUTLIERS_PERCENT3,OUTLIERS_PERCENT5,DELTAL20-F20
//      P249_HEAD_DEGRADATION_SUM_COL_WIDTH        //          11,        10,      7,        10,        9,        9,        10,        9,        9,          12,            14,               17,               17,          12
//      P249_HEAD_DEGRADATION_SUM_COL_MASK         //           0,         0,      0,         0,        0,        0,         0,        0,        0,           0,             0,                0,                0,           0
//      P249_HEAD_DEGRADATION_SUM_COL_TYPES        // *
//      P249_HEAD_DEGRADATION_SUM_TABLE_TYPE       // S
#define P152_DUAL_STAGE_FCS                  1493  // HD_PHYS_PSN,HD_LGC_PSN,CNTRL_ID,DAC_CRLTN_THRESHOLD,DAC_CRLTN_RSLT
//      P152_DUAL_STAGE_FCS_COL_WIDTH              //          11,        10,       8,                 19,            14
//      P152_DUAL_STAGE_FCS_COL_MASK               //           0,         0,       0,                  0,             0
//      P152_DUAL_STAGE_FCS_COL_TYPES              // *
//      P152_DUAL_STAGE_FCS_TABLE_TYPE             // S
#define P136_BIAS_SPIKE_TBL                  1494  // MOVING_MAX_BIAS,BIAS_SUM_ZONES
//      P136_BIAS_SPIKE_TBL_COL_WIDTH              //              15,            14
//      P136_BIAS_SPIKE_TBL_COL_MASK               //               0,             0
//      P136_BIAS_SPIKE_TBL_COL_TYPES              // *
//      P136_BIAS_SPIKE_TBL_TABLE_TYPE             // S
#define P030_SEEK_SETTLE                     1495  // SETTLE_MIN,SETTLE_MAX,SETTLE_AVE,SETTLE_STDEV
//      P030_SEEK_SETTLE_COL_WIDTH                 //         10,        10,        10,          12
//      P030_SEEK_SETTLE_COL_MASK                  //          0,         0,         0,           0
//      P030_SEEK_SETTLE_COL_TYPES                 // *
//      P030_SEEK_SETTLE_TABLE_TYPE                // S
#define P030_SEEK_SETTLE_DISTY               1496  // 0MS-1MS,1MS-2MS,2MS-3MS,3MS-4MS,4MS-5MS,5MS-6MS,6MS-7MS,7MS-8MS,8MS-9MS,9MS-10MS,>10MS
//      P030_SEEK_SETTLE_DISTY_COL_WIDTH           //       7,      7,      7,      7,      7,      7,      7,      7,      7,       7,    5
//      P030_SEEK_SETTLE_DISTY_COL_MASK            //       0,      0,      0,      0,      0,      0,      0,      0,      0,       0,    0
//      P030_SEEK_SETTLE_DISTY_COL_TYPES           // *
//      P030_SEEK_SETTLE_DISTY_TABLE_TYPE          // S
#define P175_ZUNE_RMS_HSTGRM                 1497  // HD_PHYS_PSN,HD_LGC_PSN,BIN_START,BIN_END,ALL_SRVO_ZONE,SRVO_ZONE_0,SRVO_ZONE_1,SRVO_ZONE_2,SRVO_ZONE_3,SRVO_ZONE_4,SRVO_ZONE_5,SRVO_ZONE_6,SRVO_ZONE_7
//      P175_ZUNE_RMS_HSTGRM_COL_WIDTH             //          11,        10,       12,     12,           13,         11,         11,         11,         11,         11,         11,         11,         11
//      P175_ZUNE_RMS_HSTGRM_COL_MASK              //           0,         0,        0,      0,            0,          0,          0,          0,          0,          0,          0,          0,          0
//      P175_ZUNE_RMS_HSTGRM_COL_TYPES             // *
//      P175_ZUNE_RMS_HSTGRM_TABLE_TYPE            // S
#define P175_ZUNE_SUM                        1498  // HD_PHYS_PSN,HD_LGC_PSN,ZAP_ZONE,MEAN_RMS,3SIGMA_RMS,MIN_RMS,MAX_RMS
//      P175_ZUNE_SUM_COL_WIDTH                    //          11,        10,       8,       8,        10,      7,      7
//      P175_ZUNE_SUM_COL_MASK                     //           0,         0,       0,       0,         0,      0,      0
//      P175_ZUNE_SUM_COL_TYPES                    // *
//      P175_ZUNE_SUM_TABLE_TYPE                   // S
#define P_IFEST_EVENT2                       1499  // HD_PHYS_PSN,HD_LGC_PSN,ZAP_PSN,LOG_CYL,FREQ_BIN,START_FREQ,END_FREQ,PES_THRSHLD,MAX_ABS_PES,LIMIT,PERCENT_BAD_SECTORS,TOTAL_PTS,BAD_TRACK_LIMIT,NUM_BAD_TRACKS
//      P_IFEST_EVENT2_COL_WIDTH                   //          11,        10,      7,      7,       8,        10,       8,         11,         11,    5,                 19,        9,             15,            14
//      P_IFEST_EVENT2_COL_MASK                    //           0,         0,      0,      0,       0,         0,       0,          0,          0,    0,                  0,        0,              0,             0
//      P_IFEST_EVENT2_COL_TYPES                   // *
//      P_IFEST_EVENT2_TABLE_TYPE                  // S
#define P109_UNVER_THRSHLDS                  1500  // HD_PHYS_PSN,DATA_ZONE,MSRD_INTRPLTD,HD_LGC_PSN,ADPTV_THRSHLD_1,ADPTV_THRSHLD_2
//      P109_UNVER_THRSHLDS_COL_WIDTH              //          11,        9,           13,        10,             15,             15
//      P109_UNVER_THRSHLDS_COL_MASK               //           1,        1,            1,         1,              1,              1
//      P109_UNVER_THRSHLDS_COL_TYPES              //           N,        N,            V,         N,              N,              N
//      P109_UNVER_THRSHLDS_TABLE_TYPE             // S
#define P298_ENCROACH_DATA                   1501  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,START_CYL,END_CYL,MEAS_TYPE,BIE_MEAN_LOG10,BIE_STDEV_LOG10,BIE_MEAN,BIE_STDEV,ITRTN_MEAN,ITRTN_STDEV,WRT_FAULT_PCT,RD_FAULT_PCT
//      P298_ENCROACH_DATA_COL_WIDTH               //          11,        10,        9,       10,     10,        9,            14,             15,       8,        9,        10,         11,           13,          12
//      P298_ENCROACH_DATA_COL_MASK                //           1,         1,        1,        1,      1,        1,             1,              1,       1,        1,         1,          1,            1,           1
//      P298_ENCROACH_DATA_COL_TYPES               //           N,         N,        N,        N,      N,        V,             N,              N,       N,        N,         N,          N,            N,           N
//      P298_ENCROACH_DATA_TABLE_TYPE              // S
#define P287_PRISM_RETRIES                   1502  // HD_PHYS_PSN,HD_LGC_PSN,VELOCITY_INDEX,ITERATION,CONSEC_BAD_SAMPLES_LMT,TRIG_SECTOR_RETRY,START_CYL_RETRY,MEASUREMENT_TRY,RRO_SUM_INDEX,STATUS
//      P287_PRISM_RETRIES_COL_WIDTH               //          11,        10,            14,        9,                    22,               17,             15,             15,           13,     6
//      P287_PRISM_RETRIES_COL_MASK                //           0,         0,             0,        0,                     0,                0,              0,              0,            0,     0
//      P287_PRISM_RETRIES_COL_TYPES               // *
//      P287_PRISM_RETRIES_TABLE_TYPE              // S
#define P287_PRISM_TRAJ_RETRIES              1503  // HD_PHYS_PSN,HD_LGC_PSN,VELOCITY_INDEX,ITERATION,CONSEC_BAD_SAMPLES_LMT,TRIG_SECTOR_RETRY,START_CYL_RETRY,MEASUREMENT_TRY,SAMPLE_COUNT,STATUS
//      P287_PRISM_TRAJ_RETRIES_COL_WIDTH          //          11,        10,            14,        9,                    22,               17,             15,             15,          12,     6
//      P287_PRISM_TRAJ_RETRIES_COL_MASK           //           0,         0,             0,        0,                     0,                0,              0,              0,           0,     0
//      P287_PRISM_TRAJ_RETRIES_COL_TYPES          // *
//      P287_PRISM_TRAJ_RETRIES_TABLE_TYPE         // S
#define P287_LOW_FREQ_WIRRO                  1504  // HD_PHYS_PSN,HD_LGC_PSN,SECTOR,TRAJECTORY,WIRRO
//      P287_LOW_FREQ_WIRRO_COL_WIDTH              //          11,        10,     6,        10,    5
//      P287_LOW_FREQ_WIRRO_COL_MASK               //           0,         0,     0,         0,    0
//      P287_LOW_FREQ_WIRRO_COL_TYPES              // *
//      P287_LOW_FREQ_WIRRO_TABLE_TYPE             // S
#define P287_PRISM_TBL_PSN_INVLD             1505  // HD_PHYS_PSN,HD_LGC_PSN,REAL_PHYS_CYL,PHYS_START_CYL,DCE_TBL_LENGTH,SEEK_PSN
//      P287_PRISM_TBL_PSN_INVLD_COL_WIDTH         //          11,        10,           13,            14,            14,       8
//      P287_PRISM_TBL_PSN_INVLD_COL_MASK          //           0,         0,            0,             0,             0,       0
//      P287_PRISM_TBL_PSN_INVLD_COL_TYPES         // *
//      P287_PRISM_TBL_PSN_INVLD_TABLE_TYPE        // S
#define P299_STE_DATA                        1506  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,CYL_OFST,TRK_TYPE,MEAS_TYPE,BIE_MEAN_LOG10,BIE_STDEV_LOG10,BIE_MEAN,BIE_STDEV,ITR_MEAN,ITR_STDEV,WR_FAULT_PCT,RD_FAULT_PCT1,RD_FAULT_PCT2,WR_CNT,RD_CNT,CYLINDER,BIE_AT_PCT,ITR_AT_PCT
//      P299_STE_DATA_COL_WIDTH                    //          11,        10,        9,       8,       8,        9,            14,             15,       8,        9,       8,        9,          12,           13,           13,     6,     6,       8,        10,        10
//      P299_STE_DATA_COL_MASK                     //           1,         1,        1,       1,       1,        1,             1,              1,       1,        1,       1,        1,           1,            1,            1,     0,     0,       0,         0,         0
//      P299_STE_DATA_COL_TYPES                    //           N,         N,        N,       N,       V,        V,             N,              N,       N,        N,       N,        N,           N,            N,            N
//      P299_STE_DATA_TABLE_TYPE                   // S
#define P339_ABS_RAW_DATA                    1507  // HD_PHYS_PSN,DATA_ZONE,ADC_VOLTAGE,ADC_CURRENT,RESISTANCE,BIAS_DAC,HTR_DAC
//      P339_ABS_RAW_DATA_COL_WIDTH                //          11,        9,         11,         11,        10,       8,      7
//      P339_ABS_RAW_DATA_COL_MASK                 //           0,        0,          0,          0,         0,       0,      0
//      P339_ABS_RAW_DATA_COL_TYPES                // *
//      P339_ABS_RAW_DATA_TABLE_TYPE               // S
#define P299_STE_WRT_DATA                    1508  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,CYL_OFST,WRT_CNT,DOS_CNT,WRT_CNT_LOG10,BIE_MEAN,BIE_MEAN_LOG10,ITR_MEAN,RD_FAULT_PCT1,RD_FAULT_PCT2,TGT_BER_LOG10,CNTR_OFFSET,CNTR_BER_LOG10,CNTR_SFR_PCT,CW_RD_CNT,CYLINDER,BIE_AT_PCT,ITR_AT_PCT
//      P299_STE_WRT_DATA_COL_WIDTH                //          11,        10,        9,       8,      7,      7,           13,       8,            14,       8,           13,           13,           13,         12,            14,          12,        9,       8,        10,        10
//      P299_STE_WRT_DATA_COL_MASK                 //           1,         1,        1,       1,      1,      1,            1,       1,             1,       1,            1,            1,            1,          1,             1,           0,        0,       0,         0,         0
//      P299_STE_WRT_DATA_COL_TYPES                //           N,         N,        N,       N,      N,      V,            N,       N,             N,       N,            N,            N,            N,          N,             N
//      P299_STE_WRT_DATA_TABLE_TYPE               // S
#define P073_ZS_BNDRY_CAL_SMR                1509  // HD_PHYS_PSN,HD_LGC_PSN,SUPER_ZONE,SRVO_SUB_ZONE,SRVO_ZN_IN_RAP,SGATE_WIDTH,NUM_OF_NOMINAL_TRKS,NOMINAL_TRK1,NOMINAL_TRK2,PHYS_ST_TRK,PHYS_ST_TRK_D,PHYS_ST_TRK_A,SAM_SEQ_FALL_TIME
//      P073_ZS_BNDRY_CAL_SMR_COL_WIDTH            //          11,        10,        10,           13,            14,         11,                 19,          12,          12,         11,           13,           13,               17
//      P073_ZS_BNDRY_CAL_SMR_COL_MASK             //           0,         0,         0,            0,             0,          0,                  0,           0,           0,          0,            0,            0,                0
//      P073_ZS_BNDRY_CAL_SMR_COL_TYPES            // *
//      P073_ZS_BNDRY_CAL_SMR_TABLE_TYPE           // S
#define P073_NUM_TMVALID_INFO                1510  // NUM_TMVALID,TM_ERROR,TRACK_ID
//      P073_NUM_TMVALID_INFO_COL_WIDTH            //          11,       8,       8
//      P073_NUM_TMVALID_INFO_COL_MASK             //           0,       0,       0
//      P073_NUM_TMVALID_INFO_COL_TYPES            // *
//      P073_NUM_TMVALID_INFO_TABLE_TYPE           // S
#define P073_TRK_N_TIME_OFST_INFO            1511  // MEAN_TRKID1,MEAN_TRKID2,TRACK_OFFSET,MEAN_TM1,MEAN_TM2,TIME_OFFSET
//      P073_TRK_N_TIME_OFST_INFO_COL_WIDTH        //          11,         11,          12,       8,       8,         11
//      P073_TRK_N_TIME_OFST_INFO_COL_MASK         //           0,          0,           0,       0,       0,          0
//      P073_TRK_N_TIME_OFST_INFO_COL_TYPES        // *
//      P073_TRK_N_TIME_OFST_INFO_TABLE_TYPE       // S
#define P073_ZS_BNDRY_ERROR_INFO             1512  // HD_LGC_PSN,ZS_ZONE,BOUNDARY_DEC
//      P073_ZS_BNDRY_ERROR_INFO_COL_WIDTH         //         10,      7,          12
//      P073_ZS_BNDRY_ERROR_INFO_COL_MASK          //          0,      0,           0
//      P073_ZS_BNDRY_ERROR_INFO_COL_TYPES         // *
//      P073_ZS_BNDRY_ERROR_INFO_TABLE_TYPE        // S
#define P073_OFFSET_CAL_INFO                 1513  // HD_LGC_PSN,ZONE_IDX,ITER,FROM_ZN,TO_ZN,PHYS_TRK_BNDRY,MDW_OFFSET
//      P073_OFFSET_CAL_INFO_COL_WIDTH             //         10,       8,   4,      7,    5,            14,        10
//      P073_OFFSET_CAL_INFO_COL_MASK              //          0,       0,   0,      0,    0,             0,         0
//      P073_OFFSET_CAL_INFO_COL_TYPES             // *
//      P073_OFFSET_CAL_INFO_TABLE_TYPE            // S
#define P073_PATTERN_OFFSET_INFO             1514  // ZS_ZONE,PATTERN_OFFSET
//      P073_PATTERN_OFFSET_INFO_COL_WIDTH         //       7,            14
//      P073_PATTERN_OFFSET_INFO_COL_MASK          //       0,             0
//      P073_PATTERN_OFFSET_INFO_COL_TYPES         // *
//      P073_PATTERN_OFFSET_INFO_TABLE_TYPE        // S
#define P210_BCI_ITPIC_RESULTS               1515  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,OFFSET,OLD_TPI,NEW_TPI
//      P210_BCI_ITPIC_RESULTS_COL_WIDTH           //          11,        10,        9,      7,     6,      7,      7
//      P210_BCI_ITPIC_RESULTS_COL_MASK            //           1,         1,        1,      1,     1,      1,      1
//      P210_BCI_ITPIC_RESULTS_COL_TYPES           //           N,         N,        N,      N,     N,      N,      N
//      P210_BCI_ITPIC_RESULTS_TABLE_TYPE          // S
#define P135_DETCR_OPTI_SETTINGS2            1516  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,WORKING_BIAS,WORKING_GAIN,WORKING_THRL,MEASURED,PARITY,REG11,REG12,REG13,REG14,WPH
//      P135_DETCR_OPTI_SETTINGS2_COL_WIDTH        //          11,        9,      7,        10,          12,          12,          12,       8,     6,    5,    5,    5,    5,  3
//      P135_DETCR_OPTI_SETTINGS2_COL_MASK         //           0,        0,      0,         0,           0,           0,           0,       0,     0,    0,    0,    0,    0,  0
//      P135_DETCR_OPTI_SETTINGS2_COL_TYPES        // *
//      P135_DETCR_OPTI_SETTINGS2_TABLE_TYPE       // S
#define P211_VBAR_OPTI_RESULTS               1517  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,WRT_CUR,OVRSHT,OVRSHT_DUR,TRISE,REGID1,VAL_1,REGID2,VAL_2,REGID3,VAL_3,REGID4,VAL_4,REGID5,VAL_5,REGID6,VAL_6,REGID7,VAL_7,REGID8,VAL_8,REGID9,VAL_9,REGID10,VAL_10,REGID11,VAL_11,REGID12,VAL_12,REGID13,VAL_13,REGID14,VAL_14,REGID15,VAL_15,REGID16,VAL_16,REGID17,VAL_17,REGID18,VAL_18,REGID19,VAL_19,REGID20,VAL_20
//      P211_VBAR_OPTI_RESULTS_COL_WIDTH           //          11,        9,        10,      7,     6,        10,    5,     6,    5,     6,    5,     6,    5,     6,    5,     6,    5,     6,    5,     6,    5,     6,    5,     6,    5,      7,     6,      7,     6,      7,     6,      7,     6,      7,     6,      7,     6,      7,     6,      7,     6,      7,     6,      7,     6,      7,     6
//      P211_VBAR_OPTI_RESULTS_COL_MASK            //           0,        0,         0,      0,     0,         0,    0,     0,    0,     0,    0,     0,    0,     0,    0,     0,    0,     0,    0,     0,    0,     0,    0,     0,    0,      0,     0,      0,     0,      0,     0,      0,     0,      0,     0,      0,     0,      0,     0,      0,     0,      0,     0,      0,     0,      0,     0
//      P211_VBAR_OPTI_RESULTS_COL_TYPES           // *
//      P211_VBAR_OPTI_RESULTS_TABLE_TYPE          // S
#define P076_LASER_DIODE_STATS               1518  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,LASER_OPERATING_CUR_DAC,BER,NON_CONV_CW,TOTAL_CW,REF_BER,REF_NON_CONV_CW,REF_TOTAL_CW,IW,OVS_AMP,OVS_DUR,IW_RNG_HEX
//      P076_LASER_DIODE_STATS_COL_WIDTH           //          11,        10,        9,                     23,  9,         11,       8,      9,             15,          12, 2,      7,      7,        10
//      P076_LASER_DIODE_STATS_COL_MASK            //           0,         0,        0,                      0,  0,          0,       0,      0,              0,           0, 0,      0,      0,         0
//      P076_LASER_DIODE_STATS_COL_TYPES           // *
//      P076_LASER_DIODE_STATS_TABLE_TYPE          // S
#define P076_LASER_DIODE_SUMMARY             1519  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,LASER_THRSHLD_CUR_DAC,LASER_OPERATING_CUR_DAC,CUR_RANGE_FLG,CORRUPT_IOP,INFLECT_IOP,TEMPERATURE
//      P076_LASER_DIODE_SUMMARY_COL_WIDTH         //          11,        10,        9,                   21,                     23,           13,         11,         11,         11
//      P076_LASER_DIODE_SUMMARY_COL_MASK          //           0,         0,        0,                    0,                      0,            0,          0,          0,          0
//      P076_LASER_DIODE_SUMMARY_COL_TYPES         // *
//      P076_LASER_DIODE_SUMMARY_TABLE_TYPE        // S
#define P293_ENCROACH_DATA                   1520  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,START_CYL,END_CYL,TRK_TYPE,MEAS_TYPE,BIE_MEAN_LOG10,BIE_STDEV_LOG10,BIE_MEAN,BIE_STDEV,ITR_MEAN,ITR_STDEV,WR_FAULT_PCT,RD_FAULT_PCT
//      P293_ENCROACH_DATA_COL_WIDTH               //          11,        10,        9,       10,     10,       8,        9,            14,             15,       8,        9,       8,        9,          12,          12
//      P293_ENCROACH_DATA_COL_MASK                //           1,         1,        1,        1,      1,       1,        1,             1,              1,       1,        1,       1,        1,           1,           1
//      P293_ENCROACH_DATA_COL_TYPES               //           N,         N,        N,        N,      N,       V,        V,             N,              N,       N,        N,       N,        N,           N,           N
//      P293_ENCROACH_DATA_TABLE_TYPE              // S
#define P073_ZS_BNDRY_SYC_RAP                1521  // HD_PHYS_PSN,SERVO_ZONE,HD_LGC_PSN,ORIG_NUM_NOM_CYLS,NEW_NUM_NOM_CYLS
//      P073_ZS_BNDRY_SYC_RAP_COL_WIDTH            //          11,        10,        10,               17,              16
//      P073_ZS_BNDRY_SYC_RAP_COL_MASK             //           0,         0,         0,                0,               0
//      P073_ZS_BNDRY_SYC_RAP_COL_TYPES            // *
//      P073_ZS_BNDRY_SYC_RAP_TABLE_TYPE           // S
#define P073_ZS_BNDRY_SYC_SAP                1522  // HD_PHYS_PSN,SUPER_ZONE,HD_LGC_PSN,ORIG_PHYS_SRV_CYL,NEW_PHYS_SRV_CYL,POS_TYPE
//      P073_ZS_BNDRY_SYC_SAP_COL_WIDTH            //          11,        10,        10,               17,              16,       8
//      P073_ZS_BNDRY_SYC_SAP_COL_MASK             //           0,         0,         0,                0,               0,       0
//      P073_ZS_BNDRY_SYC_SAP_COL_TYPES            // *
//      P073_ZS_BNDRY_SYC_SAP_TABLE_TYPE           // S
#define P073_ZS_BNDRY_SYC_STATUS             1523  // SYC_FLAG
//      P073_ZS_BNDRY_SYC_STATUS_COL_WIDTH         //        8
//      P073_ZS_BNDRY_SYC_STATUS_COL_MASK          //        0
//      P073_ZS_BNDRY_SYC_STATUS_COL_TYPES         // *
//      P073_ZS_BNDRY_SYC_STATUS_TABLE_TYPE        // S
#define P152_CLP_PK_DATA                     1524  // CNTRL_ID,CLP_CHK_BLK_CNT,CLP_CHK_LVL,EST_CLP_PK
//      P152_CLP_PK_DATA_COL_WIDTH                 //        8,             15,         11,        10
//      P152_CLP_PK_DATA_COL_MASK                  //        0,              0,          0,         0
//      P152_CLP_PK_DATA_COL_TYPES                 // *
//      P152_CLP_PK_DATA_TABLE_TYPE                // S
#define P152_OLP_PK_DATA                     1525  // CNTRL_ID,OLP_CHK_LGAIN_BLK_CNT,OLP_CHK_LGAIN_LVL,OLP_PK
//      P152_OLP_PK_DATA_COL_WIDTH                 //        8,                   21,               17,    10
//      P152_OLP_PK_DATA_COL_MASK                  //        0,                    0,                0,     0
//      P152_OLP_PK_DATA_COL_TYPES                 // *
//      P152_OLP_PK_DATA_TABLE_TYPE                // S
#define P246_DUO_AXIAL_DIST_2                1526  // DISC_NUM,CRRO_TRK,HARMONIC,PES_FFT_MAG,PES_FFT_PHASE,PES_HARM_LIMIT,PES_OOS,AGC_FFT_MAG,AGC_FFT_PHASE,AGC_HARM_LIMIT,AGC_OOS,SINGLE_SURFACE
//      P246_DUO_AXIAL_DIST_2_COL_WIDTH            //        8,       8,       8,         11,           13,            14,      7,         11,           13,            14,      7,            14
//      P246_DUO_AXIAL_DIST_2_COL_MASK             //        1,       1,       1,          1,            1,             1,      1,          1,            1,             1,      1,             1
//      P246_DUO_AXIAL_DIST_2_COL_TYPES            //        N,       N,       N,          N,            N,             N,      V,          N,            N,             N,      V,             V
//      P246_DUO_AXIAL_DIST_2_TABLE_TYPE           // S
#define P000_RAW_TEMPERATURE_INFO            1527  // TEMP,RAW_THERMISTOR_TEMP,RAW_CHANNEL_TEMP,A2D_REF_VOLTAGE,THERMISTOR_VOLTAGE
//      P000_RAW_TEMPERATURE_INFO_COL_WIDTH        //    4,                 19,              16,             15,                18
//      P000_RAW_TEMPERATURE_INFO_COL_MASK         //    0,                  0,               0,              0,                 0
//      P000_RAW_TEMPERATURE_INFO_COL_TYPES        // *
//      P000_RAW_TEMPERATURE_INFO_TABLE_TYPE       // S
#define P000_PREAMP_FEATURE                  1528  // FEAT_ID,REGISTER,MASK,SHIFT,REG_VALUE,FEAT_VALUE,ERROR,NAME
//      P000_PREAMP_FEATURE_COL_WIDTH              //       7,       8,   4,    5,        9,        10,    5,  13
//      P000_PREAMP_FEATURE_COL_MASK               //       0,       0,   0,    0,        0,         0,    0,   0
//      P000_PREAMP_FEATURE_COL_TYPES              // *
//      P000_PREAMP_FEATURE_TABLE_TYPE             // S
#define P172_AFH_ADAPTS_SUMMARY              1529  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,WRITER_PRE_HEAT,WRITER_WRITE_HEAT,WRITER_READ_HEAT,READER_PRE_HEAT,READER_WRITE_HEAT,READER_READ_HEAT,PRE_HEAT_CLRNC,WRT_HEAT_CLRNC,READ_HEAT_CLRNC,WH_TEMP_CLRNC_DELTA,RH_TEMP_CLRNC_DELTA,WH_HUMIDITY_CLRNC_DELTA,RH_HUMIDITY_CLRNC_DELTA,WH_ALTITUDE_CLRNC_DELTA,RH_ALTITUDE_CLRNC_DELTA
//      P172_AFH_ADAPTS_SUMMARY_COL_WIDTH          //          11,        9,        10,             15,               17,              16,             15,               17,              16,            14,            16,             15,                 19,                 19,                     23,                     23,                     23,                     23
//      P172_AFH_ADAPTS_SUMMARY_COL_MASK           //           1,        1,         1,              1,                1,               1,              1,                1,               1,             1,             1,              1,                  1,                  1,                      1,                      1,                      1,                      1
//      P172_AFH_ADAPTS_SUMMARY_COL_TYPES          //           N,        N,         N,              N,                N,               N,              N,                N,               N,             N,             N,              N,                  N,                  N,                      N,                      N,                      N,                      N
//      P172_AFH_ADAPTS_SUMMARY_TABLE_TYPE         // S
#define P172_AFH_TARGET_CLEARANCE            1530  // HD_PHYS_PSN,HD_LGC_PSN,START_ZONE,END_ZONE,PRE_HEAT_TRGT_CLRNC,WRT_HEAT_TRGT_CLRNC,READ_HEAT_TRGT_CLRNC
//      P172_AFH_TARGET_CLEARANCE_COL_WIDTH        //          11,        10,        10,       8,                 19,                 19,                  20
//      P172_AFH_TARGET_CLEARANCE_COL_MASK         //           1,         1,         1,       1,                  1,                  1,                   1
//      P172_AFH_TARGET_CLEARANCE_COL_TYPES        //           N,         N,         N,       N,                  N,                  N,                   N
//      P172_AFH_TARGET_CLEARANCE_TABLE_TYPE       // S

// Deprecated 06/30/2014
#define P_ENVIRONMENTAL_STATS                1531  // INITIAL_TEMPERATURE,CURRENT_TEMPERATURE,MIX_RATIO_FLOAT,MEASURED_HUMIDITY,CALC_HUMIDITY,PRESSURE,TIMESTAMP,TEMPERATURE_SERVO,RAW_HUMIDITY_PCT_SERVO,PRESSURE_SERVO,DEBUG_PRESSURE_SERVO,REGISTER_18_SERVO,OPERATION_LEAK_TEST,STATUS_LEAK_TEST,ERROR_CODE,NUM_SAMPLES_MSRD,INITIAL_HUMIDITY,FINAL_HUMIDITY,HUMIDITY_MEAN,HUMIDITY_STDEV,HUMIDITY_RANGE,HUMIDITY_LEAK_RATE,TEMP_MEAN,TEMP_STDEV,TEMP_RANGE,PRESSURE_MEAN,PRESSURE_STDEV,PRESSURE_RANGE,DELTA_PRESSURE_INITIAL,DELTA_PRESSURE_DEFAULT,DRIVE_AGE,DELTA_TIME
//      P_ENVIRONMENTAL_STATS_COL_WIDTH            //                  20,                 19,             15,               17,           13,       8,       21,               17,                    22,            14,                  20,               17,                 19,              16,        10,              16,              16,            14,           13,            14,            14,                18,        9,        10,        10,           13,            14,            14,                    22,                    22,        9,        10
//      P_ENVIRONMENTAL_STATS_COL_MASK             //                   0,                  0,              0,                0,            0,       0,        0,                0,                     0,             0,                   0,                0,                  0,               0,         0,               0,               0,             0,            0,             0,             0,                 0,        0,         0,         0,            0,             0,             0,                     0,                     0,        0,         0
//      P_ENVIRONMENTAL_STATS_COL_TYPES            // *
//      P_ENVIRONMENTAL_STATS_TABLE_TYPE           // S
#define P299_WORST_ERASURE_DATA              1532  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,CYL_OFST,TRK_TYPE,MEAS_TYPE,ERASE_TYPE,BIE_MEAN_LOG10,BIE_STDEV_LOG10,BIE_MEAN,BIE_STDEV,ITR_MEAN,ITR_STDEV,FAIL_CNT,TGT_CNT,DOS_CNT,COEF_2,COEF_1,COEF_0,R_SQRD,WR_FAULT_PCT,RD_FAULT_PCT1,RD_FAULT_PCT2
//      P299_WORST_ERASURE_DATA_COL_WIDTH          //          11,        10,        9,       8,       8,        9,        10,            14,             15,       9,        9,       8,        9,      10,     10,     10,     8,     8,     8,     7,          12,           13,           13
//      P299_WORST_ERASURE_DATA_COL_MASK           //           1,         1,        1,       1,       1,        1,         1,             1,              1,       1,        1,       1,        1,       1,      1,      1,     1,     1,     1,     1,           1,            1,            1
//      P299_WORST_ERASURE_DATA_COL_TYPES          //           N,         N,        N,       N,       V,        V,         V,             N,              N,       N,        N,       N,        N,       N,      N,      N,     N,     N,     N,     N,           N,            N,            N
//      P299_WORST_ERASURE_DATA_TABLE_TYPE         // S
#define P263_CHAN_VITERBI_TARGETS            1533  // HD_PHYS_PSN,HD_LGC_PSN,SUPER_ZONE,TARGET0,TARGET1,TARGET2,TARGET3,TARGET4,TARGET5,TARGET6,TARGET7
//      P263_CHAN_VITERBI_TARGETS_COL_WIDTH        //          11,        10,        10,      7,      7,      7,      7,      7,      7,      7,      7
//      P263_CHAN_VITERBI_TARGETS_COL_MASK         //           0,         0,         0,      0,      0,      0,      0,      0,      0,      0,      0
//      P263_CHAN_VITERBI_TARGETS_COL_TYPES        // *
//      P263_CHAN_VITERBI_TARGETS_TABLE_TYPE       // S
#define P191_HSC_1                           1534  // HD_PHYS_PSN,DATA_ZONE,POINT_NUM,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,RADIUS,HTR_DAC,HTR_DAC_HIRP,HSC_MSRD_HIRP,COEF_CALC_HIRP,HSC_MSRD_WIRP,COEF_CALC_WIRP,HTR_TAU_USECS,HTR_TAU_CORR_COEF,TRY_CNT,ACTIVE_HEATER,INACTIVE_HEATER_DAC,WHIRP_POINT_CNT
//      P191_HSC_1_COL_WIDTH                       //          11,        9,        9,        10,         11,         11,     6,      7,          12,           13,            14,           13,            14,           13,               17,      7,           13,                 19,             15
//      P191_HSC_1_COL_MASK                        //           0,        0,        0,         0,          0,          0,     0,      0,           0,            0,             0,            0,             0,            0,                0,      0,            0,                  0,              0
//      P191_HSC_1_COL_TYPES                       // *
//      P191_HSC_1_TABLE_TYPE                      // S
#define P299_DOS_PICK                        1535  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,CYL_OFST,TRK_TYPE,ERASE_TYPE,COEF_2,COEF_1,COEF_0,R_SQRD,FAIL_WRT_CNT,TGT_WRT_CNT,DOS_CNT,DOS_PICK,DOS_WARN,ATI_RGR,ATI_SER,PSTE_RGR,PSTE_SER,DSTE_SER
//      P299_DOS_PICK_COL_WIDTH                    //          11,        10,        9,       8,       8,        10,     8,     8,     8,     7,          12,         11,      7,       8,       8,      7,      7,       8,       8,       8
//      P299_DOS_PICK_COL_MASK                     //           1,         1,        1,       1,       1,         1,     1,     1,     1,     1,           1,          1,      1,       1,       1,      1,      1,       1,       1,       1
//      P299_DOS_PICK_COL_TYPES                    //           N,         N,        N,       N,       V,         V,     N,     N,     N,     N,           N,          N,      N,       N,       V,      N,      N,       N,       N,       N
//      P299_DOS_PICK_TABLE_TYPE                   // S
#define P000_RAW_TEMP_INFO                   1536  // ITERATION_NUM,TEMP,RAW_THERMISTOR_TEMP,RAW_CHANNEL_TEMP,A2D_REF_VOLTAGE,THERMISTOR_VOLTAGE,RAW_TEMP,TEMP_CHECKSUM,HUMIDITY_CHECKSUM,RAW_HUMIDITY,INDICATOR
//      P000_RAW_TEMP_INFO_COL_WIDTH               //            13,   4,                 19,              16,             15,                18,       8,           13,               17,          12,        9
//      P000_RAW_TEMP_INFO_COL_MASK                //             1,   1,                  1,               1,              1,                 1,       1,            1,                1,           1,        0
//      P000_RAW_TEMP_INFO_COL_TYPES               //             N,   N,                  V,               V,              V,                 V,       V,            V,                V,           V
//      P000_RAW_TEMP_INFO_TABLE_TYPE              // S
#define P000_BASELINE_INJ_AMPL               1537  // HD_PHYS_PSN,HD_LGC_PSN,FREQUENCY,REF_INJ_AMPL
//      P000_BASELINE_INJ_AMPL_COL_WIDTH           //          11,        10,        9,          12
//      P000_BASELINE_INJ_AMPL_COL_MASK            //           0,         0,        0,           0
//      P000_BASELINE_INJ_AMPL_COL_TYPES           // *
//      P000_BASELINE_INJ_AMPL_TABLE_TYPE          // S
#define P036_RV_ADC_CAL_RESULT               1538  // CMD_STAT,RV_CMD_STAT,RV_ADC_CAL1,RV_ADC_CAL2
//      P036_RV_ADC_CAL_RESULT_COL_WIDTH           //        8,         11,         11,         11
//      P036_RV_ADC_CAL_RESULT_COL_MASK            //        0,          0,          0,          0
//      P036_RV_ADC_CAL_RESULT_COL_TYPES           // *
//      P036_RV_ADC_CAL_RESULT_TABLE_TYPE          // S
#define P036_SRVO_SYMBOL_TBL_VAL             1539  // SRVO_SYM_TBL,READ_VALUE
//      P036_SRVO_SYMBOL_TBL_VAL_COL_WIDTH         //           12,        10
//      P036_SRVO_SYMBOL_TBL_VAL_COL_MASK          //            0,         0
//      P036_SRVO_SYMBOL_TBL_VAL_COL_TYPES         // *
//      P036_SRVO_SYMBOL_TBL_VAL_TABLE_TYPE        // S
#define P236_SMR_SQZ_UJOG_SUMMARY            1540  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRACK,OFFET,BER_BEFORE,BER_AFTER,RETRIES,R_SQUARED
//      P236_SMR_SQZ_UJOG_SUMMARY_COL_WIDTH        //          11,        10,        9,    9,    9,        12,       12,      9,        9
//      P236_SMR_SQZ_UJOG_SUMMARY_COL_MASK         //           0,         0,        0,    0,    0,         0,        0,      0,        0
//      P236_SMR_SQZ_UJOG_SUMMARY_COL_TYPES        // *
//      P236_SMR_SQZ_UJOG_SUMMARY_TABLE_TYPE       // S
#define P243_ERROR_DATA                      1541  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TST_TRK,ADJ_TRK_PSN,NUM_TOT_CWD,NUM_WRT,NUM_RD_RETRY,CWD_ERR_CNT,STEP_DN_ITRTN,WRT_CUR_DAC,WRT_CUR_OVS_DAC,TRK_BER,NUM_RD_UNCNVRGD_CW
//      P243_ERROR_DATA_COL_WIDTH                  //          11,        10,        9,      7,         11,         11,      7,          12,         11,           13,         11,             15,      9,                18
//      P243_ERROR_DATA_COL_MASK                   //           1,         1,        1,      1,          1,          1,      1,           1,          1,            1,          1,              1,      0,                 0
//      P243_ERROR_DATA_COL_TYPES                  //           N,         N,        N,      N,          N,          N,      N,           N,          N,            N,          N,              N
//      P243_ERROR_DATA_TABLE_TYPE                 // S
#define P243_MEASURED_ATI_SUMMARY            1542  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,NUM_WRT,CWD_ERR_CNT,ATI_THRESHOLD
//      P243_MEASURED_ATI_SUMMARY_COL_WIDTH        //          11,        10,        9,      7,         11,           13
//      P243_MEASURED_ATI_SUMMARY_COL_MASK         //           1,         1,        1,      1,          1,            1
//      P243_MEASURED_ATI_SUMMARY_COL_TYPES        //           N,         N,        N,      N,          N,            N
//      P243_MEASURED_ATI_SUMMARY_TABLE_TYPE       // S
#define P210_BCI_ITPIC_SOVA1                 1543  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,OFFSET,BASE_SOVA1_OD,SOVA1_OD,BASE_SOVA1_ID,SOVA1_ID
//      P210_BCI_ITPIC_SOVA1_COL_WIDTH             //          11,        10,        9,      7,     6,           13,       9,           13,       9
//      P210_BCI_ITPIC_SOVA1_COL_MASK              //           0,         0,        0,      0,     0,            0,       0,            0,       0
//      P210_BCI_ITPIC_SOVA1_COL_TYPES             // *
//      P210_BCI_ITPIC_SOVA1_TABLE_TYPE            // S
#define P210_BCI_ITPIC_ERROR_DATA            1544  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,RELATIVE_CYL,OFFSET,N_READ,CODEWORD,NUM_CODEWORDS,ITERATIONS,TGT_TRK_WRT_CNT
//      P210_BCI_ITPIC_ERROR_DATA_COL_WIDTH        //          11,        10,        9,      7,          12,     6,     6,       8,           13,        10,             15
//      P210_BCI_ITPIC_ERROR_DATA_COL_MASK         //           0,         0,        0,      0,           0,     0,     0,       0,            0,         0,              0
//      P210_BCI_ITPIC_ERROR_DATA_COL_TYPES        // *
//      P210_BCI_ITPIC_ERROR_DATA_TABLE_TYPE       // S
#define P409_AGC_DATA                        1545  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ACTIVE_HEATER,HTR_DAC,SECTOR,AGC_DATA
//      P409_AGC_DATA_COL_WIDTH                    //          11,        10,        9,           13,      7,     6,       8
//      P409_AGC_DATA_COL_MASK                     //           0,         0,        0,            0,      0,     0,       0
//      P409_AGC_DATA_COL_TYPES                    // *
//      P409_AGC_DATA_TABLE_TYPE                   // S
#define P409_AGC_SINUSOIDAL_MODEL            1546  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ACTIVE_HEATER,HTR_DAC,MEAN_AGC,AGC_AMPLITUDE,PHASE,FREQUENCY,SPINDLE_RPM,NUM_SECTORS,HARMONIC
//      P409_AGC_SINUSOIDAL_MODEL_COL_WIDTH        //          11,        10,        9,           13,      7,       8,           13,    7,       10,         11,         11,       8
//      P409_AGC_SINUSOIDAL_MODEL_COL_MASK         //           1,         1,        1,            1,      1,       1,            1,    1,        1,          1,          1,       1
//      P409_AGC_SINUSOIDAL_MODEL_COL_TYPES        //           N,         N,        N,            V,      N,       N,            N,    N,        N,          N,          N,       N
//      P409_AGC_SINUSOIDAL_MODEL_TABLE_TYPE       // S
#define P409_CLAMPING_LOSS_DATA              1547  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ACTIVE_HEATER,SIDE,CLRNC_TRGT,HIRP_SQR_COEF,HIRP_LIN_COEF,RAP_BACKOFF_DAC,SLOPE_AT_OP_HEAT,MEAN_AGC_AMPLITUDE,MEAN_PHASE,AGC_PER_HTR_DAC,STD_DEV,R_SQR,HEAD_CLAMPING,DISC_CLAMPING,HARMONIC
//      P409_CLAMPING_LOSS_DATA_COL_WIDTH          //          11,        10,        9,           13,   5,        10,           13,           13,             15,              16,                18,        10,             15,      7,    8,           13,           13,       8
//      P409_CLAMPING_LOSS_DATA_COL_MASK           //           1,         1,        1,            1,   1,         1,            1,            1,              1,               1,                 1,         1,              1,      1,    1,            1,            1,       1
//      P409_CLAMPING_LOSS_DATA_COL_TYPES          //           N,         N,        N,            V,   V,         N,            N,            N,              N,               N,                 N,         N,              N,      N,    N,            N,            N,       N
//      P409_CLAMPING_LOSS_DATA_TABLE_TYPE         // S
#define P409_CYLINDER_LIST                   1548  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ACTIVE_HEATER,CYL_TEST_INDEX,LGC_TRK,PHYS_TRK
//      P409_CYLINDER_LIST_COL_WIDTH               //          11,        10,        9,           13,            14,      7,       8
//      P409_CYLINDER_LIST_COL_MASK                //           1,         1,        1,            1,             1,      1,       1
//      P409_CYLINDER_LIST_COL_TYPES               //           N,         N,        N,            V,             N,      N,       N
//      P409_CYLINDER_LIST_TABLE_TYPE              // S
#define P223_PHOTO_DIODE_DATA                1549  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,FILTER,GAIN,LASER_THRSHLD_CUR_DAC,LASER_OPERATING_CUR_DAC,AVG_DIODE_VALUE
//      P223_PHOTO_DIODE_DATA_COL_WIDTH            //          11,        10,        9,      7,     6,   4,                   21,                     23,             15
//      P223_PHOTO_DIODE_DATA_COL_MASK             //           0,         0,        0,      0,     0,   0,                    0,                      0,              0
//      P223_PHOTO_DIODE_DATA_COL_TYPES            // *
//      P223_PHOTO_DIODE_DATA_TABLE_TYPE           // S
#define P030_FAILED_SEEK_SUMMARY             1550  // HD_PHYS_PSN,HD_LGC_PSN,CYL_LGC_PSN,SEEK_TIME,RW_ERROR_CODE,SEEK_DIST,UNSAFE_COUNT,SRVO_SEEK_TIME,RW_STATUS
//      P030_FAILED_SEEK_SUMMARY_COL_WIDTH         //          11,        10,         12,        9,           13,        9,          12,            14,        9
//      P030_FAILED_SEEK_SUMMARY_COL_MASK          //           0,         0,          0,        0,            0,        0,           0,             0,        0
//      P030_FAILED_SEEK_SUMMARY_COL_TYPES         // *
//      P030_FAILED_SEEK_SUMMARY_TABLE_TYPE        // S
#define P175_ZUNE_HSTGRM                     1551  // HD_PHYS_PSN,HD_LGC_PSN,HSTGRM_TYPE,BIN_START,BIN_END,ALL_SRVO_ZONE,SRVO_ZONE_0,SRVO_ZONE_1,SRVO_ZONE_2,SRVO_ZONE_3,SRVO_ZONE_4,SRVO_ZONE_5,SRVO_ZONE_6,SRVO_ZONE_7
//      P175_ZUNE_HSTGRM_COL_WIDTH                 //          11,        10,         11,       12,     12,           13,         11,         11,         11,         11,         11,         11,         11,         11
//      P175_ZUNE_HSTGRM_COL_MASK                  //           0,         0,          0,        0,      0,            0,          0,          0,          0,          0,          0,          0,          0,          0
//      P175_ZUNE_HSTGRM_COL_TYPES                 // *
//      P175_ZUNE_HSTGRM_TABLE_TYPE                // S
#define P222_BER_MEASUREMENT                 1552  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,THRESH_CURRENT,ADD_CURRENT,BIT_ERROR_RATE,WRITER_WRITE_HEAT,DRIVE_TEMP,CURR_SWEEP_DIR
//      P222_BER_MEASUREMENT_COL_WIDTH             //          11,        10,        9,      7,            14,         11,            14,               17,        10,            14
//      P222_BER_MEASUREMENT_COL_MASK              //           0,         0,        0,      0,             0,          0,             0,                0,         0,             0
//      P222_BER_MEASUREMENT_COL_TYPES             // *
//      P222_BER_MEASUREMENT_TABLE_TYPE            // S
#define P222_LASER_CAL_SUMMARY               1553  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ADD_CURRENT,THRESH_CURRENT,MEAS_INTERP
//      P222_LASER_CAL_SUMMARY_COL_WIDTH           //          11,        10,        9,         11,            14,         11
//      P222_LASER_CAL_SUMMARY_COL_MASK            //           0,         0,        0,          0,             0,          0
//      P222_LASER_CAL_SUMMARY_COL_TYPES           // *
//      P222_LASER_CAL_SUMMARY_TABLE_TYPE          // S
#define P193_CHROME_HARMONICS                1554  // HD_PHYS_PSN,HD_LGC_PSN,CHROME_ZONE,TRK_NUM,HARMONIC_NUM,CHROME_MAG
//      P193_CHROME_HARMONICS_COL_WIDTH            //          11,        10,         11,      7,          12,        11
//      P193_CHROME_HARMONICS_COL_MASK             //           1,         1,          1,      1,           1,         1
//      P193_CHROME_HARMONICS_COL_TYPES            //           N,         N,          N,      N,           N,         N
//      P193_CHROME_HARMONICS_TABLE_TYPE           // S
#define P118_SCRATCH_DETAILS                 1555  // HEAD,SCR_TYPE,SCR_MAXABS,SCR_START,SCR_STOP,SCR_TOTALBYTES,ARC_LENGTH,FLAG
//      P118_SCRATCH_DETAILS_COL_WIDTH             //    4,       8,        10,        9,       8,            14,        10,   4
//      P118_SCRATCH_DETAILS_COL_MASK              //    0,       0,         0,        0,       0,             0,         0,   0
//      P118_SCRATCH_DETAILS_COL_TYPES             // *
//      P118_SCRATCH_DETAILS_TABLE_TYPE            // S
#define P302_TAP_SETTLE_DATA                 1556  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,SECTOR,BIE0,ITR0,BIE1,ITR1,VGAR,TAP0,TAP1,TAP2,TAP3,TAP4,TAP5,TAP6,TAP7,TAP8,TAP9
//      P302_TAP_SETTLE_DATA_COL_WIDTH             //          11,        10,        9,      7,     6,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5
//      P302_TAP_SETTLE_DATA_COL_MASK              //           0,         0,        0,      0,     0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
//      P302_TAP_SETTLE_DATA_COL_TYPES             // *
//      P302_TAP_SETTLE_DATA_TABLE_TYPE            // S
#define P302_TAP_FINISH                      1557  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,STL_STAT,VGAR,BER_LOG10,CW_FR,FIR_FIT,REVS,BIE,ITR,TAP1,TAP2,TAP3,TAP4,TAP5,TAP6,TAP7,TAP8,TAP9,TAP10,TAP11,TAP12,TAP13,TAP14,TAP15,TAP16
//      P302_TAP_FINISH_COL_WIDTH                  //          11,        10,        9,       8,   5,        9,    6,      7,   4,  8,  8,   5,   5,   5,   5,   5,   5,   5,   5,   5,    5,    5,    5,    5,    5,    5,    5
//      P302_TAP_FINISH_COL_MASK                   //           0,         0,        0,       0,   0,        0,    0,      0,   0,  0,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,    0,    0,    0,    0,    0,    0,    0
//      P302_TAP_FINISH_COL_TYPES                  // *
//      P302_TAP_FINISH_TABLE_TYPE                 // S
#define P004_MOTOR_JITTER_DATA               1558  // DATA_PNTS,ELEC_ZC_IDX,MOTOR_TIMER
//      P004_MOTOR_JITTER_DATA_COL_WIDTH           //         9,         11,         11
//      P004_MOTOR_JITTER_DATA_COL_MASK            //         0,          0,          0
//      P004_MOTOR_JITTER_DATA_COL_TYPES           // *
//      P004_MOTOR_JITTER_DATA_TABLE_TYPE          // S
#define P004_MOTOR_JITTER_RESULT             1559  // JITTER_MAX,JITTER_MIN,JITTER_DELTA,ZC_MEAN,ZC_STD
//      P004_MOTOR_JITTER_RESULT_COL_WIDTH         //         10,        10,          12,      7,     7
//      P004_MOTOR_JITTER_RESULT_COL_MASK          //          0,         0,           0,      0,     0
//      P004_MOTOR_JITTER_RESULT_COL_TYPES         // *
//      P004_MOTOR_JITTER_RESULT_TABLE_TYPE        // S
#define P290_SCRATCH_SUMMARY                 1560  // HD_PHYS_PSN,HD_LGC_PSN,CIRCUMFERENTIAL_CNT,ZONE_BLOWOUT_CNT,LOAD_CNT,UNLOAD_CNT,SINUSOIDAL_CNT,RINGED_GALAXY_CNT,SEEK_CNT,BAND_CNT,ACUTE_RADIAL_CNT,RADIAL_CNT,INDEX_CNT,CHORD_CNT,GALAXY_CNT,SHADED_GALAXY_CNT,SPOKE_CNT,EDGE_CLUSTER_CNT,MISC_CLUSTER_CNT,MISC_SCRATCH_CNT
//      P290_SCRATCH_SUMMARY_COL_WIDTH             //          11,        10,                 19,              16,       8,        10,            14,               17,       8,       8,              16,        10,        9,        9,        10,               17,        9,              16,              16,              16
//      P290_SCRATCH_SUMMARY_COL_MASK              //           1,         1,                  1,               1,       1,         1,             1,                1,       1,       1,               1,         1,        1,        1,         1,                1,        1,               1,               1,               1
//      P290_SCRATCH_SUMMARY_COL_TYPES             //           N,         N,                  N,               N,       N,         N,             N,                N,       N,       N,               N,         N,        N,        N,         N,                N,        N,               N,               N,               N
//      P290_SCRATCH_SUMMARY_TABLE_TYPE            // S
#define P251_STDEV_BER                       1561  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RETRY,BER_STDEV,FEATURE_OPTI_VAL,RGSTR_ID,DATA_ERR_CNT
//      P251_STDEV_BER_COL_WIDTH                   //          11,        9,        10,    5,        9,              16,       8,          12
//      P251_STDEV_BER_COL_MASK                    //           0,        0,         0,    0,        0,               0,       0,           0
//      P251_STDEV_BER_COL_TYPES                   // *
//      P251_STDEV_BER_TABLE_TYPE                  // S
#define P074_FAFH_HIRP_SNR_V_GAIN            1562  // HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,DIAMETER,VGAR,HF_ACT,LF_ACT,HF_PASS,LF_PASS,HF_P_ACT,LF_P_ACT,HF_P_PASS,LF_P_PASS,HF_M_ACT,LF_M_ACT,HF_M_PASS,LF_P_PASS,LF_ACT_SNR,LF_PASS_SNR,HF_ACT_SNR,HF_PASS_SNR,HF_HIRP,LF_HIRP,AR,VGAR_ANG
//      P074_FAFH_HIRP_SNR_V_GAIN_COL_WIDTH        //         10,         11,         11,       8,   4,     6,     6,      7,      7,       8,       8,        9,        9,       8,       8,        9,        9,        10,         11,        10,         11,      7,      7, 6,       8
//      P074_FAFH_HIRP_SNR_V_GAIN_COL_MASK         //          0,          0,          0,       0,   0,     0,     0,      0,      0,       0,       0,        0,        0,       0,       0,        0,        0,         0,          0,         0,          0,      0,      0, 0,       0
//      P074_FAFH_HIRP_SNR_V_GAIN_COL_TYPES        // *
//      P074_FAFH_HIRP_SNR_V_GAIN_TABLE_TYPE       // S
#define P220_WRT_PWR_BACKOFF_SUM             1563  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BASE_SQZ_BEST,BASE_SQZ_WORST,CLR_BKOFF_A,DITHER,ITER_LD_CNT,INTL_BER,FNL_BER,INTL_PRECOMP,FNL_PRECOMP,INTL_OSD,INTL_OS,INTL_IW,FNL_OSD,FNL_OS,FNL_IW,REDUCED,UNSTRESD_BER,UNSTRESD_WP_ADJUST_BER,INTL_PDW,FNL_PDW
//      P220_WRT_PWR_BACKOFF_SUM_COL_WIDTH         //          11,        9,        11,           13,            14,         11,     6,         11,       8,      7,          12,         11,       8,      7,      7,      7,     6,     6,      7,          12,                    22,       8,      7
//      P220_WRT_PWR_BACKOFF_SUM_COL_MASK          //           0,        0,         0,            0,             0,          0,     0,          0,       0,      0,           0,          0,       0,      0,      0,      0,     0,     0,      0,           0,                     0,       0,      0
//      P220_WRT_PWR_BACKOFF_SUM_COL_TYPES         // *
//      P220_WRT_PWR_BACKOFF_SUM_TABLE_TYPE        // S
#define P095_LIWP_TRACK_CURVE_FIT            1564  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,HIRP_SQR_COEF,HIRP_LIN_COEF,HIRP_GAMMA,CLRNC_TRGT,HIRP_SLOPE_AT_OP_HTR_DAC,WRT_CUR_DAC,WRT_CUR_OVS_DAC,WRT_CUR_OVS_DUR,LASER_THRESHOLD_CUR,MAX_LASER_CUR,LASER_CUR_RANGE,HTR_DAC,LIWP_GAMMA,STATUS_FLG,FINAL_FLG,RMSE,R_SQR,NOM_AFH_LASER_CUR,MIN_LASER_AFH_CUR_ADJ,LASER_THRSHLD_CUR_ABOVE_KNEE,MAX_TOT_LASER_CUR,LIWP_COEF_SQR_ANG,LIWP_COEF_LIN_ANG,LIWP_COEF_SQR_DAC,LIWP_COEF_LIN_DAC,BAD_POINT_CNT,COV_MEAN,COV_OUTLIERS,TRACK_OUTLIERS,READER_ACTUATION,ZERO_CROSS_CUR,EXPLAIN_STATUS
//      P095_LIWP_TRACK_CURVE_FIT_COL_WIDTH        //          11,        10,        9,      8,           13,           13,        10,        10,                      24,         11,             15,             15,                 19,           13,             15,      7,        10,        10,        9,   8,    8,               17,                   21,                          28,               17,               17,               17,               17,               17,           13,       8,          12,            14,              16,            14,            32
//      P095_LIWP_TRACK_CURVE_FIT_COL_MASK         //           1,         1,        1,      1,            1,            1,         1,         1,                       1,          1,              1,              1,                  1,            1,              1,      1,         1,         1,        1,   1,    1,                1,                    1,                           1,                1,                1,                1,                1,                1,            1,       1,           1,             1,               1,             1,             1
//      P095_LIWP_TRACK_CURVE_FIT_COL_TYPES        //           N,         N,        N,      N,            N,            N,         N,         N,                       N,          N,              N,              N,                  N,            N,              N,      N,         N,         V,        N,   N,    N,                N,                    N,                           N,                N,                N,                N,                N,                N,            N,       N,           N,             N,               N,             N,             V
//      P095_LIWP_TRACK_CURVE_FIT_TABLE_TYPE       // S
#define P095_LIWP_QUAD_FORMULA               1565  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,DELTA_I_TOTAL_MA,DELTA_HEATER_DAC,HIRP_SQR_COEF,SLOPE_AT_OP_HEAT,LIWP_SQR_MA2ANG,LIWP_LIN_COEF_MA2ANG
//      P095_LIWP_QUAD_FORMULA_COL_WIDTH           //          11,        10,        9,              16,              16,           13,              16,             15,                  20
//      P095_LIWP_QUAD_FORMULA_COL_MASK            //           0,         0,        0,               0,               0,            0,               0,              0,                   0
//      P095_LIWP_QUAD_FORMULA_COL_TYPES           // *
//      P095_LIWP_QUAD_FORMULA_TABLE_TYPE          // S
#define P275_ZFS_FAIL_INFO                   1566  // HD_PHYS_PSN,HD_LGC_PSN,ERROR_CODE
//      P275_ZFS_FAIL_INFO_COL_WIDTH               //          11,        10,        10
//      P275_ZFS_FAIL_INFO_COL_MASK                //           0,         0,         0
//      P275_ZFS_FAIL_INFO_COL_TYPES               // *
//      P275_ZFS_FAIL_INFO_TABLE_TYPE              // S
#define P219_BER_QUAL_METRIC                 1567  // HD_PHYS_PSN,HD_LGC_PSN,QUALITY_LEVEL,RD_CLR_ADJ,WRT_CLR_ADJ,SQUEEZE_PCT,DITHER,AVG_BIE_BER
//      P219_BER_QUAL_METRIC_COL_WIDTH             //          11,        10,           13,        10,         11,         11,     6,         11
//      P219_BER_QUAL_METRIC_COL_MASK              //           0,         0,            0,         0,          0,          0,     0,          0
//      P219_BER_QUAL_METRIC_COL_TYPES             // *
//      P219_BER_QUAL_METRIC_TABLE_TYPE            // S
#define P219_BER_QUAL_METRIC_SUM             1568  // QUALITY_LEVEL,BIE_BER_TARG,AVG_BIE_BER,RD_CLR_ADJ,WRT_CLR_ADJ,SQUEEZE_PCT,DITHER
//      P219_BER_QUAL_METRIC_SUM_COL_WIDTH         //            13,          12,         11,        10,         11,         11,     6
//      P219_BER_QUAL_METRIC_SUM_COL_MASK          //             0,           0,          0,         0,          0,          0,     0
//      P219_BER_QUAL_METRIC_SUM_COL_TYPES         // *
//      P219_BER_QUAL_METRIC_SUM_TABLE_TYPE        // S
#define P118_SCRATCH_DETAILS_02              1569  // HD_PHYS_PSN,ZONE,HD_LGC_PSN,START_CYL,END_CYL,BPI_RATIO,TPI_RATIO,TYPE,SCRT_MAXABS,SCRT_START,SCRT_STOP,SCRT_TOTBYTES,ARC_LENGTH,FLAG
//      P118_SCRATCH_DETAILS_02_COL_WIDTH          //          11,   4,        10,        9,      7,        9,        9,   4,         11,        10,        9,           13,        10,   4
//      P118_SCRATCH_DETAILS_02_COL_MASK           //           0,   0,         0,        0,      0,        0,        0,   0,          0,         0,        0,            0,         0,   0
//      P118_SCRATCH_DETAILS_02_COL_TYPES          // *
//      P118_SCRATCH_DETAILS_02_TABLE_TYPE         // M
#define P322_SIF_SYS_FIRST_MZ                1570  // SYS_FIRST_MZ,SYS_START_NOM_TRK,SYS_NUM_NOM_TRK,SYS_NUM_SERPENTS
//      P322_SIF_SYS_FIRST_MZ_COL_WIDTH            //           12,               17,             15,              16
//      P322_SIF_SYS_FIRST_MZ_COL_MASK             //            0,                0,              0,               0
//      P322_SIF_SYS_FIRST_MZ_COL_TYPES            // *
//      P322_SIF_SYS_FIRST_MZ_TABLE_TYPE           // S
#define P166_SENSOR_VENDOR                   1571  // HUMIDITY_VENDOR_ID,PRESSURE_VENDOR_ID
//      P166_SENSOR_VENDOR_COL_WIDTH               //                 18,                18
//      P166_SENSOR_VENDOR_COL_MASK                //                  0,                 0
//      P166_SENSOR_VENDOR_COL_TYPES               // *
//      P166_SENSOR_VENDOR_TABLE_TYPE              // S
#define P269_MT50_MT10_SUMMARY               1572  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CYLINDER,MT50_WIDTH,MT10_WIDTH,MT50-RSQUARED,MT10-RSQUARED,MT50_STDDEV,MT10_STDDEV
//      P269_MT50_MT10_SUMMARY_COL_WIDTH           //          11,        9,        10,       8,        10,        10,           13,           13,         11,         11
//      P269_MT50_MT10_SUMMARY_COL_MASK            //           0,        0,         0,       0,         0,         0,            0,            0,          0,          0
//      P269_MT50_MT10_SUMMARY_COL_TYPES           // *
//      P269_MT50_MT10_SUMMARY_TABLE_TYPE          // S
#define P287_ZEST_STATE_INFO                 1573  // SAP_SAVE_ENABLED,ZEST_TABLE_SAVED,ZEST_ENABLED
//      P287_ZEST_STATE_INFO_COL_WIDTH             //               16,              16,          12
//      P287_ZEST_STATE_INFO_COL_MASK              //                0,               0,           0
//      P287_ZEST_STATE_INFO_COL_TYPES             // *
//      P287_ZEST_STATE_INFO_TABLE_TYPE            // S
#define P235_LEAK_RATE_HISTORY               1574  // CURRENT_TEMPERATURE,TEMP_MEAN,TEMP_STDEV,TEMP_RANGE,CALC_HUMIDITY,HUMIDITY_MEAN,HUMIDITY_STDEV,HUMIDITY_RANGE,HUMIDITY_DELTA_LAST,HUMIDITY_LEAK_RATE,HUMIDITY_LEAK_RATE_SLOPE,HUMIDITY_LEAK_RATE_RMSE,HUMIDITY_DELTA_LEAK_RATE,NUM_HUMIDITY_SAMPLES,PRESSURE,PRESSURE_MEAN,PRESSURE_STDEV,PRESSURE_RANGE,PRESSURE_DELTA_INITIAL,PRESSURE_DELTA_REFERENCE,DELTA_TIME
//      P235_LEAK_RATE_HISTORY_COL_WIDTH           //                  19,        9,        10,        10,           13,           13,            14,            14,                 19,                18,                      24,                     23,                      24,                  20,       8,           13,            14,            14,                    22,                      24,        10
//      P235_LEAK_RATE_HISTORY_COL_MASK            //                   1,        1,         1,         1,            1,            1,             1,             1,                  1,                 1,                       1,                      1,                       1,                   1,       1,            1,             1,             1,                     1,                       1,         1
//      P235_LEAK_RATE_HISTORY_COL_TYPES           //                   N,        N,         N,         N,            N,            N,             N,             N,                  N,                 N,                       N,                      N,                       N,                   N,       N,            N,             N,             N,                     N,                       N,         N
//      P235_LEAK_RATE_HISTORY_TABLE_TYPE          // S
#define P435_LEAK_RATE_STATS                 1575  // INITIAL_TEMPERATURE,TEMP_MIN,TEMP_MAX,TEMP_MEAN,TEMP_STDEV,TEMP_RANGE,TEMP_SAMPLES,HUMIDITY_INITIAL,HUMIDITY_FINAL,HUMIDITY_MIN,HUMIDITY_MAX,HUMIDITY_MEAN,HUMIDITY_STDEV,HUMIDITY_RANGE,HUMIDITY_LEAK_RATE,HUMIDITY_LEAK_RATE_SLOPE,HUMIDITY_LEAK_RATE_RMSE,HUMIDITY_DELTA_TIME,HUMIDITY_UNIQUE_SAMPLES,HUMIDITY_SAMPLES,HUMIDITY_VENDOR_ID,PRESSURE_REF,PRESSURE_INITIAL,PRESSURE_MIN,PRESSURE_MAX,PRESSURE_MEAN,PRESSURE_STDEV,PRESSURE_RANGE,PRESSURE_SAMPLES,PRESSURE_VENDOR_ID,FAIL_CODE
//      P435_LEAK_RATE_STATS_COL_WIDTH             //                  19,       8,       8,        9,        10,        10,          12,              16,            14,          12,          12,           13,            14,            14,                18,                      24,                     23,                 19,                     23,              16,                18,          12,              16,          12,          12,           13,            14,            14,              16,                18,        9
//      P435_LEAK_RATE_STATS_COL_MASK              //                   1,       1,       1,        1,         1,         1,           1,               1,             1,           1,           1,            1,             1,             1,                 1,                       1,                      1,                  1,                      1,               1,                 1,           1,               1,           1,           1,            1,             1,             1,               1,                 1,        1
//      P435_LEAK_RATE_STATS_COL_TYPES             //                   N,       N,       N,        N,         N,         N,           N,               N,             N,           N,           N,            N,             N,             N,                 N,                       N,                      N,                  N,                      N,               N,                 N,           N,               N,           N,           N,            N,             N,             N,               N,                 N,        N
//      P435_LEAK_RATE_STATS_TABLE_TYPE            // S
#define P172_HIRP_COEFF                      1576  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TEST_MODE,RAP_SQR_COEF,RAP_LIN_COEF,RAP_BACKOFF_DAC,RAP_SLOPE,TARGET_CLEARANCE
//      P172_HIRP_COEFF_COL_WIDTH                  //          11,        10,        9,        9,          12,          12,             15,        9,              16
//      P172_HIRP_COEFF_COL_MASK                   //           0,         0,        0,        0,           0,           0,              0,        0,               0
//      P172_HIRP_COEFF_COL_TYPES                  // *
//      P172_HIRP_COEFF_TABLE_TYPE                 // S
#define P172_THERMAL_ANNEAL                  1577  // HEATER_POWER,POWER_INCREMENT,TIME_DURATION,BER_THRESHOLD
//      P172_THERMAL_ANNEAL_COL_WIDTH              //           12,             15,           13,           13
//      P172_THERMAL_ANNEAL_COL_MASK               //            0,              0,            0,            0
//      P172_THERMAL_ANNEAL_COL_TYPES              // *
//      P172_THERMAL_ANNEAL_TABLE_TYPE             // S
#define P135_TCS_ON_TWO_ZONE                 1578  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ACTIVE_HEATER,CUR_TEMP,CERT_TEMP,CUR_CLR,CERT_CLR,TCS_A_PER_DEG
//      P135_TCS_ON_TWO_ZONE_COL_WIDTH             //          11,        10,        9,           13,       8,        9,      7,       8,           13
//      P135_TCS_ON_TWO_ZONE_COL_MASK              //           0,         0,        0,            0,       0,        0,      0,       0,            0
//      P135_TCS_ON_TWO_ZONE_COL_TYPES             // *
//      P135_TCS_ON_TWO_ZONE_TABLE_TYPE            // S
#define P074_FAFH_DHS_SETUP                  1579  // FSEL1,FSEL2,CHAN_M_DIVISOR,WINDOW_LEN,DHS_LEN,INTEGRATION_LEN,READ_FREQ_MULT,WRITE_FREQ_MULT,RW_DIVISOR
//      P074_FAFH_DHS_SETUP_COL_WIDTH              //     5,    5,            14,        10,      7,             15,            14,             15,        10
//      P074_FAFH_DHS_SETUP_COL_MASK               //     0,    0,             0,         0,      0,              0,             0,              0,         0
//      P074_FAFH_DHS_SETUP_COL_TYPES              // *
//      P074_FAFH_DHS_SETUP_TABLE_TYPE             // S
#define P396_WRITE_OFFSET_PROFILE            1580  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,SENSEDATA,DATAERROR,OFFSET,BER_MEAN,STDEV_NORM,ITERATION,READ_REVS
//      P396_WRITE_OFFSET_PROFILE_COL_WIDTH        //          11,        9,        10,      7,        9,        9,     6,       8,        10,        9,        9
//      P396_WRITE_OFFSET_PROFILE_COL_MASK         //           0,        0,         0,      0,        0,        0,     0,       0,         0,        0,        0
//      P396_WRITE_OFFSET_PROFILE_COL_TYPES        // *
//      P396_WRITE_OFFSET_PROFILE_TABLE_TYPE       // M
#define P396_OPTIMUM_WRITE_OFFSET            1581  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,OPTIM_OFS,RSQARE,C2,C1
//      P396_OPTIMUM_WRITE_OFFSET_COL_WIDTH        //          11,        9,        10,      7,        9,     8, 8, 8
//      P396_OPTIMUM_WRITE_OFFSET_COL_MASK         //           0,        0,         0,      0,        0,     0, 0, 0
//      P396_OPTIMUM_WRITE_OFFSET_COL_TYPES        // *
//      P396_OPTIMUM_WRITE_OFFSET_TABLE_TYPE       // M
#define P220_ATI_BER_INFO                    1582  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ID_RD_OFST,ID_BER,OD_RD_OFST,OD_BER,SHNGL_DIR,STE_BER_AVG,STE_BER,STE_TRK_OFST,STE_RD_OFST,REAL_STE
//      P220_ATI_BER_INFO_COL_WIDTH                //          11,        9,        11,        10,     7,        10,     7,        9,         11,      7,          12,         11,       7
//      P220_ATI_BER_INFO_COL_MASK                 //           0,        0,         0,         0,     0,         0,     0,        0,          0,      0,           0,          0,       0
//      P220_ATI_BER_INFO_COL_TYPES                // *
//      P220_ATI_BER_INFO_TABLE_TYPE               // S
#define P220_ATI_BER_SUM                     1583  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ORIG_BER,UP_SHNGL_OFST,UP_SHNGL_BER,DN_SHNGL_OFST,DN_SHNGL_BER,BER_AFTER_ATI,BER_AFTER_STE,STE_BER_AVG,REAL_STE,ITER_LD_CNT,UP_SHNGL_NOM_OFST,UP_SHNGL_NOM_BER,DN_SHNGL_NOM_OFST,DN_SHNGL_NOM_BER
//      P220_ATI_BER_SUM_COL_WIDTH                 //          11,        9,        11,       8,           13,          12,           13,          12,           13,           13,         11,       7,         11,               17,              16,               17,              16
//      P220_ATI_BER_SUM_COL_MASK                  //           0,        0,         0,       0,            0,           0,            0,           0,            0,            0,          0,       0,          0,                0,               0,                0,               0
//      P220_ATI_BER_SUM_COL_TYPES                 // *
//      P220_ATI_BER_SUM_TABLE_TYPE                // S
#define P281_SCOPY_IDCS_SUMMARY              1584  // MAX_CYL_IDCS,MAX_CYL_HD,MIN_CYL_IDCS,MIN_CYL_HD,MAX_MIN_DELTA,ALLOWABLE_DELTA
//      P281_SCOPY_IDCS_SUMMARY_COL_WIDTH          //           12,        10,          12,        10,           13,             15
//      P281_SCOPY_IDCS_SUMMARY_COL_MASK           //            1,         1,           1,         1,            1,              1
//      P281_SCOPY_IDCS_SUMMARY_COL_TYPES          //            N,         N,           N,         N,            N,              N
//      P281_SCOPY_IDCS_SUMMARY_TABLE_TYPE         // S
#define P280_SCOPY_AFH_RESULTS               1585  // HD_PHYS_PSN,HD_LGC_PSN,AFH_ZONE,SPIRAL_CYL,WRITE_HEAT,READ_HEAT,DAC_BACKOFF
//      P280_SCOPY_AFH_RESULTS_COL_WIDTH           //          11,        10,       8,        10,        10,        9,         11
//      P280_SCOPY_AFH_RESULTS_COL_MASK            //           0,         0,       0,         0,         0,        0,          0
//      P280_SCOPY_AFH_RESULTS_COL_TYPES           // *
//      P280_SCOPY_AFH_RESULTS_TABLE_TYPE          // S
#define P175_BMX_HARMONICS                   1586  // HD_PHYS_PSN,HD_LGC_PSN,BMX_ZONE,START_TRK,HARMONIC_NUM,WIRRO_MEAN,WIRRO_3SIGMA,WIRRO_MAX,WIRRO_MAX_TRK,W2W_WIRRO_SQZ_MEAN,W2W_WIRRO_SQZ_3SIGMA,W2W_WIRRO_SQZ_MAX,W2W_WIRRO_SQZ_MAX_TRK,W2R_WIRRO_SQZ_MEAN,W2R_WIRRO_SQZ_3SIGMA,W2R_WIRRO_SQZ_MAX,W2R_WIRRO_SQZ_MAX_TRK
//      P175_BMX_HARMONICS_COL_WIDTH               //          11,        10,       8,        9,          12,        10,          12,        9,           13,                18,                  20,               17,                   21,                18,                  20,               17,                   21
//      P175_BMX_HARMONICS_COL_MASK                //           1,         1,       1,        1,           1,         1,           1,        1,            1,                 1,                   1,                1,                    1,                 1,                   1,                1,                    1
//      P175_BMX_HARMONICS_COL_TYPES               //           N,         N,       N,        N,           N,         N,           N,        N,            N,                 N,                   N,                N,                    N,                 N,                   N,                N,                    N
//      P175_BMX_HARMONICS_TABLE_TYPE              // S
#define P175_BMX_HARMONIC_SUMMARY            1587  // HD_PHYS_PSN,HD_LGC_PSN,BMX_ZONE,START_TRK,WIRRO_NUM_TRKS,W2W_WIRRO_SQZ_NUM_TRKS,W2R_WIRRO_SQZ_NUM_TRKS,W2W_WIRRO_SQZ_LF_3SIGMA,W2W_WIRRO_SQZ_HF_3SIGMA
//      P175_BMX_HARMONIC_SUMMARY_COL_WIDTH        //          11,        10,       8,        9,            14,                    22,                    22,                     23,                     23
//      P175_BMX_HARMONIC_SUMMARY_COL_MASK         //           1,         1,       1,        1,             1,                     1,                     1,                      1,                      1
//      P175_BMX_HARMONIC_SUMMARY_COL_TYPES        //           N,         N,       N,        N,             N,                     N,                     N,                      N,                      N
//      P175_BMX_HARMONIC_SUMMARY_TABLE_TYPE       // S
#define P334_DWELL_TRACK_LIST2               1588  // DWELL_STEP,HD_PHYS_PSN,HD_LGC_PSN,DATA_CYL,USER_CYL,TA_TRACK
//      P334_DWELL_TRACK_LIST2_COL_WIDTH           //         10,         11,        10,       8,       8,       8
//      P334_DWELL_TRACK_LIST2_COL_MASK            //          0,          0,         0,       0,       0,       0
//      P334_DWELL_TRACK_LIST2_COL_TYPES           // *
//      P334_DWELL_TRACK_LIST2_TABLE_TYPE          // S
#define P213_ERROR_RATE4                     1589  // HD_PHYS_PSN,DATA_ZN,HD_LGC_PSN,TRK_NUM,RD_OFST,SQZ_OFST,ITRTN,STEP_DOWN_ITERATION,BPI_SETTING_USED,SYMBL_ERR_RATE,SCTR_ERR_RATE,UNRCVR_RATE,WRITE_CURRENT_DAC,WRT_CUR_OVS_DAC,TOT_CWD,TOT_UNCVG_CWD,UNCVG_RATIO,WRT_CYCLE_CNT,WRITE_DIR,BER_SWEEP_NUM,OVS_DUR,TRACK
//      P213_ERROR_RATE4_COL_WIDTH                 //          11,      7,        10,      7,      7,       8,    5,                 19,              16,            14,           13,         11,               17,             15,      7,           13,         11,           13,        9,           13,      7,    8
//      P213_ERROR_RATE4_COL_MASK                  //           1,      1,         1,      1,      1,       1,    1,                  1,               1,             1,            1,          1,                1,              1,      1,            1,          1,            1,        1,            1,      1,    0
//      P213_ERROR_RATE4_COL_TYPES                 //           N,      N,         N,      N,      N,       N,    N,                  N,               N,             N,            N,          N,                N,              N,      N,            N,          N,            N,        N,            N,      N
//      P213_ERROR_RATE4_TABLE_TYPE                // S
#define P213_STE_SUMMARY                     1590  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,WRITE_TRACK,WRITE_CYCLE,WRITE_CURRENT_DAC,WRT_CUR_OVS_DAC,STEP_DOWN_ITERATION,BASELINE_BER,BASELINE_BER_SPEC,MAX_STE,STE_MAX_ERASURE_SPEC,BER_AFTER_STE,BER_AFTER_STE_SPEC,OFFSET_STE_MAX,FULL_WIDTH_HALF_MAX,ATI_ID,ATI_OD,ATI_MAX_SPEC,BER_AFTER_ATI,BER_AFTER_ATI_SPEC,FAIL_CODE,BPI_USED,WRT_RISE_TIME,BASELINE_BER_RNG,BASELINE_SUM_UNCONV,BASELINE_BER_STDEV,BER_SWEEP_NUM,AVG_TST_TRK_BER_RANGE,OVS_DUR
//      P213_STE_SUMMARY_COL_WIDTH                 //          11,        10,   4,         11,         11,               17,             15,                 19,          12,               17,      7,                  20,           13,                18,            14,                 19,     6,     6,          12,           13,                18,        9,       8,           13,              16,                 19,                18,           13,                   21,      7
//      P213_STE_SUMMARY_COL_MASK                  //           1,         1,   1,          1,          1,                1,              1,                  1,           1,                1,      1,                   1,            1,                 1,             1,                  1,     1,     1,           1,            1,                 1,        1,       1,            1,               1,                  1,                 1,            1,                    1,      1
//      P213_STE_SUMMARY_COL_TYPES                 //           N,         N,   N,          N,          N,                N,              N,                  N,           N,                N,      N,                   N,            N,                 N,             N,                  N,     N,     N,           N,            N,                 N,        N,       N,            N,               N,                  N,                 N,            N,                    N,      N
//      P213_STE_SUMMARY_TABLE_TYPE                // S
#define P303_DOS_SIMULATION                  1591  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,DATA_CYL,WRT_CNT,RFRSH_CNT,RD_RTY_CNT,WRT_RTY_CNT,HD_STATUS
//      P303_DOS_SIMULATION_COL_WIDTH              //          11,        10,        9,       8,      7,        9,        10,         11,        9
//      P303_DOS_SIMULATION_COL_MASK               //           1,         1,        1,       1,      1,        1,         1,          1,        1
//      P303_DOS_SIMULATION_COL_TYPES              //           N,         N,        N,       N,      N,        N,         N,          N,        N
//      P303_DOS_SIMULATION_TABLE_TYPE             // S
#define P280_SCOPY_DETCR_GAIN                1592  // HD_PHYS_PSN,HD_LGC_PSN,AFH_ZONE,DETCR_GAIN,VTH_RANGE,ADD_3DB
//      P280_SCOPY_DETCR_GAIN_COL_WIDTH            //          11,        10,       8,        10,        9,      7
//      P280_SCOPY_DETCR_GAIN_COL_MASK             //           1,         1,       1,         1,        1,      1
//      P280_SCOPY_DETCR_GAIN_COL_TYPES            //           N,         N,       N,         N,        N,      N
//      P280_SCOPY_DETCR_GAIN_TABLE_TYPE           // S
#define P172_WEDGE_DATA                      1593  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,WEDGE_SIZE,SSAW_SIZE,SSAR_SIZE,GAP_SIZE_BEF_SRVO_FLD,GAP_SIZE_AFT_SRVO_FLD
//      P172_WEDGE_DATA_COL_WIDTH                  //          11,        9,        10,        10,        9,        9,                   21,                   21
//      P172_WEDGE_DATA_COL_MASK                   //           1,        1,         1,         1,        1,        1,                    1,                    1
//      P172_WEDGE_DATA_COL_TYPES                  //           N,        N,         N,         N,        N,        N,                    N,                    N
//      P172_WEDGE_DATA_TABLE_TYPE                 // S
#define P172_ZONE_DATA                       1594  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ZN_START_CYL,TRK_NUM,PBA_TRK,NRZ_FREQ
//      P172_ZONE_DATA_COL_WIDTH                   //          11,        9,        10,          12,      7,      9,       8
//      P172_ZONE_DATA_COL_MASK                    //           1,        1,         1,           1,      1,      1,       1
//      P172_ZONE_DATA_COL_TYPES                   //           N,        N,         N,           N,      N,      N,       N
//      P172_ZONE_DATA_TABLE_TYPE                  // S
#define P172_RESVD_WEDGE_DATA                1595  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,WEDGE_SIZE,SSAW_SIZE,SSAR_SIZE,GAP_SIZE_BEF_SRVO_FLD,GAP_SIZE_AFT_SRVO_FLD
//      P172_RESVD_WEDGE_DATA_COL_WIDTH            //          11,        9,        10,        10,        9,        9,                   21,                   21
//      P172_RESVD_WEDGE_DATA_COL_MASK             //           1,        1,         1,         1,        1,        1,                    1,                    1
//      P172_RESVD_WEDGE_DATA_COL_TYPES            //           N,        N,         N,         N,        N,        N,                    N,                    N
//      P172_RESVD_WEDGE_DATA_TABLE_TYPE           // S
#define P172_RESVD_ZONE_DATA                 1596  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ZN_START_CYL,TRK_NUM,PBA_TRK,NRZ_FREQ
//      P172_RESVD_ZONE_DATA_COL_WIDTH             //          11,        9,        10,          12,      7,      9,       8
//      P172_RESVD_ZONE_DATA_COL_MASK              //           1,        1,         1,           1,      1,      1,       1
//      P172_RESVD_ZONE_DATA_COL_TYPES             //           N,        N,         N,           N,      N,      N,       N
//      P172_RESVD_ZONE_DATA_TABLE_TYPE            // S
#define P220_BAR_BIE_DATA_BRIEF              1597  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BPI_ADJ_PCT,TPI_ADJ_PCT,CNV_TRK_BER,NCNV_TRK_BER,COMB_BER,NORMALIZED_BER,AREAL_DENSITY,RD_OFFSET,MIN_RD_OFFSET,MAX_RD_OFFSET,ITER_LD_CNT,SQZ_TYPE,TEMP_CELSIUS
//      P220_BAR_BIE_DATA_BRIEF_COL_WIDTH          //          11,        9,        11,         11,         11,         11,          12,       8,            14,           13,        9,           13,           13,         11,       8,          12
//      P220_BAR_BIE_DATA_BRIEF_COL_MASK           //           0,        0,         0,          0,          0,          0,           0,       0,             0,            0,        0,            0,            0,          0,       0,           0
//      P220_BAR_BIE_DATA_BRIEF_COL_TYPES          // *
//      P220_BAR_BIE_DATA_BRIEF_TABLE_TYPE         // S
#define P276_SCOPY_NRRO_MEAS                 1598  // HD_PHYS_PSN,HD_LGC_PSN,SPIRAL_CYL,NRRO_3SIGMA,RRO_3SIGMA
//      P276_SCOPY_NRRO_MEAS_COL_WIDTH             //          11,        10,        10,         11,        10
//      P276_SCOPY_NRRO_MEAS_COL_MASK              //           1,         1,         1,          1,         1
//      P276_SCOPY_NRRO_MEAS_COL_TYPES             //           N,         N,         N,          N,         N
//      P276_SCOPY_NRRO_MEAS_TABLE_TYPE            // S
#define P276_SCOPY_PREAMP_VALS               1599  // HD_PHYS_PSN,HD_LGC_PSN,SPIRAL_CYL,WRT_HEAT,RD_HEAT,HEAT_RANGE,WRT_CUR,WRT_DAMP,WRT_DAMP_DUR,RD_WRT_HEAT,RD_RD_HEAT
//      P276_SCOPY_PREAMP_VALS_COL_WIDTH           //          11,        10,        10,       8,      7,        10,      7,       8,          12,         11,        10
//      P276_SCOPY_PREAMP_VALS_COL_MASK            //           0,         0,         0,       0,      0,         0,      0,       0,           0,          0,         0
//      P276_SCOPY_PREAMP_VALS_COL_TYPES           // *
//      P276_SCOPY_PREAMP_VALS_TABLE_TYPE          // S
#define P280_SCOPY_AFH_DUAL_HEAT             1600  // HD_PHYS_PSN,HD_LGC_PSN,AFH_ZONE,SPIRAL_CYL,WRT_WRT_HEAT,WRT_RD_HEAT,RD_WRT_HEAT,RD_RD_HEAT,DAC_BACKOFF
//      P280_SCOPY_AFH_DUAL_HEAT_COL_WIDTH         //          11,        10,       8,        10,          12,         11,         11,        10,         11
//      P280_SCOPY_AFH_DUAL_HEAT_COL_MASK          //           1,         1,       1,         1,           1,          1,          1,         1,          1
//      P280_SCOPY_AFH_DUAL_HEAT_COL_TYPES         //           N,         N,       N,         N,           N,          N,          N,         N,          N
//      P280_SCOPY_AFH_DUAL_HEAT_TABLE_TYPE        // S
#define P000_BODE_NYQUIST_INTERP             1601  // IDX,FREQUENCY,ORIG_RE,ORIG_IM,MOD_RE,MOD_IM
//      P000_BODE_NYQUIST_INTERP_COL_WIDTH         //   4,        9,      7,      7,     7,     7
//      P000_BODE_NYQUIST_INTERP_COL_MASK          //   0,        0,      0,      0,     0,     0
//      P000_BODE_NYQUIST_INTERP_COL_TYPES         // *
//      P000_BODE_NYQUIST_INTERP_TABLE_TYPE        // S
#define P251_FITNESS_POINT_EXTD_A            1602  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RGSTR_ID,FITNESS,FIT_SIGMA,OPTI_VAL,AUX_VAL,TRK_NUM,VGAR,NLFR,LDF_TAP0,LDF_TAP1,LDF_TAP2,LDF_TAP3,LDF_TAP4,LDF_TAP5,LDF_TAP6,LDF_TAP7,LDF_TAP8,LDF_TAP9
//      P251_FITNESS_POINT_EXTD_A_COL_WIDTH        //          11,        9,        10,       8,      8,        9,       8,      8,      7,   4,   4,       8,       8,       8,       8,       8,       8,       8,       8,       8,       8
//      P251_FITNESS_POINT_EXTD_A_COL_MASK         //           0,        0,         0,       0,      0,        0,       0,      0,      0,   0,   0,       0,       0,       0,       0,       0,       0,       0,       0,       0,       0
//      P251_FITNESS_POINT_EXTD_A_COL_TYPES        // *
//      P251_FITNESS_POINT_EXTD_A_TABLE_TYPE       // S
#define P251_ERR_RATE_BKT_AVAGO              1603  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,RGSTR_ID,TEST_ORDER,OPTI_VAL,HD_LGC_PSN,ERROR_RATE10,TOTAL_ERR_CNT,ITERATION_CNT,SYNC_ERR,NONCONVRG_CW_CNT,BITS_IN_ERR,NUM_REVS,TOT_SCTR_RD,VGAR,NLFR,LDF_TAP0,LDF_TAP1,LDF_TAP2,LDF_TAP3,LDF_TAP4,LDF_TAP5,LDF_TAP6,LDF_TAP7,LDF_TAP8,LDF_TAP9
//      P251_ERR_RATE_BKT_AVAGO_COL_WIDTH          //          11,        9,      7,       8,        10,       8,        10,          12,           13,           13,       8,              16,         11,       8,         11,   4,   4,       8,       8,       8,       8,       8,       8,       8,       8,       8,       8
//      P251_ERR_RATE_BKT_AVAGO_COL_MASK           //           0,        0,      0,       0,         0,       0,         0,           0,            0,            0,       0,               0,          0,       0,          0,   0,   0,       0,       0,       0,       0,       0,       0,       0,       0,       0,       0
//      P251_ERR_RATE_BKT_AVAGO_COL_TYPES          // *
//      P251_ERR_RATE_BKT_AVAGO_TABLE_TYPE         // S
#define P251_ERR_RATE_BKT_AVAGO2             1604  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,RGSTR_ID,TEST_ORDER,OPTI_VAL,HD_LGC_PSN,ERROR_RATE10,TOTAL_ERR_CNT,ITERATION_CNT,SYNC_ERR,NONCONVRG_CW_CNT,BITS_IN_ERR,NUM_REVS,TOT_SCTR_RD,LPE_TAP0,LPE_TAP1,LPE_TAP2,LPE_TAP3,LPE_TAP4,LPE_TAP5,LPE_TAP6,LPE_TAP7,LPE_TAP8,LPE_TAP9
//      P251_ERR_RATE_BKT_AVAGO2_COL_WIDTH         //          11,        9,      7,       8,        10,       8,        10,          12,           13,           13,       8,              16,         11,       8,         11,       8,       8,       8,       8,       8,       8,       8,       8,       8,       8
//      P251_ERR_RATE_BKT_AVAGO2_COL_MASK          //           0,        0,      0,       0,         0,       0,         0,           0,            0,            0,       0,               0,          0,       0,          0,       0,       0,       0,       0,       0,       0,       0,       0,       0,       0
//      P251_ERR_RATE_BKT_AVAGO2_COL_TYPES         // *
//      P251_ERR_RATE_BKT_AVAGO2_TABLE_TYPE        // S
#define P251_ERR_RATE_BKT_AVAGO3             1605  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,RGSTR_ID,TEST_ORDER,OPTI_VAL,HD_LGC_PSN,ERROR_RATE10,TOTAL_ERR_CNT,ITERATION_CNT,SYNC_ERR,NONCONVRG_CW_CNT,BITS_IN_ERR,NUM_REVS,TOT_SCTR_RD,LDF_TARG_T0,LDF_TARG_T1,LDF_TARG_T2,LPCAL_BIAS0,LPCAL_BIAS1,LPCAL_BIAS2,LPCAL_BIAS3,LPCAL_BIAS4,LPCAL_BIAS5,LPCAL_BIAS6,LPCAL_BIAS7
//      P251_ERR_RATE_BKT_AVAGO3_COL_WIDTH         //          11,        9,      7,       8,        10,       8,        10,          12,           13,           13,       8,              16,         11,       8,         11,         11,         11,         11,         11,         11,         11,         11,         11,         11,         11,         11
//      P251_ERR_RATE_BKT_AVAGO3_COL_MASK          //           0,        0,      0,       0,         0,       0,         0,           0,            0,            0,       0,               0,          0,       0,          0,          0,          0,          0,          0,          0,          0,          0,          0,          0,          0,          0
//      P251_ERR_RATE_BKT_AVAGO3_COL_TYPES         // *
//      P251_ERR_RATE_BKT_AVAGO3_TABLE_TYPE        // S
#define P251_FIT_BCI_META_AVAGO              1606  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RGSTR_ID,TEST_ORDER,OPTI_VAL,FITNESS,FIT_SIGMA,ICNT,BITS_ERR,BIE_BER,LOWLLR,SOFTSUM,QM_MSE,METRIC,AUX_VAL,TRK_NUM,METADATA1,METADATA2,METADATA3,VGAR,NLFR,LDF_TAP0,LDF_TAP1,LDF_TAP2,LDF_TAP3,LDF_TAP4,LDF_TAP5,LDF_TAP6,LDF_TAP7,LDF_TAP8,LDF_TAP9
//      P251_FIT_BCI_META_AVAGO_COL_WIDTH          //          11,        9,        10,       8,        10,       8,      8,        9,   4,       8,      7,     6,      7,     6,     6,      8,      7,        9,        9,        9,   4,   4,       8,       8,       8,       8,       8,       8,       8,       8,       8,       8
//      P251_FIT_BCI_META_AVAGO_COL_MASK           //           0,        0,         0,       0,         0,       0,      0,        0,   0,       0,      0,     0,      0,     0,     0,      0,      0,        0,        0,        0,   0,   0,       0,       0,       0,       0,       0,       0,       0,       0,       0,       0
//      P251_FIT_BCI_META_AVAGO_COL_TYPES          // *
//      P251_FIT_BCI_META_AVAGO_TABLE_TYPE         // S
#define P251_FIT_BCI_META_AVAGO2             1607  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RGSTR_ID,TEST_ORDER,OPTI_VAL,FITNESS,FIT_SIGMA,ICNT,BITS_ERR,BIE_BER,LOWLLR,SOFTSUM,QM_MSE,METRIC,AUX_VAL,TRK_NUM,METADATA1,METADATA2,METADATA3,LPE_TAP0,LPE_TAP1,LPE_TAP2,LPE_TAP3,LPE_TAP4,LPE_TAP5,LPE_TAP6,LPE_TAP7,LPE_TAP8,LPE_TAP9
//      P251_FIT_BCI_META_AVAGO2_COL_WIDTH         //          11,        9,        10,       8,        10,       8,      8,        9,   4,       8,      7,     6,      7,     6,     6,      8,      7,        9,        9,        9,       8,       8,       8,       8,       8,       8,       8,       8,       8,       8
//      P251_FIT_BCI_META_AVAGO2_COL_MASK          //           0,        0,         0,       0,         0,       0,      0,        0,   0,       0,      0,     0,      0,     0,     0,      0,      0,        0,        0,        0,       0,       0,       0,       0,       0,       0,       0,       0,       0,       0
//      P251_FIT_BCI_META_AVAGO2_COL_TYPES         // *
//      P251_FIT_BCI_META_AVAGO2_TABLE_TYPE        // S
#define P251_FIT_BCI_META_AVAGO3             1608  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RGSTR_ID,TEST_ORDER,OPTI_VAL,FITNESS,FIT_SIGMA,ICNT,BITS_ERR,BIE_BER,LOWLLR,SOFTSUM,QM_MSE,METRIC,AUX_VAL,TRK_NUM,METADATA1,METADATA2,METADATA3,LDF_TARG_T0,LDF_TARG_T1,LDF_TARG_T2,LPCAL_BIAS0,LPCAL_BIAS1,LPCAL_BIAS2,LPCAL_BIAS3,LPCAL_BIAS4,LPCAL_BIAS5,LPCAL_BIAS6,LPCAL_BIAS7
//      P251_FIT_BCI_META_AVAGO3_COL_WIDTH         //          11,        9,        10,       8,        10,       8,      8,        9,   4,       8,      7,     6,      7,     6,     6,      8,      7,        9,        9,        9,         11,         11,         11,         11,         11,         11,         11,         11,         11,         11,         11
//      P251_FIT_BCI_META_AVAGO3_COL_MASK          //           0,        0,         0,       0,         0,       0,      0,        0,   0,       0,      0,     0,      0,     0,     0,      0,      0,        0,        0,        0,          0,          0,          0,          0,          0,          0,          0,          0,          0,          0,          0
//      P251_FIT_BCI_META_AVAGO3_COL_TYPES         // *
//      P251_FIT_BCI_META_AVAGO3_TABLE_TYPE        // S
#define P255_LOOP_FIR_AVAGO                  1609  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,NLTAPR,DCTAPR,DCAVGR,LDF_TAP0,LDF_TAP1,LDF_TAP2,LDF_TAP3,LDF_TAP4,LDF_TAP5,LDF_TAP6,LDF_TAP7,LDF_TAP8,LDF_TAP9
//      P255_LOOP_FIR_AVAGO_COL_WIDTH              //          11,        10,   4,     6,     6,     6,       8,       8,       8,       8,       8,       8,       8,       8,       8,       8
//      P255_LOOP_FIR_AVAGO_COL_MASK               //           1,         1,   1,     1,     1,     1,       1,       1,       1,       1,       1,       1,       1,       1,       1,       1
//      P255_LOOP_FIR_AVAGO_COL_TYPES              //           N,         N,   N,     N,     N,     N,       N,       N,       N,       N,       N,       N,       N,       N,       N,       N
//      P255_LOOP_FIR_AVAGO_TABLE_TYPE             // S
#define P255_LOOP_LPE_AVAGO                  1610  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,LPE_TAP0,LPE_TAP1,LPE_TAP2,LPE_TAP3,LPE_TAP4,LPE_TAP5,LPE_TAP6,LPE_TAP7,LPE_TAP8,LPE_TAP9
//      P255_LOOP_LPE_AVAGO_COL_WIDTH              //          11,        10,   4,       8,       8,       8,       8,       8,       8,       8,       8,       8,       8
//      P255_LOOP_LPE_AVAGO_COL_MASK               //           1,         1,   1,       1,       1,       1,       1,       1,       1,       1,       1,       1,       1
//      P255_LOOP_LPE_AVAGO_COL_TYPES              //           N,         N,   N,       N,       N,       N,       N,       N,       N,       N,       N,       N,       N
//      P255_LOOP_LPE_AVAGO_TABLE_TYPE             // S
#define P255_LOOP_DET_BIAS_AVAGO             1611  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,LDF_TARG_T0,LDF_TARG_T1,LDF_TARG_T2,LPCAL_BIAS0,LPCAL_BIAS1,LPCAL_BIAS2,LPCAL_BIAS3,LPCAL_BIAS4,LPCAL_BIAS5,LPCAL_BIAS6,LPCAL_BIAS7
//      P255_LOOP_DET_BIAS_AVAGO_COL_WIDTH         //          11,        10,   4,         11,         11,         11,         11,         11,         11,         11,         11,         11,         11,         11
//      P255_LOOP_DET_BIAS_AVAGO_COL_MASK          //           1,         1,   1,          1,          1,          1,          1,          1,          1,          1,          1,          1,          1,          1
//      P255_LOOP_DET_BIAS_AVAGO_COL_TYPES         //           N,         N,   N,          N,          N,          N,          N,          N,          N,          N,          N,          N,          N,          N
//      P255_LOOP_DET_BIAS_AVAGO_TABLE_TYPE        // S
#define P255_MISC_DATA_AVAGO                 1612  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,SMPATT,ECWIN,ECWIN_X,VSCALE_LLR2,VSCALE_BM2,VSCALE2,BENPTHRESH,BENPTHRESHLO
//      P255_MISC_DATA_AVAGO_COL_WIDTH             //          10,        11,   4,     6,    5,      7,         11,        11,      7,        10,          12
//      P255_MISC_DATA_AVAGO_COL_MASK              //           1,         1,   1,     1,    1,      1,          1,         1,      1,         1,           1
//      P255_MISC_DATA_AVAGO_COL_TYPES             //           N,         N,   N,     N,    N,      N,          N,         N,      N,         N,           N
//      P255_MISC_DATA_AVAGO_TABLE_TYPE            // S
#define P276_SCOPY_ADPTV_ZAP_GAIN            1613  // HD_PHYS_PSN,HD_LGC_PSN,SPIRAL_CYL,DIFF_RRO_SIG,ADPTV_ZAP_GAIN
//      P276_SCOPY_ADPTV_ZAP_GAIN_COL_WIDTH        //          11,        10,        10,          12,            14
//      P276_SCOPY_ADPTV_ZAP_GAIN_COL_MASK         //           0,         0,         0,           0,             0
//      P276_SCOPY_ADPTV_ZAP_GAIN_COL_TYPES        // *
//      P276_SCOPY_ADPTV_ZAP_GAIN_TABLE_TYPE       // S
#define P399_AGC_SCREEN_RAW                  1614  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,LGC_TRK_NUM,RAW_AGC,SIGMA_AGC
//      P399_AGC_SCREEN_RAW_COL_WIDTH              //          11,        10,        9,         11,      7,        9
//      P399_AGC_SCREEN_RAW_COL_MASK               //           0,         0,        0,          0,      0,        0
//      P399_AGC_SCREEN_RAW_COL_TYPES              // *
//      P399_AGC_SCREEN_RAW_TABLE_TYPE             // S
#define P399_AGC_SCREEN                      1615  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,MAX_AGC_TRK,MAX_AGC,MEAN_AGC,DELTA_MAX_AGC,DELTA_MAX_MEAN_AGC,DELTA_MAX_SIGMA_AGC,DELTA_MAX_MEAN_SIGMA_AGC
//      P399_AGC_SCREEN_COL_WIDTH                  //          11,        10,        9,         11,      7,       8,           13,                18,                 19,                      24
//      P399_AGC_SCREEN_COL_MASK                   //           0,         0,        0,          0,      0,       0,            0,                 0,                  0,                       0
//      P399_AGC_SCREEN_COL_TYPES                  // *
//      P399_AGC_SCREEN_TABLE_TYPE                 // S
#define P094_TA_THRSHLD_SUMMARY_2            1616  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,POS_BSLN_THRSHLD_DAC,NEG_BSLN_THRSHLD_DAC,CALC_THRSHLD_DAC
//      P094_TA_THRSHLD_SUMMARY_2_COL_WIDTH        //          11,        10,        9,                  20,                  20,              16
//      P094_TA_THRSHLD_SUMMARY_2_COL_MASK         //           1,         1,        1,                   1,                   1,               1
//      P094_TA_THRSHLD_SUMMARY_2_COL_TYPES        //           N,         N,        N,                   N,                   N,               N
//      P094_TA_THRSHLD_SUMMARY_2_TABLE_TYPE       // S
#define P094_TA_THRSHLD_HEAD_2               1617  // HD_PHYS_PSN,HD_LGC_PSN,PREAMP_ID,PREAMP_REV,TCR_BIAS,TCR_GAIN,TCR_POLARITY,TCR_FILTER,TCR_V_TH_RANGE,TCR_RES_BIAS_1,TCR_RES_BIAS_2,TCR_RES_BIAS_3,TCR_RES_BIAS_4,TCR_RES_BIAS_5,THRSHLD_OFFSET,MEAN_POS_BSLN_THRSHLD,MEAN_NEG_BSLN_THRSHLD,POS_NEG_BSLN_OFFSET,MAX_BSLN_THRSHLD,STDEV_BSLN_THRSHLD,TCR_RES_SLOPE,TCR_RES_BIAS_0_MV,RSQUARED_FIT_RES_1_5
//      P094_TA_THRSHLD_HEAD_2_COL_WIDTH           //          11,        10,        9,        10,       8,       8,          12,        10,            14,            14,            14,            14,            14,            14,            14,                   21,                   21,                 19,              16,                18,           13,               17,                  20
//      P094_TA_THRSHLD_HEAD_2_COL_MASK            //           1,         1,        1,         1,       1,       1,           1,         1,             1,             1,             1,             1,             1,             1,             1,                    1,                    1,                  1,               1,                 1,            1,                1,                   1
//      P094_TA_THRSHLD_HEAD_2_COL_TYPES           //           N,         N,        V,         V,       N,       N,           N,         N,             N,             N,             N,             N,             N,             N,             N,                    N,                    N,                  N,               N,                 N,            N,                N,                   N
//      P094_TA_THRSHLD_HEAD_2_TABLE_TYPE          // S
#define P172_CONTACT_ENVIRONMENT             1618  // HD_PHYS_PSN,HD_LGC_PSN,CNTCT_TEMP_CELSIUS,CNTCT_MIXED_RATIO,CNTCT_PRESSURE
//      P172_CONTACT_ENVIRONMENT_COL_WIDTH         //          11,        10,                18,               17,            14
//      P172_CONTACT_ENVIRONMENT_COL_MASK          //           0,         0,                 0,                0,             0
//      P172_CONTACT_ENVIRONMENT_COL_TYPES         // *
//      P172_CONTACT_ENVIRONMENT_TABLE_TYPE        // S
#define P172_RAP_DELTA_AFH_TABLE             1619  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,MODE,REFERENCE_DELTA,RDHO_DELTA_DAC,WRHO_DELTA_DAC,WRWH_DELTA_DAC
//      P172_RAP_DELTA_AFH_TABLE_COL_WIDTH         //          11,        10,        9,   5,             15,            14,            14,            14
//      P172_RAP_DELTA_AFH_TABLE_COL_MASK          //           0,         0,        0,   0,              0,             0,             0,             0
//      P172_RAP_DELTA_AFH_TABLE_COL_TYPES         // *
//      P172_RAP_DELTA_AFH_TABLE_TABLE_TYPE        // S
#define P073_SYNC_SERVO_ZONE_DATA            1620  // HD_PHYS_PSN,SERVO_ZONE,HD_LGC_PSN,LOG_START_CYL,ORIG_NOM_CYL,CALC_NOM_CYL,ORIG_PHY_CYL,CALC_PHY_CYL,CALC_PHY_CYL2
//      P073_SYNC_SERVO_ZONE_DATA_COL_WIDTH        //          11,        10,        10,           13,          12,          12,          12,          12,           13
//      P073_SYNC_SERVO_ZONE_DATA_COL_MASK         //           0,         0,         0,            0,           0,           0,           0,           0,            0
//      P073_SYNC_SERVO_ZONE_DATA_COL_TYPES        // *
//      P073_SYNC_SERVO_ZONE_DATA_TABLE_TYPE       // M
#define P073_SYNC_SERVO_ZONE_INFO            1621  // HD_PHYS_PSN,SERVO_ZONE,HD_LGC_PSN,LGC_CYL_O,LGC_CYL_N,NOM_CYL_O,NOM_CYL_N,PHYS_CYL_O,PHYS_CYL_N,NUM_NOM_CYL_O,NUM_NOM_CYL_N,SYC_FLAG
//      P073_SYNC_SERVO_ZONE_INFO_COL_WIDTH        //          11,        10,        10,        9,        9,        9,        9,        10,        10,           13,           13,       8
//      P073_SYNC_SERVO_ZONE_INFO_COL_MASK         //           0,         0,         0,        0,        0,        0,        0,         0,         0,            0,            0,       0
//      P073_SYNC_SERVO_ZONE_INFO_COL_TYPES        // *
//      P073_SYNC_SERVO_ZONE_INFO_TABLE_TYPE       // M
#define P136_IN_OUT_CAL_SUM_DATA             1622  // IN_THETA_0,IN_THETA_1,IN_THETA_2,OUT_THETA_0,OUT_THETA_1,OUT_THETA_2
//      P136_IN_OUT_CAL_SUM_DATA_COL_WIDTH         //         10,        10,        10,         11,         11,         11
//      P136_IN_OUT_CAL_SUM_DATA_COL_MASK          //          0,         0,         0,          0,          0,          0
//      P136_IN_OUT_CAL_SUM_DATA_COL_TYPES         // *
//      P136_IN_OUT_CAL_SUM_DATA_TABLE_TYPE        // S
#define P285_DGC_OFFSET_SUMMARY              1623  // HD_PHYS_PSN,HD_LGC_PSN,HD_OFFSET
//      P285_DGC_OFFSET_SUMMARY_COL_WIDTH          //          11,        10,        9
//      P285_DGC_OFFSET_SUMMARY_COL_MASK           //           0,         0,        0
//      P285_DGC_OFFSET_SUMMARY_COL_TYPES          // *
//      P285_DGC_OFFSET_SUMMARY_TABLE_TYPE         // S
#define P276_SCOPY_RW_FAIL                   1624  // HD_PHYS_PSN,HD_LGC_PSN,HALF_TRK_CYL,RW_STATUS,RW_ERROR_CODE,RETRIES
//      P276_SCOPY_RW_FAIL_COL_WIDTH               //          11,        10,          12,        9,           13,      7
//      P276_SCOPY_RW_FAIL_COL_MASK                //           0,         0,           0,        0,            0,      0
//      P276_SCOPY_RW_FAIL_COL_TYPES               // *
//      P276_SCOPY_RW_FAIL_TABLE_TYPE              // S
#define P276_SCOPY_SRVO_FAULT                1625  // HD_PHYS_PSN,HD_LGC_PSN,SPIRAL_CYL,PES_FAULT,TIMING_FAULT,SYNC_FAULT,FAULT_STS
//      P276_SCOPY_SRVO_FAULT_COL_WIDTH            //          11,        10,        10,        9,          12,        10,        9
//      P276_SCOPY_SRVO_FAULT_COL_MASK             //           0,         0,         0,        0,           0,         0,        0
//      P276_SCOPY_SRVO_FAULT_COL_TYPES            // *
//      P276_SCOPY_SRVO_FAULT_TABLE_TYPE           // S
#define P276_SCOPY_SRVO_FAULT_STS            1626  // SPIRAL_GATE,WRITE_COUNT,POS_ERROR,TIM_ERROR,SERVO_COUNT,DIFF_ZAP_CYL,SPIRAL_NUM
//      P276_SCOPY_SRVO_FAULT_STS_COL_WIDTH        //          11,         11,        9,        9,         11,          12,        10
//      P276_SCOPY_SRVO_FAULT_STS_COL_MASK         //           0,          0,        0,        0,          0,           0,         0
//      P276_SCOPY_SRVO_FAULT_STS_COL_TYPES        // *
//      P276_SCOPY_SRVO_FAULT_STS_TABLE_TYPE       // S
#define P276_SCOPY_ZAP_FAIL                  1627  // HD_PHYS_PSN,HD_LGC_PSN,SPIRAL_CYL,FAIL_STATUS,SCOPY_DIR
//      P276_SCOPY_ZAP_FAIL_COL_WIDTH              //          11,        10,        10,         11,        9
//      P276_SCOPY_ZAP_FAIL_COL_MASK               //           0,         0,         0,          0,        0
//      P276_SCOPY_ZAP_FAIL_COL_TYPES              // *
//      P276_SCOPY_ZAP_FAIL_TABLE_TYPE             // S
#define P276_SCOPY_ZAP_DELAY_MS              1628  // HD_PHYS_PSN,HD_LGC_PSN,SPIRAL_CYL,DELAY_TIME
//      P276_SCOPY_ZAP_DELAY_MS_COL_WIDTH          //          11,        10,        10,        10
//      P276_SCOPY_ZAP_DELAY_MS_COL_MASK           //           0,         0,         0,         0
//      P276_SCOPY_ZAP_DELAY_MS_COL_TYPES          // *
//      P276_SCOPY_ZAP_DELAY_MS_TABLE_TYPE         // S
#define P285_IDCS_CYL_INCR_SUM               1629  // HD_PHYS_PSN,HD_LGC_PSN,REQEST_MAX,ADJUST_MAX,INCREASE_MAX
//      P285_IDCS_CYL_INCR_SUM_COL_WIDTH           //          11,        10,        10,        10,          12
//      P285_IDCS_CYL_INCR_SUM_COL_MASK            //           0,         0,         0,         0,           0
//      P285_IDCS_CYL_INCR_SUM_COL_TYPES           // *
//      P285_IDCS_CYL_INCR_SUM_TABLE_TYPE          // S
#define P277_SCOPY_PRESCAN                   1630  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,PES_CRRO,PES_IRRO,PES_RRO,PES_NRRO,TIMING_CRRO,TIMING_IRRO,TIMING_RRO,HALF_AVG,HALF_VAR,SAM_AVG,SAM_VAR
//      P277_SCOPY_PRESCAN_COL_WIDTH               //          11,        10,        9,       8,       8,      7,       8,         11,         11,        10,       8,       8,      7,      7
//      P277_SCOPY_PRESCAN_COL_MASK                //           1,         1,        1,       1,       1,      1,       1,          1,          1,         1,       1,       1,      1,      1
//      P277_SCOPY_PRESCAN_COL_TYPES               //           N,         N,        N,       N,       N,      N,       N,          N,          N,         N,       N,       N,      N,      N
//      P277_SCOPY_PRESCAN_TABLE_TYPE              // S
#define P172_RAP_AFH_GAMMA_COEF              1631  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RDHO_GAMMA,WRHO_GAMMA,WRWH_GAMMA,WIRP_GAMMA,BLIWP_GAMMA
//      P172_RAP_AFH_GAMMA_COEF_COL_WIDTH          //          11,        10,        9,        10,        10,        10,        10,         11
//      P172_RAP_AFH_GAMMA_COEF_COL_MASK           //           0,         0,        0,         0,         0,         0,         0,          0
//      P172_RAP_AFH_GAMMA_COEF_COL_TYPES          // *
//      P172_RAP_AFH_GAMMA_COEF_TABLE_TYPE         // S
#define P285_CS_INTEGRATOR_DATA              1632  // HD_PHYS_PSN,HD_LGC_PSN,TARGET_CYL,INTEGRATOR,CUR_SLOPE
//      P285_CS_INTEGRATOR_DATA_COL_WIDTH          //          11,        10,        10,        10,        9
//      P285_CS_INTEGRATOR_DATA_COL_MASK           //           0,         0,         0,         0,        0
//      P285_CS_INTEGRATOR_DATA_COL_TYPES          // *
//      P285_CS_INTEGRATOR_DATA_TABLE_TYPE         // S
#define P276_SCOPY_SUMMARY_STATS             1633  // HD_PHYS_PSN,HD_LGC_PSN,DLY_RETRIES,ZAP_FAILS,SRVO_FAULTS,RW_FAILS,SEEK_RETRIES
//      P276_SCOPY_SUMMARY_STATS_COL_WIDTH         //          11,        10,         11,        9,         11,       8,          12
//      P276_SCOPY_SUMMARY_STATS_COL_MASK          //           0,         0,          0,        0,          0,       0,           0
//      P276_SCOPY_SUMMARY_STATS_COL_TYPES         // *
//      P276_SCOPY_SUMMARY_STATS_TABLE_TYPE        // S
#define P220_ADC_BAR_SWEEP                   1634  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BPI_ADJ_PCT,TPI_ADJ_PCT,AREAL_DENSITY,COMB_BER,AD_MARGIN,RD_OFFSET
//      P220_ADC_BAR_SWEEP_COL_WIDTH               //          11,        9,        11,         11,         11,           13,       8,        9,        9
//      P220_ADC_BAR_SWEEP_COL_MASK                //           0,        0,         0,          0,          0,            0,       0,        0,        0
//      P220_ADC_BAR_SWEEP_COL_TYPES               // *
//      P220_ADC_BAR_SWEEP_TABLE_TYPE              // S
#define P220_ADC_BAR_PICKS                   1635  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BPI_ADJ_PCT,TPI_ADJ_PCT,AREAL_DENSITY,COMB_BER,AD_MARGIN,RD_OFFSET,ABS_KBPI,ABS_KTPI,AD_GBITS_SQ_INCH,NOM_ABS_KBPI,NOM_ABS_KTPI,NOM_AD_GBITS_SQ_INCH
//      P220_ADC_BAR_PICKS_COL_WIDTH               //          11,        9,        11,         11,         11,           13,       8,        9,        9,       8,       8,              16,          12,          12,                  20
//      P220_ADC_BAR_PICKS_COL_MASK                //           0,        0,         0,          0,          0,            0,       0,        0,        0,       0,       0,               0,           0,           0,                   0
//      P220_ADC_BAR_PICKS_COL_TYPES               // *
//      P220_ADC_BAR_PICKS_TABLE_TYPE              // S
#define P315_ADJ_INST_METRIC                 1636  // HD_PHYS_PSN,HD_LGC_PSN,MSRD_SAMPLE_CNT,HD_INSTABILITY_METRIC,MAX_OD_MEAN_DELTA,MAX_ID_MEAN_DELTA,MAX_OD_MEAN_DELTA_FAT,MAX_ID_MEAN_DELTA_FAT,ADJ_HD_INSTABILITY_METRIC,MEAN_RAW_ERROR_RATE
//      P315_ADJ_INST_METRIC_COL_WIDTH             //          11,        10,             15,                   21,               17,               17,                   21,                   21,                       25,                 19
//      P315_ADJ_INST_METRIC_COL_MASK              //           0,         0,              0,                    0,                0,                0,                    0,                    0,                        0,                  0
//      P315_ADJ_INST_METRIC_COL_TYPES             // *
//      P315_ADJ_INST_METRIC_TABLE_TYPE            // S
#define P135_BURNISH_SUMMARY                 1637  // HD_PHYS_PSN,HD_LGC_PSN,BURNISH_AVG,BURNISH_STDEV,BURNISH_MIN_CI,BURNISH_MAX_CI,BURNISH_MIN,BURNISH_MAX,POS_BURNISH_STATUS,NEG_BURNISH_STATUS,BURNISH_USL,BURNISH_LSL,ACTIVE_HEATER,INACTIVE_DAC
//      P135_BURNISH_SUMMARY_COL_WIDTH             //          11,        10,         11,           13,            14,            14,         11,         11,                18,                18,         11,         11,           13,          12
//      P135_BURNISH_SUMMARY_COL_MASK              //           1,         1,          1,            1,             1,             1,          1,          1,                 1,                 1,          1,          1,            1,           1
//      P135_BURNISH_SUMMARY_COL_TYPES             //           N,         N,          N,            N,             N,             N,          N,          N,                 V,                 V,          N,          N,            V,           N
//      P135_BURNISH_SUMMARY_TABLE_TYPE            // S
#define P_SERVO_WRITE_DELAY                  1638  // CALLING_MODULE,HD_PHYS_PSN,HD_LGC_PSN,ID_CYL,WRT_RD_GAP
//      P_SERVO_WRITE_DELAY_COL_WIDTH              //             14,         11,        10,    10,        10
//      P_SERVO_WRITE_DELAY_COL_MASK               //              1,          1,         1,     1,         1
//      P_SERVO_WRITE_DELAY_COL_TYPES              //              N,          N,         N,     N,         N
//      P_SERVO_WRITE_DELAY_TABLE_TYPE             // S
#define P172_ZONED_SERVO_RED                 1639  // HD_PHYS_PSN,DATA_ZONE,SERVO_ZONE,SERVO_ZONE_INDEX,HD_LGC_PSN,ZONE_START_CYL,TRK_NUM,PBA_TRACK,NRZ_FREQ
//      P172_ZONED_SERVO_RED_COL_WIDTH             //          11,        9,        10,              16,        10,            14,      7,        9,       8
//      P172_ZONED_SERVO_RED_COL_MASK              //           0,        0,         0,               0,         0,             0,      0,        0,       0
//      P172_ZONED_SERVO_RED_COL_TYPES             // *
//      P172_ZONED_SERVO_RED_TABLE_TYPE            // S
#define P172_RSVD_ZONED_SERVO_RED            1640  // HD_PHYS_PSN,DATA_ZONE,SERVO_ZONE,SERVO_ZONE_INDEX,HD_LGC_PSN,ZONE_START_CYL,TRK_NUM,PBA_TRACK,NRZ_FREQ
//      P172_RSVD_ZONED_SERVO_RED_COL_WIDTH        //          11,        9,        10,              16,        10,            14,      7,        9,       8
//      P172_RSVD_ZONED_SERVO_RED_COL_MASK         //           0,        0,         0,               0,         0,             0,      0,        0,       0
//      P172_RSVD_ZONED_SERVO_RED_COL_TYPES        // *
//      P172_RSVD_ZONED_SERVO_RED_TABLE_TYPE       // S
#define P033_PES_HD3                         1641  // HD_PHYS_PSN,LGC_TRK_NUM,RETEST_COUNT,HD_LGC_PSN,RRO_3SIG_TRK,NRRO_3SIG_TRK,PES_3SIG_TRK,FAIL_CODE
//      P033_PES_HD3_COL_WIDTH                     //          11,         11,          12,        10,          12,           12,          12,        9
//      P033_PES_HD3_COL_MASK                      //           1,          1,           1,         1,           1,            1,           1,        1
//      P033_PES_HD3_COL_TYPES                     //           N,          N,           N,         N,           N,            N,           N,        N
//      P033_PES_HD3_TABLE_TYPE                    // S
#define P191_DHS                             1642  // HD_PHYS_PSN,DATA_ZONE,POINT_NUM,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,NORM_TRK,HTR_DAC_HIRP,HSC_MSRD_HIRP,SURF_FIT_HIRP,COEF_CALC_HIRP,HIRP_SURF_PRED_INT,HTR_DAC_WHIRP,SVGA_MSRD_WHIRP,HSC_MSRD_WIRP,SURF_FIT_WHIRP,COEF_CALC_WHIRP,WHIRP_SURF_PRED_INT,SVGA_WHIRP_PRED_INT,ACTIVE_HEATER,INACTIVE_HEATER_DAC,NRZ_FREQ_MHZ
//      P191_DHS_COL_WIDTH                         //          11,        9,        9,        10,         11,         11,       8,          12,           13,           13,            14,                18,           13,             15,           13,            14,             15,                 19,                 19,           13,                 19,          12
//      P191_DHS_COL_MASK                          //           1,        1,        1,         1,          1,          1,       1,           1,            1,            1,             1,                 1,            1,              1,            1,             1,              1,                  1,                  1,            1,                  1,           1
//      P191_DHS_COL_TYPES                         //           N,        N,        N,         N,          N,          N,       N,           N,            N,            N,             N,                 N,            N,              N,            N,             N,              N,                  N,                  N,            V,                  N,           N
//      P191_DHS_TABLE_TYPE                        // S
#define P191_HIRP_SURFACE_FIT                1643  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,METHOD,NOM_TRK_NUM,RADIUS,FIT_SLOPE_HIRP,FIT_OFST_HIRP,FIT_SLOPE_WIRP,FIT_OFST_WIRP,FIT_DELTA,MSRD_SLOPE_HIRP,MSRD_OFST_HIRP,MSRD_SLOPE_WIRP,MSRD_OFST_WIRP,MSRD_DELTA,MAX_SURF_PRED_INT,MAX_SVGA_PRED_INT,WRITE_LEN_PCT,ACTIVE_HEATER,INACTIVE_HEATER_DAC
//      P191_HIRP_SURFACE_FIT_COL_WIDTH            //          11,        9,        10,     6,         11,     6,            14,           13,            14,           13,        9,             15,            14,             15,            14,        10,               17,               17,           13,           13,                 19
//      P191_HIRP_SURFACE_FIT_COL_MASK             //           0,        0,         0,     0,          0,     0,             0,            0,             0,            0,        0,              0,             0,              0,             0,         0,                0,                0,            0,            0,                  0
//      P191_HIRP_SURFACE_FIT_COL_TYPES            // *
//      P191_HIRP_SURFACE_FIT_TABLE_TYPE           // M
#define P451_RGSTR_SWEEP_DATA                1644  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RGSTR_ID,TEST_ORDER,RGSTR_VAL,RGSTR_BER,RGSTR_BIE,ITERATIONS,CW_FR,VGAR,TAP6,TAP7,TAP9,TAP10
//      P451_RGSTR_SWEEP_DATA_COL_WIDTH            //          11,        10,        9,       8,        10,        9,        9,        9,        10,    5,   4,   4,   4,   4,    5
//      P451_RGSTR_SWEEP_DATA_COL_MASK             //           1,         1,        1,       1,         1,        1,        1,        1,         1,    1,   1,   1,   1,   1,    1
//      P451_RGSTR_SWEEP_DATA_COL_TYPES            //           N,         N,        N,       V,         N,        N,        N,        N,         N,    N,   N,   N,   N,   N,    N
//      P451_RGSTR_SWEEP_DATA_TABLE_TYPE           // S
#define P451_RGSTR_SWEEP_DATA_EXT            1645  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RGSTR_ID,TEST_ORDER,RGSTR_VAL,RGSTR_BER,RGSTR_BIE,ITERATIONS,CW_FR,VGAR,NLFR,TAP1,TAP2,TAP3,TAP4,TAP5,TAP6,TAP7,TAP8,TAP9,TAP10,TAP11,TAP12,TAP13,TAP14,TAP15,TAP16,AUX_VAL
//      P451_RGSTR_SWEEP_DATA_EXT_COL_WIDTH        //          11,        10,        9,       8,        10,        9,        9,        9,        10,    5,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,    5,    5,    5,    5,    5,    5,    5,      7
//      P451_RGSTR_SWEEP_DATA_EXT_COL_MASK         //           1,         1,        1,       1,         1,        1,        1,        1,         1,    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,    1,    1,    1,    1,    1,    1,    1,      1
//      P451_RGSTR_SWEEP_DATA_EXT_COL_TYPES        //           N,         N,        N,       V,         N,        N,        N,        N,         N,    N,   N,   N,   N,   N,   N,   N,   N,   N,   N,   N,   N,    N,    N,    N,    N,    N,    N,    N,      N
//      P451_RGSTR_SWEEP_DATA_EXT_TABLE_TYPE       // S
#define P451_READ_OPTI_RESULTS               1646  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,RGSTR_ID,TEST_ORDER,OPTI_VAL,OPTI_BER,OPTI_BIE,OPTI_ITER,PRIOR_OPTI_VAL,PRIOR_OPTI_BER,CLEARANCE_PCT,SQZ_PCT,PICK_TYPE
//      P451_READ_OPTI_RESULTS_COL_WIDTH           //          11,        10,        9,      7,       8,        10,       8,       8,       8,        9,            14,            14,           13,      7,        9
//      P451_READ_OPTI_RESULTS_COL_MASK            //           1,         1,        1,      1,       1,         1,       1,       1,       1,        1,             1,             1,            1,      1,        1
//      P451_READ_OPTI_RESULTS_COL_TYPES           //           N,         N,        N,      N,       V,         N,       N,       N,       N,        N,             N,             N,            N,      N,        N
//      P451_READ_OPTI_RESULTS_TABLE_TYPE          // S
#define P211_VBAR_CUTOFF_RESULTS             1647  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ZONE_FREQ,FNL_CTF_PCT,ZFR0,ZFR1,CTF_VAL1,RNG_VAL1,CTF_FREQ1,ZFR2,CTF_VAL2,RNG_VAL2,CTF_FREQ2,ZFR3,CTF_VAL3,RNG_VAL3,CTF_FREQ3,ZFR4,CTF_VAL4,RNG_VAL4,CTF_FREQ4,ZFR5,CTF_VAL5,RNG_VAL5,CTF_FREQ5,ZFR6,CTF_VAL6,RNG_VAL6,CTF_FREQ6
//      P211_VBAR_CUTOFF_RESULTS_COL_WIDTH         //          11,        9,        10,        9,         11,   4,   4,       8,       8,        9,   4,       8,       8,        9,   4,       8,       8,        9,   4,       8,       8,        9,   4,       8,       8,        9,   4,       8,       8,        9
//      P211_VBAR_CUTOFF_RESULTS_COL_MASK          //           0,        0,         0,        0,          0,   0,   0,       0,       0,        0,   0,       0,       0,        0,   0,       0,       0,        0,   0,       0,       0,        0,   0,       0,       0,        0,   0,       0,       0,        0
//      P211_VBAR_CUTOFF_RESULTS_COL_TYPES         // *
//      P211_VBAR_CUTOFF_RESULTS_TABLE_TYPE        // S
#define P280_SCOPY_DETCR_GAIN_2              1648  // HD_PHYS_PSN,HD_LGC_PSN,AFH_ZONE,DETCR_GAIN,VTH_RANGE,ADD_3DB,TA_VTH
//      P280_SCOPY_DETCR_GAIN_2_COL_WIDTH          //          11,        10,       8,        10,        9,      7,     6
//      P280_SCOPY_DETCR_GAIN_2_COL_MASK           //           0,         0,       0,         0,        0,      0,     0
//      P280_SCOPY_DETCR_GAIN_2_COL_TYPES          // *
//      P280_SCOPY_DETCR_GAIN_2_TABLE_TYPE         // S
#define P095_LIWP_HEAD_FIT                   1649  // HD_PHYS_PSN,HD_LGC_PSN,STATUS_FLG,LIWP_RMSE,LIWP_R_SQR,LIWP_RMSD,LIWP_COEF_00,LIWP_COEF_01,LIWP_COEF_02,LIWP_COEF_23,LIWP_COEF_24,LIWP_COEF_25,LIWP_COEF_26,LIWP_COEF_27,LIWP_TEMP_COEF_1,LIWP_TEMP_COEF_2,LIWP_TEMP_COEF_3,EXPLAIN_STATUS
//      P095_LIWP_HEAD_FIT_COL_WIDTH               //          11,        10,        21,        9,        10,        9,          12,          12,          12,          12,          12,          12,          12,          12,              16,              16,              16,            36
//      P095_LIWP_HEAD_FIT_COL_MASK                //           1,         1,         1,        1,         1,        1,           1,           1,           1,           1,           1,           1,           1,           1,               1,               1,               1,             1
//      P095_LIWP_HEAD_FIT_COL_TYPES               //           N,         N,         V,        N,         N,        N,           N,           N,           N,           N,           N,           N,           N,           N,               N,               N,               N,             V
//      P095_LIWP_HEAD_FIT_TABLE_TYPE              // S
#define P095_DEBUG_LIWP_TRK_VS_HD            1650  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,I_EFFECTIVE,TRACK_FIT_DAC,HEAD_FIT_DAC
//      P095_DEBUG_LIWP_TRK_VS_HD_COL_WIDTH        //          11,        10,        9,      8,         11,           13,          12
//      P095_DEBUG_LIWP_TRK_VS_HD_COL_MASK         //           0,         0,        0,      0,          0,            0,           0
//      P095_DEBUG_LIWP_TRK_VS_HD_COL_TYPES        // *
//      P095_DEBUG_LIWP_TRK_VS_HD_TABLE_TYPE       // S
#define P267_HSC_AMP_BUCKET                  1651  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CYLINDER,RD_OFST,HSC_AMP,PATTERN
//      P267_HSC_AMP_BUCKET_COL_WIDTH              //          11,        9,        10,       8,      7,      7,      7
//      P267_HSC_AMP_BUCKET_COL_MASK               //           0,        0,         0,       0,      0,      0,      0
//      P267_HSC_AMP_BUCKET_COL_TYPES              // *
//      P267_HSC_AMP_BUCKET_TABLE_TYPE             // S
#define P267_RESM_DATA                       1652  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CYLINDER,SHINGLE_DIR,ADJ_WRT,HSC_2T_AMP,HSC_6T_AMP,HSC_RATIO
//      P267_RESM_DATA_COL_WIDTH                   //          11,        9,        10,       8,         11,      7,        10,        10,        9
//      P267_RESM_DATA_COL_MASK                    //           0,        0,         0,       0,          0,      0,         0,         0,        0
//      P267_RESM_DATA_COL_TYPES                   // *
//      P267_RESM_DATA_TABLE_TYPE                  // S
#define P302_BACKEND_TARGET_DATA             1653  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,SECTOR,BIE0,ITR0,BIE1,ITR1,VGAR,BE_TRG0,BE_TRG1,BE_TRG2,BE_TAP5,BE_TAP6,BE_TAP7,BE_TAP8,BE_TAP9,BE_TAP10,BE_TAP11,READER
//      P302_BACKEND_TARGET_DATA_COL_WIDTH         //          11,        10,        9,      7,     6,   5,   5,   5,   5,   5,      7,      7,      8,      8,      8,      8,      8,      8,       8,       8,     6
//      P302_BACKEND_TARGET_DATA_COL_MASK          //           0,         0,        0,      0,     0,   0,   0,   0,   0,   0,      0,      0,      0,      0,      0,      0,      0,      0,       0,       0,     0
//      P302_BACKEND_TARGET_DATA_COL_TYPES         // *
//      P302_BACKEND_TARGET_DATA_TABLE_TYPE        // S
#define P302_BACKEND_TAP_DATA                1654  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,SECTOR,BIE0,ITR0,BIE1,ITR1,VGAR,BE_TAP3,BE_TAP4,BE_TAP5,BE_TAP6,BE_TAP7,BE_TAP8,BE_TAP9,BE_TAP10,BE_TAP11,BE_TAP12,BE_TAP13
//      P302_BACKEND_TAP_DATA_COL_WIDTH            //          11,        10,        9,      7,     6,   5,   5,   5,   5,   5,      8,      8,      8,      8,      8,      8,      8,       8,       8,       8,       8
//      P302_BACKEND_TAP_DATA_COL_MASK             //           0,         0,        0,      0,     0,   0,   0,   0,   0,   0,      0,      0,      0,      0,      0,      0,      0,       0,       0,       0,       0
//      P302_BACKEND_TAP_DATA_COL_TYPES            // *
//      P302_BACKEND_TAP_DATA_TABLE_TYPE           // S
#define P381_RES_SCREEN                      1655  // HD_PHYS_PSN,HD_LGC_PSN,CURR_TRK,TARGET_TRK,FREQUENCY,WORST_MAG
//      P381_RES_SCREEN_COL_WIDTH                  //          11,        10,       8,        10,        9,        9
//      P381_RES_SCREEN_COL_MASK                   //           0,         0,       0,         0,        0,        0
//      P381_RES_SCREEN_COL_TYPES                  // *
//      P381_RES_SCREEN_TABLE_TYPE                 // S
#define P381_HEAD_SUMMARY                    1656  // HD_PHYS_PSN,HD_LGC_PSN,WORST_TRK,WORST_MAG,MEAN_MAG,SIGMA,OUTBOUND
//      P381_HEAD_SUMMARY_COL_WIDTH                //          11,        10,        9,        9,       8,    5,       8
//      P381_HEAD_SUMMARY_COL_MASK                 //           1,         1,        1,        1,       1,    1,       1
//      P381_HEAD_SUMMARY_COL_TYPES                //           N,         N,        N,        N,       N,    N,       N
//      P381_HEAD_SUMMARY_TABLE_TYPE               // S
#define P299_DOS_PICK_2                      1657  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,CYL_OFST,TRK_TYPE,ERASE_TYPE,COEF_2,COEF_1,COEF_0,R_SQRD,FAIL_WRT_CNT,TGT_WRT_CNT,DOS_CNT,DOS_PICK,SER_FAIL,DSTE_FAIL
//      P299_DOS_PICK_2_COL_WIDTH                  //          11,        10,        9,       8,       8,        10,     8,     8,     8,     7,          12,         11,      7,       8,       8,        9
//      P299_DOS_PICK_2_COL_MASK                   //           1,         1,        1,       1,       1,         1,     1,     1,     1,     1,           1,          1,      1,       1,       1,        1
//      P299_DOS_PICK_2_COL_TYPES                  //           N,         N,        N,       N,       V,         V,     N,     N,     N,     N,           N,          N,      N,       N,       N,        N
//      P299_DOS_PICK_2_TABLE_TYPE                 // S
#define P322_SIF_CAL_INPUT_INFO              1658  // OD_PHY_TRACK,ID_PHY_TRACK,OD_RADIUS,ID_RADIUS,MAX_W2R_GAP
//      P322_SIF_CAL_INPUT_INFO_COL_WIDTH          //           12,          12,        9,        9,         11
//      P322_SIF_CAL_INPUT_INFO_COL_MASK           //            0,           0,        0,        0,          0
//      P322_SIF_CAL_INPUT_INFO_COL_TYPES          // *
//      P322_SIF_CAL_INPUT_INFO_TABLE_TYPE         // S
#define P251_DIBIT_CBD_MEASURED              1659  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TEST_TRACK,CBD_MEASURED,CBD_AVERAGE
//      P251_DIBIT_CBD_MEASURED_COL_WIDTH          //          11,        10,        9,        10,          12,         11
//      P251_DIBIT_CBD_MEASURED_COL_MASK           //           0,         0,        0,         0,           0,          0
//      P251_DIBIT_CBD_MEASURED_COL_TYPES          // *
//      P251_DIBIT_CBD_MEASURED_TABLE_TYPE         // S
#define P172_MISC_INFO                       1660  // DESCRIPTION,VALUE
//      P172_MISC_INFO_COL_WIDTH                   //          25,    8
//      P172_MISC_INFO_COL_MASK                    //           0,    0
//      P172_MISC_INFO_COL_TYPES                   // *
//      P172_MISC_INFO_TABLE_TYPE                  // S
#define P229_BCI_TRACK_RESULT2               1661  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,MAX_WRT_NUM,MAX_NUM_RD,MAX_QNTL_CW_SOVA1,MAX_MAX_ITRTN,VAR_MEAN_ITRTN,VAR_MEAN_CW_SOVA1,VAR_QNTL_ITRTN
//      P229_BCI_TRACK_RESULT2_COL_WIDTH           //          11,        10,        9,      7,         11,        10,               17,           13,            14,               17,            14
//      P229_BCI_TRACK_RESULT2_COL_MASK            //           1,         1,        1,      1,          1,         1,                1,            1,             1,                1,             1
//      P229_BCI_TRACK_RESULT2_COL_TYPES           //           N,         N,        N,      N,          N,         N,                N,            N,             N,                N,             N
//      P229_BCI_TRACK_RESULT2_TABLE_TYPE          // S
#define P172_ZONED_SERVO2                    1662  // HD_PHYS_PSN,DATA_ZONE,SERVO_ZONE,HD_LGC_PSN,ZONE_START_CYL,TRK_NUM,PBA_TRACK,NRZ_FREQ,OD_RADIUS,ID_RADIUS,OD_KFCI,ID_KFCI,MD_KFCI
//      P172_ZONED_SERVO2_COL_WIDTH                //          11,        9,        10,        10,            14,      7,        9,       8,        9,        9,      9,      9,      9
//      P172_ZONED_SERVO2_COL_MASK                 //           1,        1,         1,         1,             1,      1,        1,       1,        1,        1,      1,      1,      1
//      P172_ZONED_SERVO2_COL_TYPES                //           N,        N,         N,         N,             N,      N,        N,       N,        N,        N,      N,      N,      N
//      P172_ZONED_SERVO2_TABLE_TYPE               // S
#define P172_RSVD_ZONED_SERVO2               1663  // HD_PHYS_PSN,DATA_ZONE,SERVO_ZONE,HD_LGC_PSN,ZONE_START_CYL,TRK_NUM,PBA_TRACK,NRZ_FREQ,OD_RADIUS,ID_RADIUS,OD_KFCI,ID_KFCI,MD_KFCI
//      P172_RSVD_ZONED_SERVO2_COL_WIDTH           //          11,        9,        10,        10,            14,      7,        9,       8,        9,        9,      9,      9,      9
//      P172_RSVD_ZONED_SERVO2_COL_MASK            //           0,        0,         0,         0,             0,      0,        0,       0,        0,        0,      0,      0,      0
//      P172_RSVD_ZONED_SERVO2_COL_TYPES           // *
//      P172_RSVD_ZONED_SERVO2_TABLE_TYPE          // S
#define P303_DOS_MARGIN                      1664  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,DATA_CYL,CYL_OFST,DOS_THRSHLD,BSLN_BER,BSLN_CWFR,SCAN_CNT,SCAN_BER,SCAN_CWFR,FAIL_CNT,FAIL_BER,FAIL_CWFR
//      P303_DOS_MARGIN_COL_WIDTH                  //          11,        10,        9,       8,       8,         11,       8,        9,       8,       8,        9,       8,       8,        9
//      P303_DOS_MARGIN_COL_MASK                   //           1,         1,        1,       1,       1,          1,       1,        1,       1,       1,        1,       1,       1,        1
//      P303_DOS_MARGIN_COL_TYPES                  //           N,         N,        N,       N,       N,          N,       N,        N,       N,       N,        N,       N,       N,        N
//      P303_DOS_MARGIN_TABLE_TYPE                 // S
#define P285_CS_SUMMARY                      1665  // MAX_CYL_CS,MAX_CYL_HD,MIN_CYL_CS,MIN_CYL_HD,MAX_MIN_DELTA,ALLOWABLE_DELTA
//      P285_CS_SUMMARY_COL_WIDTH                  //         12,        10,        12,        10,           13,             15
//      P285_CS_SUMMARY_COL_MASK                   //          0,         0,         0,         0,            0,              0
//      P285_CS_SUMMARY_COL_TYPES                  // *
//      P285_CS_SUMMARY_TABLE_TYPE                 // S
#define P285_IDLE1_SUMMARY                   1666  // HD_PHYS_PSN,HD_LGC_PSN,ID_DETECT_CYL,MIN_TRK_ID,MAX_TRK_ID
//      P285_IDLE1_SUMMARY_COL_WIDTH               //          11,        10,           13,        10,        10
//      P285_IDLE1_SUMMARY_COL_MASK                //           0,         0,            0,         0,         0
//      P285_IDLE1_SUMMARY_COL_TYPES               // *
//      P285_IDLE1_SUMMARY_TABLE_TYPE              // S
#define P073_OFFSET_RETRY_DATA               1667  // HD_PHYS_PSN,HD_LGC_PSN,RETRY_CNT,ZONE_IDX,STATUS,SAVED_STATUS
//      P073_OFFSET_RETRY_DATA_COL_WIDTH           //          11,        10,        9,       8,     6,          12
//      P073_OFFSET_RETRY_DATA_COL_MASK            //           0,         0,        0,       0,     0,           0
//      P073_OFFSET_RETRY_DATA_COL_TYPES           // *
//      P073_OFFSET_RETRY_DATA_TABLE_TYPE          // S
#define P285_STROKE_SUMMARY                  1668  // MAX_STROKE,MAX_STROKE_HD,MIN_STROKE,MIN_STROKE_HD,MAX_MIN_DELTA,ALLOWABLE_DELTA
//      P285_STROKE_SUMMARY_COL_WIDTH              //         10,           13,        10,           13,           13,             15
//      P285_STROKE_SUMMARY_COL_MASK               //          0,            0,         0,            0,            0,              0
//      P285_STROKE_SUMMARY_COL_TYPES              // *
//      P285_STROKE_SUMMARY_TABLE_TYPE             // S
#define P240_SECTOR_GROUP_2                  1669  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,CYL_OFS,T_LEVEL,DEGAUSS,SCT0_BER,SCT0_SER,SCT0_BITS_READ,SCT1_BER,SCT1_SER,SCT1_BITS_READ,SCT2_BER,SCT2_SER,SCT2_BITS_READ,SCT3_BER,SCT3_SER,SCT3_BITS_READ
//      P240_SECTOR_GROUP_2_COL_WIDTH              //          11,        10,      7,      7,      7,      7,       8,       8,            14,       8,       8,            14,       8,       8,            14,       8,       8,            14
//      P240_SECTOR_GROUP_2_COL_MASK               //           0,         0,      0,      0,      0,      0,       0,       0,             0,       0,       0,             0,       0,       0,             0,       0,       0,             0
//      P240_SECTOR_GROUP_2_COL_TYPES              // *
//      P240_SECTOR_GROUP_2_TABLE_TYPE             // S
#define P240_SEAW_ERROR_RATE                 1670  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZN,TRK_NUM,CYL_OFS,T_LEVEL,INTRLV,NUM_WRITES,DEGAUSS,BITS_IN_ERR,BITS_READ,BASELINE_BER,EAW_BER,DELTA_BER,DELTA_RATIO_BER,BASELINE_SER,EAW_SER,DELTA_SER,FAIL_CODE,BASELINE_VGAS,BASELINE_VGAS_STDEV,EAW_VGAS,EAW_VGAS_STDEV,DELTA_VGAS,DELTA_VGAS_STDEV,MAX_WEDGE,MAX_WEDGE_DELTA_VGAS
//      P240_SEAW_ERROR_RATE_COL_WIDTH             //          11,        10,      7,      7,      7,      7,     6,        10,      7,         11,        9,          12,      7,        9,             15,          12,      7,        9,        9,           13,                 19,       8,            14,        10,              16,        9,                  20
//      P240_SEAW_ERROR_RATE_COL_MASK              //           0,         0,      0,      0,      0,      0,     0,         0,      0,          0,        0,           0,      0,        0,              0,           0,      0,        0,        0,            0,                  0,       0,             0,         0,               0,        0,                   0
//      P240_SEAW_ERROR_RATE_COL_TYPES             // *
//      P240_SEAW_ERROR_RATE_TABLE_TYPE            // S
#define P094_LIVE_SENSOR_PARAMS              1671  // HD_PHYS_PSN,ZONE,HD_LGC_PSN,PREAMP_ID,PREAMP_REV,TCR_BIAS,TCR_GAIN,TCR_THRESHOLD,TCR_POLARITY,TCR_HP,TCR_LP,TCR_VTH_RANGE,TCR_COMPSEL,TCR_CONTACT_COUNT
//      P094_LIVE_SENSOR_PARAMS_COL_WIDTH          //          11,   4,        10,        9,        10,       8,       8,           13,          12,     6,     6,           13,         11,               17
//      P094_LIVE_SENSOR_PARAMS_COL_MASK           //           0,   0,         0,        0,         0,       0,       0,            0,           0,     0,     0,            0,          0,                0
//      P094_LIVE_SENSOR_PARAMS_COL_TYPES          // *
//      P094_LIVE_SENSOR_PARAMS_TABLE_TYPE         // S
#define P220_BENCHMARK_LOG_BER               1672  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZN,BASELINE,OPTI_BASELINE,STRESSED,OPTI_STRESSED,STRESSED_WP,OPTI_STRESSED_WP,STRESSED_ITER_LD_CNT,EVENT_FLAG,TEMP_CELSIUS
//      P220_BENCHMARK_LOG_BER_COL_WIDTH           //          11,        10,      7,       8,           13,       8,           13,         11,              16,                  20,        10,          12
//      P220_BENCHMARK_LOG_BER_COL_MASK            //           0,         0,      0,       0,            0,       0,            0,          0,               0,                   0,         0,           0
//      P220_BENCHMARK_LOG_BER_COL_TYPES           // *
//      P220_BENCHMARK_LOG_BER_TABLE_TYPE          // S
#define P135_COMBO_MEASURE_DATA2             1673  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,ACTIVE_HEATER,HEATER_MODE,CNTCT_TEST_STAGE,HTR_DAC_STEP_SIZE,HTR_DAC,DELTA_DAC,INACTIVE_HEATER_DAC,CONTACT,TRIP1,TRIP2,TRIP3,TRIP4,TRIP5,TRIP6,LIMIT1,LIMIT2,LIMIT3,LIMIT4,LIMIT5,LIMIT6,MEASURED1,MEASURED2,MEASURED3,MEASURED4,MEASURED5,MEASURED6,SNR1,SNR2,SNR3,SNR4,SNR5,SNR6,AUX_DATA1,AUX_DATA2,AUX_DATA3,AUX_DATA4,AUX_DATA5,AUX_DATA6,TEST_ITERATION,DETCR_THRESHOLD,DETCR_FAULT_COUNT,DC_DETCR_CANCEL
//      P135_COMBO_MEASURE_DATA2_COL_WIDTH         //          11,        10,        9,      7,           13,         11,              16,               17,      7,        9,                 19,      7,    5,    5,    5,    5,    5,    5,     7,     7,     7,     7,     7,     7,       10,       10,       10,       10,       10,       10,   8,   8,   8,   8,   8,   8,        9,        9,        9,        9,        9,        9,            14,             15,               17,             15
//      P135_COMBO_MEASURE_DATA2_COL_MASK          //           1,         1,        1,      1,            1,          1,               1,                1,      1,        1,                  1,      1,    1,    1,    1,    1,    1,    1,     1,     1,     1,     1,     1,     1,        1,        1,        1,        1,        1,        1,   1,   1,   1,   1,   1,   1,        1,        1,        1,        1,        1,        1,             1,              1,                1,              1
//      P135_COMBO_MEASURE_DATA2_COL_TYPES         //           N,         N,        N,      N,            V,          V,               V,                V,      N,        N,                  N,      V,    V,    V,    V,    V,    V,    V,     N,     N,     N,     N,     N,     N,        N,        N,        N,        N,        N,        N,   N,   N,   N,   N,   N,   N,        N,        N,        N,        N,        N,        N,             N,              N,                N,              N
//      P135_COMBO_MEASURE_DATA2_TABLE_TYPE        // S
#define P135_COMBO_DATA_LEGEND               1674  // SENSOR_NUM,SENSOR_METHOD,SENSOR_METRIC,SENSOR_AVG_TYPE
//      P135_COMBO_DATA_LEGEND_COL_WIDTH           //         10,           13,           13,             15
//      P135_COMBO_DATA_LEGEND_COL_MASK            //          0,            0,            0,              0
//      P135_COMBO_DATA_LEGEND_COL_TYPES           // *
//      P135_COMBO_DATA_LEGEND_TABLE_TYPE          // S
#define P172_ZB_INFO                         1675  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ZN_START_CYL,TRK_NUM
//      P172_ZB_INFO_COL_WIDTH                     //          11,        9,        10,          12,      7
//      P172_ZB_INFO_COL_MASK                      //           0,        0,         0,           0,      0
//      P172_ZB_INFO_COL_TYPES                     // *
//      P172_ZB_INFO_TABLE_TYPE                    // S
#define P243_CW_EXCEEDED_ITERTN              1676  // TRK,HD,CW_INDX,ITERTN
//      P243_CW_EXCEEDED_ITERTN_COL_WIDTH          //   7, 2,      7,     6
//      P243_CW_EXCEEDED_ITERTN_COL_MASK           //   0, 0,      0,     0
//      P243_CW_EXCEEDED_ITERTN_COL_TYPES          // *
//      P243_CW_EXCEEDED_ITERTN_TABLE_TYPE         // S
#define P243_UNCNVRGD_CW                     1677  // HD_PHYS_PSN,HD_LGC_PSN,TRK,CW_INDX,NUM_RDS_CNVRGD,ITERTN
//      P243_UNCNVRGD_CW_COL_WIDTH                 //          11,        10,  7,      7,            14,     6
//      P243_UNCNVRGD_CW_COL_MASK                  //           0,         0,  0,      0,             0,     0
//      P243_UNCNVRGD_CW_COL_TYPES                 // *
//      P243_UNCNVRGD_CW_TABLE_TYPE                // S
#define P243_ORIG_ATI_SCALAR                 1678  // HD,ATI_SCLR
//      P243_ORIG_ATI_SCALAR_COL_WIDTH             //  2,       8
//      P243_ORIG_ATI_SCALAR_COL_MASK              //  0,       0
//      P243_ORIG_ATI_SCALAR_COL_TYPES             // *
//      P243_ORIG_ATI_SCALAR_TABLE_TYPE            // S
#define P243_FINAL_ATI_SCALAR                1679  // HD,ATI_SCLR
//      P243_FINAL_ATI_SCALAR_COL_WIDTH            //  2,       8
//      P243_FINAL_ATI_SCALAR_COL_MASK             //  0,       0
//      P243_FINAL_ATI_SCALAR_COL_TYPES            // *
//      P243_FINAL_ATI_SCALAR_TABLE_TYPE           // S
#define P109_PC_FILE_CYL_RANGE               1680  // HD_PHYS_PSN,HD_LGC_PSN,START_CYL,END_CYL
//      P109_PC_FILE_CYL_RANGE_COL_WIDTH           //          11,        10,        9,      7
//      P109_PC_FILE_CYL_RANGE_COL_MASK            //           0,         0,        0,      0
//      P109_PC_FILE_CYL_RANGE_COL_TYPES           // *
//      P109_PC_FILE_CYL_RANGE_TABLE_TYPE          // S
#define P109_SMART_ID_CYL_RANGE              1681  // HD_PHYS_PSN,HD_LGC_PSN,START_CYL,END_CYL
//      P109_SMART_ID_CYL_RANGE_COL_WIDTH          //          11,        10,        9,      7
//      P109_SMART_ID_CYL_RANGE_COL_MASK           //           0,         0,        0,      0
//      P109_SMART_ID_CYL_RANGE_COL_TYPES          // *
//      P109_SMART_ID_CYL_RANGE_TABLE_TYPE         // S
#define P030_SWOT_DATA                       1682  // HD_PHYS_PSN,HD_LGC_PSN,SWOT_THRSH,SWOT_GAIN,SWOT_ENABLED
//      P030_SWOT_DATA_COL_WIDTH                   //          11,        10,        10,        9,          12
//      P030_SWOT_DATA_COL_MASK                    //           0,         0,         0,        0,           0
//      P030_SWOT_DATA_COL_TYPES                   // *
//      P030_SWOT_DATA_TABLE_TYPE                  // S
#define P126_SRVO_LOG_PHY                    1683  // HD_LGC_PSN,DATA_ZONE,PHY_CYL_1,NOM_CYL_1,NOM_CYL_2,PHY_CYL_2,LOG_CYL_2,HD_PHYS_PSN
//      P126_SRVO_LOG_PHY_COL_WIDTH                //         10,        9,        9,        9,        9,        9,        9,         10
//      P126_SRVO_LOG_PHY_COL_MASK                 //          0,        0,        0,        0,        0,        0,        0,          0
//      P126_SRVO_LOG_PHY_COL_TYPES                // *
//      P126_SRVO_LOG_PHY_TABLE_TYPE               // S
#define P126_VERIFY_SRVO_LOG_PHY             1684  // HD_LGC_PSN,DATA_ZONE,NOM_CYL_1,PHY_CYL_1,LOG_CYL_1,HD_PHYS_PSN
//      P126_VERIFY_SRVO_LOG_PHY_COL_WIDTH         //         10,        9,        9,        9,        9,         10
//      P126_VERIFY_SRVO_LOG_PHY_COL_MASK          //          0,        0,        0,        0,        0,          0
//      P126_VERIFY_SRVO_LOG_PHY_COL_TYPES         // *
//      P126_VERIFY_SRVO_LOG_PHY_TABLE_TYPE        // S
#define P255_NRB_MARVELL                     1685  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,NRB_STATE,NRB_C0,NRB_C1,NRB_C3
//      P255_NRB_MARVELL_COL_WIDTH                 //          11,        10,   4,        9,     6,     6,     6
//      P255_NRB_MARVELL_COL_MASK                  //           0,         0,   0,        0,     0,     0,     0
//      P255_NRB_MARVELL_COL_TYPES                 // *
//      P255_NRB_MARVELL_TABLE_TYPE                // S
#define P094_TA_THRSHLD_SUMMARY_3            1686  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,POS_BSLN_THRSHLD_DAC,NEG_BSLN_THRSHLD_DAC,POS_CALC_THRSHLD_DAC,NEG_CALC_THRSHLD_DAC
//      P094_TA_THRSHLD_SUMMARY_3_COL_WIDTH        //          11,        10,        9,                  20,                  20,                  20,                  20
//      P094_TA_THRSHLD_SUMMARY_3_COL_MASK         //           0,         0,        0,                   0,                   0,                   0,                   0
//      P094_TA_THRSHLD_SUMMARY_3_COL_TYPES        // *
//      P094_TA_THRSHLD_SUMMARY_3_TABLE_TYPE       // S
#define P152_ENHNCD_PEAK_SUMMARY             1687  // HD_PHYS_PSN,HD_LGC_PSN,START_FREQ,END_FREQ,PEAK_RANK,PEAK_MAGNITUDE,PEAK_FREQ,GAIN_LIMIT
//      P152_ENHNCD_PEAK_SUMMARY_COL_WIDTH         //          11,        10,        10,       8,        9,            14,        9,        10
//      P152_ENHNCD_PEAK_SUMMARY_COL_MASK          //           1,         1,         1,       1,        1,             1,        1,         1
//      P152_ENHNCD_PEAK_SUMMARY_COL_TYPES         //           N,         N,         N,       N,        N,             N,        N,         N
//      P152_ENHNCD_PEAK_SUMMARY_TABLE_TYPE        // S
#define P073_OFFSET_LIMIT_FAIL               1688  // HD_PHYS_PSN,HD_LGC_PSN,MEAS_VAL,LIMIT_VAL,ITER,FROM_ZN,TO_ZN,STATUS
//      P073_OFFSET_LIMIT_FAIL_COL_WIDTH           //          11,         9,       9,        9,   4,      7,    5,     6
//      P073_OFFSET_LIMIT_FAIL_COL_MASK            //           0,         0,       0,        0,   0,      0,    0,     0
//      P073_OFFSET_LIMIT_FAIL_COL_TYPES           // *
//      P073_OFFSET_LIMIT_FAIL_TABLE_TYPE          // S
#define P063_ERR_RATE_DETAIL                 1689  // HD_PHYS_PSN,HD_LGC_PSN,TRK,SECT_PER_TRK,BITS_PER_SECT,RD,SECTOR,BIE,SECT_ER
//      P063_ERR_RATE_DETAIL_COL_WIDTH             //          11,        10,  8,          12,           13, 6,     6,  5,     10
//      P063_ERR_RATE_DETAIL_COL_MASK              //           0,         0,  0,           0,            0, 0,     0,  0,      0
//      P063_ERR_RATE_DETAIL_COL_TYPES             // *
//      P063_ERR_RATE_DETAIL_TABLE_TYPE            // S
#define P063_VGA_DETAIL                      1690  // HD_PHYS_PSN,HD_LGC_PSN,TRK,SRVO_FRAMES_PER_TRK,RD,SRVO_FRAME,VGA
//      P063_VGA_DETAIL_COL_WIDTH                  //          11,        10,  8,                 19, 6,        10,  8
//      P063_VGA_DETAIL_COL_MASK                   //           0,         0,  0,                  0, 0,         0,  0
//      P063_VGA_DETAIL_COL_TYPES                  // *
//      P063_VGA_DETAIL_TABLE_TYPE                 // S
#define P063_BAD_AVG_VGA                     1691  // HD_PHYS_PSN,HD_LGC_PSN,TRK,SECT,AVG_SECT_VGA
//      P063_BAD_AVG_VGA_COL_WIDTH                 //          11,        10,  8,   4,          12
//      P063_BAD_AVG_VGA_COL_MASK                  //           0,         0,  0,   0,           0
//      P063_BAD_AVG_VGA_COL_TYPES                 // *
//      P063_BAD_AVG_VGA_TABLE_TYPE                // S
#define P063_BAD_AVG_BER                     1692  // HD_PHYS_PSN,HD_LGC_PSN,TRK,SECT,AVG_SECT_BER
//      P063_BAD_AVG_BER_COL_WIDTH                 //          11,        10,  8,   4,          12
//      P063_BAD_AVG_BER_COL_MASK                  //           0,         0,  0,   0,           0
//      P063_BAD_AVG_BER_COL_TYPES                 // *
//      P063_BAD_AVG_BER_TABLE_TYPE                // S
#define P251_SUBPROC_SUM_AGERE2              1693  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,OPTI_ORDER,TARG_T0,TARG_T1,TARG_T2,TARG_T3,TARG_T4,FIT_OR_BER_MODE,FIT_OR_BER_VALUE,RGSTR_ID_1,RGSTR_ID_1_VAL,RGSTR_ID_2,RGSTR_ID_2_VAL,RGSTR_ID_3,RGSTR_ID_3_VAL,RGSTR_ID_4,RGSTR_ID_4_VAL,RGSTR_ID_5,RGSTR_ID_5_VAL,RGSTR_ID_6,RGSTR_ID_6_VAL
//      P251_SUBPROC_SUM_AGERE2_COL_WIDTH          //          11,        9,        10,        10,      7,      7,      7,      7,      7,             15,              16,        10,            14,        10,            14,        10,            14,        10,            14,        10,            14,        10,            14
//      P251_SUBPROC_SUM_AGERE2_COL_MASK           //           0,        0,         0,         0,      0,      0,      0,      0,      0,              0,               0,         0,             0,         0,             0,         0,             0,         0,             0,         0,             0,         0,             0
//      P251_SUBPROC_SUM_AGERE2_COL_TYPES          // *
//      P251_SUBPROC_SUM_AGERE2_TABLE_TYPE         // S
#define P180_RADIX_2_FFT_INFO                1694  // FFT_LENGTH,REVS_TO_COLLECT
//      P180_RADIX_2_FFT_INFO_COL_WIDTH            //         10,             15
//      P180_RADIX_2_FFT_INFO_COL_MASK             //          0,              0
//      P180_RADIX_2_FFT_INFO_COL_TYPES            // *
//      P180_RADIX_2_FFT_INFO_TABLE_TYPE           // S
#define P213_BPI                             1695  // HD,ZN,BPI
//      P213_BPI_COL_WIDTH                         //  2, 4,  3
//      P213_BPI_COL_MASK                          //  0, 0,  0
//      P213_BPI_COL_TYPES                         // *
//      P213_BPI_TABLE_TYPE                        // S
#define P213_ORIG_DOS_FRAME                  1696  // HD_PHYS_PSN,HD_LGC_PSN,STE_THRESHOLD,STE_RANGE,ATI_THRESHOLD,OD_WRITE_CURRENT,OD_OVERSHOOT_AMPLITUDE,MD_WRITE_CURRENT,MD_OVERSHOOT_AMPLITUDE,ID_WRITE_CURRENT,ID_OVERSHOOT_AMPLITUDE,ACTUAL_STE_THRESHOLD,STE_RANGE2
//      P213_ORIG_DOS_FRAME_COL_WIDTH              //          11,        10,           13,        9,           13,              16,                    22,              16,                    22,              16,                    22,                  20,        10
//      P213_ORIG_DOS_FRAME_COL_MASK               //           0,         0,            0,        0,            0,               0,                     0,               0,                     0,               0,                     0,                   0,         0
//      P213_ORIG_DOS_FRAME_COL_TYPES              // *
//      P213_ORIG_DOS_FRAME_TABLE_TYPE             // S
#define P213_MSG                             1697  // *
//      P213_MSG_COL_WIDTH                         // 0
//      P213_MSG_COL_MASK                          // 0
//      P213_MSG_COL_TYPES                         // *
//      P213_MSG_TABLE_TYPE                        // S
#define P213_WR_RETRY                        1698  // WR_CNT,RETRY
//      P213_WR_RETRY_COL_WIDTH                    //     10,    5
//      P213_WR_RETRY_COL_MASK                     //      0,    0
//      P213_WR_RETRY_COL_TYPES                    // *
//      P213_WR_RETRY_TABLE_TYPE                   // S
#define P213_RETRY_AWAY_FROM                 1699  // HD_PHYS_PSN,HD_LGC_PSN,WRITE_TRACK,FAIL_CODE
//      P213_RETRY_AWAY_FROM_COL_WIDTH             //          11,        10,         11,        9
//      P213_RETRY_AWAY_FROM_COL_MASK              //           0,         0,          0,        0
//      P213_RETRY_AWAY_FROM_COL_TYPES             // *
//      P213_RETRY_AWAY_FROM_TABLE_TYPE            // S
#define P000_DUMP_PREAMP                     1700  // REGISTER,_,0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F
//      P000_DUMP_PREAMP_COL_WIDTH                 //        8,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5
//      P000_DUMP_PREAMP_COL_MASK                  //        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
//      P000_DUMP_PREAMP_COL_TYPES                 // *
//      P000_DUMP_PREAMP_TABLE_TYPE                // S
#define P229_CW_DATA                         1701  // HD,TRK,CW,BITS_PER_CW,RD,BIE,ITR,NUM_RD_CNVRGD,CW_SOVA1
//      P229_CW_DATA_COL_WIDTH                     //  2,  7, 5,         11, 3,  5,  4,           13,      10
//      P229_CW_DATA_COL_MASK                      //  0,  0, 0,          0, 0,  0,  0,            0,       0
//      P229_CW_DATA_COL_TYPES                     // *
//      P229_CW_DATA_TABLE_TYPE                    // S
#define P229_VERIFICATION_DATA               1702  // HD,ZN,TRK,BIN,SECT_IN_BIN,WR,RD,BIE,BITS_RD
//      P229_VERIFICATION_DATA_COL_WIDTH           //  2, 4,  7,  5,         11, 5, 5,  5,      9
//      P229_VERIFICATION_DATA_COL_MASK            //  0, 0,  0,  0,          0, 0, 0,  0,      0
//      P229_VERIFICATION_DATA_COL_TYPES           // *
//      P229_VERIFICATION_DATA_TABLE_TYPE          // S
#define P229_ALL_RD_ALL_WR_BIN               1703  // ZN,TRK,HD,BIN,BIE,BITS_RD,BIN_BER
//      P229_ALL_RD_ALL_WR_BIN_COL_WIDTH           //  4,  7, 2,  5,  5,      9,     10
//      P229_ALL_RD_ALL_WR_BIN_COL_MASK            //  0,  0, 0,  0,  0,      0,      0
//      P229_ALL_RD_ALL_WR_BIN_COL_TYPES           // *
//      P229_ALL_RD_ALL_WR_BIN_TABLE_TYPE          // S
#define P229_BIN_BER_PER_RD                  1704  // ZN,TRK,HD,BIN,WR,RD,BIE,BITS_RD,BIN_BER
//      P229_BIN_BER_PER_RD_COL_WIDTH              //  4,  7, 2,  5, 5, 5,  7,      9,     10
//      P229_BIN_BER_PER_RD_COL_MASK               //  0,  0, 0,  0, 0, 0,  0,      0,      0
//      P229_BIN_BER_PER_RD_COL_TYPES              // *
//      P229_BIN_BER_PER_RD_TABLE_TYPE             // S
#define P229_TRK_BER_PER_WR                  1705  // TRK,HD,NUM_BIN,WR,TRK_BIE,TRK_BITS_RD,TRK_BER,NUM_WRITTEN_IN_ERR_SECT
//      P229_TRK_BER_PER_WR_COL_WIDTH              //   7, 2,      7, 5,      7,         11,     10,                     23
//      P229_TRK_BER_PER_WR_COL_MASK               //   0, 0,      0, 0,      0,          0,      0,                      0
//      P229_TRK_BER_PER_WR_COL_TYPES              // *
//      P229_TRK_BER_PER_WR_TABLE_TYPE             // S
#define P_WORKING_ADAPTIVES                  1706  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,MESSAGE,WRITER_PRE_HEAT,WRITER_WRITE_HEAT,WRITER_READ_HEAT,READER_PRE_HEAT,READER_WRITE_HEAT,READER_READ_HEAT
//      P_WORKING_ADAPTIVES_COL_WIDTH              //          11,        10,        9,     16,             15,               17,              16,             15,               17,              16
//      P_WORKING_ADAPTIVES_COL_MASK               //           0,         0,        0,      0,              0,                0,               0,              0,                0,               0
//      P_WORKING_ADAPTIVES_COL_TYPES              // *
//      P_WORKING_ADAPTIVES_TABLE_TYPE             // S
#define P172_CERT_TEMPERATURE                1707  // HD_PHYS_PSN,HD_LGC_PSN,TEMP_CELSIUS
//      P172_CERT_TEMPERATURE_COL_WIDTH            //          11,        10,          12
//      P172_CERT_TEMPERATURE_COL_MASK             //           0,         0,           0
//      P172_CERT_TEMPERATURE_COL_TYPES            // *
//      P172_CERT_TEMPERATURE_TABLE_TYPE           // S
#define P172_SECTOR_SIZE                     1708  // BYTES_ORIGINAL,BYTES_NEW
//      P172_SECTOR_SIZE_COL_WIDTH                 //             14,        9
//      P172_SECTOR_SIZE_COL_MASK                  //              0,        0
//      P172_SECTOR_SIZE_COL_TYPES                 // *
//      P172_SECTOR_SIZE_TABLE_TYPE                // S
#define P172_CERT_MIX_RATIO                  1709  // HD_PHYS_PSN,HD_LGC_PSN,MIX_RATIO
//      P172_CERT_MIX_RATIO_COL_WIDTH              //          11,        10,        9
//      P172_CERT_MIX_RATIO_COL_MASK               //           0,         0,        0
//      P172_CERT_MIX_RATIO_COL_TYPES              // *
//      P172_CERT_MIX_RATIO_TABLE_TYPE             // S
#define P172_SUPER_ZONE_MAP                  1710  // DATA_ZONE,SUPER_ZONE
//      P172_SUPER_ZONE_MAP_COL_WIDTH              //         9,        10
//      P172_SUPER_ZONE_MAP_COL_MASK               //         0,         0
//      P172_SUPER_ZONE_MAP_COL_TYPES              // *
//      P172_SUPER_ZONE_MAP_TABLE_TYPE             // S
#define P172_NUM_MINI_ZONES                  1711  // DATA_ZONE,MINI_ZONES
//      P172_NUM_MINI_ZONES_COL_WIDTH              //         9,        10
//      P172_NUM_MINI_ZONES_COL_MASK               //         0,         0
//      P172_NUM_MINI_ZONES_COL_TYPES              // *
//      P172_NUM_MINI_ZONES_TABLE_TYPE             // S
#define P_HEX_BUFFER                         1712  // *
//      P_HEX_BUFFER_COL_WIDTH                     // 0
//      P_HEX_BUFFER_COL_MASK                      // 0
//      P_HEX_BUFFER_COL_TYPES                     // *
//      P_HEX_BUFFER_TABLE_TYPE                    // S
#define P166_RUN_TIME_FEATURES               1713  // FEATURE_NAME,SUPPORT_STATUS
//      P166_RUN_TIME_FEATURES_COL_WIDTH           //           15,            15
//      P166_RUN_TIME_FEATURES_COL_MASK            //            0,             0
//      P166_RUN_TIME_FEATURES_COL_TYPES           // *
//      P166_RUN_TIME_FEATURES_TABLE_TYPE          // S
#define P356_THERMAL_SHOCK                   1714  // HD_PHYS_PSN,HD_LGC_PSN,READER_HEAT,WRITER_HEAT,HEAT_DURATION,DELAY_AFTER_HEAT
//      P356_THERMAL_SHOCK_COL_WIDTH               //          11,        10,         11,         11,           13,              16
//      P356_THERMAL_SHOCK_COL_MASK                //           0,         0,          0,          0,            0,               0
//      P356_THERMAL_SHOCK_COL_TYPES               // *
//      P356_THERMAL_SHOCK_TABLE_TYPE              // S
#define P152_PASCAL_SCORES                   1715  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,COMP_ID,SCORE,SCR
//      P152_PASCAL_SCORES_COL_WIDTH               //          11,        10,      7,      7,   10,  8
//      P152_PASCAL_SCORES_COL_MASK                //           0,         0,      0,      0,    0,  0
//      P152_PASCAL_SCORES_COL_TYPES               // *
//      P152_PASCAL_SCORES_TABLE_TYPE              // S
#define P152_FCS_MULTI_TRK                   1716  // HD_PHYS_PSN,HD_LGC_PSN,TRK_CNT,CNTRL_ID,CLP_BWDTH,CRLTN_RSLT
//      P152_FCS_MULTI_TRK_COL_WIDTH               //          11,        10,      7,       8,        9,        10
//      P152_FCS_MULTI_TRK_COL_MASK                //           0,         0,      0,       0,        0,         0
//      P152_FCS_MULTI_TRK_COL_TYPES               // *
//      P152_FCS_MULTI_TRK_TABLE_TYPE              // S
#define P152_FCS_MULTI_TRK_SELECT            1717  // HD_PHYS_PSN,HD_LGC_PSN,CNTRL_ID,SELECT_VAL
//      P152_FCS_MULTI_TRK_SELECT_COL_WIDTH        //          11,        10,       8,        10
//      P152_FCS_MULTI_TRK_SELECT_COL_MASK         //           0,         0,       0,         0
//      P152_FCS_MULTI_TRK_SELECT_COL_TYPES        // *
//      P152_FCS_MULTI_TRK_SELECT_TABLE_TYPE       // S
#define P152_FCS_CNTRL_RESPONSE              1718  // INDX,VCM_RESP_R,VCM_RESP_I,CNTRL_R,CNTRL_I
//      P152_FCS_CNTRL_RESPONSE_COL_WIDTH          //    4,        10,        10,     10,     10
//      P152_FCS_CNTRL_RESPONSE_COL_MASK           //    0,         0,         0,      0,      0
//      P152_FCS_CNTRL_RESPONSE_COL_TYPES          // *
//      P152_FCS_CNTRL_RESPONSE_TABLE_TYPE         // S
#define P152_FCS_LOOP_GAIN                   1719  // CNTRL_ID,FREQ_CNT,LG_R,LG_I
//      P152_FCS_LOOP_GAIN_COL_WIDTH               //        8,       8,  10,  10
//      P152_FCS_LOOP_GAIN_COL_MASK                //        0,       0,   0,   0
//      P152_FCS_LOOP_GAIN_COL_TYPES               // *
//      P152_FCS_LOOP_GAIN_TABLE_TYPE              // S
#define P152_FCS_CLOSE_LOOP_MAG              1720  // FREQ_CNT,CLP_MAG
//      P152_FCS_CLOSE_LOOP_MAG_COL_WIDTH          //        8,     10
//      P152_FCS_CLOSE_LOOP_MAG_COL_MASK           //        0,      0
//      P152_FCS_CLOSE_LOOP_MAG_COL_TYPES          // *
//      P152_FCS_CLOSE_LOOP_MAG_TABLE_TYPE         // S
#define P152_PSCL_DAC_COMP                   1721  // INDX,DAC_COMP_R,DAC_COMP_I,TOP_ENVEL,BOT_ENVEL
//      P152_PSCL_DAC_COMP_COL_WIDTH               //    4,        10,        10,       10,       10
//      P152_PSCL_DAC_COMP_COL_MASK                //    0,         0,         0,        0,        0
//      P152_PSCL_DAC_COMP_COL_TYPES               // *
//      P152_PSCL_DAC_COMP_TABLE_TYPE              // S
#define P152_PSCL_INPUT_ARRAYS               1722  // INDX,GBAR_GAIN,GBAR_PHASE,WT_GAIN,WT_PHASE,WT_STRUCT_CORR
//      P152_PSCL_INPUT_ARRAYS_COL_WIDTH           //    4,       10,        12,     10,      10,            14
//      P152_PSCL_INPUT_ARRAYS_COL_MASK            //    0,        0,         0,      0,       0,             0
//      P152_PSCL_INPUT_ARRAYS_COL_TYPES           // *
//      P152_PSCL_INPUT_ARRAYS_TABLE_TYPE          // S
#define P152_PSCL_SCORE_CAL_NORM             1723  // INDX,CAL_NORM
//      P152_PSCL_SCORE_CAL_NORM_COL_WIDTH         //    4,       8
//      P152_PSCL_SCORE_CAL_NORM_COL_MASK          //    0,       0
//      P152_PSCL_SCORE_CAL_NORM_COL_TYPES         // *
//      P152_PSCL_SCORE_CAL_NORM_TABLE_TYPE        // S
#define P152_SNO_ITER                        1724  // ITER,PHASE
//      P152_SNO_ITER_COL_WIDTH                    //    4,   10
//      P152_SNO_ITER_COL_MASK                     //    0,    0
//      P152_SNO_ITER_COL_TYPES                    // *
//      P152_SNO_ITER_TABLE_TYPE                   // S
#define P152_SNO_ITER_STATUS                 1725  // ITER_STATUS
//      P152_SNO_ITER_STATUS_COL_WIDTH             //          11
//      P152_SNO_ITER_STATUS_COL_MASK              //           0
//      P152_SNO_ITER_STATUS_COL_TYPES             // *
//      P152_SNO_ITER_STATUS_TABLE_TYPE            // S
#define P152_MSG                             1726  // *
//      P152_MSG_COL_WIDTH                         // 0
//      P152_MSG_COL_MASK                          // 0
//      P152_MSG_COL_TYPES                         // *
//      P152_MSG_TABLE_TYPE                        // S
#define P074_THERMAL_DECAY_ACCEL             1727  // HD_PHYS_PSN,HD_LGC_PSN,DIAMETER,LOOP_TYPE,LOOP_CNT,WRITE_CURRENT,WRT_HEAT_TRGT_CLRNC,WRITER_WRITE_HEAT,HF_AMPL,LF_AMPL,PCT_AR_CHG
//      P074_THERMAL_DECAY_ACCEL_COL_WIDTH         //          11,        10,       8,        9,       8,           13,                 19,               17,      7,      7,        10
//      P074_THERMAL_DECAY_ACCEL_COL_MASK          //           0,         0,       0,        0,       0,            0,                  0,                0,      0,      0,         0
//      P074_THERMAL_DECAY_ACCEL_COL_TYPES         // *
//      P074_THERMAL_DECAY_ACCEL_TABLE_TYPE        // S
#define P_SERVO_GAP_DELAY_RETRY              1728  // OD_TRK,OD_DELAY,OD_RETRIES,ID_TRK,ID_DELAY,ID_RETRIES
//      P_SERVO_GAP_DELAY_RETRY_COL_WIDTH          //      8,       8,        10,     8,       8,        10
//      P_SERVO_GAP_DELAY_RETRY_COL_MASK           //      0,       0,         0,     0,       0,         0
//      P_SERVO_GAP_DELAY_RETRY_COL_TYPES          // *
//      P_SERVO_GAP_DELAY_RETRY_TABLE_TYPE         // S
#define P_SERVO_GAP_DELAY_ERR                1729  // OD_DELAY,ID_DELAY,ERR_CODE
//      P_SERVO_GAP_DELAY_ERR_COL_WIDTH            //        8,       8,       8
//      P_SERVO_GAP_DELAY_ERR_COL_MASK             //        0,       0,       0
//      P_SERVO_GAP_DELAY_ERR_COL_TYPES            // *
//      P_SERVO_GAP_DELAY_ERR_TABLE_TYPE           // S
#define P451_ATTENUATION_VGA                 1730  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TEST_ORDER,ATTC_RD,ATT2R,ATT2S,VGAS,VGAR,OPTI_BER,OPTI_BIE,OPTI_ITRTN,HD_STATUS
//      P451_ATTENUATION_VGA_COL_WIDTH             //          11,        10,        9,        10,      7,    5,    5,   4,   4,       8,       8,        10,        9
//      P451_ATTENUATION_VGA_COL_MASK              //           1,         1,        1,         1,      1,    1,    1,   1,   1,       1,       1,         1,        1
//      P451_ATTENUATION_VGA_COL_TYPES             //           N,         N,        N,         N,      N,    N,    N,   N,   N,       N,       N,         N,        N
//      P451_ATTENUATION_VGA_TABLE_TYPE            // S
#define P475_ZAP_AUDIT_STATS                 1731  // HD_PHYS_PSN,HD_LGC_PSN,ZAP_PSN,SPAN_INDEX,AUDIT_TYPE,MEAN_3SIGRRO,MAX_3SIGRRO,SIG_3SIGRRO
//      P475_ZAP_AUDIT_STATS_COL_WIDTH             //          11,        10,      7,        10,        10,          12,         11,         11
//      P475_ZAP_AUDIT_STATS_COL_MASK              //           0,         0,      0,         0,         0,           0,          0,          0
//      P475_ZAP_AUDIT_STATS_COL_TYPES             // *
//      P475_ZAP_AUDIT_STATS_TABLE_TYPE            // M
#define P475_ZAP_SUMMARY                     1732  // HD_PHYS_PSN,HD_LGC_PSN,ZAP_PSN,SPAN_INDEX,WRT_FAIL_CNT,RD_FAIL_CNT,WC_ERR_CNT,NRWC_ERR_CNT,RC_ERR_CNT,NRRC_ERR_CNT,RRO_FAIL_CNT,ITRTN_TRK_CNT,REV_ITRTN_CNT,MEAS_TRK_CNT,ZAP_CRRCT_WRT_TRK_CNT,SEEK_FAIL_TRK_CNT,IO_FAIL_TRK_CNT,OSE_SMPATT_TRK_CNT,IFEST_CNT,TNU_CNT,ZFS_FAIL_CNT,SKIP_TRK_CNT,ETIME,SAT_RETRIED_CNT,SAT_SKIPPED_CNT,AVG_REV_PER_TRK
//      P475_ZAP_SUMMARY_COL_WIDTH                 //          11,        10,      7,        10,          12,         11,        10,          12,        10,          12,          12,           13,           13,          12,                   21,               17,             15,                18,        9,      7,          12,          12,    8,             15,             15,             15
//      P475_ZAP_SUMMARY_COL_MASK                  //           0,         0,      0,         0,           0,          0,         0,           0,         0,           0,           0,            0,            0,           0,                    0,                0,              0,                 0,        0,      0,           0,           0,    0,              0,              0,              0
//      P475_ZAP_SUMMARY_COL_TYPES                 // *
//      P475_ZAP_SUMMARY_TABLE_TYPE                // S
#define P475_ZAP_DATA                        1733  // *
//      P475_ZAP_DATA_COL_WIDTH                    // 4
//      P475_ZAP_DATA_COL_MASK                     // 0
//      P475_ZAP_DATA_COL_TYPES                    // *
//      P475_ZAP_DATA_TABLE_TYPE                   // S
#define P475_ZONED_ZAP_SUMMARY               1734  // HD_PHYS_PSN,ZAP_ZONE,HD_LGC_PSN,OD_CYLINDER,GRAND_3SIG_RRO,ZBZ_METRIC,ZAP_ENABLED,ZAP_PCT
//      P475_ZONED_ZAP_SUMMARY_COL_WIDTH           //          11,       8,        10,         11,            14,        10,         11,      7
//      P475_ZONED_ZAP_SUMMARY_COL_MASK            //           0,       0,         0,          0,             0,         0,          0,      0
//      P475_ZONED_ZAP_SUMMARY_COL_TYPES           // *
//      P475_ZONED_ZAP_SUMMARY_TABLE_TYPE          // M
#define P475_SERVO_WRITE_DELAY               1735  // HD_PHYS_PSN,ZONE,HD_LGC_PSN,OD_CYL,SLOPE,INTRCPT,DELAY
//      P475_SERVO_WRITE_DELAY_COL_WIDTH           //          11,   4,        10,    10,    5,      7,    5
//      P475_SERVO_WRITE_DELAY_COL_MASK            //           0,   0,         0,     0,    0,      0,    0
//      P475_SERVO_WRITE_DELAY_COL_TYPES           // *
//      P475_SERVO_WRITE_DELAY_TABLE_TYPE          // S
#define P475_ZONED_ZAP_SUMMARY2              1736  // HD_PHYS_PSN,ZAP_ZONE,HD_LGC_PSN,OD_CYLINDER,GRAND_3SIG_RRO,ZBZ_METRIC,ZAP_ENABLED,ZAP_PCT
//      P475_ZONED_ZAP_SUMMARY2_COL_WIDTH          //          11,       8,        10,         11,            14,        10,         11,      7
//      P475_ZONED_ZAP_SUMMARY2_COL_MASK           //           0,       0,         0,          0,             0,         0,          0,      0
//      P475_ZONED_ZAP_SUMMARY2_COL_TYPES          // *
//      P475_ZONED_ZAP_SUMMARY2_TABLE_TYPE         // M
#define P475_ZAP_DRV_CONDITIONS1             1737  // PES_FIFO_STATE,SAP_MISC_FLAG_ORGNL,SAP_MISC_FLAG_ALTERED_VAL,SHOCK_SENSOR_SUPPT,INITL_SHOCK_SENSOR_STATE,SHOCK_SENSOR_STATE,IFEST_SVO_SUPPT,IFEST_STATE,IFEST_SETUP_ERR
//      P475_ZAP_DRV_CONDITIONS1_COL_WIDTH         //             14,                 19,                       25,                18,                      24,                18,             15,         11,             15
//      P475_ZAP_DRV_CONDITIONS1_COL_MASK          //              0,                  0,                        0,                 0,                       0,                 0,              0,          0,              0
//      P475_ZAP_DRV_CONDITIONS1_COL_TYPES         // *
//      P475_ZAP_DRV_CONDITIONS1_TABLE_TYPE        // S
#define P475_ZAP_DRV_CONDITIONS2             1738  // INITL_SWD_STATE,SWD_STATE,CHANNEL_FREQ_SCALED,CHANNEL_FREQ_SCALED_VAL,CHANNEL_SCALE_ERR,ZBZ_STATE,ZBZ_FILE,ZBZ_FILE_ERR,ZEST_SAP_STATE,ZEST_STATE,ZAP_READ_SEEK,BULK_MEMORY_TRANSFER
//      P475_ZAP_DRV_CONDITIONS2_COL_WIDTH         //              15,        9,                 19,                     23,               17,        9,      15,          12,            14,        10,           13,                  20
//      P475_ZAP_DRV_CONDITIONS2_COL_MASK          //               0,        0,                  0,                      0,                0,        0,       0,           0,             0,         0,            0,                   0
//      P475_ZAP_DRV_CONDITIONS2_COL_TYPES         // *
//      P475_ZAP_DRV_CONDITIONS2_TABLE_TYPE        // S
#define P475_ZAP_HD_CONDITIONS1              1739  // HD_PHYS_PSN,HD_LGC_PSN,ZFS_STATE,TRK_COVERAGE,LGC_START_CYL,LGC_END_CYL
//      P475_ZAP_HD_CONDITIONS1_COL_WIDTH          //          11,        10,        9,          12,           13,         11
//      P475_ZAP_HD_CONDITIONS1_COL_MASK           //           0,         0,        0,           0,            0,          0
//      P475_ZAP_HD_CONDITIONS1_COL_TYPES          // *
//      P475_ZAP_HD_CONDITIONS1_TABLE_TYPE         // S
#define P475_ZAP_HD_CONDITIONS2              1740  // HD_PHYS_PSN,HD_LGC_PSN,ZFS_STATE,TRK_COVERAGE,LGC_START_CYL,LGC_END_CYL,DATA_START_CYL,DATA_START_CYL_STATUS,DATA_END_CYL,DATA_END_CYL_STATUS
//      P475_ZAP_HD_CONDITIONS2_COL_WIDTH          //          11,        10,        9,          12,           13,         11,            14,                   21,          12,                 19
//      P475_ZAP_HD_CONDITIONS2_COL_MASK           //           0,         0,        0,           0,            0,          0,             0,                    0,           0,                  0
//      P475_ZAP_HD_CONDITIONS2_COL_TYPES          // *
//      P475_ZAP_HD_CONDITIONS2_TABLE_TYPE         // S
#define P475_DISABLED_HARMONICS              1741  // HARMONIC
//      P475_DISABLED_HARMONICS_COL_WIDTH          //        8
//      P475_DISABLED_HARMONICS_COL_MASK           //        0
//      P475_DISABLED_HARMONICS_COL_TYPES          // *
//      P475_DISABLED_HARMONICS_TABLE_TYPE         // S
#define P475_ZAP_EXCEPTION                   1742  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,TRK_SKIPPED,USER_AREA_TRK,SKIP_WRITE_EVENT,ZFS_FAIL,FAST_IO_RESP_FAIL,SEEK_FAIL,ZAP_WRT_DATA_ERR,ZAP_RD_DATA_ERR,R_ZAP_WRT_CMD_ERR,NR_ZAP_WRT_CMD_ERR,R_ZAP_RD_CMD_ERR,NR_ZAP_RD_CMD_ERR,BD_SMP_TRACK_ERR,MABS_RRO_FAIL,ZAP_SATURATION_OCCURRED,ZAP_ENAB_DISAB_CMD_FAIL,ZFS_SERVO_CMD_FAIL,MISSED_FASTIO_SAMPLES,MAX_ITER_ERROR,ZFS_EC1,ZFS_EC2
//      P475_ZAP_EXCEPTION_COL_WIDTH               //          11,        10,      7,         11,           13,              17,       9,               17,        9,              16,             15,               17,                18,              16,               17,              16,           13,                     23,                     23,                18,                   21,            14,      9,      9
//      P475_ZAP_EXCEPTION_COL_MASK                //           0,         0,      0,          0,            0,               0,       0,                0,        0,               0,              0,                0,                 0,               0,                0,               0,            0,                      0,                      0,                 0,                    0,             0,      0,      0
//      P475_ZAP_EXCEPTION_COL_TYPES               // *
//      P475_ZAP_EXCEPTION_TABLE_TYPE              // S
#define P475_ZAP_AUDIT_STATS2                1743  // HD_PHYS_PSN,HD_LGC_PSN,ZAP_PSN,ZAP_SPAN,ZAP_ZONE,AUDIT_TYPE,MEAN_3SIGRRO,MAX_3SIGRRO,SIG_3SIGRRO
//      P475_ZAP_AUDIT_STATS2_COL_WIDTH            //          11,        10,      7,       8,       8,        10,          12,         11,         11
//      P475_ZAP_AUDIT_STATS2_COL_MASK             //           0,         0,      0,       0,       0,         0,           0,          0,          0
//      P475_ZAP_AUDIT_STATS2_COL_TYPES            // *
//      P475_ZAP_AUDIT_STATS2_TABLE_TYPE           // S
#define P475_ZFS_FAIL_INFO                   1744  // HD_PHYS_PSN,HD_LGC_PSN,ERROR_CODE
//      P475_ZFS_FAIL_INFO_COL_WIDTH               //          11,        10,        10
//      P475_ZFS_FAIL_INFO_COL_MASK                //           0,         0,         0
//      P475_ZFS_FAIL_INFO_COL_TYPES               // *
//      P475_ZFS_FAIL_INFO_TABLE_TYPE              // S
#define P234_CHUNK_BER                       1745  // CHUNK,HD_PHYS_PSN,HD_LGC_PSN,TRACK,NUM_WRITES,SECTOR,SECTOR_BIE,BITS_READ,BER,DEGAUSS
//      P234_CHUNK_BER_COL_WIDTH                   //     5,         11,        10,    8,        10,     6,        10,        9,  9,      7
//      P234_CHUNK_BER_COL_MASK                    //     0,          0,         0,    0,         0,     0,         0,        0,  0,      0
//      P234_CHUNK_BER_COL_TYPES                   // *
//      P234_CHUNK_BER_TABLE_TYPE                  // S
#define P234_MSG                             1746  // *
//      P234_MSG_COL_WIDTH                         // 0
//      P234_MSG_COL_MASK                          // 0
//      P234_MSG_COL_TYPES                         // *
//      P234_MSG_TABLE_TYPE                        // S
#define P469_TEST_BAND_INIT_DATA             1747  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,N1_AMPL,S1_AMPL,N1_S1_PCT,TRIES
//      P469_TEST_BAND_INIT_DATA_COL_WIDTH         //          11,        10,        9,      7,      7,        9,    5
//      P469_TEST_BAND_INIT_DATA_COL_MASK          //           0,         0,        0,      0,      0,        0,    0
//      P469_TEST_BAND_INIT_DATA_COL_TYPES         // *
//      P469_TEST_BAND_INIT_DATA_TABLE_TYPE        // S
#define P469_READ_PSN_SEARCH_DATA            1748  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TEST_CYL,WPE_LOC,IDX,RD_PSN_NM,REF_AMPL
//      P469_READ_PSN_SEARCH_DATA_COL_WIDTH        //          11,        10,        9,       8,      7,  3,        9,       8
//      P469_READ_PSN_SEARCH_DATA_COL_MASK         //           0,         0,        0,       0,      0,  0,        0,       0
//      P469_READ_PSN_SEARCH_DATA_COL_TYPES        // *
//      P469_READ_PSN_SEARCH_DATA_TABLE_TYPE       // S
#define P469_RAW_READ_PSN_DATA               1749  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,OD_IDX,OD_RD_PSN_NM,OD_REF_AMPL,ID_IDX,ID_RD_PSN_NM,ID_REF_AMPL
//      P469_RAW_READ_PSN_DATA_COL_WIDTH           //          11,        10,        9,     6,          12,         11,     6,          12,         11
//      P469_RAW_READ_PSN_DATA_COL_MASK            //           0,         0,        0,     0,           0,          0,     0,           0,          0
//      P469_RAW_READ_PSN_DATA_COL_TYPES           // *
//      P469_RAW_READ_PSN_DATA_TABLE_TYPE          // S
#define P469_WPE_RAW_DATA                    1750  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ENCROACH_IDX,ENCROACH_PSN_NM,OD_NORM_AMPL,ID_NORM_AMPL,MID_NORM_AMPL
//      P469_WPE_RAW_DATA_COL_WIDTH                //          11,        10,        9,          12,             15,          12,          12,           13
//      P469_WPE_RAW_DATA_COL_MASK                 //           0,         0,        0,           0,              0,           0,           0,            0
//      P469_WPE_RAW_DATA_COL_TYPES                // *
//      P469_WPE_RAW_DATA_TABLE_TYPE               // S
#define P469_WPE_RAW_DATA_BY_LOC             1751  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,WPE_LOC,ENCROACH_IDX,ENCROACH_PSN_NM,NORM_AMPL
//      P469_WPE_RAW_DATA_BY_LOC_COL_WIDTH         //          11,        10,        9,      7,          12,             15,        9
//      P469_WPE_RAW_DATA_BY_LOC_COL_MASK          //           0,         0,        0,      0,           0,              0,        0
//      P469_WPE_RAW_DATA_BY_LOC_COL_TYPES         // *
//      P469_WPE_RAW_DATA_BY_LOC_TABLE_TYPE        // S
#define P469_WPE_EWAC_SUMMARY                1752  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,WPE_OD_NM,WPE_ID_NM,WPE_AVG_NM,EWAC_NM,WPE_OD_SLP,WPE_ID_SLP,EWAC_SLP,WPE_OD_RSQ,WPE_ID_RSQ,EWAC_RSQ
//      P469_WPE_EWAC_SUMMARY_COL_WIDTH            //          11,        10,        9,        9,        9,        10,      7,        10,        10,       8,        10,        10,       8
//      P469_WPE_EWAC_SUMMARY_COL_MASK             //           0,         0,        0,        0,        0,         0,      0,         0,         0,       0,         0,         0,       0
//      P469_WPE_EWAC_SUMMARY_COL_TYPES            // *
//      P469_WPE_EWAC_SUMMARY_TABLE_TYPE           // S
#define P451_DERIVED_OPTI_SUMMARY            1753  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,SKIPPED_PARAMS,OPTI_PARAMS,ZONE_SKIPPED,INITIAL_BER,FINAL_BER,BER_DELTA,HD_STATUS
//      P451_DERIVED_OPTI_SUMMARY_COL_WIDTH        //          11,        10,        9,            14,         11,          12,         11,        9,        9,        9
//      P451_DERIVED_OPTI_SUMMARY_COL_MASK         //           1,         1,        1,             1,          1,           1,          1,        1,        1,        1
//      P451_DERIVED_OPTI_SUMMARY_COL_TYPES        //           N,         N,        N,             N,          N,           N,          N,        N,        N,        N
//      P451_DERIVED_OPTI_SUMMARY_TABLE_TYPE       // S
#define P_SEEK_HEAT_WARNING                  1754  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,CYLINDER,PARTITION,SEEK_TYPE,WRITER_WRITE_HEAT,WRITER_READ_HEAT,READER_WRITE_HEAT,READER_READ_HEAT,WPH_CONTACT,WHO_CONTACT,RHO_CONTACT
//      P_SEEK_HEAT_WARNING_COL_WIDTH              //          11,        10,        9,       8,       20,       20,               17,              16,               17,              16,         11,         11,         11
//      P_SEEK_HEAT_WARNING_COL_MASK               //           0,         0,        0,       0,        0,        0,                0,               0,                0,               0,          0,          0,          0
//      P_SEEK_HEAT_WARNING_COL_TYPES              // *
//      P_SEEK_HEAT_WARNING_TABLE_TYPE             // S
#define P220_TEST_TRACKS                     1755  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRACK_NUM
//      P220_TEST_TRACKS_COL_WIDTH                 //          11,        10,        9,        9
//      P220_TEST_TRACKS_COL_MASK                  //           0,         0,        0,        0
//      P220_TEST_TRACKS_COL_TYPES                 // *
//      P220_TEST_TRACKS_TABLE_TYPE                // S
#define P333_RESONANCE_SCREEN                1756  // SRC_HD_PHYS_PSN,DST_HD_PHYS_PSN,SRC_CYL,DST_CYL,AUX,LOW_FREQ,HI_FREQ,FFT_AMP,PEAK_FREQUENCY
//      P333_RESONANCE_SCREEN_COL_WIDTH            //              15,             15,      7,      7,  3,       8,      7,      7,            14
//      P333_RESONANCE_SCREEN_COL_MASK             //               0,              0,      0,      0,  0,       0,      0,      0,             0
//      P333_RESONANCE_SCREEN_COL_TYPES            // *
//      P333_RESONANCE_SCREEN_TABLE_TYPE           // S
#define P488_ESNR_SUMMARY                    1757  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,READ_OFFSET_DAC,TRK_NUM,SIGNAL,ESNR,ESNRE,ESNRM,ESDCENR,ESDCNR,ESTRNR,ESSRR,CBD,READER_ASYM_PCT,NLTS,VGA,RETRY_CNT
//      P488_ESNR_SUMMARY_COL_WIDTH                //          11,        10,        9,             15,      7,     6,   4,    5,    5,      7,     6,     6,    5,  3,             15,   4,  3,        9
//      P488_ESNR_SUMMARY_COL_MASK                 //           1,         1,        1,              1,      1,     1,   1,    1,    1,      1,     1,     1,    1,  1,              1,   1,  1,        1
//      P488_ESNR_SUMMARY_COL_TYPES                //           N,         N,        N,              N,      N,     V,   N,    N,    N,      N,     N,     N,    N,  N,              N,   N,  N,        N
//      P488_ESNR_SUMMARY_TABLE_TYPE               // S
#define P066_RSRVD_TEST_TRKS_BIN             1758  // *
//      P066_RSRVD_TEST_TRKS_BIN_COL_WIDTH         // 2
//      P066_RSRVD_TEST_TRKS_BIN_COL_MASK          // 0
//      P066_RSRVD_TEST_TRKS_BIN_COL_TYPES         // *
//      P066_RSRVD_TEST_TRKS_BIN_TABLE_TYPE        // S
#define P066_RSRVD_TRK_ENTRY_HEX             1759  // INDX,STATUS,HD,RSRVD1_0,RSRVD1_1,CYL,FACTORY_BER,RSRVD2_0,RSRVD2_1,RSRVD2_2,RSRVD2_3
//      P066_RSRVD_TRK_ENTRY_HEX_COL_WIDTH         //    4,     6, 2,       8,       8,  8,         11,       8,       8,       8,       8
//      P066_RSRVD_TRK_ENTRY_HEX_COL_MASK          //    0,     0, 0,       0,       0,  0,          0,       0,       0,       0,       0
//      P066_RSRVD_TRK_ENTRY_HEX_COL_TYPES         // *
//      P066_RSRVD_TRK_ENTRY_HEX_TABLE_TYPE        // S
#define P066_RSRVD_TRK_HDR_HEX               1760  // REV,STATUS,ZN_PER_HD,RSRVD1_0,RSRVD1_1,TRKS_PER_ZN,GUARD_TRKS_A_SIDE,MIN_TRKS_OFF_DEFECTS,BER_REV,RSRVD2_0,RSRVD2_1,RSRVD2_2,RSRVD2_3,RSRVD2_4,RSRVD2_5,RSRVD2_6
//      P066_RSRVD_TRK_HDR_HEX_COL_WIDTH           //   3,     6,        9,       8,       8,         11,               17,                  20,      7,       8,       8,       8,       8,       8,       8,       8
//      P066_RSRVD_TRK_HDR_HEX_COL_MASK            //   0,     0,        0,       0,       0,          0,                0,                   0,      0,       0,       0,       0,       0,       0,       0,       0
//      P066_RSRVD_TRK_HDR_HEX_COL_TYPES           // *
//      P066_RSRVD_TRK_HDR_HEX_TABLE_TYPE          // S
#define P103_VGA                             1761  // READ,HD,WEDGE,REF_CYL,REF_SVGA,REF_DVGA,TST_CYL,TST_SVGA,TST_DVGA,NORM_SVGA,NORM_DVGA
//      P103_VGA_COL_WIDTH                         //    4, 2,    5,      7,      11,      11,      7,      11,      11,       11,       11
//      P103_VGA_COL_MASK                          //    0, 0,    0,      0,       0,       0,      0,       0,       0,        0,        0
//      P103_VGA_COL_TYPES                         // *
//      P103_VGA_TABLE_TYPE                        // S
#define P103_VGA_MEDIAN                      1762  // HD,CYL,WEDGE,SVGA,DVGA
//      P103_VGA_MEDIAN_COL_WIDTH                  //  2,  7,    5,  11,  11
//      P103_VGA_MEDIAN_COL_MASK                   //  0,  0,    0,   0,   0
//      P103_VGA_MEDIAN_COL_TYPES                  // *
//      P103_VGA_MEDIAN_TABLE_TYPE                 // S
#define P103_MSG                             1763  // *
//      P103_MSG_COL_WIDTH                         // 0
//      P103_MSG_COL_MASK                          // 0
//      P103_MSG_COL_TYPES                         // *
//      P103_MSG_TABLE_TYPE                        // S
#define P229_MSG                             1764  // *
//      P229_MSG_COL_WIDTH                         // 0
//      P229_MSG_COL_MASK                          // 0
//      P229_MSG_COL_TYPES                         // *
//      P229_MSG_TABLE_TYPE                        // S
#define P_WR_RETRY                           1765  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRACK,REQUESTED_WR,COMPLETED_WR,RETRIES
//      P_WR_RETRY_COL_WIDTH                       //          11,        10,        9,    9,          12,          12,      7
//      P_WR_RETRY_COL_MASK                        //           0,         0,        0,    0,           0,           0,      0
//      P_WR_RETRY_COL_TYPES                       // *
//      P_WR_RETRY_TABLE_TYPE                      // S
#define P177_MRDR_FINAL_GAIN                 1766  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,AVG_VGAS,ORIG_GAIN,DELTA_GAIN,FINAL_GAIN,BIAS_CURRENT
//      P177_MRDR_FINAL_GAIN_COL_WIDTH             //          11,        10,          12,         11,       8,        9,        10,        10,          12
//      P177_MRDR_FINAL_GAIN_COL_MASK              //           1,         1,           1,          1,       1,        1,         1,         1,           1
//      P177_MRDR_FINAL_GAIN_COL_TYPES             //           N,         N,           N,          N,       N,        N,         N,         N,           N
//      P177_MRDR_FINAL_GAIN_TABLE_TYPE            // S
#define P177_MRDR_GAIN_DETAIL                1767  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,ITERATION,ORIG_GAIN,MIN_VGAS,MAX_VGAS,AVG_VGAS,UPDATED_GAIN
//      P177_MRDR_GAIN_DETAIL_COL_WIDTH            //          11,        10,          12,         11,        9,        9,       8,       8,       8,          12
//      P177_MRDR_GAIN_DETAIL_COL_MASK             //           1,         1,           1,          1,        1,        1,       1,       1,       1,           1
//      P177_MRDR_GAIN_DETAIL_COL_TYPES            //           N,         N,           N,          N,        N,        N,       N,       N,       N,           N
//      P177_MRDR_GAIN_DETAIL_TABLE_TYPE           // S
#define P321_MRDR_BIAS_CAL                   1768  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,TEST_MODE,ORIGINAL_CURRENT,NEW_CURRENT,BIAS_VOLTAGE,MRE_RESISTANCE,NEW_CURRENT_DAC,FAIL_CODE,MRE_BIAS_RANGE
//      P321_MRDR_BIAS_CAL_COL_WIDTH               //          11,        10,          12,         11,        9,              16,         11,          12,            14,             15,        9,            14
//      P321_MRDR_BIAS_CAL_COL_MASK                //           1,         1,           1,          1,        1,               1,          1,           1,             1,              1,        1,             1
//      P321_MRDR_BIAS_CAL_COL_TYPES               //           N,         N,           N,          N,        V,               N,          N,           N,             N,              N,        N,             N
//      P321_MRDR_BIAS_CAL_TABLE_TYPE              // S
#define P321_MRDR_BIAS_VOLTAGE               1769  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,BIAS_VOLTAGE,VOLTAGE_DAC
//      P321_MRDR_BIAS_VOLTAGE_COL_WIDTH           //          11,        10,          12,         11,          12,         11
//      P321_MRDR_BIAS_VOLTAGE_COL_MASK            //           1,         1,           1,          1,           1,          1
//      P321_MRDR_BIAS_VOLTAGE_COL_TYPES           //           N,         N,           N,          N,           N,          N
//      P321_MRDR_BIAS_VOLTAGE_TABLE_TYPE          // S
#define P322_HD_GAP_DELTA                    1770  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,HD_GAP_DELTA,ID_CYL_NUM,HD_GAP_UIN,DATA_ZONE_FREQ,PHYS_CYL,PHYS_NORM_CYL,DELAY,BPI,RADIUS,SKEW_ANGLE,EFF_NOM_GAP,HD_GAP_SYMBL
//      P322_HD_GAP_DELTA_COL_WIDTH                //          11,        10,        9,          12,        10,        10,            14,       8,           13,    7, 10,     8,        10,         11,          12
//      P322_HD_GAP_DELTA_COL_MASK                 //           0,         0,        0,           0,         0,         0,             0,       0,            0,    0,  0,     0,         0,          0,           0
//      P322_HD_GAP_DELTA_COL_TYPES                // *
//      P322_HD_GAP_DELTA_TABLE_TYPE               // S
#define P322_ZERO_SKEW_HD_GAP                1771  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,HD_GAP_DELTA,CYLINDER,HD_GAP_UIN,DATA_ZONE_FREQ,PHYS_CYL,PHYS_NORM_CYL,DELAY,BPI,RADIUS
//      P322_ZERO_SKEW_HD_GAP_COL_WIDTH            //          11,        10,        9,          12,      10,        10,            14,       8,           13,    7, 10,     8
//      P322_ZERO_SKEW_HD_GAP_COL_MASK             //           0,         0,        0,           0,       0,         0,             0,       0,            0,    0,  0,     0
//      P322_ZERO_SKEW_HD_GAP_COL_TYPES            // *
//      P322_ZERO_SKEW_HD_GAP_TABLE_TYPE           // S
#define P240_EAW_ERROR_RATE_2                1772  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,CYL_OFST,T_LEVEL,INTRLV,NUM_WRITES,DEGAUSS,BITS_IN_ERR,BITS_READ,BASELINE_BER,EAW_BER,DELTA_BER,DELTA_RATIO_BER,BASELINE_SER,EAW_SER,DELTA_SER,FAIL_CODE,BASELINE_VGAS,BASELINE_VGAS_STDEV,EAW_VGAS,EAW_VGAS_STDEV,DELTA_VGAS,DELTA_VGAS_STDEV,MAX_WEDGE,MAX_WEDGE_DELTA_VGAS
//      P240_EAW_ERROR_RATE_2_COL_WIDTH            //          11,        10,        9,      7,       8,      7,     6,        10,      7,         11,        9,          12,      7,        9,             15,          12,      7,        9,        9,           13,                 19,       8,            14,        10,              16,        9,                  20
//      P240_EAW_ERROR_RATE_2_COL_MASK             //           1,         1,        1,      1,       1,      1,     1,         1,      1,          1,        1,           1,      1,        1,              1,           1,      1,        1,        1,            1,                  1,       1,             1,         1,               1,        1,                   1
//      P240_EAW_ERROR_RATE_2_COL_TYPES            //           N,         N,        N,      N,       N,      N,     N,         N,      V,          N,        N,           N,      N,        N,              N,           N,      N,        N,        N,            N,                  N,       N,             N,         N,               N,        N,                   N
//      P240_EAW_ERROR_RATE_2_TABLE_TYPE           // S
#define P094_LIVE_SENSOR_PARAMS2             1773  // HD_PHYS_PSN,ZONE,HD_LGC_PSN,PREAMP_ID,PREAMP_REV,TCR_BIAS,TCR_GAIN,TCR_RD_THRESHOLD,TCR_WR_THRESHOLD,TCR_POLARITY,TCR_HP,TCR_LP,TCR_VTH_RANGE,TCR_COMPSEL,TCR_CONTACT_COUNT
//      P094_LIVE_SENSOR_PARAMS2_COL_WIDTH         //          11,   4,        10,        9,        10,       8,       8,              16,              16,          12,     6,     6,           13,         11,               17
//      P094_LIVE_SENSOR_PARAMS2_COL_MASK          //           0,   0,         0,        0,         0,       0,       0,               0,               0,           0,     0,     0,            0,          0,                0
//      P094_LIVE_SENSOR_PARAMS2_COL_TYPES         // *
//      P094_LIVE_SENSOR_PARAMS2_TABLE_TYPE        // S
#define P250_SEGMENT_BER_ZONE2               1774  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,SEG_NUM,SEG_ALIGNED_BIE,SEG_ALIGNED_BER,SEG_NONALIGNED_BIE,SEG_NONALIGNED_BER
//      P250_SEGMENT_BER_ZONE2_COL_WIDTH           //          11,        10,        9,      7,             15,             15,                18,                18
//      P250_SEGMENT_BER_ZONE2_COL_MASK            //           0,         0,        0,      0,              0,              0,                 0,                 0
//      P250_SEGMENT_BER_ZONE2_COL_TYPES           // *
//      P250_SEGMENT_BER_ZONE2_TABLE_TYPE          // S
#define P250_SEGMENT_BER_SUM2                1775  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,WORST_ALIGNED_BER,BEST_ALIGNED_BER,DELTA_ALIGNED_BER,SEG_0_NONALIGNED_BER,AVE_ERR_RATE
//      P250_SEGMENT_BER_SUM2_COL_WIDTH            //          11,        10,        9,      7,               17,              16,               17,                  20,          12
//      P250_SEGMENT_BER_SUM2_COL_MASK             //           0,         0,        0,      0,                0,               0,                0,                   0,           0
//      P250_SEGMENT_BER_SUM2_COL_TYPES            // *
//      P250_SEGMENT_BER_SUM2_TABLE_TYPE           // S
#define P251_DIBIT_CBD_MEASURED1             1776  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TEST_TRACK,CBD_MEASURED,CBD_AVERAGE,SNR_MEASURED,SNR_AVERAGE
//      P251_DIBIT_CBD_MEASURED1_COL_WIDTH         //          11,        10,        9,        10,          12,         11,          12,         11
//      P251_DIBIT_CBD_MEASURED1_COL_MASK          //           0,         0,        0,         0,           0,          0,           0,          0
//      P251_DIBIT_CBD_MEASURED1_COL_TYPES         // *
//      P251_DIBIT_CBD_MEASURED1_TABLE_TYPE        // S
#define P095_HSC_CHANNEL_SAMPLES             1777  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,CYLINDER,DURATION_USEC,HSC_SAMPLES
//      P095_HSC_CHANNEL_SAMPLES_COL_WIDTH         //          11,        10,        9,      12,           13,         11
//      P095_HSC_CHANNEL_SAMPLES_COL_MASK          //           0,         0,        0,       0,            0,          0
//      P095_HSC_CHANNEL_SAMPLES_COL_TYPES         // *
//      P095_HSC_CHANNEL_SAMPLES_TABLE_TYPE        // S
#define P451_STATUS                          1778  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,INITIAL_BER,FINAL_BER,BER_DELTA,SAVE_OPTI_VAL,HD_STATUS
//      P451_STATUS_COL_WIDTH                      //          11,        10,        9,      7,         11,        9,        9,           13,        9
//      P451_STATUS_COL_MASK                       //           1,         1,        1,      1,          1,        1,        1,            1,        1
//      P451_STATUS_COL_TYPES                      //           N,         N,        N,      N,          N,        N,        N,            N,        N
//      P451_STATUS_TABLE_TYPE                     // S
#define P074_HSC_OPTI_INFO                   1779  // ATTC_RD,ATT2R,VGAR,PREAMPGAIN,HF_MAG,HF_STDEV,LF_MAG,LF_STDEV,HTR_DAC,HSC_LEN,NRMLZD_HF,NRMLZD_LF,DELTA_DB
//      P074_HSC_OPTI_INFO_COL_WIDTH               //       7,    5,   4,        10,    10,       8,    10,       8,      7,      7,        9,        9,       8
//      P074_HSC_OPTI_INFO_COL_MASK                //       0,    0,   0,         0,     0,       0,     0,       0,      0,      0,        0,        0,       0
//      P074_HSC_OPTI_INFO_COL_TYPES               // *
//      P074_HSC_OPTI_INFO_TABLE_TYPE              // S
#define P074_HSC_OPTI_INFO_REV2              1780  // HF_MAG_REV2,HF_STDEV_REV2,LF_MAG_REV2,LF_STDEV_REV2,NRMLZD_HF_REV2,NRMLZD_LF_REV2
//      P074_HSC_OPTI_INFO_REV2_COL_WIDTH          //          11,           13,         11,           13,            14,            14
//      P074_HSC_OPTI_INFO_REV2_COL_MASK           //           0,            0,          0,            0,             0,             0
//      P074_HSC_OPTI_INFO_REV2_COL_TYPES          // *
//      P074_HSC_OPTI_INFO_REV2_TABLE_TYPE         // S
#define P271_OTC_MEASUREMENT_SUM             1781  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,NOSS_OTC,FAT_OTC,FIRST_SL_OTC,LAST_SL_OTC,K_TPI,DIR
//      P271_OTC_MEASUREMENT_SUM_COL_WIDTH         //          11,        9,        10,      7,       8,      7,          12,         11,    5,  3
//      P271_OTC_MEASUREMENT_SUM_COL_MASK          //           0,        0,         0,      0,       0,      0,           0,          0,    0,  0
//      P271_OTC_MEASUREMENT_SUM_COL_TYPES         // *
//      P271_OTC_MEASUREMENT_SUM_TABLE_TYPE        // S
#define P255_NLD_PARAMS                      1782  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,PARAM,NLD_S0,NLD_S1,NLD_S2,NLD_S3,NLD_S4,NLD_S5,NLD_S6,NLD_S7,NLD_S8,NLD_S9,NLD_S10,NLD_S11,NLD_S12,NLD_S13,NLD_S14,NLD_S15
//      P255_NLD_PARAMS_COL_WIDTH                  //          11,        10,        9,    5,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,      7,      7,      7,      7,      7,      7
//      P255_NLD_PARAMS_COL_MASK                   //           1,         1,        1,    1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,      1,      1,      1,      1,      1,      1
//      P255_NLD_PARAMS_COL_TYPES                  //           N,         N,        N,    V,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,      N,      N,      N,      N,      N,      N
//      P255_NLD_PARAMS_TABLE_TYPE                 // S
#define P255_NRB_PARAMS                      1783  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,PARAM,NRB_S0,NRB_S1,NRB_S2,NRB_S3,NRB_S4,NRB_S5,NRB_S6,NRB_S7,NRB_S8,NRB_S9,NRB_S10,NRB_S11,NRB_S12,NRB_S13,NRB_S14,NRB_S15
//      P255_NRB_PARAMS_COL_WIDTH                  //          11,        10,        9,    5,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,      7,      7,      7,      7,      7,      7
//      P255_NRB_PARAMS_COL_MASK                   //           1,         1,        1,    1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,      1,      1,      1,      1,      1,      1
//      P255_NRB_PARAMS_COL_TYPES                  //           N,         N,        N,    V,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,      N,      N,      N,      N,      N,      N
//      P255_NRB_PARAMS_TABLE_TYPE                 // S
#define P304_RTY_SUMMARY                     1784  // HD_PHYS_PSN,HD_LGC_PSN,BLKS_READ_CNT,BLKS_ERR_RATE_10,BLKS_RETRIED_CNT,FREE_RTY_CNT,HIDDEN_RTY_CNT,VISIBLE_RTY_CNT,NON_RCVRBL_RTY_CNT,BLKS_REPEATED_RTYS_CNT,LOOPS_CNT
//      P304_RTY_SUMMARY_COL_WIDTH                 //          11,        10,           13,              16,              16,          12,            14,             15,                18,                    22,        9
//      P304_RTY_SUMMARY_COL_MASK                  //           1,         1,            1,               1,               1,           1,             1,              1,                 1,                     1,        1
//      P304_RTY_SUMMARY_COL_TYPES                 //           N,         N,            N,               N,               N,           N,             N,              N,                 N,                     N,        N
//      P304_RTY_SUMMARY_TABLE_TYPE                // S
#define P304_HD_ZN_RTY                       1785  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BLKS_READ_CNT,BLKS_ERR_RATE_10,BLKS_RETRIED_CNT,FREE_RTY_CNT,HIDDEN_RTY_CNT,VISIBLE_RTY_CNT,NON_RCVRBL_RTY_CNT,LOOPS_CNT
//      P304_HD_ZN_RTY_COL_WIDTH                   //          11,        9,        10,           13,              16,              16,          12,            14,             15,                18,        9
//      P304_HD_ZN_RTY_COL_MASK                    //           1,        1,         1,            1,               1,               1,           1,             1,              1,                 1,        1
//      P304_HD_ZN_RTY_COL_TYPES                   //           N,        N,         N,            N,               N,               N,           N,             N,              N,                 N,        N
//      P304_HD_ZN_RTY_TABLE_TYPE                  // S
#define P304_RETRY_TABLE                     1786  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,SECTOR,PBA_NUMBER,LBA_NUMBER,REPEAT_COUNT,READ_WRITE,FREE_RTY,VISIBLE_RTY,HIDDEN_RTY,NON_RCVRBL_ERR
//      P304_RETRY_TABLE_COL_WIDTH                 //          11,        10,       8,     6,        10,        10,          12,        10,       8,         11,        10,            14
//      P304_RETRY_TABLE_COL_MASK                  //           1,         1,       1,     1,         1,         1,           1,         1,       1,          1,         1,             1
//      P304_RETRY_TABLE_COL_TYPES                 //           N,         N,       N,     N,         N,         N,           N,         N,       N,          N,         N,             N
//      P304_RETRY_TABLE_TABLE_TYPE                // S
#define P_SERVO_WRT_DELAY                    1787  // HD_PHYS_PSN,HD_LGC_PSN,ID_CYL,NORMALIZED_ID_CYL,WRT_RD_GAP
//      P_SERVO_WRT_DELAY_COL_WIDTH                //          11,        10,     8,               17,        10
//      P_SERVO_WRT_DELAY_COL_MASK                 //           1,         1,     1,                1,         1
//      P_SERVO_WRT_DELAY_COL_TYPES                //           N,         N,     N,                N,         N
//      P_SERVO_WRT_DELAY_TABLE_TYPE               // S
#define P_SERVO_GAP_CAL_INFO                 1788  // HD_PHYS_PSN,HD_LGC_PSN,LGC_CYL,CMD_TYPE,TGT_DELAY,SUB_CMD,SERVO_STATUS,CMD_STATUS
//      P_SERVO_GAP_CAL_INFO_COL_WIDTH             //          11,        10,      8,       8,        9,      7,          12,        10
//      P_SERVO_GAP_CAL_INFO_COL_MASK              //           0,         0,      0,       0,        0,      0,           0,         0
//      P_SERVO_GAP_CAL_INFO_COL_TYPES             // *
//      P_SERVO_GAP_CAL_INFO_TABLE_TYPE            // S
#define P_GAP_DLY_PAD_INFO                   1789  // HD_PHYS_PSN,HD_LGC_PSN,ZERO_SKEW_TRK,CALC_GAP_PAD
//      P_GAP_DLY_PAD_INFO_COL_WIDTH               //          11,        10,           13,          12
//      P_GAP_DLY_PAD_INFO_COL_MASK                //           0,         0,            0,           0
//      P_GAP_DLY_PAD_INFO_COL_TYPES               // *
//      P_GAP_DLY_PAD_INFO_TABLE_TYPE              // S
#define P176_TEST_INFO                       1790  // NOMINAL_GAP,MAX_RADIUS,SERVO_FREQ,CAL_RSVD_ZONE,ZONED_SERVO,SYNCLESS_ZAP,USE_DEFAULTS,AUTO_PAD_CALC
//      P176_TEST_INFO_COL_WIDTH                   //          11,        10,        10,           13,         11,          12,          12,           13
//      P176_TEST_INFO_COL_MASK                    //           0,         0,         0,            0,          0,           0,           0,            0
//      P176_TEST_INFO_COL_TYPES                   // *
//      P176_TEST_INFO_TABLE_TYPE                  // S
#define P_GAP_CAL_FAULT_INFO                 1791  // HD_PHYS_PSN,HD_LGC_PSN,LGC_CYL,TARGET_DELAY,FAULT_STATUS
//      P_GAP_CAL_FAULT_INFO_COL_WIDTH             //          11,        10,      8,          12,          12
//      P_GAP_CAL_FAULT_INFO_COL_MASK              //           0,         0,      0,           0,           0
//      P_GAP_CAL_FAULT_INFO_COL_TYPES             // *
//      P_GAP_CAL_FAULT_INFO_TABLE_TYPE            // S
#define P109_RZFS_STATS                      1792  // HEAD,TOTAL_TRKS,REL_TRKS,FAIL_REL,NRWC,RWC,RR0_DIV,ZERO_ZAP,3_SIGMA,MAX_ABS,VELOCITY,3_SIGMA_MA,MISSED_REV,ZAP_PAR,ITRTN_TRK,REV_ITRTN
//      P109_RZFS_STATS_COL_WIDTH                  //    8,        12,      10,      10,  10, 10,     10,      10,     10,     10,      10,        10,        12,     10,       10,       10
//      P109_RZFS_STATS_COL_MASK                   //    0,         0,       0,       0,   0,  0,      0,       0,      0,      0,       0,         0,         0,      0,        0,        0
//      P109_RZFS_STATS_COL_TYPES                  // *
//      P109_RZFS_STATS_TABLE_TYPE                 // S
#define P275_EPBI_THRESHOLD                  1793  // 3_SIGMA,MAX_ABS,3_SIGMA_MA,NRRO
//      P275_EPBI_THRESHOLD_COL_WIDTH              //      10,     10,        10,  10
//      P275_EPBI_THRESHOLD_COL_MASK               //       0,      0,         0,   0
//      P275_EPBI_THRESHOLD_COL_TYPES              // *
//      P275_EPBI_THRESHOLD_TABLE_TYPE             // S
#define P275_EPBI_SUMMARY                    1794  // HD_PHYS_PSN,HD_LGC_PSN,TOTAL_TRKS,TOTAL_ITER,3_SIGMA,MAX_ABS,3_SIGMA_MA,NRRO,ZFS_RETRY,ZONE0
//      P275_EPBI_SUMMARY_COL_WIDTH                //          11,        10,        12,        10,     10,     10,        10,  10,       10,   10
//      P275_EPBI_SUMMARY_COL_MASK                 //           0,         0,         0,         0,      0,      0,         0,   0,        0,    0
//      P275_EPBI_SUMMARY_COL_TYPES                // *
//      P275_EPBI_SUMMARY_TABLE_TYPE               // V
#define P109_RZFS_SUMMARY                    1795  // HD_PHYS_PSN,HD_LGC_PSN,TOTAL_TRKS,REL_TRKS,FAIL_REL,NRWC,RWC,ZERO_ZAP,MISSED_REV,ITRTN_TRK,REV_ITRTN
//      P109_RZFS_SUMMARY_COL_WIDTH                //          11,        10,        12,      10,      10,  10, 10,      10,        12,       10,       10
//      P109_RZFS_SUMMARY_COL_MASK                 //           0,         0,         0,       0,       0,   0,  0,       0,         0,        0,        0
//      P109_RZFS_SUMMARY_COL_TYPES                // *
//      P109_RZFS_SUMMARY_TABLE_TYPE               // V
#define P451_RGSTR_SWEEP_MARVELL             1796  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RGSTR_ID,TEST_ORDER,RGSTR_VAL,RGSTR_BER,RGSTR_BIE,ITERATIONS,CW_FR,AGC,TAP2,TAP3,TAP4,TAP5
//      P451_RGSTR_SWEEP_MARVELL_COL_WIDTH         //          11,        10,        9,       8,        10,        9,        9,        9,        10,    5,  3,   4,   4,   4,   4
//      P451_RGSTR_SWEEP_MARVELL_COL_MASK          //           0,         0,        0,       0,         0,        0,        0,        0,         0,    0,  0,   0,   0,   0,   0
//      P451_RGSTR_SWEEP_MARVELL_COL_TYPES         // *
//      P451_RGSTR_SWEEP_MARVELL_TABLE_TYPE        // S
#define P451_FIR_TAPS_MARVELL                1797  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TEST_ORDER,TAP0,TAP1,TAP2,TAP3,TAP4,TAP5,TAP6,TAP7,TAP8,TAP9,OUTSCALE
//      P451_FIR_TAPS_MARVELL_COL_WIDTH            //          11,        10,        9,        10,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,       8
//      P451_FIR_TAPS_MARVELL_COL_MASK             //           0,         0,        0,         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,       0
//      P451_FIR_TAPS_MARVELL_COL_TYPES            // *
//      P451_FIR_TAPS_MARVELL_TABLE_TYPE           // S
#define P451_NLD_PARAMS                      1798  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TEST_ORDER,PARAM,NLD_S0,NLD_S1,NLD_S2,NLD_S3,NLD_S4,NLD_S5,NLD_S6,NLD_S7,NLD_S8,NLD_S9,NLD_S10,NLD_S11,NLD_S12,NLD_S13,NLD_S14,NLD_S15
//      P451_NLD_PARAMS_COL_WIDTH                  //          11,        10,        9,        10,    5,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,      7,      7,      7,      7,      7,      7
//      P451_NLD_PARAMS_COL_MASK                   //           0,         0,        0,         0,    0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,      0,      0,      0,      0,      0,      0
//      P451_NLD_PARAMS_COL_TYPES                  // *
//      P451_NLD_PARAMS_TABLE_TYPE                 // S
#define P451_NRB_PARAMS                      1799  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TEST_ORDER,PARAM,NRB_S0,NRB_S1,NRB_S2,NRB_S3,NRB_S4,NRB_S5,NRB_S6,NRB_S7,NRB_S8,NRB_S9,NRB_S10,NRB_S11,NRB_S12,NRB_S13,NRB_S14,NRB_S15
//      P451_NRB_PARAMS_COL_WIDTH                  //          11,        10,        9,        10,    5,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,      7,      7,      7,      7,      7,      7
//      P451_NRB_PARAMS_COL_MASK                   //           0,         0,        0,         0,    0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,      0,      0,      0,      0,      0,      0
//      P451_NRB_PARAMS_COL_TYPES                  // *
//      P451_NRB_PARAMS_TABLE_TYPE                 // S
#define P282_SCORING_NOTCH_INFO              1800  // HD_PHYS_PSN,HD_LGC_PSN,TEST_CYL,B0_COEFF,FAILED_FREQ
//      P282_SCORING_NOTCH_INFO_COL_WIDTH          //          11,        10,       8,       8,         11
//      P282_SCORING_NOTCH_INFO_COL_MASK           //           0,         0,       0,       0,          0
//      P282_SCORING_NOTCH_INFO_COL_TYPES          // *
//      P282_SCORING_NOTCH_INFO_TABLE_TYPE         // S
#define P191_SURFACE_COEFS                   1801  // HD_PHYS_PSN,HD_LGC_PSN,ACTIVE_HEATER,ACTUATION_MODE,REGRES_TERM,COEF_VALUE,AFH_COEF
//      P191_SURFACE_COEFS_COL_WIDTH               //          11,        10,           13,            14,         11,        10,       8
//      P191_SURFACE_COEFS_COL_MASK                //           1,         1,            1,             1,          1,         1,       1
//      P191_SURFACE_COEFS_COL_TYPES               //           N,         N,            V,             V,          V,         V,       V
//      P191_SURFACE_COEFS_TABLE_TYPE              // S
#define P334_DWELL_SLIST                     1802  // HD_PHYS_PSN,HD_LGC_PSN,DFCT_CYL
//      P334_DWELL_SLIST_COL_WIDTH                 //          11,        10,       8
//      P334_DWELL_SLIST_COL_MASK                  //           0,         0,       0
//      P334_DWELL_SLIST_COL_TYPES                 // *
//      P334_DWELL_SLIST_TABLE_TYPE                // S
#define P400_FUNCTION_RESULT                 1803  // *
//      P400_FUNCTION_RESULT_COL_WIDTH             // 5
//      P400_FUNCTION_RESULT_COL_MASK              // 0
//      P400_FUNCTION_RESULT_COL_TYPES             // *
//      P400_FUNCTION_RESULT_TABLE_TYPE            // S
#define P_FASTIO_ERROR_COUNT                 1804  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,TOTAL,SRVO_RD_HEAT_ERR,HTR_CNTRL_ERR,SRVO_MISSED_SAMPLE,NON_SPECIFIC,LOOP_CODE_ERR,MISSING_TIMING_MARK,UNSAFE_PES,UNSAFE_PES_SETTLE,UNSAFE_BAD_SAMPLE,UNSAFE_SHOCK
//      P_FASTIO_ERROR_COUNT_COL_WIDTH             //          11,        10,        9,      8,    6,              16,           13,                18,          12,           13,                 19,        10,               17,               17,          12
//      P_FASTIO_ERROR_COUNT_COL_MASK              //           0,         0,        0,      0,    0,               0,            0,                 0,           0,            0,                  0,         0,                0,                0,           0
//      P_FASTIO_ERROR_COUNT_COL_TYPES             // *
//      P_FASTIO_ERROR_COUNT_TABLE_TYPE            // S
#define P074_AR_ACT_RAW_DATA                 1805  // INDEX,HEATER_DAC,HF_MAGNITUDE,LF_MAGNITUDE,HIRP,HIWP,AR
//      P074_AR_ACT_RAW_DATA_COL_WIDTH             //     5,        10,          12,          12,   6,   6, 5
//      P074_AR_ACT_RAW_DATA_COL_MASK              //     0,         0,           0,           0,   0,   0, 0
//      P074_AR_ACT_RAW_DATA_COL_TYPES             // *
//      P074_AR_ACT_RAW_DATA_TABLE_TYPE            // S
#define P074_AR_REF_RAW_DATA                 1806  // INDEX,HEATER_DAC,HF_MAGNITUDE,LF_MAGNITUDE
//      P074_AR_REF_RAW_DATA_COL_WIDTH             //     5,        10,          12,          12
//      P074_AR_REF_RAW_DATA_COL_MASK              //     0,         0,           0,           0
//      P074_AR_REF_RAW_DATA_COL_TYPES             // *
//      P074_AR_REF_RAW_DATA_TABLE_TYPE            // S
#define P074_PASSIVE_CLR_CAL                 1807  // HD_PHYS_PSN,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,DIAMETER,HF_MAGNITUDE,LF_MAGNITUDE,CLR_SLOPE,REF_AR,RESIDUAL_STDEV,DIODE_TEMP,CHAN_TEMP,MIX_RATIO,JULIAN_DATE
//      P074_PASSIVE_CLR_CAL_COL_WIDTH             //          11,        10,         11,         11,       8,          12,          12,        9,     6,            14,        10,        9,        9,         15
//      P074_PASSIVE_CLR_CAL_COL_MASK              //           0,         0,          0,          0,       0,           0,           0,        0,     0,             0,         0,        0,        0,          0
//      P074_PASSIVE_CLR_CAL_COL_TYPES             // *
//      P074_PASSIVE_CLR_CAL_TABLE_TYPE            // S
#define P074_PASSIVE_CLR                     1808  // HD_PHYS_PSN,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,DIAMETER,HF_MAGNITUDE,LF_MAGNITUDE,CURRENT_AR,PASSIVE_CLR_DELTA,PASSIVE_CLR,DIODE_TEMP,CHAN_TEMP,MIX_RATIO,JULIAN_DATE
//      P074_PASSIVE_CLR_COL_WIDTH                 //          11,        10,         11,         11,       8,          12,          12,        10,               17,         11,        10,        9,        9,         15
//      P074_PASSIVE_CLR_COL_MASK                  //           0,         0,          0,          0,       0,           0,           0,         0,                0,          0,         0,        0,        0,          0
//      P074_PASSIVE_CLR_COL_TYPES                 // *
//      P074_PASSIVE_CLR_TABLE_TYPE                // S
#define P074_FAFH_AR_PASSIVE_CLR             1809  // DIAMETER,HEAD,REF_AR,CLR_SLOPE
//      P074_FAFH_AR_PASSIVE_CLR_COL_WIDTH         //        8,   4,     9,        9
//      P074_FAFH_AR_PASSIVE_CLR_COL_MASK          //        0,   0,     0,        0
//      P074_FAFH_AR_PASSIVE_CLR_COL_TYPES         // *
//      P074_FAFH_AR_PASSIVE_CLR_TABLE_TYPE        // S
#define P460_CODEWORDS_DATA                  1810  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,SECTOR,BIE0,ITR0,BIE1,ITR1,SQZ_OD,SQZ_ID,FLY_HGHT
//      P460_CODEWORDS_DATA_COL_WIDTH              //          11,        10,        9,      7,     6,   5,   5,   5,   5,     6,     6,       8
//      P460_CODEWORDS_DATA_COL_MASK               //           0,         0,        0,      0,     0,   0,   0,   0,   0,     0,     0,       0
//      P460_CODEWORDS_DATA_COL_TYPES              // *
//      P460_CODEWORDS_DATA_TABLE_TYPE             // S
#define P460_NCCODEWORDS_DATA                1811  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,SECTOR,BIE0,ITR0,BIE1,ITR1,SQZ_OD,SQZ_ID,FLY_HGHT
//      P460_NCCODEWORDS_DATA_COL_WIDTH            //          11,        10,        9,      7,     6,   5,   5,   5,   5,     6,     6,       8
//      P460_NCCODEWORDS_DATA_COL_MASK             //           0,         0,        0,      0,     0,   0,   0,   0,   0,     0,     0,       0
//      P460_NCCODEWORDS_DATA_COL_TYPES            // *
//      P460_NCCODEWORDS_DATA_TABLE_TYPE           // S
#define P275_ZAP_SEEK_INFO                   1812  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SKIP_TRK_CNT,ALLOWED_SKIPS
//      P275_ZAP_SEEK_INFO_COL_WIDTH               //          11,        10,      9,          12,           13
//      P275_ZAP_SEEK_INFO_COL_MASK                //           0,         0,      0,           0,            0
//      P275_ZAP_SEEK_INFO_COL_TYPES               // *
//      P275_ZAP_SEEK_INFO_TABLE_TYPE              // S
#define P238_MRDR_FIGURE_OF_MERIT            1813  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,FOM
//      P238_MRDR_FIGURE_OF_MERIT_COL_WIDTH        //          11,        10,          12,         11,  5
//      P238_MRDR_FIGURE_OF_MERIT_COL_MASK         //           0,         0,           0,          0,  0
//      P238_MRDR_FIGURE_OF_MERIT_COL_TYPES        // *
//      P238_MRDR_FIGURE_OF_MERIT_TABLE_TYPE       // V
#define P238_MRDR_UJOG_CAL                   1814  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,R0_MICRO_JOG_OFFSET,R0_DELTA_OFFSET,R1_MICRO_JOG_OFFSET,R1_DELTA_OFFSET,R1_R0_OFFSET,R1_R0_CENTER
//      P238_MRDR_UJOG_CAL_COL_WIDTH               //          11,        10,      7,                 19,             15,                 19,             15,          12,          12
//      P238_MRDR_UJOG_CAL_COL_MASK                //           0,         0,      0,                  0,              0,                  0,              0,           0,           0
//      P238_MRDR_UJOG_CAL_COL_TYPES               // *
//      P238_MRDR_UJOG_CAL_TABLE_TYPE              // M
#define P238_MRDR_UJOG_BUCKET                1815  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,ZONE,TRK_NUM,OFFSET,VGA,ADJ_VGA,FITNESS,SIGMA,SENSE,RETRY,TOTAL_ERR,SYNC_ERR,ECC_ERR,ERR_RATE
//      P238_MRDR_UJOG_BUCKET_COL_WIDTH            //          11,        10,          12,         11,   4,      7,     6,  3,      7,      7,    5,    8,    5,        9,       8,      7,       8
//      P238_MRDR_UJOG_BUCKET_COL_MASK             //           0,         0,           0,          0,   0,      0,     0,  0,      0,      0,    0,    0,    0,        0,       0,      0,       0
//      P238_MRDR_UJOG_BUCKET_COL_TYPES            // *
//      P238_MRDR_UJOG_BUCKET_TABLE_TYPE           // S
#define P_TEST_CYL_CHANGED                   1816  // TEST_NUM,HD_PHYS_PSN,HD_LGC_PSN,INIT_ZONE,NEW_ZONE,INIT_CYL,NEW_CYL,REASON
//      P_TEST_CYL_CHANGED_COL_WIDTH               //        8,         11,        10,        9,       9,       9,      9,    16
//      P_TEST_CYL_CHANGED_COL_MASK                //        0,          0,         0,        0,       0,       0,      0,     0
//      P_TEST_CYL_CHANGED_COL_TYPES               // *
//      P_TEST_CYL_CHANGED_TABLE_TYPE              // S
#define P135_AFH3_AFH2_CLR_DELTA             1817  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ACTIVE_HEATER,CONTACT_DAC,WRITE_CLR,READ_CLR,AFH2_CLR
//      P135_AFH3_AFH2_CLR_DELTA_COL_WIDTH         //          11,        10,        9,           13,         11,        9,       8,       8
//      P135_AFH3_AFH2_CLR_DELTA_COL_MASK          //           0,         0,        0,            0,          0,        0,       0,       0
//      P135_AFH3_AFH2_CLR_DELTA_COL_TYPES         // *
//      P135_AFH3_AFH2_CLR_DELTA_TABLE_TYPE        // S
#define P_ZEST_MASTER_HEADER                 1818  // *
//      P_ZEST_MASTER_HEADER_COL_WIDTH             // 1
//      P_ZEST_MASTER_HEADER_COL_MASK              // 0
//      P_ZEST_MASTER_HEADER_COL_TYPES             // *
//      P_ZEST_MASTER_HEADER_TABLE_TYPE            // S
#define P_ZEST_SEGMENT_HEADER                1819  // *
//      P_ZEST_SEGMENT_HEADER_COL_WIDTH            // 1
//      P_ZEST_SEGMENT_HEADER_COL_MASK             // 0
//      P_ZEST_SEGMENT_HEADER_COL_TYPES            // *
//      P_ZEST_SEGMENT_HEADER_TABLE_TYPE           // S
#define P_ZEST_SEGMENT_DATA                  1820  // *
//      P_ZEST_SEGMENT_DATA_COL_WIDTH              // 1
//      P_ZEST_SEGMENT_DATA_COL_MASK               // 0
//      P_ZEST_SEGMENT_DATA_COL_TYPES              // *
//      P_ZEST_SEGMENT_DATA_TABLE_TYPE             // S
#define P172_ACTUATION_COEFS                 1821  // HD_PHYS_PSN,HD_LGC_PSN,AFH_COEF,RH_COEF_VALUE,WH_COEF_VALUE
//      P172_ACTUATION_COEFS_COL_WIDTH             //          11,        11,       8,           13,           13
//      P172_ACTUATION_COEFS_COL_MASK              //           0,         0,       0,            0,            0
//      P172_ACTUATION_COEFS_COL_TYPES             // *
//      P172_ACTUATION_COEFS_TABLE_TYPE            // S
#define P172_WRITE_DELTA_COEFS               1822  // HD_PHYS_PSN,HD_LGC_PSN,AFH_COEF,COEF_VALUE
//      P172_WRITE_DELTA_COEFS_COL_WIDTH           //          11,        10,      11,        10
//      P172_WRITE_DELTA_COEFS_COL_MASK            //           0,         0,       0,         0
//      P172_WRITE_DELTA_COEFS_COL_TYPES           // *
//      P172_WRITE_DELTA_COEFS_TABLE_TYPE          // S
#define P025_LOAD_UNLOAD_PARAMS3             1823  // CYCLE_NUM,REVERSE_IPS
//      P025_LOAD_UNLOAD_PARAMS3_COL_WIDTH         //         9,         11
//      P025_LOAD_UNLOAD_PARAMS3_COL_MASK          //         0,          0
//      P025_LOAD_UNLOAD_PARAMS3_COL_TYPES         // *
//      P025_LOAD_UNLOAD_PARAMS3_TABLE_TYPE        // S
#define P025_UNLOAD_STAT2                    1824  // STAT_NAME,REVERSE_IPS
//      P025_UNLOAD_STAT2_COL_WIDTH                //         9,         11
//      P025_UNLOAD_STAT2_COL_MASK                 //         0,          0
//      P025_UNLOAD_STAT2_COL_TYPES                // *
//      P025_UNLOAD_STAT2_TABLE_TYPE               // V
#define P_GAP_CAL_SKIP_FLAG_SET              1825  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM
//      P_GAP_CAL_SKIP_FLAG_SET_COL_WIDTH          //          11,        10,      7
//      P_GAP_CAL_SKIP_FLAG_SET_COL_MASK           //           0,         0,      0
//      P_GAP_CAL_SKIP_FLAG_SET_COL_TYPES          // *
//      P_GAP_CAL_SKIP_FLAG_SET_TABLE_TYPE         // S
#define P056_NOMINAL_PZT_VALUES              1826  // NOMINAL_PZT_GAIN,NOMINAL_PZT_STROKE
//      P056_NOMINAL_PZT_VALUES_COL_WIDTH          //               16,                18
//      P056_NOMINAL_PZT_VALUES_COL_MASK           //                0,                 0
//      P056_NOMINAL_PZT_VALUES_COL_TYPES          // *
//      P056_NOMINAL_PZT_VALUES_TABLE_TYPE         // S
#define P056_UACT_CAL_VALUES                 1827  // HD_PHYS_PSN,HD_LGC_PSN,AVG_DAC_GAIN,K_DAC,FAIL_CODE
//      P056_UACT_CAL_VALUES_COL_WIDTH             //          11,        10,          12,    6,        9
//      P056_UACT_CAL_VALUES_COL_MASK              //           1,         1,           1,    1,        1
//      P056_UACT_CAL_VALUES_COL_TYPES             //           N,         N,           N,    N,        V
//      P056_UACT_CAL_VALUES_TABLE_TYPE            // S
#define P265_PIN_REVERSAL_TEST               1828  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CYLINDER,HD_PIN_FLIP_STATUS,STATUS_CODE,OVRSHT_AMP,OVRSHT_DUR,WRT_CUR_DAC
//      P265_PIN_REVERSAL_TEST_COL_WIDTH           //          11,        9,        10,       8,                18,         11,        10,        10,         11
//      P265_PIN_REVERSAL_TEST_COL_MASK            //           0,        0,         0,       0,                 0,          0,         0,         0,          0
//      P265_PIN_REVERSAL_TEST_COL_TYPES           // *
//      P265_PIN_REVERSAL_TEST_TABLE_TYPE          // S
#define P460_NCCWS_REREAD_DATA               1829  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,SECTOR,CW_INDX,BIE_MAX,BIE_MIN,BIE_AVE,ITR_MAX,ITR_MIN,ITR_AVE,PERC_UCCW,SQZ_OD,SQZ_ID,FLY_HGHT
//      P460_NCCWS_REREAD_DATA_COL_WIDTH           //          11,        10,        9,      7,     6,      7,     10,     10,     10,     10,     10,     10,        9,     6,     6,       8
//      P460_NCCWS_REREAD_DATA_COL_MASK            //           0,         0,        0,      0,     0,      0,      0,      0,      0,      0,      0,      0,        0,     0,     0,       0
//      P460_NCCWS_REREAD_DATA_COL_TYPES           // *
//      P460_NCCWS_REREAD_DATA_TABLE_TYPE          // S
#define P460_STAT_DATA                       1830  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,AVE_BIE,STD_DEV_BIE,BIE_REQE_PERC,AVE_BIE_TO_BER,STD_DEV_BIE_TO_BER,BIE_REQE_PERC_TO_BER,AVE_ITR,STD_DEV_ITR,ITR_REQE_PERC,ITR_PERC_N_MORE,UCCWS_RATIO,SQZ_OD,SQZ_ID,FLY_HGHT
//      P460_STAT_DATA_COL_WIDTH                   //          11,        10,        9,      7,      7,         11,           13,            14,                18,                  20,      7,         11,           13,             15,         11,     6,     6,       8
//      P460_STAT_DATA_COL_MASK                    //           0,         0,        0,      0,      0,          0,            0,             0,                 0,                   0,      0,          0,            0,              0,          0,     0,     0,       0
//      P460_STAT_DATA_COL_TYPES                   // *
//      P460_STAT_DATA_TABLE_TYPE                  // S
#define P460_REREAD_STAT_DATA                1831  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,AVE_BIE,STD_DEV_BIE,AVE_BIE_TO_BER,STD_DEV_BIE_TO_BER,AVE_ITR,STD_DEV_ITR,UCCWS_RATIO,SQZ_OD,SQZ_ID,FLY_HGHT
//      P460_REREAD_STAT_DATA_COL_WIDTH            //          11,        10,        9,      7,      7,         11,            14,                18,      7,         11,         11,     6,     6,       8
//      P460_REREAD_STAT_DATA_COL_MASK             //           0,         0,        0,      0,      0,          0,             0,                 0,      0,          0,          0,     0,     0,       0
//      P460_REREAD_STAT_DATA_COL_TYPES            // *
//      P460_REREAD_STAT_DATA_TABLE_TYPE           // S
#define P194_REVERTED_RRO_MEASURE            1832  // HD_PHYS_PSN,SEEK_DIR,ATS_ZONE,ITERATION,HD_LGC_PSN,MABS_RRO
//      P194_REVERTED_RRO_MEASURE_COL_WIDTH        //          11,       8,       8,        9,        10,       8
//      P194_REVERTED_RRO_MEASURE_COL_MASK         //           0,       0,       0,        0,         0,       0
//      P194_REVERTED_RRO_MEASURE_COL_TYPES        // *
//      P194_REVERTED_RRO_MEASURE_TABLE_TYPE       // S
#define P185_FCO_SECTOR_VALUES               1833  // HD_PHYS_PSN,HD_LGC_PSN,FCO_VALUE,EXIT_SECTOR
//      P185_FCO_SECTOR_VALUES_COL_WIDTH           //          11,        10,        9,         11
//      P185_FCO_SECTOR_VALUES_COL_MASK            //           0,         0,        0,          0
//      P185_FCO_SECTOR_VALUES_COL_TYPES           // *
//      P185_FCO_SECTOR_VALUES_TABLE_TYPE          // S
#define P185_FINAL_COEFF_VALUES              1834  // HD_PHYS_PSN,HD_LGC_PSN,FCO_MEAN,FCO_MIN,FCO_MAX,XX_COEFF0,XX_COEFF1,XX_COEFF2,FCO_FINAL
//      P185_FINAL_COEFF_VALUES_COL_WIDTH          //          11,        10,       8,      7,      7,        9,        9,        9,        9
//      P185_FINAL_COEFF_VALUES_COL_MASK           //           0,         0,       0,      0,      0,        0,        0,        0,        0
//      P185_FINAL_COEFF_VALUES_COL_TYPES          // *
//      P185_FINAL_COEFF_VALUES_TABLE_TYPE         // S
#define P451_OPTI_NPT_DATA                   1835  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TEST_ORDER,NPT0,NPT1,NPT2,NPT3,NPT4,RGSTR_ID,OPTI_VAL,OPTI_BER,OPTI_BIE,ITERATIONS
//      P451_OPTI_NPT_DATA_COL_WIDTH               //          11,        10,        9,        10,   4,   4,   4,   4,   4,       8,       8,       8,       8,        10
//      P451_OPTI_NPT_DATA_COL_MASK                //           0,         0,        0,         0,   0,   0,   0,   0,   0,       0,       0,       0,       0,         0
//      P451_OPTI_NPT_DATA_COL_TYPES               // *
//      P451_OPTI_NPT_DATA_TABLE_TYPE              // S
#define P_DETCR_ENABLE                       1836  // REV,ENABLED,CURRENT_TYPE,BIAS_MODE
//      P_DETCR_ENABLE_COL_WIDTH                   //   3,      7,          12,        9
//      P_DETCR_ENABLE_COL_MASK                    //   0,      0,           0,        0
//      P_DETCR_ENABLE_COL_TYPES                   // *
//      P_DETCR_ENABLE_TABLE_TYPE                        // S
#define P_DETCR_AC_SUMMARY                   1837  // WRITE_EN,BIAS,GAIN,ED_GAIN,LP_FILTER,HP_FILTER,ED_FILTER,COUNT,MODE_BLNK_TIME,MODE_BLNK_TIME_RANGE,HEATER_BLNK_TIME,TAVD_BLANK_TIME
//      P_DETCR_AC_SUMMARY_COL_WIDTH               //        8,   4,   4,      7,        9,        9,        9,    5,            14,                  20,              16,             15
//      P_DETCR_AC_SUMMARY_COL_MASK                //        0,   0,   0,      0,        0,        0,        0,    0,             0,                   0,               0,              0
//      P_DETCR_AC_SUMMARY_COL_TYPES               // *
//      P_DETCR_AC_SUMMARY_TABLE_TYPE              // S
#define P_DETCR_AC_COMPARATOR                1838  // ENABLED,TA,VOID,POLARITY,IND_THRESH,POS_THRESH,POS_THRESH_RANGE,NEG_THRESH,NEG_THRESH_RANGE
//      P_DETCR_AC_COMPARATOR_COL_WIDTH            //       7, 2,   4,       8,        10,        10,              16,        10,              16
//      P_DETCR_AC_COMPARATOR_COL_MASK             //       0, 0,   0,       0,         0,         0,               0,         0,               0
//      P_DETCR_AC_COMPARATOR_COL_TYPES            // *
//      P_DETCR_AC_COMPARATOR_TABLE_TYPE           // S
#define P_DETCR_DC_SUMMARY                   1839  // GAIN,GAIN_RANGE,LP_FILTER,OFFSET_CANCEL,OFFSET_CANCEL_RANGE
//      P_DETCR_DC_SUMMARY_COL_WIDTH               //    4,        10,        9,           13,                 19
//      P_DETCR_DC_SUMMARY_COL_MASK                //    0,         0,        0,            0,                  0
//      P_DETCR_DC_SUMMARY_COL_TYPES               // *
//      P_DETCR_DC_SUMMARY_TABLE_TYPE              // S
#define P_SEEK_FAILURE_DATA                  1840  // REPORTING_MODULE,HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,ERROR_CODE
//      P_SEEK_FAILURE_DATA_COL_WIDTH              //               16,         11,        10,      7,        10
//      P_SEEK_FAILURE_DATA_COL_MASK               //                0,          0,         0,      0,         0
//      P_SEEK_FAILURE_DATA_COL_TYPES              // *
//      P_SEEK_FAILURE_DATA_TABLE_TYPE             // S
#define P425_PDW_CAL_SWEEP                   1841  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,FRAC_OS,DELAY,PHASE_STATUS,ERROR_RATE,BITS_IN_ERR,ITERATIONS,CW_FR,FLT_REG
//      P425_PDW_CAL_SWEEP_COL_WIDTH               //          11,        10,        9,      7,      7,    5,          12,        10,         11,        10,    5,      7
//      P425_PDW_CAL_SWEEP_COL_MASK                //           0,         0,        0,      0,      0,    0,           0,         0,          0,         0,    0,      0
//      P425_PDW_CAL_SWEEP_COL_TYPES               // *
//      P425_PDW_CAL_SWEEP_TABLE_TYPE              // S
#define P425_PDW_CAL_RESULTS                 1842  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,INIT_PSTATUS,FLIP1,FLIP2,CALC_FRAC_OS,BIT_OS,FRAC_OS,PHASE_DELAY,MODE,CHAN_FREQ
//      P425_PDW_CAL_RESULTS_COL_WIDTH             //          11,        10,        9,      7,          12,    5,    5,          12,     6,      7,         11,   4,        9
//      P425_PDW_CAL_RESULTS_COL_MASK              //           0,         0,        0,      0,           0,    0,    0,           0,     0,      0,          0,   0,        0
//      P425_PDW_CAL_RESULTS_COL_TYPES             // *
//      P425_PDW_CAL_RESULTS_TABLE_TYPE            // S
#define P159_PZT_OXID_DETECTED               1843  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_PZT_OXID_DETECTED_COL_WIDTH           // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_PZT_OXID_DETECTED_COL_MASK            // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_PZT_OXID_DETECTED_COL_TYPES           // *
//      P159_PZT_OXID_DETECTED_TABLE_TYPE          // S
#define P159_INTR_SMPL_MOVE_BIN              1844  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_INTR_SMPL_MOVE_BIN_COL_WIDTH          // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_INTR_SMPL_MOVE_BIN_COL_MASK           // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_INTR_SMPL_MOVE_BIN_COL_TYPES          // *
//      P159_INTR_SMPL_MOVE_BIN_TABLE_TYPE         // S
#define P159_TRACKING_RECOVERY               1845  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_TRACKING_RECOVERY_COL_WIDTH           // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_TRACKING_RECOVERY_COL_MASK            // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_TRACKING_RECOVERY_COL_TYPES           // *
//      P159_TRACKING_RECOVERY_TABLE_TYPE          // S
#define P159_SEEK_RECOVERY                   1846  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_SEEK_RECOVERY_COL_WIDTH               // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_SEEK_RECOVERY_COL_MASK                // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_SEEK_RECOVERY_COL_TYPES               // *
//      P159_SEEK_RECOVERY_TABLE_TYPE              // S
#define P159_DUAL_STAGE_LOCK_OUT             1847  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_DUAL_STAGE_LOCK_OUT_COL_WIDTH         // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_DUAL_STAGE_LOCK_OUT_COL_MASK          // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_DUAL_STAGE_LOCK_OUT_COL_TYPES         // *
//      P159_DUAL_STAGE_LOCK_OUT_TABLE_TYPE        // S
#define P159_DLC_CAP_ONTRK_DTECT             1848  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_DLC_CAP_ONTRK_DTECT_COL_WIDTH         // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_DLC_CAP_ONTRK_DTECT_COL_MASK          // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_DLC_CAP_ONTRK_DTECT_COL_TYPES         // *
//      P159_DLC_CAP_ONTRK_DTECT_TABLE_TYPE        // S
#define P159_TERMINATE_TRACKING              1849  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_TERMINATE_TRACKING_COL_WIDTH          // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_TERMINATE_TRACKING_COL_MASK           // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_TERMINATE_TRACKING_COL_TYPES          // *
//      P159_TERMINATE_TRACKING_TABLE_TYPE         // S
#define P159_TERMINATE_SEEKING               1850  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_TERMINATE_SEEKING_COL_WIDTH           // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_TERMINATE_SEEKING_COL_MASK            // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_TERMINATE_SEEKING_COL_TYPES           // *
//      P159_TERMINATE_SEEKING_TABLE_TYPE          // S
#define P159_SMPL_SNSR_DTECT_SHK             1851  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_SMPL_SNSR_DTECT_SHK_COL_WIDTH         // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_SMPL_SNSR_DTECT_SHK_COL_MASK          // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_SMPL_SNSR_DTECT_SHK_COL_TYPES         // *
//      P159_SMPL_SNSR_DTECT_SHK_TABLE_TYPE        // S
#define P159_PZT_SATURATION_ERROR            1852  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_PZT_SATURATION_ERROR_COL_WIDTH        // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_PZT_SATURATION_ERROR_COL_MASK         // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_PZT_SATURATION_ERROR_COL_TYPES        // *
//      P159_PZT_SATURATION_ERROR_TABLE_TYPE       // S
#define P159_SWOT_DETECTED_SHOCK             1853  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_SWOT_DETECTED_SHOCK_COL_WIDTH         // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_SWOT_DETECTED_SHOCK_COL_MASK          // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_SWOT_DETECTED_SHOCK_COL_TYPES         // *
//      P159_SWOT_DETECTED_SHOCK_TABLE_TYPE        // S
#define P159_SWOT_GAIN_TOO_LOW               1854  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_SWOT_GAIN_TOO_LOW_COL_WIDTH           // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_SWOT_GAIN_TOO_LOW_COL_MASK            // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_SWOT_GAIN_TOO_LOW_COL_TYPES           // *
//      P159_SWOT_GAIN_TOO_LOW_TABLE_TYPE          // S
#define P159_SWOT_GAIN_TOO_HIGH              1855  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_SWOT_GAIN_TOO_HIGH_COL_WIDTH          // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_SWOT_GAIN_TOO_HIGH_COL_MASK           // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_SWOT_GAIN_TOO_HIGH_COL_TYPES          // *
//      P159_SWOT_GAIN_TOO_HIGH_TABLE_TYPE         // S
#define P159_DLC_UNSAFE                      1856  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P159_DLC_UNSAFE_COL_WIDTH                  // 6,6,6,6,6,6,6,6,6,6, 6, 6, 6, 6, 6, 6
//      P159_DLC_UNSAFE_COL_MASK                   // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P159_DLC_UNSAFE_COL_TYPES                  // *
//      P159_DLC_UNSAFE_TABLE_TYPE                 // S
#define P025_SPINDLE_DIP_DATA                1857  // CYCLE_NUM,NOM_SPEED,COMM_CYCLES,SPEED_ERROR,MEAS_SPIN_DIP
//      P025_SPINDLE_DIP_DATA_COL_WIDTH            //         9,        9,         11,         11,           13
//      P025_SPINDLE_DIP_DATA_COL_MASK             //         0,        0,          0,          0,            0
//      P025_SPINDLE_DIP_DATA_COL_TYPES            // *
//      P025_SPINDLE_DIP_DATA_TABLE_TYPE           // S
#define P025_SPINDIP_STAT                    1858  // STAT_NAME,SPINDLE_DIP
//      P025_SPINDIP_STAT_COL_WIDTH                //         9,         11
//      P025_SPINDIP_STAT_COL_MASK                 //         0,          0
//      P025_SPINDIP_STAT_COL_TYPES                // *
//      P025_SPINDIP_STAT_TABLE_TYPE               // V
#define P_UNCERTED_TRK_SFLAW                 1859  // HD_PHYS_PSN,HD_LGC_PSN,CYL,FAIL_CODE
//      P_UNCERTED_TRK_SFLAW_COL_WIDTH             //          11,        10,  8,        9
//      P_UNCERTED_TRK_SFLAW_COL_MASK              //           0,         0,  0,        0
//      P_UNCERTED_TRK_SFLAW_COL_TYPES             // *
//      P_UNCERTED_TRK_SFLAW_TABLE_TYPE            // S
#define P_ZBZ_PARAMS_VERSION                 1860  // ZBZ_VERSION,ZBZ_MAGIC_NUM
//      P_ZBZ_PARAMS_VERSION_COL_WIDTH             //          11,           13
//      P_ZBZ_PARAMS_VERSION_COL_MASK              //           0,            0
//      P_ZBZ_PARAMS_VERSION_COL_TYPES             // *
//      P_ZBZ_PARAMS_VERSION_TABLE_TYPE            // S
#define P_ZBZ_PARAMS_BY_HEAD                 1861  // HD_PHYS_PSN,HD_LGC_PSN,ZAP_BY_ZONE,MIN_VALID_ZONE,MAX_VALID_ZONE,VALID_ZONES,ZBZ_METRIC_SCALE_FACTOR,ZONE_PAD,ENABLED_ZONES
//      P_ZBZ_PARAMS_BY_HEAD_COL_WIDTH             //          11,        10,         11,            14,            14,         11,                     23,       8,           13
//      P_ZBZ_PARAMS_BY_HEAD_COL_MASK              //           0,         0,          0,             0,             0,          0,                      0,       0,            0
//      P_ZBZ_PARAMS_BY_HEAD_COL_TYPES             // *
//      P_ZBZ_PARAMS_BY_HEAD_TABLE_TYPE            // S
#define P_ZBZ_PARAMS_BY_ZONE                 1862  // ZONE,OD_CYLINDER,SUM_SQRD_SIG3NRRO,AUDIT_TRACK_COUNT,SUM_VPES,WZAP_TRACK_COUNT,ZBZ_METRIC,GRAND_3SIGRRO
//      P_ZBZ_PARAMS_BY_ZONE_COL_WIDTH             //    4,         11,               17,               17,       8,              16,        10,           13
//      P_ZBZ_PARAMS_BY_ZONE_COL_MASK              //    0,          0,                0,                0,       0,               0,         0,            0
//      P_ZBZ_PARAMS_BY_ZONE_COL_TYPES             // *
//      P_ZBZ_PARAMS_BY_ZONE_TABLE_TYPE            // S
#define P289_CHAN_VITERBI_TARGETS            1863  // HD_PHYS_PSN,HD_LGC_PSN,READER_NUM,SUPER_ZONE,TARGET0,TARGET1,TARGET2,TARGET3,TARGET4,TARGET5,TARGET6,TARGET7
//      P289_CHAN_VITERBI_TARGETS_COL_WIDTH        //          11,        10,        10,        10,      7,      7,      7,      7,      7,      7,      7,      7
//      P289_CHAN_VITERBI_TARGETS_COL_MASK         //           0,         0,         0,         0,      0,      0,      0,      0,      0,      0,      0,      0
//      P289_CHAN_VITERBI_TARGETS_COL_TYPES        // *
//      P289_CHAN_VITERBI_TARGETS_TABLE_TYPE       // S
#define P289_FIR_TAP_SCAN                    1864  // HD_PHYS_PSN,HD_LGC_PSN,TAP1S,TAP2S,NO_TMD,SERVO_ZONE_INDEX
//      P289_FIR_TAP_SCAN_COL_WIDTH                //          11,        10,    5,    5,     6,              16
//      P289_FIR_TAP_SCAN_COL_MASK                 //           0,         0,    0,    0,     0,               0
//      P289_FIR_TAP_SCAN_COL_TYPES                // *
//      P289_FIR_TAP_SCAN_TABLE_TYPE               // S
#define P235_HELIUM_MOLARITY                 1865  // MOLARITY_PCNT
//      P235_HELIUM_MOLARITY_COL_WIDTH             //            13
//      P235_HELIUM_MOLARITY_COL_MASK              //             0
//      P235_HELIUM_MOLARITY_COL_TYPES             //             *
//      P235_HELIUM_MOLARITY_TABLE_TYPE            // S
#define P109_DETCR_VER_HD_CLAMP              1866  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,VER_NUM,SERVO_VER_NUM
//      P109_DETCR_VER_HD_CLAMP_COL_WIDTH          //          11,        10,      7,      7,           13
//      P109_DETCR_VER_HD_CLAMP_COL_MASK           //           0,         0,      0,      0,            0
//      P109_DETCR_VER_HD_CLAMP_COL_TYPES          // *
//      P109_DETCR_VER_HD_CLAMP_TABLE_TYPE         // S
#define P109_DETCR_UNVER_HD_CLAMP            1867  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,UNVER_NUM,SERVO_UNVER_NUM
//      P109_DETCR_UNVER_HD_CLAMP_COL_WIDTH        //          11,        10,      7,        9,             15
//      P109_DETCR_UNVER_HD_CLAMP_COL_MASK         //           0,         0,      0,        0,              0
//      P109_DETCR_UNVER_HD_CLAMP_COL_TYPES        // *
//      P109_DETCR_UNVER_HD_CLAMP_TABLE_TYPE       // S
#define P109_DETCR_SUM_HD                    1868  // HD_PHYS_PSN,HD_LGC_PSN,VFYD_ERRS,UNVFYD_ERRS,SERVO_VFYD_ERRS,SERVO_UNVFYD_ERRS
//      P109_DETCR_SUM_HD_COL_WIDTH                //          11,        10,        9,         11,             15,               17
//      P109_DETCR_SUM_HD_COL_MASK                 //           0,         0,        0,          0,              0,                0
//      P109_DETCR_SUM_HD_COL_TYPES                // *
//      P109_DETCR_SUM_HD_TABLE_TYPE               // S
#define P287_ZEST_HEADER_INFO                1869  // TBL_REV,TBL_KEY,NBR_HDS,BYTES_PER_CORRCTN,CORRCTN_SHIFT,HALF_TRKS_PER_STEP,STEPS_PER_SGMT_SHIFT,UNUSED_PAD,START_SGMT,END_SGMT
//      P287_ZEST_HEADER_INFO_COL_WIDTH            //       7,      7,      7,               17,           13,                18,                  20,        10,        10,       8
//      P287_ZEST_HEADER_INFO_COL_MASK             //       0,      0,      0,                0,            0,                 0,                   0,         0,         0,       0
//      P287_ZEST_HEADER_INFO_COL_TYPES            // *
//      P287_ZEST_HEADER_INFO_TABLE_TYPE           // S
#define P099_DETAIL_AVG_ERR_RATE             1870  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,WEDGE,CYL_CNT,AVG_BER_0,AVG_BER_1,DELTA_BER
//      P099_DETAIL_AVG_ERR_RATE_COL_WIDTH         //          11,        10,        9,    5,      7,        9,        9,        9
//      P099_DETAIL_AVG_ERR_RATE_COL_MASK          //           0,         0,        0,    0,      0,        0,        0,        0
//      P099_DETAIL_AVG_ERR_RATE_COL_TYPES         // *
//      P099_DETAIL_AVG_ERR_RATE_TABLE_TYPE        // S
#define P099_AVG_ERR_RATE                    1871  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,WEDGE,CYL_CNT,AVG_BER,DELTA_AVG_BER
//      P099_AVG_ERR_RATE_COL_WIDTH                //          11,        10,        9,    5,      7,      7,           13
//      P099_AVG_ERR_RATE_COL_MASK                 //           0,         0,        0,    0,      0,      0,            0
//      P099_AVG_ERR_RATE_COL_TYPES                // *
//      P099_AVG_ERR_RATE_TABLE_TYPE               // S
#define P099_DETAILED_ERR_RATE               1872  // HD_PHYS_PSN,HD_LGC_PSN,TEST_CYL,SAMPLE_CNT,WEDGE,BITS_IN_ERR,BITS_READ,REVS,ERR_RATE
//      P099_DETAILED_ERR_RATE_COL_WIDTH           //          11,        10,       8,        10,    5,         11,        9,   3,       8
//      P099_DETAILED_ERR_RATE_COL_MASK            //           0,         0,       0,         0,    0,          0,        0,   0,       0
//      P099_DETAILED_ERR_RATE_COL_TYPES           // *
//      P099_DETAILED_ERR_RATE_TABLE_TYPE          // S
#define P099_MPT_WEDGE_ERR_RATE              1873  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,WEDGE,FREQ_OFFSET
//      P099_MPT_WEDGE_ERR_RATE_COL_WIDTH          //          11,        10,        9,    5,         11
//      P099_MPT_WEDGE_ERR_RATE_COL_MASK           //           0,         0,        0,    0,          0
//      P099_MPT_WEDGE_ERR_RATE_COL_TYPES          // *
//      P099_MPT_WEDGE_ERR_RATE_TABLE_TYPE         // S
#define P099_MPT_WEDGE_DIFFERENCE            1874  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,SERVO_ZONE,WEDGE,WEDGE_DIFF
//      P099_MPT_WEDGE_DIFFERENCE_COL_WIDTH        //          11,        10,        9,        10,    5,        10
//      P099_MPT_WEDGE_DIFFERENCE_COL_MASK         //           0,         0,        0,         0,    0,         0
//      P099_MPT_WEDGE_DIFFERENCE_COL_TYPES        // *
//      P099_MPT_WEDGE_DIFFERENCE_TABLE_TYPE       // S
#define P285_LIFT_DETECT                     1875  // SK_CNT,TGT_CYL,AGC_MEAN,AGC_MVG_AVG,AGC_SLOPE,AGC_AVG_SLOPE,AGC_ACCEL
//      P285_LIFT_DETECT_COL_WIDTH                 //      6,      7,       7,         11,        9,           13,        9
//      P285_LIFT_DETECT_COL_MASK                  //      0,      0,       0,          0,        0,            0,        0
//      P285_LIFT_DETECT_COL_TYPES                 // *
//      P285_LIFT_DETECT_TABLE_TYPE                // S
#define P400_CHNL_REG                        1876  //  ADDR,DATA
//      P400_CHNL_REG_COL_WIDTH                    //     4,   4
//      P400_CHNL_REG_COL_MASK                     //     0,   0
//      P400_CHNL_REG_COL_TYPES                    // *
//      P400_CHNL_REG_TABLE_TYPE                   // S
#define P107_LOGICAL_ZN_SLIPLIST             1877  // ZONE,CUM_SLIP
//      P107_LOGICAL_ZN_SLIPLIST_COL_WIDTH         //    8,      16
//      P107_LOGICAL_ZN_SLIPLIST_COL_MASK          //    0,       0
//      P107_LOGICAL_ZN_SLIPLIST_COL_TYPES         // *
//      P107_LOGICAL_ZN_SLIPLIST_TABLE_TYPE        // S
#define P275_ZAP_TOPAZ_STATS                 1878  // HD_PHYS_PSN,HD_LGC_PSN,ZAP_PSN,ZAP_CYL,MEAN_1SIGRRO,MEAN_1SIGNRRO,PRED_AVE_REV,PRED_AVE_ITER,AVE_REV,AVE_ITER,PES_1SIG_LMT,AVE_1STGAIN,REV_PERTRK,RESET_CNT,AUDIT_RESET
//      P275_ZAP_TOPAZ_STATS_COL_WIDTH             //          11,        10,      7,      7,          12,           13,          12,           13,      7,       8,          12,         11,        10,        9,         11
//      P275_ZAP_TOPAZ_STATS_COL_MASK              //           0,         0,      0,      0,           0,            0,           0,            0,      0,       0,           0,          0,         0,        0,          0
//      P275_ZAP_TOPAZ_STATS_COL_TYPES             // *
//      P275_ZAP_TOPAZ_STATS_TABLE_TYPE            // S
#define P275_ZAP_EXCEPTION2                  1879  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,ZAP_PSN,TRK_SKIPPED,USER_AREA_TRK,SKIP_WRITE_EVENT,ZFS_FAIL,FAST_IO_RESP_FAIL,SEEK_FAIL,ZAP_WRT_DATA_ERR,ZAP_RD_DATA_ERR,R_ZAP_WRT_CMD_ERR,NR_ZAP_WRT_CMD_ERR,R_ZAP_RD_CMD_ERR,NR_ZAP_RD_CMD_ERR,BD_SMP_TRACK_ERR,MABS_RRO_FAIL,ZAP_SATURATION_OCCURRED,ZAP_ENAB_DISAB_CMD_FAIL,ZFS_SERVO_CMD_FAIL,MISSED_FASTIO_SAMPLES,MAX_ITER_ERROR,ZFS_EC1,ZFS_EC2
//      P275_ZAP_EXCEPTION2_COL_WIDTH              //          11,        10,      7,      7,         11,           13,              17,       9,               17,        9,              16,             15,               17,                18,              16,               17,              16,           13,                     23,                     23,                18,                   21,            14,      9,      9
//      P275_ZAP_EXCEPTION2_COL_MASK               //           0,         0,      0,      0,          0,            0,               0,       0,                0,        0,               0,              0,                0,                 0,               0,                0,               0,            0,                      0,                      0,                 0,                    0,             0,      0,      0
//      P275_ZAP_EXCEPTION2_COL_TYPES              // *
//      P275_ZAP_EXCEPTION2_TABLE_TYPE             // S
#define P275_ZAP_HD_CONDITIONS3              1880  // HD_PHYS_PSN,HD_LGC_PSN,ZFS_STATE,TOPAZ_STATE,DRZ_STATE,TRK_COVERAGE,LGC_START_CYL,LGC_END_CYL,DATA_START_CYL,DATA_START_CYL_STATUS,DATA_END_CYL,DATA_END_CYL_STATUS
//      P275_ZAP_HD_CONDITIONS3_COL_WIDTH          //          11,        10,        9,         11,        9,          12,           13,         11,            14,                   21,          12,                 19
//      P275_ZAP_HD_CONDITIONS3_COL_MASK           //           0,         0,        0,          0,        0,           0,            0,          0,             0,                    0,           0,                  0
//      P275_ZAP_HD_CONDITIONS3_COL_TYPES          // *
//      P275_ZAP_HD_CONDITIONS3_TABLE_TYPE         // S
#define P172_THREE_SLOPE_TCS_ADRS            1881  // HD_PHYS_PSN,HD_LGC_PSN,ACTIVE_HEATER,THERMAL_CLR_COEF2,ADD_TCS_COLD_DTC,ADD_TCS_HOT_DTH,COLD_TEMP_DTC,HOT_TEMP_DTH
//      P172_THREE_SLOPE_TCS_ADRS_COL_WIDTH        //          11,        10,           13,               17,              16,             15,           13,          12
//      P172_THREE_SLOPE_TCS_ADRS_COL_MASK         //           0,         0,            0,                0,               0,              0,            0,           0
//      P172_THREE_SLOPE_TCS_ADRS_COL_TYPES        // *
//      P172_THREE_SLOPE_TCS_ADRS_TABLE_TYPE       // V
#define P172_AFH_TEMP_COMP_COEF              1882  // HD_PHYS_PSN,HD_LGC_PSN,ENV_TYPE,ACTIVE_HEATER,COEF,COEF_VALUE
//      P172_AFH_TEMP_COMP_COEF_COL_WIDTH          //          11,        10,       8,           13,   4,        10
//      P172_AFH_TEMP_COMP_COEF_COL_MASK           //           0,         0,       0,            0,   0,         0
//      P172_AFH_TEMP_COMP_COEF_COL_TYPES          // *
//      P172_AFH_TEMP_COMP_COEF_TABLE_TYPE         // V
#define P172_AFH_ENV_COMP_COEF               1883  // ENV_TYPE,ACTIVE_HEATER,COEF,COEF_VALUE
//      P172_AFH_ENV_COMP_COEF_COL_WIDTH           //        8,           13,   4,        10
//      P172_AFH_ENV_COMP_COEF_COL_MASK            //        0,            0,   0,         0
//      P172_AFH_ENV_COMP_COEF_COL_TYPES           // *
//      P172_AFH_ENV_COMP_COEF_TABLE_TYPE          // V
#define P321_MRDR_RES_MIN_MAX                1884  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,MAX_RES,MIN_RES,BASE_RES,PCNT_RANGE,HD_STATUS
//      P321_MRDR_RES_MIN_MAX_COL_WIDTH            //          11,        10,          12,         11,      7,      7,       8,        10,        9
//      P321_MRDR_RES_MIN_MAX_COL_MASK             //           0,         0,           0,          0,      0,      0,       0,         0,        0
//      P321_MRDR_RES_MIN_MAX_COL_TYPES            // *
//      P321_MRDR_RES_MIN_MAX_TABLE_TYPE           // S
#define P172_MAX_LBA_INFO                    1885  // SECTOR_SIZE0,MAX_LBA0,SECTOR_SIZE1,MAX_LBA1
//      P172_MAX_LBA_INFO_COL_WIDTH                //           13,      13,          13,      13
//      P172_MAX_LBA_INFO_COL_MASK                 //            0,       0,           0,       0
//      P172_MAX_LBA_INFO_COL_TYPES                // *
//      P172_MAX_LBA_INFO_TABLE_TYPE               // S
#define P276_SCOPY_RW_FAIL2                  1886  // HD_PHYS_PSN,HD_LGC_PSN,HALF_TRK_CYL,GRAY_CYL,RW_STATUS,RW_ERROR_CODE,RETRIES
//      P276_SCOPY_RW_FAIL2_COL_WIDTH              //          11,        10,          12,       8,        9,           13,      7
//      P276_SCOPY_RW_FAIL2_COL_MASK               //           0,         0,           0,       0,        0,            0,      0
//      P276_SCOPY_RW_FAIL2_COL_TYPES              // *
//      P276_SCOPY_RW_FAIL2_TABLE_TYPE             // S
#define P302_BACKEND_NP_DATA                 1887  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,SECTOR,BIE0,ITR0,BIE1,ITR1,VGAR,BENP_11,BENP_12,BENP_20,BENP_21,BENP_22
//      P302_BACKEND_NP_DATA_COL_WIDTH             //          11,        10,        9,      7,     6,   5,   5,   5,   5,   5,      8,      8,      8,      8,      8
//      P302_BACKEND_NP_DATA_COL_MASK              //           0,         0,        0,      0,     0,   0,   0,   0,   0,   0,      0,      0,      0,      0,      0
//      P302_BACKEND_NP_DATA_COL_TYPES             // *
//      P302_BACKEND_NP_DATA_TABLE_TYPE            // S
#define P302_LPCAL_DATA                      1888  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,SECTOR,BIE0,ITR0,BIE1,ITR1,VGAR,LPCAL0,LPCAL1,LPCAL2,LPCAL3,LPCAL4,LPCAL5,LPCAL6,LPCAL7
//      P302_LPCAL_DATA_COL_WIDTH                  //          11,        10,        9,      7,     6,   5,   5,   5,   5,   5,     6,     6,     6,     6,     6,     6,     6,     6
//      P302_LPCAL_DATA_COL_MASK                   //           0,         0,        0,      0,     0,   0,   0,   0,   0,   0,     0,     0,     0,     0,     0,     0,     0,     0
//      P302_LPCAL_DATA_COL_TYPES                  // *
//      P302_LPCAL_DATA_TABLE_TYPE                 // S
#define P172_RAP_AFH_NOMINAL_FREQ            1889  // HD_PHYS_PSN,HD_LGC_PSN,ZONE_TYPE,SUPER_ZONE,NOMINAL_FREQ_KHZ
//      P172_RAP_AFH_NOMINAL_FREQ_COL_WIDTH        //          11,        10,        9,        10,              16
//      P172_RAP_AFH_NOMINAL_FREQ_COL_MASK         //           0,         0,        0,         0,               0
//      P172_RAP_AFH_NOMINAL_FREQ_COL_TYPES        // *
//      P172_RAP_AFH_NOMINAL_FREQ_TABLE_TYPE       // S
#define P285_FORST_DATA                      1890  // HD_PHYS_PSN,HD_LGC_PSN,ITERATION,RAMP_TRK_ID,START_TRK_ID,OGB_TRK_ID,START_BEMF_INTG,OGB_BEMF_INTG,RAMP_BEMF_INTG,RAMP_SEC_NUM
//      P285_FORST_DATA_COL_WIDTH                  //          11,        10,        9,         11,          12,        10,             15,           13,            14,          12
//      P285_FORST_DATA_COL_MASK                   //           0,         0,        0,          0,           0,         0,              0,            0,             0,           0
//      P285_FORST_DATA_COL_TYPES                  // *
//      P285_FORST_DATA_TABLE_TYPE                 // S
#define P285_FIRST_DATA                      1891  // HD_PHYS_PSN,HD_LGC_PSN,ITERATION,IDCS_TRK_ID,START_TRK_ID,IGB_TRK_ID,START_BEMF_INTG,IGB_BEMF_INTG,IDCS_BEMF_INTG,IDCS_SEC_NUM
//      P285_FIRST_DATA_COL_WIDTH                  //          11,        10,        9,         11,          12,        10,             15,           13,            14,          12
//      P285_FIRST_DATA_COL_MASK                   //           0,         0,        0,          0,           0,         0,              0,            0,             0,           0
//      P285_FIRST_DATA_COL_TYPES                  // *
//      P285_FIRST_DATA_TABLE_TYPE                 // S
#define P285_FORST_SUMMARY                   1892  // HD_PHYS_PSN,HD_LGC_PSN,VALID_COUNT,IGNORE_COUNT,ALLOW_RANGE,RAMP_TRK_MEAN,RAMP_TRK_MAX,RAMP_TRK_MIN,OGB_TRK_MEAN,OGB_TRK_MAX,OGB_TRK_MIN,RAMP_TRK_MEAN_PADDED
//      P285_FORST_SUMMARY_COL_WIDTH               //          11,        10,         11,          12,         11,           13,          12,          12,          12,         11,         11,                  20
//      P285_FORST_SUMMARY_COL_MASK                //           0,         0,          0,           0,          0,            0,           0,           0,           0,          0,          0,                   0
//      P285_FORST_SUMMARY_COL_TYPES               // *
//      P285_FORST_SUMMARY_TABLE_TYPE              // S
#define P285_FIRST_SUMMARY                   1893  // HD_PHYS_PSN,HD_LGC_PSN,VALID_COUNT,IGNORE_COUNT,IDCS_ALLOW_RANGE,IGB_ALLOW_RANGE,IDCS_TRK_MEAN_PADDED,IDCS_TRK_MEAN,IDCS_TRK_MAX,IDCS_TRK_MIN,IGB_TRK_MEAN,IGB_TRK_MAX,IGB_TRK_MIN
//      P285_FIRST_SUMMARY_COL_WIDTH               //          11,        10,         11,          12,              16,             15,                  20,           13,          12,          12,          12,         11,         11
//      P285_FIRST_SUMMARY_COL_MASK                //           0,         0,          0,           0,               0,              0,                   0,            0,           0,           0,           0,          0,          0
//      P285_FIRST_SUMMARY_COL_TYPES               // *
//      P285_FIRST_SUMMARY_TABLE_TYPE              // S
#define P275_ZAP_NOTCH                       1894  // HD_PHYS_PSN,FREQ_RANGE_NUM,TRK_NUM,HD_LGC_PSN,LOW_FREQ,HIGH_FREQ,NRRO_FFT_AMP,NRRO_PEAK_HARMONIC,RRO_FFT_AMP,RRO_PEAK_HARMONIC,ENABLE_ZAP_NOTCH,ZAP_NOTCH_START_HARM,ZAP_NOTCH_END_HARM
//      P275_ZAP_NOTCH_COL_WIDTH                   //          11,            14,      7,        10,       8,        9,          12,                18,         11,               17,              16,                  20,                18
//      P275_ZAP_NOTCH_COL_MASK                    //           0,             0,      0,         0,       0,        0,           0,                 0,          0,                0,               0,                   0,                 0
//      P275_ZAP_NOTCH_COL_TYPES                   // *
//      P275_ZAP_NOTCH_TABLE_TYPE                  // S
#define P_ACCLRM_DC_OFFSET                   1895  // SENSOR_TYPE,GAIN_STEP,OFFSET_DAC,OFFSET_STEP,OFFSET_RESIDUAL
//      P_ACCLRM_DC_OFFSET_COL_WIDTH               //          11,        9,        10,         10,             15
//      P_ACCLRM_DC_OFFSET_COL_MASK                //           0,        0,         0,          0,              0
//      P_ACCLRM_DC_OFFSET_COL_TYPES               // *
//      P_ACCLRM_DC_OFFSET_TABLE_TYPE              // S
#define P191_ZN_RESULTS                      1896  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,NOM_TRK_NUM,LGC_TRK_NUM,NORM_TRK,RADIUS,WRT_CUR,OVRSHT,OVRSHT_DUR,FIT_R_SQR,FIT_RESIDUAL_STDEV,MSRD_DELTA,RETRY_CNT,WRITE_LEN_PCT,ACTIVE_HEATER,INACTIVE_HEATER_DAC
//      P191_ZN_RESULTS_COL_WIDTH                  //          11,        9,        10,         11,         11,       8,     6,      7,     6,        10,        9,                18,        10,        9,           13,           13,                 19
//      P191_ZN_RESULTS_COL_MASK                   //           1,        1,         1,          1,          1,       1,     1,      1,     1,         1,        1,                 1,         1,        1,            1,            1,                  1
//      P191_ZN_RESULTS_COL_TYPES                  //           N,        N,         N,          N,          N,       N,     N,      N,     N,         N,        N,                 N,         N,        N,            N,            V,                  N
//      P191_ZN_RESULTS_TABLE_TYPE                 // S
#define P191_SURFACE_FIT                     1897  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,METHOD,NOM_TRK_NUM,NORM_TRK,RADIUS,FIT_DELTA,COEF_DELTA,MAX_SURF_PRED_INT,MAX_SVGA_PRED_INT,HO_CONTACT_DAC,WPH_CONTACT_DAC,HO_ROLLOVR_DAC,WPH_ROLLOVR_DAC,HO_ROLLOVR_CLRNC_MRGN,WPH_ROLLOVR_CLRNC_MRGN,ERROR_FLAGS,ACTIVE_HEATER,INACTIVE_HEATER_DAC
//      P191_SURFACE_FIT_COL_WIDTH                 //          11,        9,        10,     6,         11,       8,     6,        9,        10,               17,               17,            14,             15,            14,             15,                   21,                    22,         11,           13,                 19
//      P191_SURFACE_FIT_COL_MASK                  //           1,        1,         1,     1,          1,       1,     1,        1,         1,                1,                1,             1,              1,             1,              1,                    1,                     1,          1,            1,                  1
//      P191_SURFACE_FIT_COL_TYPES                 //           N,        N,         N,     V,          N,       N,     N,        N,         N,                N,                N,             N,              N,             N,              N,                    N,                     N,          N,            V,                  N
//      P191_SURFACE_FIT_TABLE_TYPE                // S
#define P117_MEDIA_SCREEN_02                 1898  // HD_PHYS_PSN,HD_LGC_PSN,SCRATCH_ID,START_ZONE,END_ZONE,BEGINNING_TRK,ENDING_TRK,SCRATCH_LENGTH,DEFECTS,TOTAL_BYTES,SCREEN_PF_FLAG
//      P117_MEDIA_SCREEN_02_COL_WIDTH             //          11,        10,        10,        10,       8,           13,        10,            14,      7,         11,            14
//      P117_MEDIA_SCREEN_02_COL_MASK              //           0,         0,         0,         0,       0,            0,         0,             0,      0,          0,             0
//      P117_MEDIA_SCREEN_02_COL_TYPES             // *
//      P117_MEDIA_SCREEN_02_TABLE_TYPE            // M
#define P211_MRVL_BPI_MEASUREMENT            1899  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,DELTA_BPI_PCT,N_VAL,R_VAL,D_VAL,SCTR_ERR_RATE,BANDWIDTH,BNDWTHRNG,BOOST,FIXED_TAPA,FIXED_TAPB,PRECOMP1,PRECOMP2,PRECOMP3,DLL_GM,DLL_GM2,PRC_GM,TBG_VCO_GM1,TBG_VCO_GM2,D_INTP_GM,D_INTP_RNG,TL_ZPS_RJUMP
//      P211_MRVL_BPI_MEASUREMENT_COL_WIDTH        //          11,        9,        10,      7,           13,    5,    5,    5,           13,        9,        9,    5,        10,        10,       8,       8,       8,     6,      7,     6,         11,         11,        9,        10,          12
//      P211_MRVL_BPI_MEASUREMENT_COL_MASK         //           0,        0,         0,      0,            0,    0,    0,    0,            0,        0,        0,    0,         0,         0,       0,       0,       0,     0,      0,     0,          0,          0,        0,         0,           0
//      P211_MRVL_BPI_MEASUREMENT_COL_TYPES        // *
//      P211_MRVL_BPI_MEASUREMENT_TABLE_TYPE       // S
#define P211_MRVL_TPI_INIT                   1900  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,BPI_PCT,ORIG_N,ORIG_R,ORIG_D,NEW_N,NEW_R,NEW_D,BANDWIDTH,BNDWTHRNG,FIXED_TAPA,FIXED_TAPB,PRECOMP1,PRECOMP2,PRECOMP3,BOOST
//      P211_MRVL_TPI_INIT_COL_WIDTH               //          11,      7,        10,      7,     6,     6,     5,    5,    5,    5,        9,        9,        10,        10,       8,       8,       8,    5
//      P211_MRVL_TPI_INIT_COL_MASK                //           0,      0,         0,      0,     0,     0,     0,    0,    0,    0,        0,        0,         0,         0,       0,       0,       0,    0
//      P211_MRVL_TPI_INIT_COL_TYPES               // *
//      P211_MRVL_TPI_INIT_TABLE_TYPE              // S
#define P299_TRK_WRT                         1901  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,CYL_START,CYL_END,TGT_STATUS
//      P299_TRK_WRT_COL_WIDTH                     //          11,        10,        9,        9,      9,        10
//      P299_TRK_WRT_COL_MASK                      //           0,         0,        0,        0,      0,         0
//      P299_TRK_WRT_COL_TYPES                     // *
//      P299_TRK_WRT_TABLE_TYPE                    // S
#define P049_AFH_FRAMES_DUMP                 1902  // DISCARDED,STATE_INDX,PHYS_HD,ACTIVE_HEATER,LOG_HEAD,ZONE,LOG_CYLINDER,NOM_CYLINDER,MEAS_POS,TEMP,WRT_HT_DAC,HT_ONLY_DAC,WRT_HT_CLR,HT_ONLY_CLR,WRT_LOSS,WPH_COEFF,HO_COEFF,PRESSURE,MX_RATIO,MAX_PRED_INTVL,REVS_INTO_CONTACT,GLBL_RTRY_CNT
//      P049_AFH_FRAMES_DUMP_COL_WIDTH             //         9,        10,      7,           13,       8,   4,          12,          12,       8,   4,        10,         11,        10,         11,       8,        9,       8,       8,       8,            14,               17,           13
//      P049_AFH_FRAMES_DUMP_COL_MASK              //         0,         0,      0,            0,       0,   0,           0,           0,       0,   0,         0,          0,         0,          0,       0,        0,       0,       0,       0,             0,                0,            0
//      P049_AFH_FRAMES_DUMP_COL_TYPES             // *
//      P049_AFH_FRAMES_DUMP_TABLE_TYPE            // M
#define P303_MARGIN_STAT                     1903  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,DATA_CYL,CYL_OFST,ERASE_TYPE,NTS_CNT,BER_LOG10,DATA_TYPE,COUNT,BIE_MAX,BIE_AVG,BIE_PCT,ITR_MAX,ITR_AVG,ITR_PCT,NCCW_PCT
//      P303_MARGIN_STAT_COL_WIDTH                 //          11,        10,        9,       8,       8,        10,      7,        9,       12,    5,      7,      9,      9,      7,      9,      9,       9
//      P303_MARGIN_STAT_COL_MASK                  //           0,         0,        0,       0,       0,         0,      0,        0,        0,    0,      0,      0,      0,      0,      0,      0,       0
//      P303_MARGIN_STAT_COL_TYPES                 // *
//      P303_MARGIN_STAT_TABLE_TYPE                // S
#define P303_MARGIN_RESULT                   1904  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TGT_CYL,ATI_SCAN_AVG,ATI_FAIL_AVG,ATI_MRGN_PERCENTILE,STE_SCAN_AVG,STE_FAIL_AVG,STE_MRGN_PERCENTILE,WRT_FLT_RATE
//      P303_MARGIN_RESULT_COL_WIDTH               //          11,        10,        9,      8,          12,          12,                 19,          12,          12,                 19,          12
//      P303_MARGIN_RESULT_COL_MASK                //           0,         0,        0,      0,           0,           0,                  0,           0,           0,                  0,           0
//      P303_MARGIN_RESULT_COL_TYPES               // *
//      P303_MARGIN_RESULT_TABLE_TYPE              // S
#define P_READER_TO_READER_GAP               1905  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,GAP_DELAY,ID_CYL_NUM,HD_GAP_UIN,DATA_ZONE_FREQ,HD_STATUS,GAP_DELAY_RAW,SVO_PTTRN_FREQ,PHYS_CYL_NORM,SVO_DLY
//      P_READER_TO_READER_GAP_COL_WIDTH           //          11,        10,        9,        9,        10,        10,            14,        9,           13,            14,           13,     10
//      P_READER_TO_READER_GAP_COL_MASK            //           0,         0,        0,        0,         0,         0,             0,        0,            0,             0,            0,      0
//      P_READER_TO_READER_GAP_COL_TYPES           // *
//      P_READER_TO_READER_GAP_TABLE_TYPE          // M
#define P250_1K_ERROR_RATE                   1906  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TEST_ITR,TEST_CYL,RAW_BER_1ST,RAW_BER_2ND,DELTA_ERR_RATE
//      P250_1K_ERROR_RATE_COL_WIDTH               //          11,        9,        10,       8,       8,         11,         11,            14
//      P250_1K_ERROR_RATE_COL_MASK                //           0,        0,         0,       0,       0,          0,          0,             0
//      P250_1K_ERROR_RATE_COL_TYPES               // *
//      P250_1K_ERROR_RATE_TABLE_TYPE              // S
#define P250_1K_TSHR_DATA                    1907  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TEST_CYL,AVG_RAW_BER,STD_DELTA_BER,STD_RAW_BER,MIN_RAW_BER,MAX_RAW_BER
//      P250_1K_TSHR_DATA_COL_WIDTH                //          11,        9,        10,       8,         11,           13,         11,         11,         11
//      P250_1K_TSHR_DATA_COL_MASK                 //           0,        0,         0,       0,          0,            0,          0,          0,          0
//      P250_1K_TSHR_DATA_COL_TYPES                // *
//      P250_1K_TSHR_DATA_TABLE_TYPE               // S
#define P345_RESULT_SUMMARY                  1908  // HD_PHYS_PSN,HD_LGC_PSN,DATA_TYPE,AVERAGE,MEDIAN,STDDEV,CONF_INT,MINIMUM,MAXIMUM,MAX_ENV_COMP,MIN_TEMP_DELTA,NUM_ZONES,STATE_IDX1,STATE_IDX2,ERROR_FLAGS,UPPER_LMT,LOWER_LMT,CLAMPED_RESULT,MSRD_INTRPLTD,TEST_MODE,ACTIVE_HEATER
//      P345_RESULT_SUMMARY_COL_WIDTH              //          11,        10,        9,      7,     6,     6,       8,      7,      7,          12,            14,        9,        10,        10,         11,        9,        9,            14,           13,        9,           13
//      P345_RESULT_SUMMARY_COL_MASK               //           1,         1,        1,      1,     1,     1,       1,      1,      1,           1,             1,        1,         1,         1,          1,        1,        1,             1,            1,        1,            1
//      P345_RESULT_SUMMARY_COL_TYPES              //           N,         N,        V,      N,     N,     N,       N,      N,      N,           N,             N,        N,         N,         N,          N,        N,        N,             N,            V,        V,            V
//      P345_RESULT_SUMMARY_TABLE_TYPE             // S
#define P345_DAC_INTRP_COEF                  1909  // HD_PHYS_PSN,HD_LGC_PSN,HEATER,MODE,POLY_ORDER,AFH_STATE1,STATE1_COEF,AFH_STATE2,STATE2_COEF
//      P345_DAC_INTRP_COEF_COL_WIDTH              //          11,        10,     6,   4,        10,        10,         11,        10,         11
//      P345_DAC_INTRP_COEF_COL_MASK               //           0,         0,     0,   0,         0,         0,          0,         0,          0
//      P345_DAC_INTRP_COEF_COL_TYPES              // *
//      P345_DAC_INTRP_COEF_TABLE_TYPE             // S
#define P345_INTRP_CLR                       1910  // HD_PHYS_PSN,HD_LGC_PSN,HEATER,MODE,ZONE,AFH_STATE1,STATE1_CLR,AFH_STATE2,STATE2_CLR
//      P345_INTRP_CLR_COL_WIDTH                   //          11,        10,     6,   4,   4,        10,        10,        10,        10
//      P345_INTRP_CLR_COL_MASK                    //           0,         0,     0,   0,   0,         0,         0,         0,         0
//      P345_INTRP_CLR_COL_TYPES                   // *
//      P345_INTRP_CLR_TABLE_TYPE                  // S
#define P238_MRDR_UJOG_POLYFIT               1911  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,POLYFIT_DESC,COEF_C7,COEF_C6,COEF_C5,COEF_C4,COEF_C3,COEF_C2,COEF_C1,COEF_C0,Y_OFFSET,Y_SCALE
//      P238_MRDR_UJOG_POLYFIT_COL_WIDTH           //          11,        10,          12,         11,          12,      9,      9,      9,      9,      9,      9,      9,      9,       9,      9
//      P238_MRDR_UJOG_POLYFIT_COL_MASK            //           0,         0,           0,          0,           0,      0,      0,      0,      0,      0,      0,      0,      0,       0,      0
//      P238_MRDR_UJOG_POLYFIT_COL_TYPES           // *
//      P238_MRDR_UJOG_POLYFIT_TABLE_TYPE          // S
#define P_INV_SENS_FUNCTION                  1912  // *
//      P_INV_SENS_FUNCTION_COL_WIDTH              // 5
//      P_INV_SENS_FUNCTION_COL_MASK               // 0
//      P_INV_SENS_FUNCTION_COL_TYPES              // *
//      P_INV_SENS_FUNCTION_TABLE_TYPE             // S
#define P049_MIN_TEMP_PER_STATE              1913  // AFH_STATE,MINIMUM_TEMPERATURE
//      P049_MIN_TEMP_PER_STATE_COL_WIDTH          //         9,                 19
//      P049_MIN_TEMP_PER_STATE_COL_MASK           //         0,                  0
//      P049_MIN_TEMP_PER_STATE_COL_TYPES          // *
//      P049_MIN_TEMP_PER_STATE_TABLE_TYPE         // S
#define P220_ITERATION_DATA                  1914  // ITER_CNT,DRV_ERR_RATE,MIN_TGT_ERR_RATE,MAX_TGT_ERR_RATE,CLIPPED,DRV_ERR_MARGIN,MAX_ERR_MARGIN,MAX_HD,MAX_ZN,MIN_ERR_MARGIN,MIN_HD,MIN_ZN
//      P220_ITERATION_DATA_COL_WIDTH              //        8,          12,              16,              16,      7,            14,            14,     6,     6,            14,     6,     6
//      P220_ITERATION_DATA_COL_MASK               //        0,           0,               0,               0,      0,             0,             0,     0,     0,             0,     0,     0
//      P220_ITERATION_DATA_COL_TYPES              // *
//      P220_ITERATION_DATA_TABLE_TYPE             // S
#define P220_ITERATION_SUM                   1915  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,DELTA_BPI_PCT,DELTA_TPI_PCT,CAPABILITY,ERR_RATE,INTL_ZN_MARGIN,FNL_ZN_MARGIN,ITERATIONS,CNVGD
//      P220_ITERATION_SUM_COL_WIDTH               //          11,        9,        11,           13,           13,        10,       8,            14,           13,        10,    5
//      P220_ITERATION_SUM_COL_MASK                //           0,        0,         0,            0,            0,         0,       0,             0,            0,         0,    0
//      P220_ITERATION_SUM_COL_TYPES               // *
//      P220_ITERATION_SUM_TABLE_TYPE              // S
#define P172_SYS_RECLAIM                     1916  // HD_RECLAIM_COUNT,ZONES_ALIGNED_WITH_SYSTEM
//      P172_SYS_RECLAIM_COL_WIDTH                 //               16,                       25
//      P172_SYS_RECLAIM_COL_MASK                  //                0,                        0
//      P172_SYS_RECLAIM_COL_TYPES                 // *
//      P172_SYS_RECLAIM_TABLE_TYPE                // S
#define P220_WP_SMOOTH_POLYFIT               1917  // HD_PHYS_PSN,HD_LGC_PSN,POLY_ORDER,PT_CNT,COEF_0,COEF_1,COEF_2,COEF_3,COEF_4,RSQUARED,STD_DEV
//      P220_WP_SMOOTH_POLYFIT_COL_WIDTH           //          11,        10,        10,     6,     9,     9,     9,     9,     9,       8,      8
//      P220_WP_SMOOTH_POLYFIT_COL_MASK            //           0,         0,         0,     0,     0,     0,     0,     0,     0,       0,      0
//      P220_WP_SMOOTH_POLYFIT_COL_TYPES           // *
//      P220_WP_SMOOTH_POLYFIT_TABLE_TYPE          // S
#define P_ACCLRM_NOTCH_CAL                   1918  // SENSOR_TYPE,NOTCH_STEP,MINIMUM_MAG
//      P_ACCLRM_NOTCH_CAL_COL_WIDTH               //          11,        10,         11
//      P_ACCLRM_NOTCH_CAL_COL_MASK                //           0,         0,          0
//      P_ACCLRM_NOTCH_CAL_COL_TYPES               // *
//      P_ACCLRM_NOTCH_CAL_TABLE_TYPE              // S
#define P025_MOTOR_CUR_MONITOR               1919  // CYCLE_NUM,SPINDLE_CUR_BEFORE_LOAD_HEADS,SPINDLE_CUR_AFTER_LOAD_HEADS,DELTA_CUR
//      P025_MOTOR_CUR_MONITOR_COL_WIDTH           //         9,                           29,                          28,        9
//      P025_MOTOR_CUR_MONITOR_COL_MASK            //         0,                            0,                           0,        0
//      P025_MOTOR_CUR_MONITOR_COL_TYPES           // *
//      P025_MOTOR_CUR_MONITOR_TABLE_TYPE          // S
#define P025_DCDETCR_MONITOR                 1920  // HD_PHYS_PSN,HD_LGC_PSN,DCDETCR_BEFORE_LOAD_HEADS,DCDETCR_AFTER_LOAD_HEADS,DELTA_DCDETCR
//      P025_DCDETCR_MONITOR_COL_WIDTH             //          11,        10,                       25,                      24,           13
//      P025_DCDETCR_MONITOR_COL_MASK              //           0,         0,                        0,                       0,            0
//      P025_DCDETCR_MONITOR_COL_TYPES             // *
//      P025_DCDETCR_MONITOR_TABLE_TYPE            // S
#define P172_DOS_SCALARS                     1921  // HD_PHYS_PSN,HD_LGC_PSN,ATI_THRESH_SCALAR,STE_THRESH_SCALAR,STE_RANGE_IN_SCAN_UNITS,ATI2_THRESH_SCALAR,UNIQUE_ZN_SCALAR
//      P172_DOS_SCALARS_COL_WIDTH                 //          11,        10,               17,               17,                     23,                18,              16
//      P172_DOS_SCALARS_COL_MASK                  //           1,         1,                1,                1,                      1,                 1,               1
//      P172_DOS_SCALARS_COL_TYPES                 //           N,         N,                N,                N,                      N,                 N,               N
//      P172_DOS_SCALARS_TABLE_TYPE                // S
#define P345_FINAL_HEAD_STATUS               1922  // HD_PHYS_PSN,HD_LGC_PSN,HEAD_STATUS,ACTIVE_HEATER
//      P345_FINAL_HEAD_STATUS_COL_WIDTH           //          11,        10,         19,           13
//      P345_FINAL_HEAD_STATUS_COL_MASK            //           0,         0,          0,            0
//      P345_FINAL_HEAD_STATUS_COL_TYPES           // *
//      P345_FINAL_HEAD_STATUS_TABLE_TYPE          // S
#define P107_DEFECT_PER_HEAD_ZONE            1923  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,DEFECT_CNT
//      P107_DEFECT_PER_HEAD_ZONE_COL_WIDTH        //          11,        10,        9,        10
//      P107_DEFECT_PER_HEAD_ZONE_COL_MASK         //           0,         0,        0,         0
//      P107_DEFECT_PER_HEAD_ZONE_COL_TYPES        // *
//      P107_DEFECT_PER_HEAD_ZONE_TABLE_TYPE       // S
#define P_ZAP_AUDIT_STATS                    1924  // HD_PHYS_PSN,HD_LGC_PSN,ZAP_PSN,ZAP_SPAN,ZAP_ZONE,AUDIT_TYPE,MEAN_MABSRRO,MAX_MABSRRO,SIG_MABSRRO,MEAN_3SIGRRO,MAX_3SIGRRO,SIG_3SIGRRO,MEAN_3SIGNRO,MAX_3SIGNRO,SIG_3SIGNRO,ITRTN_TRK_CNT,REV_ITRTN_CNT,MEAS_TRK_CNT,ETIME,AVG_REV_PER_TRK
//      P_ZAP_AUDIT_STATS_COL_WIDTH                //          11,        10,      7,       8,       8,        10,          12,         11,         11,          12,         11,         11,          12,         11,         11,           13,           13,          12,    8,             15
//      P_ZAP_AUDIT_STATS_COL_MASK                 //           0,         0,      0,       0,       0,         0,           0,          0,          0,           0,          0,          0,           0,          0,          0,            0,            0,           0,    0,              0
//      P_ZAP_AUDIT_STATS_COL_TYPES                // *
//      P_ZAP_AUDIT_STATS_TABLE_TYPE               // S
#define P307_SAT_CUR_MSMT                    1925  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,WRT_CUR,OVRSHT,OVRSHT_DUR,BPI_CAP,TPI_CAP,ADC_CAP,MEAS_DESCR
//      P307_SAT_CUR_MSMT_COL_WIDTH                //          11,        10,        9,      7,     6,        10,      7,      7,      7,        10
//      P307_SAT_CUR_MSMT_COL_MASK                 //           0,         0,        0,      0,     0,         0,      0,      0,      0,         0
//      P307_SAT_CUR_MSMT_COL_TYPES                // *
//      P307_SAT_CUR_MSMT_TABLE_TYPE               // S
#define P307_WP_SAT_CUR_FIT                  1926  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,OVRSHT,OVRSHT_DUR,SAT_THRESH,COEF_0,COEF_1,COEF_2,R_SQUARED,PREDICTED_SAT_CUR
//      P307_WP_SAT_CUR_FIT_COL_WIDTH              //          11,        10,        9,     6,        10,        10,     6,     6,     6,        9,               17
//      P307_WP_SAT_CUR_FIT_COL_MASK               //           0,         0,        0,     0,         0,         0,     0,     0,     0,        0,                0
//      P307_WP_SAT_CUR_FIT_COL_TYPES              // *
//      P307_WP_SAT_CUR_FIT_TABLE_TYPE             // S
#define P307_SAT_CURVE_FIT                   1927  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,OVRSHT_DUR,COEF_0,COEF_1,COEF_2,R_SQUARED
//      P307_SAT_CURVE_FIT_COL_WIDTH               //          11,        10,        9,        10,     6,     6,     6,        9
//      P307_SAT_CURVE_FIT_COL_MASK                //           0,         0,        0,         0,     0,     0,     0,        0
//      P307_SAT_CURVE_FIT_COL_TYPES               // *
//      P307_SAT_CURVE_FIT_TABLE_TYPE              // S
#define P307_SAT_ADC_FIT_INFO                1928  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,OVRSHT_DUR,COEF_0,COEF_1,COEF_2,R_SQUARED,BEST_OVS,BEST_CUR,BEST_ADC
//      P307_SAT_ADC_FIT_INFO_COL_WIDTH            //          11,        10,        9,        10,     6,     6,     6,        9,       8,       8,       8
//      P307_SAT_ADC_FIT_INFO_COL_MASK             //           0,         0,        0,         0,     0,     0,     0,        0,       0,       0,       0
//      P307_SAT_ADC_FIT_INFO_COL_TYPES            // *
//      P307_SAT_ADC_FIT_INFO_TABLE_TYPE           // S
#define P461_ANOVA                           1929  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RDR_LGC_PSN,STAT_ITEMS,DEG_OF_FREEDOM,SUM_OF_SQUARES,MEAN_SQUARES,STAT_F,MS_PERC
//      P461_ANOVA_COL_WIDTH                       //          11,        10,        9,         11,        12,            14,            20,          16,    10,      7
//      P461_ANOVA_COL_MASK                        //           0,         0,        0,          0,         0,             0,             0,           0,     0,      0
//      P461_ANOVA_COL_TYPES                       // *
//      P461_ANOVA_TABLE_TYPE                      // S
#define P461_STAT_DATA                       1930  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,RDR_LGC_PSN,BIE_MEAN,BIE_STD_DEV,ITER_MEAN,ITER_STD_DEV,BER_MEAN,5PERC_SCTR_BER,95PERC_SCTR_BER,NUM_UCCODEWORDS,NUM_SYNC_ERR,NUM_CW,SQUEEZE,BIE_AT_5PERC,BIE_AT_85PERC,BIE_AT_95PERC,BER_AT_5PERC,BER_AT_85PERC,BER_AT_95PERC,NUM_FAILED_WRT,NUM_TOTAL_WRT,STATUS
//      P461_STAT_DATA_COL_WIDTH                   //          11,        10,        9,      7,         11,      10,         11,        9,          12,       8,            14,             15,             15,          12,    10,      7,          12,           13,           13,          12,           13,           13,            14,           13,     6
//      P461_STAT_DATA_COL_MASK                    //           0,         0,        0,      0,          0,       0,          0,        0,           0,       0,             0,              0,              0,           0,     0,      0,           0,            0,            0,           0,            0,            0,             0,            0,     0
//      P461_STAT_DATA_COL_TYPES                   // *
//      P461_STAT_DATA_TABLE_TYPE                  // S
#define P461_BIE_MEAN                        1931  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RDR_LGC_PSN,SECTOR,BIE_MEAN
//      P461_BIE_MEAN_COL_WIDTH                    //          11,        10,        9,         11,     6,       8
//      P461_BIE_MEAN_COL_MASK                     //           0,         0,        0,          0,     0,       0
//      P461_BIE_MEAN_COL_TYPES                    // *
//      P461_BIE_MEAN_TABLE_TYPE                   // S
#define P285_LIFT_CYL_SUMMARY                1932  // HD_PHYS_PSN,HD_LGC_PSN,ITER_1_LIFT_CYL,ITER_2_LIFT_CYL,ITER_3_LIFT_CYL,FINAL_LIFT_CYL
//      P285_LIFT_CYL_SUMMARY_COL_WIDTH            //          11,        10,             15,             15,             15,            14
//      P285_LIFT_CYL_SUMMARY_COL_MASK             //           0,         0,              0,              0,              0,             0
//      P285_LIFT_CYL_SUMMARY_COL_TYPES            // *
//      P285_LIFT_CYL_SUMMARY_TABLE_TYPE           // S
#define P285_AGC_LIFT_DATA                   1933  // HD_PHYS_PSN,HD_LGC_PSN,SK_CNT,TGT_CYL,AGC_MEAN,AGC_MVG_AVG,AGC_SLOPE,AGC_AVG_SLOPE,AGC_ACCEL
//      P285_AGC_LIFT_DATA_COL_WIDTH               //          11,        10,     6,      7,       8,         11,        9,           13,        9
//      P285_AGC_LIFT_DATA_COL_MASK                //           0,         0,     0,      0,       0,          0,        0,            0,        0
//      P285_AGC_LIFT_DATA_COL_TYPES               // *
//      P285_AGC_LIFT_DATA_TABLE_TYPE              // S
#define P285_RAMP_HARMONIC_DATA              1934  // HD_PHYS_PSN,HD_LGC_PSN,TARGET_CYL,ACFF_2F,ACFF_3F,ACFF_4F,ACFF_5F
//      P285_RAMP_HARMONIC_DATA_COL_WIDTH          //          11,        10,        10,      7,      7,      7,      7
//      P285_RAMP_HARMONIC_DATA_COL_MASK           //           0,         0,         0,      0,      0,      0,      0
//      P285_RAMP_HARMONIC_DATA_COL_TYPES          // *
//      P285_RAMP_HARMONIC_DATA_TABLE_TYPE         // S
#define P285_RAMP_CYLS_SUMMARY               1935  // ITERATION,RAMP_CYL,LGC_HD_RAMP,OFFSET
//      P285_RAMP_CYLS_SUMMARY_COL_WIDTH           //         9,       8,         11,     6
//      P285_RAMP_CYLS_SUMMARY_COL_MASK            //         0,       0,          0,     0
//      P285_RAMP_CYLS_SUMMARY_COL_TYPES           // *
//      P285_RAMP_CYLS_SUMMARY_TABLE_TYPE          // S
#define P152_PASCAL_SELECTION                1936  // HD_PHYS_PSN,HD_LGC_PSN,PASCAL_SCORE,COMP_ID
//      P152_PASCAL_SELECTION_COL_WIDTH            //          11,        10,          12,      7
//      P152_PASCAL_SELECTION_COL_MASK             //           0,         0,           0,      0
//      P152_PASCAL_SELECTION_COL_TYPES            // *
//      P152_PASCAL_SELECTION_TABLE_TYPE           // S
#define P135_PARTIAL_LASER_IOP               1937  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,IOP_TUNED,IOP_PARTIAL,IOP_SCALING,IOP_OFFSET,WRITE_DAC_PARTIAL,WRITE_DAC_TUNED,RETRY_COUNT,C28_GLOBAL,C22_GLOBAL,C22_PREDICTED,BER_BEFORE,BER_AFTER
//      P135_PARTIAL_LASER_IOP_COL_WIDTH           //          11,        9,      8,        10,        9,         11,         11,        10,               17,             15,         11,        10,        10,           13,        10,        9
//      P135_PARTIAL_LASER_IOP_COL_MASK            //           0,        0,      0,         0,        0,          0,          0,         0,                0,              0,          0,         0,         0,            0,         0,        0
//      P135_PARTIAL_LASER_IOP_COL_TYPES           // *
//      P135_PARTIAL_LASER_IOP_TABLE_TYPE          // S
#define P172_RAP_TCC_ENABLE_BITS             1938  // MSTR_SWITCH,ENABLED,REF_VALUE,UNIT
//      P172_RAP_TCC_ENABLE_BITS_COL_WIDTH         //          11,      7,        9,   9
//      P172_RAP_TCC_ENABLE_BITS_COL_MASK          //           0,      0,        0,   0
//      P172_RAP_TCC_ENABLE_BITS_COL_TYPES         // *
//      P172_RAP_TCC_ENABLE_BITS_TABLE_TYPE        // S
#define P351_PM1_BER_BIE                     1939  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,INDEX,TRISE,LATE0RF,LATE1RF,LATE2RF,OSD,OS,IW,PDW_IOS,ERROR_RATE,BITS_IN_ERR,ITRTN,SFR
//      P351_PM1_BER_BIE_COL_WIDTH                 //          11,        10,        9,      7,    5,    5,      7,      7,      7,  3, 2, 3,      7,        10,         11,    5,  6
//      P351_PM1_BER_BIE_COL_MASK                  //           0,         0,        0,      0,    0,    0,      0,      0,      0,  0, 0, 0,      0,         0,          0,    0,  0
//      P351_PM1_BER_BIE_COL_TYPES                 // *
//      P351_PM1_BER_BIE_TABLE_TYPE                // S
#define P351_PM2_SQSFR                       1940  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,INDEX,TRISE,LATE0RF,LATE1RF,LATE2RF,OSD,OS,IW,PDW_IOS,SQSFR_PCT_X100,BITS_IN_ERR,ITRTN,BIE_BER
//      P351_PM2_SQSFR_COL_WIDTH                   //          11,        10,        9,      7,    5,    5,      7,      7,      7,  3, 2, 3,      7,            14,         11,    5,      7
//      P351_PM2_SQSFR_COL_MASK                    //           0,         0,        0,      0,    0,    0,      0,      0,      0,  0, 0, 0,      0,             0,          0,    0,      0
//      P351_PM2_SQSFR_COL_TYPES                   // *
//      P351_PM2_SQSFR_TABLE_TYPE                  // S
#define P351_PM3_BPIC_TPIC_ADC               1941  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,INDEX,TRISE,LATE0RF,LATE1RF,LATE2RF,OSD,OS,IW,PDW_IOS,BPIC,TPIC,ADC
//      P351_PM3_BPIC_TPIC_ADC_COL_WIDTH           //          11,        10,        9,      7,    5,    5,      7,      7,      7,  3, 2, 3,      7,   5,   5,  5
//      P351_PM3_BPIC_TPIC_ADC_COL_MASK            //           0,         0,        0,      0,    0,    0,      0,      0,      0,  0, 0, 0,      0,   0,   0,  0
//      P351_PM3_BPIC_TPIC_ADC_COL_TYPES           // *
//      P351_PM3_BPIC_TPIC_ADC_TABLE_TYPE          // S
#define P351_PM4_EQUAL_ADC_MARGIN            1942  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,COUNT,INDEX,TRISE,LATE0RF,LATE1RF,LATE2RF,OSD,OS,IW,PDW_IOS,BPIC,TPIC,ADC
//      P351_PM4_EQUAL_ADC_MARGIN_COL_WIDTH        //          11,        10,        9,      7,    5,    5,    5,      7,      7,      7,  3, 2, 3,      7,   5,   5,  5
//      P351_PM4_EQUAL_ADC_MARGIN_COL_MASK         //           0,         0,        0,      0,    0,    0,    0,      0,      0,      0,  0, 0, 0,      0,   0,   0,  0
//      P351_PM4_EQUAL_ADC_MARGIN_COL_TYPES        // *
//      P351_PM4_EQUAL_ADC_MARGIN_TABLE_TYPE       // S
#define P172_LASER_WRITELOSS_COEF            1943  // HD_PHYS_PSN,HD_LGC_PSN,LIWP_COEF_23,LIWP_COEF_24,LIWP_COEF_25,LIWP_COEF_26,LIWP_COEF_27
//      P172_LASER_WRITELOSS_COEF_COL_WIDTH        //          11,        10,          12,          12,          12,          12,          12
//      P172_LASER_WRITELOSS_COEF_COL_MASK         //           0,         0,           0,           0,           0,           0,           0
//      P172_LASER_WRITELOSS_COEF_COL_TYPES        // *
//      P172_LASER_WRITELOSS_COEF_TABLE_TYPE       // S
#define P135_DELTA_CAL                       1944  // HD_PHYS_PSN,HD_LGC_PSN,MSRD_INTRPLTD,DELTA_SLOPE,DELTA_OFFST,MAX_PRED_INT,SAVED_TO_RAP
//      P135_DELTA_CAL_COL_WIDTH                   //          11,        10,           13,         11,         11,          12,          12
//      P135_DELTA_CAL_COL_MASK                    //           0,         0,            0,          0,          0,           0,           0
//      P135_DELTA_CAL_COL_TYPES                   // *
//      P135_DELTA_CAL_TABLE_TYPE                  // S
#define P_ACLRMTR_DC_OFFSET                  1945  // SENSOR_TYPE,GAIN_STEP,OFFSET_DAC,OFFSET_STEP,OFFSET_RESIDUAL
//      P_ACLRMTR_DC_OFFSET_COL_WIDTH              //          11,        9,        10,         10,             15
//      P_ACLRMTR_DC_OFFSET_COL_MASK               //           1,        1,         1,          1,              1
//      P_ACLRMTR_DC_OFFSET_COL_TYPES              //           V,        N,         N,          N,              N
//      P_ACLRMTR_DC_OFFSET_TABLE_TYPE             // S
#define P_ACLRMTR_NOTCH_CAL                  1946  // SENSOR_TYPE,NOTCH_STEP,MINIMUM_MAG
//      P_ACLRMTR_NOTCH_CAL_COL_WIDTH              //          11,        10,         11
//      P_ACLRMTR_NOTCH_CAL_COL_MASK               //           1,         1,          1
//      P_ACLRMTR_NOTCH_CAL_COL_TYPES              //           V,         N,          N
//      P_ACLRMTR_NOTCH_CAL_TABLE_TYPE             // S

#define P277_SCOPY_TIME_STAMP_CAL            1947  // TARGET_HD,TS_CAL_CYL,NUM_ERR_MAXWINDOW,NUM_ERR_HALFINT,USE_MAXWINDOW,USE_HALFINT
//      P277_SCOPY_TIME_STAMP_CAL_COL_WIDTH        //         9,        10,               17,             15,           13,         11
//      P277_SCOPY_TIME_STAMP_CAL_COL_MASK         //         0,         0,                0,              0,            0,          0
//      P277_SCOPY_TIME_STAMP_CAL_COL_TYPES        // *
//      P277_SCOPY_TIME_STAMP_CAL_TABLE_TYPE       // S
#define P277_SCOPY_JTS_STATUS                1948  // TARGET_HD,JTS_SEARCH_CYL,ASSIGN_SPL_CYL,SVO_S2S_CNT,RS2S_OFFSET
//      P277_SCOPY_JTS_STATUS_COL_WIDTH            //         9,            14,            14,         11,         11
//      P277_SCOPY_JTS_STATUS_COL_MASK             //         0,             0,             0,          0,          0
//      P277_SCOPY_JTS_STATUS_COL_TYPES            // *
//      P277_SCOPY_JTS_STATUS_TABLE_TYPE           // S
#define P276_SCOPY_WRITE_SUMMARY             1949  // TARGET_HD,SCOPY_ZONE,FINAL_START_GRAY,FINAL_END_GRAY,NUM_GRAY_TRACKS
//      P276_SCOPY_WRITE_SUMMARY_COL_WIDTH         //         9,        10,              16,            14,             15
//      P276_SCOPY_WRITE_SUMMARY_COL_MASK          //         0,         0,               0,             0,              0
//      P276_SCOPY_WRITE_SUMMARY_COL_TYPES         // *
//      P276_SCOPY_WRITE_SUMMARY_TABLE_TYPE        // S
#define P461_FFT_STAT_DATA                   1950  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RDR_LGC_PSN,HARM_FIRST,HARM_SECOND,HARM_THIRD,HARM_FOURTH,HARM_FIFTH,HARM_SIXTH,MAX_THEREAFTER,HARM_MAX
//      P461_FFT_STAT_DATA_COL_WIDTH               //          11,        10,        9,         11,        10,         11,        10,         11,        10,        10,            14,       8
//      P461_FFT_STAT_DATA_COL_MASK                //           0,         0,        0,          0,         0,          0,         0,          0,         0,         0,             0,       0
//      P461_FFT_STAT_DATA_COL_TYPES               // *
//      P461_FFT_STAT_DATA_TABLE_TYPE              // S
#define P461_FFT_FULL_DATA                   1951  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RDR_LGC_PSN,INDEX,AMPLITUDE,PHASE
//      P461_FFT_FULL_DATA_COL_WIDTH               //          11,        10,        9,         11,    5,        9,    5
//      P461_FFT_FULL_DATA_COL_MASK                //           0,         0,        0,          0,    0,        0,    0
//      P461_FFT_FULL_DATA_COL_TYPES               // *
//      P461_FFT_FULL_DATA_TABLE_TYPE              // S
#define P432_RRO_POLY                        1952  // HD_PHYS_PSN,HD_LGC_PSN,TYPE,POLY_ORDER,COEFF_0,COEFF_1,COEFF_2,COEFF_3,COEFF_4,COEFF_5,COEFF_6,COEFF_7,COEFF_8
//      P432_RRO_POLY_COL_WIDTH                    //          11,        10,   5,        10,     10,     10,     10,     10,     10,     10,     10,     10,     10
//      P432_RRO_POLY_COL_MASK                     //           0,         0,   0,         0,      0,      0,      0,      0,      0,      0,      0,      0,      0
//      P432_RRO_POLY_COL_TYPES                    // *
//      P432_RRO_POLY_TABLE_TYPE                   // S
#define P432_R2R_DELAY_MEAS                  1953  // HD_PHYS_PSN,HD_LGC_PSN,LGC_CYL,PHYS_CYL_NORM,AVG_SFG_DELAY,NUM_GOOD_SAMPLES,NUM_SAMPLES,PERCENT_GOOD_SAMPLES,MAX_PERCENT_BAD,AVG_TBG_DELAY
//      P432_R2R_DELAY_MEAS_COL_WIDTH              //          11,        10,     10,           13,           13,              16,         11,                  20,             15,           13
//      P432_R2R_DELAY_MEAS_COL_MASK               //           0,         0,      0,            0,            0,               0,          0,                   0,              0,            0
//      P432_R2R_DELAY_MEAS_COL_TYPES              // *
//      P432_R2R_DELAY_MEAS_TABLE_TYPE             // S
#define P263_SZN_FIR_TAP_SCAN                1954  // HD_PHYS_PSN,HD_LGC_PSN,SERVO_ZONE,TAP_1,TAP_2,NO_TMD,OSE_COUNT,NO_TMD_BER,OSE_BER,SRVO_SCTR_ERR_CNT
//      P263_SZN_FIR_TAP_SCAN_COL_WIDTH            //          11,        10,        10,    5,    5,     6,        9,        10,      7,               17
//      P263_SZN_FIR_TAP_SCAN_COL_MASK             //           0,         0,         0,    0,    0,     0,        0,         0,      0,                0
//      P263_SZN_FIR_TAP_SCAN_COL_TYPES            // *
//      P263_SZN_FIR_TAP_SCAN_TABLE_TYPE           // S
#define P177_PREAMP_CAL_MSMR_EXTD            1955  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,TEST_MODE,OD_TRK_NUM,MD_TRK_NUM,ID_TRK_NUM,PREAMP_SETTING,ATTC,ATT2S,OD_PASSIVE_VGAS,MD_PASSIVE_VGAS,ID_PASSIVE_VGAS,OD_ACTIVE_VGAS,MD_ACTIVE_VGAS,ID_ACTIVE_VGAS,MIN_VGAS,MIN_VGAS_TRK,MAX_VGAS,MAX_VGAS_TRK,MEAN_VGAS
//      P177_PREAMP_CAL_MSMR_EXTD_COL_WIDTH        //          11,        10,          12,         11,       32,        10,        10,        10,            14,   4,    4,             15,             15,             15,            14,            14,            14,       8,          12,       8,          12,        9
//      P177_PREAMP_CAL_MSMR_EXTD_COL_MASK         //           1,         1,           1,          1,        1,         1,         1,         1,             1,   1,    1,              1,              1,              1,             1,             1,             1,       1,           1,       1,           1,        1
//      P177_PREAMP_CAL_MSMR_EXTD_COL_TYPES        //           N,         N,           N,          N,        V,         N,         N,         N,             N,   N,    N,              N,              N,              N,             N,             N,             N,       N,           N,       N,           N,        N
//      P177_PREAMP_CAL_MSMR_EXTD_TABLE_TYPE       // S
#define P277_SCOPY_RS2SOFFSET                1956  // TARGET_HD,ITER,RS2S_OFFSET,SVO_S2S_CNT,ASSIGN_SPL_CYL
//      P277_SCOPY_RS2SOFFSET_COL_WIDTH            //         9,   4,         11,         11,            14
//      P277_SCOPY_RS2SOFFSET_COL_MASK             //         0,   0,          0,          0,             0
//      P277_SCOPY_RS2SOFFSET_COL_TYPES            // *
//      P277_SCOPY_RS2SOFFSET_TABLE_TYPE           // S
#define P280_SCOPY_DC_AFH_CONTACT            1957  // TARGET_HD,AFH_ZONE,SPIRAL_CYL,ITER,CONTACT_DAC,DETECTOR_MASK,DC_CANCEL,DC_VALUE
//      P280_SCOPY_DC_AFH_CONTACT_COL_WIDTH        //         9,       8,        10,   4,         11,           13,        9,       8
//      P280_SCOPY_DC_AFH_CONTACT_COL_MASK         //         0,       0,         0,   0,          0,            0,        0,       0
//      P280_SCOPY_DC_AFH_CONTACT_COL_TYPES        // *
//      P280_SCOPY_DC_AFH_CONTACT_TABLE_TYPE       // S
#define P095_DEBUG_LIWP_HD_VS_GBL            1958  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,I_EFFECTIVE,HEAD_FIT_DAC,GLOBAL_FIT_DAC
//      P095_DEBUG_LIWP_HD_VS_GBL_COL_WIDTH        //          11,        10,        9,      8,         11,          12,            14
//      P095_DEBUG_LIWP_HD_VS_GBL_COL_MASK         //           0,         0,        0,      0,          0,           0,             0
//      P095_DEBUG_LIWP_HD_VS_GBL_COL_TYPES        // *
//      P095_DEBUG_LIWP_HD_VS_GBL_TABLE_TYPE       // S
#define P172_HTR_RANGE_RESOLUTION            1959  // WH_RANGE,WH_RESOLUTION,RH_RANGE,RH_RESOLUTION
//      P172_HTR_RANGE_RESOLUTION_COL_WIDTH        //        8,           13,       8,           13
//      P172_HTR_RANGE_RESOLUTION_COL_MASK         //        0,            0,       0,            0
//      P172_HTR_RANGE_RESOLUTION_COL_TYPES        // *
//      P172_HTR_RANGE_RESOLUTION_TABLE_TYPE       // S
#define P256_ERROR_RATE                      1960  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TEST_CYL,SQZ_OFFSET,FOD,NUM_SQZ_WRITE,SYNC_ERRS,DATA_ERRORS,BIT_ERROR_RATE
//      P256_ERROR_RATE_COL_WIDTH                  //          11,        9,        10,       8,        10,  3,           13,        9,         11,            14
//      P256_ERROR_RATE_COL_MASK                   //           0,        0,         0,       0,         0,  0,            0,        0,          0,             0
//      P256_ERROR_RATE_COL_TYPES                  // *
//      P256_ERROR_RATE_TABLE_TYPE                 // S
#define P256_PRE_POST_NRB                    1961  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TEST_CYL,ENV_TYPE,OFFSET,INDEX,REGISTER,NRB_STATE,BEFORE_DATA,AFTER_DATA
//      P256_PRE_POST_NRB_COL_WIDTH                //          11,        9,        10,       8,       8,     6,    5,       8,        9,         11,        10
//      P256_PRE_POST_NRB_COL_MASK                 //           0,        0,         0,       0,       0,     0,    0,       0,        0,          0,         0
//      P256_PRE_POST_NRB_COL_TYPES                // *
//      P256_PRE_POST_NRB_TABLE_TYPE               // S
#define P256_PRE_POST_BENPBIAS               1962  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TEST_CYL,INDEX,PRE_BENPBIAS,POST_BENPBIAS,DELTA_COUNT
//      P256_PRE_POST_BENPBIAS_COL_WIDTH           //          11,        9,        10,       8,    5,          12,           13,         11
//      P256_PRE_POST_BENPBIAS_COL_MASK            //           0,        0,         0,       0,    0,           0,            0,          0
//      P256_PRE_POST_BENPBIAS_COL_TYPES           // *
//      P256_PRE_POST_BENPBIAS_TABLE_TYPE          // S
#define P172_WORKING_ENV_SUMMARY             1963  // START_HEAD,END_HEAD,START_ZONE,END_ZONE,WORKING_TEMP,WORKING_MIX_RATIO,WORKING_ALTITUDE
//      P172_WORKING_ENV_SUMMARY_COL_WIDTH         //         10,       8,        10,       8,          12,               17,              16
//      P172_WORKING_ENV_SUMMARY_COL_MASK          //          0,       0,         0,       0,           0,                0,               0
//      P172_WORKING_ENV_SUMMARY_COL_TYPES         // *
//      P172_WORKING_ENV_SUMMARY_TABLE_TYPE        // S
#define P255_MSMR_OPTI_MARVELL               1964  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,DATA_ZONE,BST,ABST,CTFRNGE,CTFR,AGC,ASYM,ASC_ATTEN
//      P255_MSMR_OPTI_MARVELL_COL_WIDTH           //          11,        10,          12,         11,        9,  3,   4,      7,   4,  3,   4,        9
//      P255_MSMR_OPTI_MARVELL_COL_MASK            //           1,         1,           1,          1,        1,  1,   1,      1,   1,  1,   1,        1
//      P255_MSMR_OPTI_MARVELL_COL_TYPES           //           N,         N,           N,          N,        N,  N,   N,      N,   N,  N,   N,        N
//      P255_MSMR_OPTI_MARVELL_TABLE_TYPE          // S
#define P255_MSMR_FIR_MARVELL                1965  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,DATA_ZONE,F3A,F3B,GAIN,PHASE,TAP0,TAP1,TAP2,TAP3,TAP4,TAP5,TAP6,TAP7,TAP8,TAP9,OUTSCALE
//      P255_MSMR_FIR_MARVELL_COL_WIDTH            //          11,        10,          12,         11,        9,  3,  3,   4,    5,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,       8
//      P255_MSMR_FIR_MARVELL_COL_MASK             //           1,         1,           1,          1,        1,  1,  1,   1,    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,       0
//      P255_MSMR_FIR_MARVELL_COL_TYPES            //           N,         N,           N,          N,        N,  N,  N,   N,    N,   N,   N,   N,   N,   N,   N,   N,   N,   N,   N
//      P255_MSMR_FIR_MARVELL_TABLE_TYPE           // S
#define P073_AM_TIMING_DATA                  1966  // HD_PHYS_PSN,HD_LGC_PSN,SUPER_ZONE,PATTERN_OFFSET,TIMING_OFFSET,AM_TO_AM_TIME_NS
//      P073_AM_TIMING_DATA_COL_WIDTH              //          11,        10,        10,            14,           13,              16
//      P073_AM_TIMING_DATA_COL_MASK               //           1,         1,         1,             1,            1,               1
//      P073_AM_TIMING_DATA_COL_TYPES              //           N,         N,         N,             N,            N,               N
//      P073_AM_TIMING_DATA_TABLE_TYPE             // S
#define P432_R2R_DELAY_MEAS_2                1967  // HD_PHYS_PSN,HD_LGC_PSN,LGC_CYL,DATA_ZONE,PHYS_CYL_NORM,TBG_DELAY,SFG_DELAY,M_VALUE,DELTA_T_VALUE
//      P432_R2R_DELAY_MEAS_2_COL_WIDTH            //          11,        10,     10,       12,           13,       13,       13,     13,           13
//      P432_R2R_DELAY_MEAS_2_COL_MASK             //           0,         0,      0,        0,            0,        0,        0,      0,            0
//      P432_R2R_DELAY_MEAS_2_COL_TYPES            // *
//      P432_R2R_DELAY_MEAS_2_TABLE_TYPE           // S
#define P235_ENV_INFO                        1968  // CURRENT_TEMP,RAP_REF_TEMP,CURRENT_MIX_RATIO,RAP_REF_MIX_RATIO,CURRENT_RH,CURRENT_PRESSURE,RAP_REF_PRESSURE,HE_MOLARITY,TEMP_UNIT,MIX_RATIO_UNIT,RH_UNIT,PRESSURE_UNIT,TIMESTAMP
//      P235_ENV_INFO_COL_WIDTH                    //           12,          12,               17,               17,        10,              16,              16,         11,       10,            14,      7,           13,       15
//      P235_ENV_INFO_COL_MASK                     //            1,           1,                1,                1,         1,               1,               1,          1,        1,             1,      1,            1,        1
//      P235_ENV_INFO_COL_TYPES                    //            N,           N,                N,                N,         N,               N,               N,          N,        V,             V,      V,            V,        N
//      P235_ENV_INFO_TABLE_TYPE                   // S
#define P_FFV_SIGNATURE                      1969  // LOD_SEG_TYPE,SIGN_PATTERN_TYPE,SYSTEM_COPY,SIG_IDX,SIGNATURE
//      P_FFV_SIGNATURE_COL_WIDTH                  //           12,               17,         11,      7,      192
//      P_FFV_SIGNATURE_COL_MASK                   //            0,                0,          0,      0,        0
//      P_FFV_SIGNATURE_COL_TYPES                  // *
//      P_FFV_SIGNATURE_TABLE_TYPE                 // S
#define P_FFV_STATUS                         1970  // LOD_SEG_TYPE,SIGN_PATTERN_TYPE,SYSTEM_COPY,STATUS
//      P_FFV_STATUS_COL_WIDTH                     //           12,               17,         11,     7
//      P_FFV_STATUS_COL_MASK                      //            0,                0,          0,     0
//      P_FFV_STATUS_COL_TYPES                     // *
//      P_FFV_STATUS_TABLE_TYPE                    // S
#define P255_MARVELL_WRITE_PARAMS            1971  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,WRT_CUR,OVS_WRT_CUR,OVS_DUR,PDW_IOS,PRCVAL0,PRCVAL1,PRCVAL2,PRCVAL3,PRCVAL4,PRCVAL5,PRCVAL6,PRCVAL7,TRISE
//      P255_MARVELL_WRITE_PARAMS_COL_WIDTH        //          11,        10,        9,      7,         11,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,    5
//      P255_MARVELL_WRITE_PARAMS_COL_MASK         //           1,         1,        1,      1,          1,      1,      1,      1,      1,      1,      1,      1,      1,      1,      1,    1
//      P255_MARVELL_WRITE_PARAMS_COL_TYPES        //           N,         N,        N,      N,          N,      N,      N,      N,      N,      N,      N,      N,      N,      N,      N,    N
//      P255_MARVELL_WRITE_PARAMS_TABLE_TYPE       // S
#define P383_DC_HEAD_SKEW_SUMMARY            1972  // DISC_NUMBER,CYLINDER,OFFSET,NUM_SAMPLES,SKEW_VALUE
//      P383_DC_HEAD_SKEW_SUMMARY_COL_WIDTH        //          11,       8,     6,         11,        10
//      P383_DC_HEAD_SKEW_SUMMARY_COL_MASK         //           0,       0,     0,          0,         0
//      P383_DC_HEAD_SKEW_SUMMARY_COL_TYPES        // *
//      P383_DC_HEAD_SKEW_SUMMARY_TABLE_TYPE       // S
#define P383_HD_SKEW_LOAD_UNLOAD             1973  // DISC_NUMBER,DC_SKEW_RANGE
//      P383_HD_SKEW_LOAD_UNLOAD_COL_WIDTH         //          11,           13
//      P383_HD_SKEW_LOAD_UNLOAD_COL_MASK          //           0,            0
//      P383_HD_SKEW_LOAD_UNLOAD_COL_TYPES         // *
//      P383_HD_SKEW_LOAD_UNLOAD_TABLE_TYPE        // S
#define P434_STRESS_BER_RES_CHG              1974  // HD_PHYS_PSN,HD_LGC_PSN,STEP_ID,START_BER_RW_ZN_X,END_BER_RW_ZN_X,DELTA_BER_RW_ZN_X,START_BER_RW_ZN_Y,END_BER_RW_ZN_Y,DELTA_BER_RW_ZN_Y,START_BER_RO_ZN_X,END_BER_RO_ZN_X,DELTA_BER_RO_ZN_X,START_BER_RO_ZN_Y,END_BER_RO_ZN_Y,DELTA_BER_RO_ZN_Y,DELTA_BER_RWRO_ZN_X,DELTA_BER_RWRO_ZN_Y,START_RESISTANCE,END_RESISTANCE,DELTA_RESISTANCE
//      P434_STRESS_BER_RES_CHG_COL_WIDTH          //          11,        10,      7,               17,             15,               17,               17,             15,               17,               17,             15,               17,               17,             15,               17,                 19,                 19,              16,            14,              16
//      P434_STRESS_BER_RES_CHG_COL_MASK           //           0,         0,      0,                0,              0,                0,                0,              0,                0,                0,              0,                0,                0,              0,                0,                  0,                  0,               0,             0,               0
//      P434_STRESS_BER_RES_CHG_COL_TYPES          // *
//      P434_STRESS_BER_RES_CHG_TABLE_TYPE         // S
#define P434_STRESS_STEP_INPUTS              1975  // STRESS_STEP,START_HEAD,END_HEAD,START_CYL,END_CYL,REL_START_CYL,REL_END_CYL,STRESS_PSN,STRESS_RNG_TYPE,CLRNC,PAD_TRK_CNT,STRESS_TM_PER_TRK,STRESS_TM_PER_STEP,ZONE_MSK_0_31,ZONE_MSK_32_63,ZONE_MSK_64_95,ZONE_MSK_96_127,ZONE_MSK_128_159,ZONE_MSK_160_191,ZONE_MSK_192_223,ZONE_MSK_224_255,ZONE_MSK_256_287,ZONE_MSK_288_319
//      P434_STRESS_STEP_INPUTS_COL_WIDTH          //          11,        10,       8,        9,      7,           13,         11,        10,             15,    5,         11,               17,                18,           13,            14,            14,             15,              16,              16,              16,              16,              16,              16
//      P434_STRESS_STEP_INPUTS_COL_MASK           //           0,         0,       0,        0,      0,            0,          0,         0,              0,    0,          0,                0,                 0,            0,             0,             0,              0,               0,               0,               0,               0,               0,               0
//      P434_STRESS_STEP_INPUTS_COL_TYPES          // *
//      P434_STRESS_STEP_INPUTS_TABLE_TYPE         // V
#define P434_STRESS_TRACK_LIST               1976  // DWELL_STEP,HD_PHYS_PSN,HD_LGC_PSN,START_TRK_NUM,END_TRK_NUM
//      P434_STRESS_TRACK_LIST_COL_WIDTH           //         10,         11,        10,           13,         11
//      P434_STRESS_TRACK_LIST_COL_MASK            //          0,          0,         0,            0,          0
//      P434_STRESS_TRACK_LIST_COL_TYPES           // *
//      P434_STRESS_TRACK_LIST_TABLE_TYPE          // S
#define P434_STRESS_CLEARANCE                1977  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RAP_TGT_WRT_CLRNC,RAP_TGT_RD_CLRNC,RAP_PRE_HEAT,RAP_WRT_HEAT,RAP_RD_HEAT,ALTERED_CLRNC_TYPE,ALTERED_CLRNC,ALTERED_PRE_HEAT,ALTERED_WRT_HEAT,ALTERED_RD_HEAT
//      P434_STRESS_CLEARANCE_COL_WIDTH            //          11,        9,        10,               17,              16,          12,          12,         11,                18,           13,              16,              16,             15
//      P434_STRESS_CLEARANCE_COL_MASK             //           0,        0,         0,                0,               0,           0,           0,          0,                 0,            0,               0,               0,              0
//      P434_STRESS_CLEARANCE_COL_TYPES            // *
//      P434_STRESS_CLEARANCE_TABLE_TYPE           // S
#define P434_BER_AVGS_SUMMARY                1978  // HD_PHYS_PSN,HD_LGC_PSN,RW_Z1_RAW,RO_Z1_RAW,RW_Z2_RAW,RO_Z2_RAW,RW_Z1_SPORTED,RO_Z1_SPORTED,RW_Z2_SPORTED,RO_Z2_SPORTED,MAX_CHANGE
//      P434_BER_AVGS_SUMMARY_COL_WIDTH            //          11,        10,        9,        9,        9,        9,           13,           13,           13,           13,        10
//      P434_BER_AVGS_SUMMARY_COL_MASK             //           0,         0,        0,        0,        0,        0,            0,            0,            0,            0,         0
//      P434_BER_AVGS_SUMMARY_COL_TYPES            // *
//      P434_BER_AVGS_SUMMARY_TABLE_TYPE           // S
#define P434_BER_STD_DEV_SUMMARY             1979  // HD_PHYS_PSN,HD_LGC_PSN,RW_Z1_RAW,RO_Z1_RAW,RW_Z2_RAW,RO_Z2_RAW,RW_Z1_SPORTED,RO_Z1_SPORTED,RW_Z2_SPORTED,RO_Z2_SPORTED,MAX_CHANGE
//      P434_BER_STD_DEV_SUMMARY_COL_WIDTH         //          11,        10,        9,        9,        9,        9,           13,           13,           13,           13,        10
//      P434_BER_STD_DEV_SUMMARY_COL_MASK          //           0,         0,        0,        0,        0,        0,            0,            0,            0,            0,         0
//      P434_BER_STD_DEV_SUMMARY_COL_TYPES         // *
//      P434_BER_STD_DEV_SUMMARY_TABLE_TYPE        // S
#define P434_BER_RAW_DATA                    1980  // HD_PHYS_PSN,HD_LGC_PSN,ITERATION,ZONE_1,RW_TRACK_1,RO_TRACK_1,ZONE_2,RW_TRACK_2,RO_TRACK_2,RD_WRT_NUM,BER_RW_Z1,BER_RO_Z1,BER_RW_Z2,BER_RO_Z2
//      P434_BER_RAW_DATA_COL_WIDTH                //          11,        10,        9,     6,        10,        10,     6,        10,        10,        10,        9,        9,        9,        9
//      P434_BER_RAW_DATA_COL_MASK                 //           0,         0,        0,     0,         0,         0,     0,         0,         0,         0,        0,        0,        0,        0
//      P434_BER_RAW_DATA_COL_TYPES                // *
//      P434_BER_RAW_DATA_TABLE_TYPE               // S
#define P434_STRESS_OTF_DELTAS               1981  // HD_PHYS_PSN,HD_LGC_PSN,STEP_ID,START_BER_RW_ZN_X,END_BER_RW_ZN_X,DELTA_BER_RW_ZN_X,START_BER_RW_ZN_Y,END_BER_RW_ZN_Y,DELTA_BER_RW_ZN_Y,START_BER_RO_ZN_X,END_BER_RO_ZN_X,DELTA_BER_RO_ZN_X,START_BER_RO_ZN_Y,END_BER_RO_ZN_Y,DELTA_BER_RO_ZN_Y,DELTA_BER_RWRO_ZN_X,DELTA_BER_RWRO_ZN_Y,START_RESISTANCE,END_RESISTANCE,DELTA_RESISTANCE
//      P434_STRESS_OTF_DELTAS_COL_WIDTH           //          11,        10,      7,               17,             15,               17,               17,             15,               17,               17,             15,               17,               17,             15,               17,                 19,                 19,              16,            14,              16
//      P434_STRESS_OTF_DELTAS_COL_MASK            //           0,         0,      0,                0,              0,                0,                0,              0,                0,                0,              0,                0,                0,              0,                0,                  0,                  0,               0,             0,               0
//      P434_STRESS_OTF_DELTAS_COL_TYPES           // *
//      P434_STRESS_OTF_DELTAS_TABLE_TYPE          // S
#define P434_STRESS_OTF_STATUS               1982  // HD_PHYS_PSN,HD_LGC_PSN,STEP_ID,QUAL_TA_CNT,TRACK_CNT,DWELL_TIME,PASS_FAIL_ELIGIBLE,FALSE_FAIL_ELIGIBLE,STATUS_FINAL,DAMAGE_CODE,STATUS_RESISTANCE,STATUS_BER_RW_ZN_X,STATUS_BER_RW_ZN_Y,STATUS_BER_RO_ZN_X,STATUS_BER_RO_ZN_Y,STATUS_DELTA_BER_RWRO_ZN_X,STATUS_DELTA_BER_RWRO_ZN_Y,FALSE_BER_FAILURE,FALSE_RES_FAILURE,FALSE_BER_RES_FAILURE
//      P434_STRESS_OTF_STATUS_COL_WIDTH           //          11,        10,      7,         11,        9,        10,                18,                 19,          12,         11,               17,                18,                18,                18,                18,                        26,                        26,               17,               17,                   21
//      P434_STRESS_OTF_STATUS_COL_MASK            //           0,         0,      0,          0,        0,         0,                 0,                  0,           0,          0,                0,                 0,                 0,                 0,                 0,                         0,                         0,                0,                0,                    0
//      P434_STRESS_OTF_STATUS_COL_TYPES           // *
//      P434_STRESS_OTF_STATUS_TABLE_TYPE          // S
#define P434_STRESS_STATUS                   1983  // HD_PHYS_PSN,HD_LGC_PSN,STEP_ID,QUAL_TA_CNT,TRACK_CNT,DWELL_TIME,PASS_FAIL_ELIGIBLE,FALSE_FAIL_ELIGIBLE,STATUS_FINAL,DAMAGE_CODE,STATUS_RESISTANCE,STATUS_BER_RW_ZN_X,STATUS_BER_RW_ZN_Y,STATUS_BER_RO_ZN_X,STATUS_BER_RO_ZN_Y,STATUS_DELTA_BER_RWRO_ZN_X,STATUS_DELTA_BER_RWRO_ZN_Y,FALSE_BER_FAILURE,FALSE_RES_FAILURE,FALSE_BER_RES_FAILURE
//      P434_STRESS_STATUS_COL_WIDTH               //          11,        10,      7,         11,        9,        10,                18,                 19,          12,         11,               17,                18,                18,                18,                18,                        26,                        26,               17,               17,                   21
//      P434_STRESS_STATUS_COL_MASK                //           0,         0,      0,          0,        0,         0,                 0,                  0,           0,          0,                0,                 0,                 0,                 0,                 0,                         0,                         0,                0,                0,                    0
//      P434_STRESS_STATUS_COL_TYPES               // *
//      P434_STRESS_STATUS_TABLE_TYPE              // S
#define P434_STRESS_SUMMARY_HD               1984  // STRESS_STEP,HD_PHYS_PSN,HD_LGC_PSN,TRK_STRESS_CNT
//      P434_STRESS_SUMMARY_HD_COL_WIDTH           //          10,         11,        10,            13
//      P434_STRESS_SUMMARY_HD_COL_MASK            //           0,          0,         0,             0
//      P434_STRESS_SUMMARY_HD_COL_TYPES           // *
//      P434_STRESS_SUMMARY_HD_TABLE_TYPE          // S
#define P434_STRESS_PROGRESS                 1985  // PERCENT_COMPLETE,TIME_REMAINING_NO_OVHD,TIME_ELAPSED_W_OVHD,TIME_REMAINING_W_OVHD,PERCENT_OVHD
//      P434_STRESS_PROGRESS_COL_WIDTH             //               16,                    22,                 19,                   21,          13
//      P434_STRESS_PROGRESS_COL_MASK              //                0,                     0,                  0,                    0,           0
//      P434_STRESS_PROGRESS_COL_TYPES             // *
//      P434_STRESS_PROGRESS_TABLE_TYPE            // S
#define P235_NORMALIZED_PRESSURE             1986  // NORM_PRESSURE_TEMP,NORM_PRESSURE_TEMP_RH
//      P235_NORMALIZED_PRESSURE_COL_WIDTH         //                 18,                   21
//      P235_NORMALIZED_PRESSURE_COL_MASK          //                  1,                    1
//      P235_NORMALIZED_PRESSURE_COL_TYPES         //                  N,                    N
//      P235_NORMALIZED_PRESSURE_TABLE_TYPE        // S
#define P249_DEGRADATION_EM_DATA             1987  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,READ_WRITE,PARM_TYPE,NUM_MODES,MODE_LOSS,MODE_DELTA,OP_MODE,PROBABILITY,DATA_AVERAGE,STD_DEVIATION,DURATION
//      P249_DEGRADATION_EM_DATA_COL_WIDTH         //          11,        10,      7,        10,        9,        9,        9,        10,      7,         11,          12,           13,       8
//      P249_DEGRADATION_EM_DATA_COL_MASK          //           0,         0,      0,         0,        0,        0,        0,         0,      0,          0,           0,            0,       0
//      P249_DEGRADATION_EM_DATA_COL_TYPES         // *
//      P249_DEGRADATION_EM_DATA_TABLE_TYPE        // S
#define P345_ROLLOVER_TEMP                   1988  // HD_PHYS_PSN,HD_LGC_PSN,MODE,MIN_ROLLOVER_TEMP,MAX_ROLLOVER_TEMP
//      P345_ROLLOVER_TEMP_COL_WIDTH               //          11,        10,   4,               17,               17
//      P345_ROLLOVER_TEMP_COL_MASK                //           0,         0,   0,                0,                0
//      P345_ROLLOVER_TEMP_COL_TYPES               // *
//      P345_ROLLOVER_TEMP_TABLE_TYPE              // S
#define P255_WRITE_PARAMS                    1989  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,WRT_CUR,OVS_WRT_CUR,OVS_DUR,PDW_IOS,LATE0R,LATE1R,LATE2R,LATE0F,LATE1F,LATE2F,TRISE
//      P255_WRITE_PARAMS_COL_WIDTH                //          11,        10,        9,      7,         11,      7,      7,     6,     6,     6,     6,     6,     6,    5
//      P255_WRITE_PARAMS_COL_MASK                 //           1,         1,        1,      1,          1,      1,      1,     1,     1,     1,     1,     1,     1,    1
//      P255_WRITE_PARAMS_COL_TYPES                //           N,         N,        N,      N,          N,      N,      N,     N,     N,     N,     N,     N,     N,    N
//      P255_WRITE_PARAMS_TABLE_TYPE               // S
#define P255_MSMR_BEDF_FIR                   1990  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,DATA_ZONE,TARG_T0,TARG_T1,TARG_T2,TAP1R,TAP2R,TAP3R,TAP4R,TAP5R,TAP6R,TAP7R,TAP8R,TAP9R,TAP10R,TAP11R,TAP12R,ECWIN_X
//      P255_MSMR_BEDF_FIR_COL_WIDTH               //          11,        10,          12,         11,        9,      7,      7,      7,    5,    5,    5,    5,    5,    5,    5,    5,    5,     6,     6,     6,      7
//      P255_MSMR_BEDF_FIR_COL_MASK                //           1,         1,           1,          1,        1,      1,      1,      1,    1,    1,    1,    1,    1,    1,    1,    1,    1,     1,     1,     1,      1
//      P255_MSMR_BEDF_FIR_COL_TYPES               //           N,         N,           N,          N,        N,      N,      N,      N,    N,    N,    N,    N,    N,    N,    N,    N,    N,     N,     N,     N,      N
//      P255_MSMR_BEDF_FIR_TABLE_TYPE              // S
#define P255_MSMR_FIR_TAPS                   1991  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,DATA_ZONE,NLTAPR,DCTAPR,DCAVGR,LDF_TAP0,LDF_TAP1,LDF_TAP2,LDF_TAP3,LDF_TAP4,LDF_TAP5,LDF_TAP6,LDF_TAP7,LDF_TAP8,LDF_TAP9
//      P255_MSMR_FIR_TAPS_COL_WIDTH               //          11,        10,          12,         11,        9,     6,     6,     6,       8,       8,       8,       8,       8,       8,       8,       8,       8,       8
//      P255_MSMR_FIR_TAPS_COL_MASK                //           1,         1,           1,          1,        1,     1,     1,     1,       1,       1,       1,       1,       1,       1,       1,       1,       1,       1
//      P255_MSMR_FIR_TAPS_COL_TYPES               //           N,         N,           N,          N,        N,     N,     N,     N,       N,       N,       N,       N,       N,       N,       N,       N,       N,       N
//      P255_MSMR_FIR_TAPS_TABLE_TYPE              // S
#define P255_MSMR_LOOP_LPE                   1992  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,DATA_ZONE,LPE_TAP0,LPE_TAP1,LPE_TAP2,LPE_TAP3,LPE_TAP4,LPE_TAP5,LPE_TAP6,LPE_TAP7,LPE_TAP8,LPE_TAP9
//      P255_MSMR_LOOP_LPE_COL_WIDTH               //          11,        10,          12,         11,        9,       8,       8,       8,       8,       8,       8,       8,       8,       8,       8
//      P255_MSMR_LOOP_LPE_COL_MASK                //           1,         1,           1,          1,        1,       1,       1,       1,       1,       1,       1,       1,       1,       1,       1
//      P255_MSMR_LOOP_LPE_COL_TYPES               //           N,         N,           N,          N,        N,       N,       N,       N,       N,       N,       N,       N,       N,       N,       N
//      P255_MSMR_LOOP_LPE_TABLE_TYPE              // S
#define P_HAMR_SERVO_LASER_CTRL              1993  // OUTPUT_ACCUM,OUTPUT_AVG,ERROR_INTEGRAL,STATUS,NEW_MSRMNT,NEW_TEST_MSRMNT,CONTROL_EFFORT,CMD_THRSH_CURR,PD_TARGET,MSRMNT_CNT
//      P_HAMR_SERVO_LASER_CTRL_COL_WIDTH          //           12,        10,            14,     5,        10,             15,            14,            14,        9,        10
//      P_HAMR_SERVO_LASER_CTRL_COL_MASK           //            0,         0,             0,     0,         0,              0,             0,             0,        0,         0
//      P_HAMR_SERVO_LASER_CTRL_COL_TYPES          // *
//      P_HAMR_SERVO_LASER_CTRL_TABLE_TYPE         // S
#define P_HAMR_SERVO_DIAG_INFO               1994  // MAX_IBIAS_CYL,MAX_IOP_CYL,MAX_IBIAS_ADJ_CYL,MAX_CMD_IBIAS,MAX_CMD_IOP,MAX_POS_IBIAS_ADJ,MAX_NEG_IBIAS_ADJ,MAX_WHRM,MAX_WHWM,MAX_RHRM,MAX_RHWM
//      P_HAMR_SERVO_DIAG_INFO_COL_WIDTH           //            13,         11,               17,           13,         11,               17,               17,       8,       8,       8,       8
//      P_HAMR_SERVO_DIAG_INFO_COL_MASK            //             0,          0,                0,            0,          0,                0,                0,       0,       0,       0,       0
//      P_HAMR_SERVO_DIAG_INFO_COL_TYPES           // *
//      P_HAMR_SERVO_DIAG_INFO_TABLE_TYPE          // S
#define P461_BIE_MEAN_BY_TRACK               1995  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,SECTOR,RDR_LGC_PSN,BIE_MEAN_TRK_ONE,BIE_MEAN_TRK_TWO,BIE_MEAN_TRK_THREE,BIE_MEAN_TRK_FOUR,BIE_MEAN_TRK_FIVE,BIE_MEAN_TRK_SIX,BIE_MEAN_TRK_SEVEN,BIE_MEAN_TRK_EIGHT,BIE_MEAN_TRK_NINE,BIE_MEAN_TRK_TEN
//      P461_BIE_MEAN_BY_TRACK_COL_WIDTH           //          11,        10,        9,     6,         11,              16,              16,                18,               17,               17,              16,                18,                18,               17,              16
//      P461_BIE_MEAN_BY_TRACK_COL_MASK            //           0,         0,        0,     0,          0,               0,               0,                 0,                0,                0,               0,                 0,                 0,                0,               0
//      P461_BIE_MEAN_BY_TRACK_COL_TYPES           // *
//      P461_BIE_MEAN_BY_TRACK_TABLE_TYPE          // S
#define P281_OD_EDGEFILL_SUMMARY             1996  // TARGET_HD,MIN_SERVO_TRACK,RAMP_TRACK,FILL_LENGTH
//      P281_OD_EDGEFILL_SUMMARY_COL_WIDTH         //         9,             15,        10,         11
//      P281_OD_EDGEFILL_SUMMARY_COL_MASK          //         0,              0,         0,          0
//      P281_OD_EDGEFILL_SUMMARY_COL_TYPES         // *
//      P281_OD_EDGEFILL_SUMMARY_TABLE_TYPE        // S
#define P281_ID_EDGEFILL_SUMMARY             1997  // TARGET_HD,MAX_SERVO_TRACK,IDCS_TRACK,FILL_LENGTH
//      P281_ID_EDGEFILL_SUMMARY_COL_WIDTH         //         9,             15,        10,         11
//      P281_ID_EDGEFILL_SUMMARY_COL_MASK          //         0,              0,         0,          0
//      P281_ID_EDGEFILL_SUMMARY_COL_TYPES         // *
//      P281_ID_EDGEFILL_SUMMARY_TABLE_TYPE        // S
#define P_SCOPY_INFO                         1998  // TARGET_HD,REF_HD,SC_RESULT,PROCESS_TYPE,HEAD_OFFSET,RAMP_LOCATION,IDCS_LOCATION
//      P_SCOPY_INFO_COL_WIDTH                     //         9,     6,        9,          12,         11,           13,           13
//      P_SCOPY_INFO_COL_MASK                      //         0,     0,        0,           0,          0,            0,            0
//      P_SCOPY_INFO_COL_TYPES                     // *
//      P_SCOPY_INFO_TABLE_TYPE                    // S
#define P256_PRE_POST_BENPTAP                1999  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TEST_CYL,INDEX,PRE_BENPTAP,POST_BENPTAP
//      P256_PRE_POST_BENPTAP_COL_WIDTH            //          11,        9,        10,       8,    5,         11,          12
//      P256_PRE_POST_BENPTAP_COL_MASK             //           0,        0,         0,       0,    0,          0,           0
//      P256_PRE_POST_BENPTAP_COL_TYPES            // *
//      P256_PRE_POST_BENPTAP_TABLE_TYPE           // S
#define P255_MSMR_OPTI                       2000  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,DATA_ZONE,ZFR,CTFR,PCT_ZN_FREQ,CTFRNGE,ATT2R,ATTC_RD,VGARSH
//      P255_MSMR_OPTI_COL_WIDTH                   //          11,        10,          12,         11,        9,  3,   5,         11,      7,    5,      7,     6
//      P255_MSMR_OPTI_COL_MASK                    //           0,         0,           0,          0,        0,  0,   0,          0,      0,    0,      0,     0
//      P255_MSMR_OPTI_COL_TYPES                   // *
//      P255_MSMR_OPTI_TABLE_TYPE                  // S
#define P025_UNLATCH_VELOCITY                2001  // UNLATCH_CYCLE_CNT,LOAD_MAX_VEL,LOAD_RETRIES_CNT
//      P025_UNLATCH_VELOCITY_COL_WIDTH            //                17,          12,              16
//      P025_UNLATCH_VELOCITY_COL_MASK             //                 0,           0,               0
//      P025_UNLATCH_VELOCITY_COL_TYPES            // *
//      P025_UNLATCH_VELOCITY_TABLE_TYPE           // S
#define P025_UNLATCH_MAX_VELOCITY            2002  // UNLATCH_CYCLE_CNT,LOAD_MAX_VEL,LOAD_RETRIES_CNT
//      P025_UNLATCH_MAX_VELOCITY_COL_WIDTH        //                17,          12,              16
//      P025_UNLATCH_MAX_VELOCITY_COL_MASK         //                 1,           1,               1
//      P025_UNLATCH_MAX_VELOCITY_COL_TYPES        //                 N,           N,               N
//      P025_UNLATCH_MAX_VELOCITY_TABLE_TYPE       // S
#define P076_LASER_REVERSE_SWEEP             2003  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK,BL_BER,LASER_OPERATING_CUR_DAC,BER,NON_CONV_CW,TOTAL_CW
//      P076_LASER_REVERSE_SWEEP_COL_WIDTH         //          11,        10,        9,  8,     9,                     23,  9,         11,       8
//      P076_LASER_REVERSE_SWEEP_COL_MASK          //           0,         0,        0,  0,     0,                      0,  0,          0,       0
//      P076_LASER_REVERSE_SWEEP_COL_TYPES         // *
//      P076_LASER_REVERSE_SWEEP_TABLE_TYPE        // S
#define P056_U_ACTUATOR_DAC_GAIN             2004  // HD_PHYS_PSN,HD_LGC_PSN,UACT_GAIN_MEAN,UACT_GAIN_STDEV,NUM_OUTLIERS,HD_STATUS,CAL_FREQ
//      P056_U_ACTUATOR_DAC_GAIN_COL_WIDTH         //          11,        10,            14,             15,          12,        9,       8
//      P056_U_ACTUATOR_DAC_GAIN_COL_MASK          //           0,         0,             0,              0,           0,        0,       0
//      P056_U_ACTUATOR_DAC_GAIN_COL_TYPES         // *
//      P056_U_ACTUATOR_DAC_GAIN_TABLE_TYPE        // S
#define P056_U_ACTUATOR_STROKE_ID            2005  // HD_PHYS_PSN,HD_LGC_PSN,UACT_STROKE,CAL_FREQ
//      P056_U_ACTUATOR_STROKE_ID_COL_WIDTH        //          11,        10,         11,       8
//      P056_U_ACTUATOR_STROKE_ID_COL_MASK         //           0,         0,          0,       0
//      P056_U_ACTUATOR_STROKE_ID_COL_TYPES        // *
//      P056_U_ACTUATOR_STROKE_ID_TABLE_TYPE       // S
#define P056_U_ACTUATOR_CAL_INFO             2006  // HD_PHYS_PSN,HD_LGC_PSN,MAX_STROKE,MIN_STROKE,DELTA_STROKE,MAX_FREQ,MIN_FREQ,UACT_GAIN,DEFECT
//      P056_U_ACTUATOR_CAL_INFO_COL_WIDTH         //          11,        10,        10,        10,          12,       8,       8,        9,     6
//      P056_U_ACTUATOR_CAL_INFO_COL_MASK          //           0,         0,         0,         0,           0,       0,       0,        0,     0
//      P056_U_ACTUATOR_CAL_INFO_COL_TYPES         // *
//      P056_U_ACTUATOR_CAL_INFO_TABLE_TYPE        // S
#define P487_HSC_AMP_BUCKET                  2007  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CYLINDER,RD_OFST,SQZ_WRT_OFST,HSC_AMP
//      P487_HSC_AMP_BUCKET_COL_WIDTH              //          11,        9,        10,       8,      7,          12,      7
//      P487_HSC_AMP_BUCKET_COL_MASK               //           0,        0,         0,       0,      0,           0,      0
//      P487_HSC_AMP_BUCKET_COL_TYPES              // *
//      P487_HSC_AMP_BUCKET_TABLE_TYPE             // M
#define P487_MWW_PROFILE                     2008  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CYLINDER,PEAK_INDEX,HSC_AMP_PEAK,MWW_30_NM,MWW_NM,MWW_80_NM
//      P487_MWW_PROFILE_COL_WIDTH                 //          11,        9,        10,       8,        10,          12,       12,     6,       12
//      P487_MWW_PROFILE_COL_MASK                  //           0,        0,         0,       0,         0,           0,        0,     0,        0
//      P487_MWW_PROFILE_COL_TYPES                 // *
//      P487_MWW_PROFILE_TABLE_TYPE                // M
#define P487_MWW_RESULT_DATA                 2009  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,CYLINDER,MWW_NM,MAX_AMP
//      P487_MWW_RESULT_DATA_COL_WIDTH             //          11,        9,        10,      10,    10,     10
//      P487_MWW_RESULT_DATA_COL_MASK              //           0,        0,         0,       0,     0,      0
//      P487_MWW_RESULT_DATA_COL_TYPES             // *
//      P487_MWW_RESULT_DATA_TABLE_TYPE            // M
#define P218_LASER_CAL_HSC_DATA              2010  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,ITERATION,INDEX,HSC_DATA,LASER_IOP,W_HEATER
//      P218_LASER_CAL_HSC_DATA_COL_WIDTH          //          11,        10,      7,        9,    5,       8,        9,       8
//      P218_LASER_CAL_HSC_DATA_COL_MASK           //           0,         0,      0,        0,    0,       0,        0,       0
//      P218_LASER_CAL_HSC_DATA_COL_TYPES          // *
//      P218_LASER_CAL_HSC_DATA_TABLE_TYPE         // V
#define P211_LASER_ADC_DATA                  2011  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,BPI_INDEX,LASER_OP,ADC_CAP,BPI_CAP,TPI_CAP,HMS_CAP
//      P211_LASER_ADC_DATA_COL_WIDTH              //          11,        10,        9,        9,       8,      7,      7,      7,      7
//      P211_LASER_ADC_DATA_COL_MASK               //           0,         0,        0,        0,       0,      0,      0,      0,      0
//      P211_LASER_ADC_DATA_COL_TYPES              // *
//      P211_LASER_ADC_DATA_TABLE_TYPE             // V
#define P_VBAR_BANDED_SUMMARY                2012  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BPIC,TPI_DSS,TPI_IDSS,TPI_ODSS,TPI_EFF,TPI_MAX,RD_OFST,DIR
//      P_VBAR_BANDED_SUMMARY_COL_WIDTH            //          11,       10,         9,   9,      9,       9,       9,      9,      9,      9,  9
//      P_VBAR_BANDED_SUMMARY_COL_MASK             //           0,        0,         0,   0,      0,       0,       0,      0,      0,      0,  0
//      P_VBAR_BANDED_SUMMARY_COL_TYPES            // *
//      P_VBAR_BANDED_SUMMARY_TABLE_TYPE           // S
#define P_2D_VBAR_HEAD_SUMMARY               2013  // HD_PHYS_PSN,HD_LGC_PSN,TGT_SFR,BPIC,BPIC_F,TPIC_S,TPIC_F,ADC_SMR
//      P_2D_VBAR_HEAD_SUMMARY_COL_WIDTH           //          11,         9,      9,   9,     9,     9,     9,      9
//      P_2D_VBAR_HEAD_SUMMARY_COL_MASK            //           0,         0,      0,   0,     0,     0,     0,      0
//      P_2D_VBAR_HEAD_SUMMARY_COL_TYPES           // *
//      P_2D_VBAR_HEAD_SUMMARY_TABLE_TYPE          // S
#define P_VBAR_2D_SUMMARY                    2014  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TARGET_SFR,BPIC,TPI_DSS,TPI_IDSS,TPI_ODSS,TPI_EFF,ADC_EFF,ADC_CMR,ADC_SMR,RD_OFFSET,DIR
//      P_VBAR_2D_SUMMARY_COL_WIDTH                //          11,        9,        10,        11,   9,      9,       9,       9,      9,      9,      9,      9,        9,  9
//      P_VBAR_2D_SUMMARY_COL_MASK                 //           0,        0,         0,         0,   0,      0,       0,       0,      0,      0,      0,      0,        0,  0
//      P_VBAR_2D_SUMMARY_COL_TYPES                // *
//      P_VBAR_2D_SUMMARY_TABLE_TYPE               // S
#define P_VBAR_2D_BEST_SOVA_ZONES            2015  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BEST_SOVA,BPIC
//      P_VBAR_2D_BEST_SOVA_ZONES_COL_WIDTH        //          11,        9,         9,        9,   9
//      P_VBAR_2D_BEST_SOVA_ZONES_COL_MASK         //           0,        0,         0,        0,   0
//      P_VBAR_2D_BEST_SOVA_ZONES_COL_TYPES        // *
//      P_VBAR_2D_BEST_SOVA_ZONES_TABLE_TYPE       // S
#define P285_STROKE_EXPANDED                 2016  // PCT_STROKE_EXPANDED
//      P285_STROKE_EXPANDED_COL_WIDTH             //                  19
//      P285_STROKE_EXPANDED_COL_MASK              //                   1
//      P285_STROKE_EXPANDED_COL_TYPES             //                   N
//      P285_STROKE_EXPANDED_TABLE_TYPE            // S
#define P074_FAFH_MSMR_READER_SEL            2017  // HEAD,MSMR_READER_SEL
//      P074_FAFH_MSMR_READER_SEL_COL_WIDTH        //    4,             15
//      P074_FAFH_MSMR_READER_SEL_COL_MASK         //    0,              0
//      P074_FAFH_MSMR_READER_SEL_COL_TYPES        // *
//      P074_FAFH_MSMR_READER_SEL_TABLE_TYPE       // S
#define P277_SCOPY_ZAP_XFR_FUNC              2018  // HD_PHYS_PSN,HD_LGC_PSN,HARMONIC,GAIN,PHASE
//      P277_SCOPY_ZAP_XFR_FUNC_COL_WIDTH          //          11,        10,       8,   4,    5
//      P277_SCOPY_ZAP_XFR_FUNC_COL_MASK           //           0,         0,       0,   0,    0
//      P277_SCOPY_ZAP_XFR_FUNC_COL_TYPES          // *
//      P277_SCOPY_ZAP_XFR_FUNC_TABLE_TYPE         // S
#define P382_OW_MEASUREMENT                  2019  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,OW,WRT_CUR,WRT_CUR_OVS_AMP,WRT_CUR_OVS_DUR,WRITER_PRE_HEAT,WRITER_WRITE_HEAT,READER_READ_HEAT
//      P382_OW_MEASUREMENT_COL_WIDTH              //          11,        9,        10,      7,17,      7,             15,             15,             15,               17,              16
//      P382_OW_MEASUREMENT_COL_MASK               //           0,        0,         0,      0, 0,      0,              0,              0,              0,                0,               0
//      P382_OW_MEASUREMENT_COL_TYPES              // *
//      P382_OW_MEASUREMENT_TABLE_TYPE             // S
#define P382_ERROR_RATE_BY_ZONE              2020  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,START_TRK_NUM,RAW_ERROR_RATE,DELTA,WRT_CUR,WRT_CUR_OVS_AMP,WRT_CUR_OVS_DUR,WRITER_PRE_HEAT,WRITER_WRITE_HEAT,READER_READ_HEAT
//      P382_ERROR_RATE_BY_ZONE_COL_WIDTH          //          11,        9,        10,           13,            14,    8,      7,             15,             15,             15,               17,              16
//      P382_ERROR_RATE_BY_ZONE_COL_MASK           //           0,        0,         0,            0,             0,    0,      0,              0,              0,              0,                0,               0
//      P382_ERROR_RATE_BY_ZONE_COL_TYPES          // *
//      P382_ERROR_RATE_BY_ZONE_TABLE_TYPE         // S
#define P461_STAT_DATA_CONVG                 2021  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RDR_LGC_PSN,BIE_MEAN,BIE_STD_DEV,BER_MEAN,5PERC_SCTR_BER,95PERC_SCTR_BER,READER
//      P461_STAT_DATA_CONVG_COL_WIDTH             //          11,        10,        9,         11,      10,         11,       8,            14,             15,     6
//      P461_STAT_DATA_CONVG_COL_MASK              //           0,         0,        0,          0,       0,          0,       0,             0,              0,     0
//      P461_STAT_DATA_CONVG_COL_TYPES             // *
//      P461_STAT_DATA_CONVG_TABLE_TYPE            // S
#define P163_MSMR_FULL_REPORT                2022  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,TRK_NUM,OLD_NO_TMD,NO_TMD,OLD_SRVO_UNSAFES,SRVO_UNSAFES,OLD_OBSERVER_SECTOR_COUNT,OBSERVER_SECTOR_COUNT,OLD_RETRY_UNSAFES,RETRY_UNSAFES
//      P163_MSMR_FULL_REPORT_COL_WIDTH            //          11,        10,          12,         11,      7,        10,     6,              16,          12,                       25,                   21,               17,           13
//      P163_MSMR_FULL_REPORT_COL_MASK             //           0,         0,           0,          0,      0,         0,     0,               0,           0,                        0,                    0,                0,            0
//      P163_MSMR_FULL_REPORT_COL_TYPES            // *
//      P163_MSMR_FULL_REPORT_TABLE_TYPE           // S
#define P163_MSMR_HD_STABILITY               2023  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,NO_TMD,BAD_ID,SRVO_UNSAFES,OBSERVER_SECTOR_COUNT,HD_STATUS,SWD_DVGA_COUNT,SWD_RVGA_COUNT,SWD_FVGA_COUNT,NO_TMD_BER,UNSAFE_BER,OSE_BER,NUM_SECTORS
//      P163_MSMR_HD_STABILITY_COL_WIDTH           //          11,        10,          12,         11,     6,     6,          12,                   21,        9,            14,            14,            14,        10,        10,      7,         11
//      P163_MSMR_HD_STABILITY_COL_MASK            //           1,         1,           1,          1,     1,     1,           1,                    1,        1,             1,             1,             1,         1,         1,      1,          1
//      P163_MSMR_HD_STABILITY_COL_TYPES           //           N,         N,           N,          N,     N,     N,           N,                    N,        N,             N,             N,             N,         N,         N,      N,          N
//      P163_MSMR_HD_STABILITY_TABLE_TYPE          // S
#define P163_MSMR_UNSAFE_RETRIES             2024  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,NUM_RETRIES
//      P163_MSMR_UNSAFE_RETRIES_COL_WIDTH         //          11,        10,          12,         11,         11
//      P163_MSMR_UNSAFE_RETRIES_COL_MASK          //           0,         0,           0,          0,          0
//      P163_MSMR_UNSAFE_RETRIES_COL_TYPES         // *
//      P163_MSMR_UNSAFE_RETRIES_TABLE_TYPE        // S
#define P0308_SYSTEM_AREA_DETAILS            2025  // DFLT_START_CYL,CURRENT_START_CYL,NOM_SERP_WIDTH,NOM_TRK_NUM
//      P0308_SYSTEM_AREA_DETAILS_COL_WIDTH        //             15,               17,            14,         11
//      P0308_SYSTEM_AREA_DETAILS_COL_MASK         //              0,                0,             0,          0
//      P0308_SYSTEM_AREA_DETAILS_COL_TYPES        // *
//      P0308_SYSTEM_AREA_DETAILS_TABLE_TYPE       // S
#define P0308_MODIFIED_UZC_ZONES             2026  // ZONE,OLD_START_CYL,OLD_TRK_NUM,NEW_START_CYL,NEW_TRK_NUM
//      P0308_MODIFIED_UZC_ZONES_COL_WIDTH         //    4,           13,         11,           13,         11
//      P0308_MODIFIED_UZC_ZONES_COL_MASK          //    0,            0,          0,            0,          0
//      P0308_MODIFIED_UZC_ZONES_COL_TYPES         // *
//      P0308_MODIFIED_UZC_ZONES_TABLE_TYPE        // S
#define P425_SOC_PHASE_CAL_LOOP              2027  // HD_PHYS_PSN,HD_LGC_PSN,TST_TRK,DATA_ZONE,COARSE_DLY,FINE_DLY,PHASE_STAT
//      P425_SOC_PHASE_CAL_LOOP_COL_WIDTH          //          11,        10,      8,        9,        10,       8,        10
//      P425_SOC_PHASE_CAL_LOOP_COL_MASK           //           0,         0,      0,        0,         0,       0,         0
//      P425_SOC_PHASE_CAL_LOOP_COL_TYPES          // *
//      P425_SOC_PHASE_CAL_LOOP_TABLE_TYPE         // S
#define P425_SOC_PHASE_CAL_AVG               2028  // COARSE_DLY,FINE_DLY,PHASE_STAT
//      P425_SOC_PHASE_CAL_AVG_COL_WIDTH           //         10,       8,        10
//      P425_SOC_PHASE_CAL_AVG_COL_MASK            //          0,       0,         0
//      P425_SOC_PHASE_CAL_AVG_COL_TYPES           // *
//      P425_SOC_PHASE_CAL_AVG_TABLE_TYPE          // S
#define P425_SOC_PHASE_CAL_VAL               2029  // COARSE_DLY,FINE_DLY
//      P425_SOC_PHASE_CAL_VAL_COL_WIDTH           //         10,       8
//      P425_SOC_PHASE_CAL_VAL_COL_MASK            //          0,       0
//      P425_SOC_PHASE_CAL_VAL_COL_TYPES           // *
//      P425_SOC_PHASE_CAL_VAL_TABLE_TYPE          // S
#define P_PARTITION_LOCATION                 2030  // PARTITION,OFFSET,START_CYL,TOTAL_DEFECTS,FINAL_LOCATION
//      P_PARTITION_LOCATION_COL_WIDTH             //         9,     6,        9,           13,            14
//      P_PARTITION_LOCATION_COL_MASK              //         0,     0,        0,            0,             0
//      P_PARTITION_LOCATION_COL_TYPES             // *
//      P_PARTITION_LOCATION_TABLE_TYPE            // S
#define P0172_MSMR_RDR_JOG_SELECT            2031  // HD_PHYS_PSN,HD_LGC_PSN,RDR_SEL
//      P0172_MSMR_RDR_JOG_SELECT_COL_WIDTH        //          11,        10,      7
//      P0172_MSMR_RDR_JOG_SELECT_COL_MASK         //           0,         0,      0
//      P0172_MSMR_RDR_JOG_SELECT_COL_TYPES        // *
//      P0172_MSMR_RDR_JOG_SELECT_TABLE_TYPE       // S
#define P150_MSMR_LINEARITY_SAP              2032  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,IDX01,IDX02,IDX03,IDX04,IDX05,IDX06,IDX07,IDX08,IDX09,IDX10,IDX11,IDX12,IDX13,IDX14,IDX15,IDX16,IDX17
//      P150_MSMR_LINEARITY_SAP_COL_WIDTH          //          11,        10,          12,         11,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5
//      P150_MSMR_LINEARITY_SAP_COL_MASK           //           0,         0,           0,          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
//      P150_MSMR_LINEARITY_SAP_COL_TYPES          // *
//      P150_MSMR_LINEARITY_SAP_TABLE_TYPE         // S
#define P150_MSMR_LINEARITY_GAINS            2033  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,SCAN_MODE,SERVO_ZONE,PK_PK,DESCRIPTOR,IDX01,IDX02,IDX03,IDX04,IDX05,IDX06,IDX07,IDX08,IDX09,IDX10,IDX11,IDX12,IDX13,IDX14,IDX15,IDX16
//      P150_MSMR_LINEARITY_GAINS_COL_WIDTH        //          11,      7,        10,          12,         11,        9,        10,    5,        10,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,    7
//      P150_MSMR_LINEARITY_GAINS_COL_MASK         //           1,      1,         1,           1,          1,        1,         1,    1,         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1
//      P150_MSMR_LINEARITY_GAINS_COL_TYPES        //           N,      N,         N,           N,          N,        N,         N,    N,         V,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N
//      P150_MSMR_LINEARITY_GAINS_TABLE_TYPE       // S
#define P150_MSMR_ZONED_LIN_POLY             2034  // HD_PHYS_PSN,COEF_INDEX,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,SERVO_ZONE,SURF_COEF_1,SURF_COEF_0
//      P150_MSMR_ZONED_LIN_POLY_COL_WIDTH         //          11,        10,        10,          12,         11,        10,         11,         11
//      P150_MSMR_ZONED_LIN_POLY_COL_MASK          //           1,         1,         1,           1,          1,         1,          1,          1
//      P150_MSMR_ZONED_LIN_POLY_COL_TYPES         //           N,         N,         N,           N,          N,         N,          N,          N
//      P150_MSMR_ZONED_LIN_POLY_TABLE_TYPE        // S
#define P150_MSMR_GAIN_SUM2                  2035  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,PK_PK_CYL,MAX_PK_PK,PK_PK_FAIL,CORR_GAIN_CYL,MAX_CORR_GAIN,CORR_GAIN_FAIL
//      P150_MSMR_GAIN_SUM2_COL_WIDTH              //          11,        10,          12,         11,        9,        9,        10,           13,           13,            14
//      P150_MSMR_GAIN_SUM2_COL_MASK               //           1,         1,           1,          1,        1,        1,         1,            1,            1,             1
//      P150_MSMR_GAIN_SUM2_COL_TYPES              //           N,         N,           N,          N,        N,        N,         V,            N,            N,             V
//      P150_MSMR_GAIN_SUM2_TABLE_TYPE             // S
#define P280_SCOPY_AFH_VERIFY                2036  // HD_PHYS_PSN,HD_LGC_PSN,AFH_MAX_DELTA_ZN,AFH_MAX_DELTA,AFH_DELTA_OD_ID,OVER_DIFF_ZN,OVER_DIFF_OD_ID,USE_DEFAULT_AFH
//      P280_SCOPY_AFH_VERIFY_COL_WIDTH            //          11,        10,              16,           13,             15,          12,             15,             15
//      P280_SCOPY_AFH_VERIFY_COL_MASK             //           0,         0,               0,            0,              0,           0,              0,              0
//      P280_SCOPY_AFH_VERIFY_COL_TYPES            // *
//      P280_SCOPY_AFH_VERIFY_TABLE_TYPE           // S
#define P126_SRVO_FLAW_TRACE                 2037  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,WEDGE,OFFSET,ERRCODE
//      P126_SRVO_FLAW_TRACE_COL_WIDTH             //          11,        10,       8,    5,     6,     10
//      P126_SRVO_FLAW_TRACE_COL_MASK              //           0,         0,       0,    0,     0,      0
//      P126_SRVO_FLAW_TRACE_COL_TYPES             // *
//      P126_SRVO_FLAW_TRACE_TABLE_TYPE            // V
#define P220_WP_OPTI_CANDIDATES              2038  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,IW,OS,OSD,PDW_IOS,TRISE,PRECOMP1,PRECOMP2,BER,SBER,WRT_POWER,CANDIDATE_NUM,CANDIDATE_TYPE
//      P220_WP_OPTI_CANDIDATES_COL_WIDTH          //          11,        9,        10, 3, 3,  3,      7,    5,       8,       8,  8,   8,        9,           13,            14
//      P220_WP_OPTI_CANDIDATES_COL_MASK           //           0,        0,         0, 0, 0,  0,      0,    0,       0,       0,  0,   0,        0,            0,             0
//      P220_WP_OPTI_CANDIDATES_COL_TYPES          // *
//      P220_WP_OPTI_CANDIDATES_TABLE_TYPE         // S
#define P277_SCOPY_THERMAL_SHOCK             2039  // HD_PHYS_PSN,HD_LGC_PSN,MSRD_SHOCKED,HALFINT_VAR_MIN,HALFINT_VAR_MAX,HALFINT_VAR_AVG,HALFINT_VAR_STDEV,THERMAL_SHOCK,RECOVERED,HEATER_POWER
//      P277_SCOPY_THERMAL_SHOCK_COL_WIDTH         //          11,        10,          12,             15,             15,             15,               17,           13,        9,          12
//      P277_SCOPY_THERMAL_SHOCK_COL_MASK          //           0,         0,           0,              0,              0,              0,                0,            0,        0,           0
//      P277_SCOPY_THERMAL_SHOCK_COL_TYPES         // *
//      P277_SCOPY_THERMAL_SHOCK_TABLE_TYPE        // S
#define P220_WP_OPTI_BER_ATI_STE             2040  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,IW,OS,OSD,PDW_IOS,TRISE,PRECOMP1,PRECOMP2,BASELINE_BER,BER,SBER,ATI_BER,STE_BER,NOM_BER_OD,NOM_BER_ID,WRT_POWER,CANDIDATE_NUM,CANDIDATE_TYPE,OPTI_METRIC
//      P220_WP_OPTI_BER_ATI_STE_COL_WIDTH         //          11,        9,        10, 3, 3,  3,      7,    5,       8,       8,          12,  7,   7,      7,      7,        10,        10,        9,           13,            14,         11
//      P220_WP_OPTI_BER_ATI_STE_COL_MASK          //           1,        1,         1, 1, 1,  1,      1,    1,       1,       1,           1,  1,   1,      1,      1,         1,         1,        1,            1,             1,          1
//      P220_WP_OPTI_BER_ATI_STE_COL_TYPES         //           N,        N,         N, N, N,  N,      N,    N,       N,       N,           N,  N,   N,      N,      N,         N,         N,        N,            N,             V,          N
//      P220_WP_OPTI_BER_ATI_STE_TABLE_TYPE        // S
#define P230_BPI_REVERT_SUMMARY              2041  // NUM_ZONE_BPI_REVERT
//      P230_BPI_REVERT_SUMMARY_COL_WIDTH          //                  19
//      P230_BPI_REVERT_SUMMARY_COL_MASK           //                   0
//      P230_BPI_REVERT_SUMMARY_COL_TYPES          // *
//      P230_BPI_REVERT_SUMMARY_TABLE_TYPE         // S
#define P230_BPI_REVERT                      2042  // HD_LGC_PSN,HD_PHYS_PSN,DATA_ZONE,NUM_BPI_STEP,BPI_REVERT
//      P230_BPI_REVERT_COL_WIDTH                  //         10,         11,        9,          12,        10
//      P230_BPI_REVERT_COL_MASK                   //          0,          0,        0,           0,         0
//      P230_BPI_REVERT_COL_TYPES                  // *
//      P230_BPI_REVERT_TABLE_TYPE                 // S
#define P220_WP_OPTI_WP_FINAL                2043  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,IW,OS,OSD,PDW_IOS,TRISE,OPTI_METRIC,SAMPLES
//      P220_WP_OPTI_WP_FINAL_COL_WIDTH            //          11,        9,        10, 3, 3,  3,      7,    5,         11,      7
//      P220_WP_OPTI_WP_FINAL_COL_MASK             //           1,        1,         1, 1, 1,  1,      1,    1,          1,      1
//      P220_WP_OPTI_WP_FINAL_COL_TYPES            //           N,        N,         N, N, N,  N,      N,    N,          N,      N
//      P220_WP_OPTI_WP_FINAL_TABLE_TYPE           // S
#define P220_WP_OPTI_WP_DETAILED             2044  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,IW,IW_MAX,IW_MIN,OS,OS_MAX,OS_MIN,OSD,OSD_MAX,OSD_MIN,PDW,PDW_MAX,PDW_MIN,TRISE,TRISE_MAX,TRISE_MIN,OPTI_METRIC,THRESHOLD,LOW_OPTI_METRIC,SAMPLES
//      P220_WP_OPTI_WP_DETAILED_COL_WIDTH         //          11,        9,        10, 3,     6,     6, 3,     6,     6,  3,      7,      7,  3,      7,      7,    5,        9,        9,         11,        9,             15,      7
//      P220_WP_OPTI_WP_DETAILED_COL_MASK          //           0,        0,         0, 0,     0,     0, 0,     0,     0,  0,      0,      0,  0,      0,      0,    0,        0,        0,          0,        0,              0,      0
//      P220_WP_OPTI_WP_DETAILED_COL_TYPES         // *
//      P220_WP_OPTI_WP_DETAILED_TABLE_TYPE        // S
#define P_HAMR_SERVO_DIAG_INFO2              2045  // HD_PHYS_PSN,HD_LGC_PSN,TEST_NUM,MAX_IBIAS_CYL,MAX_IOP_CYL,MAX_POS_IBIAS_ADJ_CYL,MAX_NEG_IBIAS_ADJ_CYL,MAX_CMD_IBIAS,MAX_CMD_IOP,MAX_POS_IBIAS_ADJ,MAX_NEG_IBIAS_ADJ,MAX_WHRM,MAX_WHWM,MAX_RHRM,MAX_RHWM
//      P_HAMR_SERVO_DIAG_INFO2_COL_WIDTH          //          11,        10,       8,           13,         11,                   21,                   21,           13,         11,               17,               17,       8,       8,       8,       8
//      P_HAMR_SERVO_DIAG_INFO2_COL_MASK           //           0,         0,       0,            0,          0,                    0,                    0,            0,          0,                0,                0,       0,       0,       0,       0
//      P_HAMR_SERVO_DIAG_INFO2_COL_TYPES          // *
//      P_HAMR_SERVO_DIAG_INFO2_TABLE_TYPE         // S
#define P440_NTZ_AUDIT_STATS                 2046  // HD_PHYS_PSN,HD_LGC_PSN,ZAP_SPAN,ZAP_ZONE,TRACKING_MODE,AUDIT_TYPE,3SIGRRO,SIG_3SIGRRO,MAX_3SIGRRO,MAX_3SIGRRO_TRK,MEAN_MABSRRO,MAX_MABSRRO,MAX_MABSRRO_TRK,3SIGNRRO,MEAN_PTY_ERR_DPMO,MAX_PTY_ERR_DPMO,MAX_PTY_ERR_TRK,PTY_ERR_TRK_PCT,AUD_TRK_CNT
//      P440_NTZ_AUDIT_STATS_COL_WIDTH             //          11,        10,       8,       8,           13,        10,      7,         11,         11,             15,          12,         11,             15,       8,               17,              16,             15,             15,         11
//      P440_NTZ_AUDIT_STATS_COL_MASK              //           0,         0,       0,       0,            0,         0,      0,          0,          0,              0,           0,          0,              0,       0,                0,               0,              0,              0,          0
//      P440_NTZ_AUDIT_STATS_COL_TYPES             // *
//      P440_NTZ_AUDIT_STATS_TABLE_TYPE            // S
#define P460_NCCODEWORDS_DEBUG               2047  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,SECTOR,BIE0,ITR0,BIE1,ITR1,SQZ_OD,SQZ_ID,FLY_HGHT
//      P460_NCCODEWORDS_DEBUG_COL_WIDTH           //          11,        10,        9,      7,     6,   5,   5,   5,   5,     6,     6,       8
//      P460_NCCODEWORDS_DEBUG_COL_MASK            //           0,         0,        0,      0,     0,   0,   0,   0,   0,     0,     0,       0
//      P460_NCCODEWORDS_DEBUG_COL_TYPES           // *
//      P460_NCCODEWORDS_DEBUG_TABLE_TYPE          // S
#define P276_SCOPY_INLINE_DATA               2048  // HD_PHYS_PSN,HD_LGC_PSN,SPIRAL_CYL,INLINE_NRRO,INLINE_RRO,WRITE_RETRY
//      P276_SCOPY_INLINE_DATA_COL_WIDTH           //          11,        10,        10,         11,        10,         11
//      P276_SCOPY_INLINE_DATA_COL_MASK            //           0,         0,         0,          0,         0,          0
//      P276_SCOPY_INLINE_DATA_COL_TYPES           // *
//      P276_SCOPY_INLINE_DATA_TABLE_TYPE          // S
#define P172_SCC_VOLTAGE                     2049  // HD_PHYS_PSN,HD_LGC_PSN,SCC_VOLT_MV,SCC_SLOPE
//      P172_SCC_VOLTAGE_COL_WIDTH                 //          11,        10,         11,        9
//      P172_SCC_VOLTAGE_COL_MASK                  //           0,         0,          0,        0
//      P172_SCC_VOLTAGE_COL_TYPES                 // *
//      P172_SCC_VOLTAGE_TABLE_TYPE                // S
#define P000_REPORTING_BUFF_SIZE             2050  // REPORT_BUFFER_SIZE
//      P000_REPORTING_BUFF_SIZE_COL_WIDTH         //                 18
//      P000_REPORTING_BUFF_SIZE_COL_MASK          //                  0
//      P000_REPORTING_BUFF_SIZE_COL_TYPES         // *
//      P000_REPORTING_BUFF_SIZE_TABLE_TYPE        // S
#define P432_R2R_DELAY_MEAS_ZAP              2051  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,LGC_CYL,PHYS_CYL_NORM,R1_TO_W_SFG_DELAY,R2_TO_W_SFG_DELAY,R1_TO_R2_SFG_DELAY
//      P432_R2R_DELAY_MEAS_ZAP_COL_WIDTH          //          11,        10,        9,     10,           13,               17,               17,                18
//      P432_R2R_DELAY_MEAS_ZAP_COL_MASK           //           0,         0,        0,      0,            0,                0,                0,                 0
//      P432_R2R_DELAY_MEAS_ZAP_COL_TYPES          // *
//      P432_R2R_DELAY_MEAS_ZAP_TABLE_TYPE         // S
#define P418_HSC_AMP_BUCKET                  2052  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,ITERATION,LASER_IOP,RD_OFST,HSC_AMP,MODE
//      P418_HSC_AMP_BUCKET_COL_WIDTH              //          11,        10,       8,        9,        9,      7,      7,   7
//      P418_HSC_AMP_BUCKET_COL_MASK               //           0,         0,       0,        0,        0,      0,      0,   0
//      P418_HSC_AMP_BUCKET_COL_TYPES              // *
//      P418_HSC_AMP_BUCKET_TABLE_TYPE             // M
#define P418_FINAL_SUMMARY                   2053  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,LASER_THRSHLD_CUR_DAC,LASER_OPERATING_CUR_DAC,NOISE_FLOOR,PEAK,TRACK_OFFSET,WIDTH
//      P418_FINAL_SUMMARY_COL_WIDTH               //          11,        10,      7,                   21,                     23,         11,   8,          12,    5
//      P418_FINAL_SUMMARY_COL_MASK                //           0,         0,      0,                    0,                      0,          0,   0,           0,    0
//      P418_FINAL_SUMMARY_COL_TYPES               // *
//      P418_FINAL_SUMMARY_TABLE_TYPE              // S
#define P425_SOC_CAL_AVG                     2054  // DELAYL,DELAYM,DELAY_VAL,PHASE_STAT
//      P425_SOC_CAL_AVG_COL_WIDTH                 //      6,     6,        9,        10
//      P425_SOC_CAL_AVG_COL_MASK                  //      0,     0,        0,         0
//      P425_SOC_CAL_AVG_COL_TYPES                 // *
//      P425_SOC_CAL_AVG_TABLE_TYPE                // S
#define P425_SOC_CAL_LOOP                    2055  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,DATA_ZONE,DELAYL,DELAYM,DELAY_VAL,PHASE_STAT
//      P425_SOC_CAL_LOOP_COL_WIDTH                //          11,        10,      7,        9,     6,     6,        9,        10
//      P425_SOC_CAL_LOOP_COL_MASK                 //           0,         0,      0,        0,     0,     0,        0,         0
//      P425_SOC_CAL_LOOP_COL_TYPES                // *
//      P425_SOC_CAL_LOOP_TABLE_TYPE               // S
#define P345_TCS_BY_ZONE                     2056  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,NORM_TRK,TCS_BY_ZONE,MEASURED_TCS,SAVE_TO_RAP,ACTIVE_HEATER
//      P345_TCS_BY_ZONE_COL_WIDTH                 //          11,        10,        9,       8,         11,          12,         11,           13
//      P345_TCS_BY_ZONE_COL_MASK                  //           0,         0,        0,       0,          0,           0,          0,            0
//      P345_TCS_BY_ZONE_COL_TYPES                 // *
//      P345_TCS_BY_ZONE_TABLE_TYPE                // M
#define P357_TEST_ALL_HISTOGRAMS             2057  // HD_PHYS_PSN,HD_LGC_PSN,TEST_TRACK,ADC_VALUE,FST_POS_1T,FST_NEG_1T,POS_CTR,NEG_CTR,LST_POS_1T,LST_NEG_1T,POS_BASELINE,NEG_BASELINE,POS_2T,NEG_2T
//      P357_TEST_ALL_HISTOGRAMS_COL_WIDTH         //          11,        10,        10,        9,        10,        10,      7,      7,        10,        10,          12,          12,     6,     6
//      P357_TEST_ALL_HISTOGRAMS_COL_MASK          //           0,         0,         0,        0,         0,         0,      0,      0,         0,         0,           0,           0,     0,     0
//      P357_TEST_ALL_HISTOGRAMS_COL_TYPES         // *
//      P357_TEST_ALL_HISTOGRAMS_TABLE_TYPE        // S
#define P357_TEST_STANDARD_OUTPUT            2058  // HD_PHYS_PSN,HD_LGC_PSN,TEST_TRACK,PATTERN_MODE,HISTOGRAM_NAME,MINIMUM,MAXIMUM,MEAN_DELTA,ADC_MEAN,STD_DEV,MISSING_BIT_PRECENT
//      P357_TEST_STANDARD_OUTPUT_COL_WIDTH        //          11,        10,        10,          12,            14,      7,      7,        10,       8,      7,                 19
//      P357_TEST_STANDARD_OUTPUT_COL_MASK         //           0,         0,         0,           0,             0,      0,      0,         0,       0,      0,                  0
//      P357_TEST_STANDARD_OUTPUT_COL_TYPES        // *
//      P357_TEST_STANDARD_OUTPUT_TABLE_TYPE       // S
#define P486_LASER_INSTABILITY               2059  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TARGET_CYL,WR_LOOP,BER_MODE,SOVA_BER,SFR_BER,DLD_MEAN,DELTA_SOVA,DELTA_SFR,CUR_IBIAS,CUR_IOP,CUR_MA
//      P486_LASER_INSTABILITY_COL_WIDTH           //          11,        9,        10,        10,      7,       8,       8,      7,       8,        10,        9,        9,      7,     6
//      P486_LASER_INSTABILITY_COL_MASK            //           0,        0,         0,         0,      0,       0,       0,      0,       0,         0,        0,        0,      0,     0
//      P486_LASER_INSTABILITY_COL_TYPES           // *
//      P486_LASER_INSTABILITY_TABLE_TYPE          // M
#define P486_LASER_INSTBLT_IBIAS             2060  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TARGET_CYL,PERCENT,SET_IBIAS,SET_IOP,BER_MODE,SOVA_BER,SFR_BER,DLD_MEAN
//      P486_LASER_INSTBLT_IBIAS_COL_WIDTH         //          11,        9,        10,        10,      7,        9,      7,       8,       8,      7,       8
//      P486_LASER_INSTBLT_IBIAS_COL_MASK          //           0,        0,         0,         0,      0,        0,      0,       0,       0,      0,       0
//      P486_LASER_INSTBLT_IBIAS_COL_TYPES         // *
//      P486_LASER_INSTBLT_IBIAS_TABLE_TYPE        // M
#define P218_LASER_HSC_CAL_RESULT            2061  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ITERATION,LASER_OPERATING_CUR_DAC,HSC_PEAK,DETECTOR_MASK,HSC_PEAK_SLOPE,MOVING_SLOPE,MWW_NM,MWW_30,MWW_80,HSC_PEAK_OFFSET,CENTER_IDX_50,CENTER_IDX_30,CENTER_IDX_80,W_HEATER
//      P218_LASER_HSC_CAL_RESULT_COL_WIDTH        //          11,        10,       10,        9,                     23,       8,           13,            14,          12,     6,     6,     6,             15,           13,           13,           13,       8
//      P218_LASER_HSC_CAL_RESULT_COL_MASK         //           0,         0,        0,        0,                      0,       0,            0,             0,           0,     0,     0,     0,              0,            0,            0,            0,       0
//      P218_LASER_HSC_CAL_RESULT_COL_TYPES        // *
//      P218_LASER_HSC_CAL_RESULT_TABLE_TYPE       // S
#define P485_THERMAL_GRADIENT                2062  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,THERMAL,LEFT_LOBE,CENTER_PEAK,RIGHT_LOBE,CUR_IOP,CUR_ITH,CUR_TEMP
//      P485_THERMAL_GRADIENT_COL_WIDTH            //          11,        9,        10,      7,        9,         11,        10,      7,      7,       8
//      P485_THERMAL_GRADIENT_COL_MASK             //           0,        0,         0,      0,        0,          0,         0,      0,      0,       0
//      P485_THERMAL_GRADIENT_COL_TYPES            // *
//      P485_THERMAL_GRADIENT_TABLE_TYPE           // S
#define P488_DIPULSE_EXTRACTION              2063  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,SEQUENCE,DIPULSE
//      P488_DIPULSE_EXTRACTION_COL_WIDTH          //          11,        9,        10,       7,      9
//      P488_DIPULSE_EXTRACTION_COL_MASK           //           0,        0,         0,       0,      0
//      P488_DIPULSE_EXTRACTION_COL_TYPES          // *
//      P488_DIPULSE_EXTRACTION_TABLE_TYPE         // S
#define P053_TIMING_ERRORS                   2064  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,LASER_RESOLUTION,LASER_BIAS_CUR_DAC,LASER_OPERATING_CUR_DAC,START_SECTOR,NUM_SECTORS,NUM_SAMPLES,DLD_FREQ_THRESHOLD,DLD_TIMING_ERR_COUNT,LASER_BIAS_RATIO
//      P053_TIMING_ERRORS_COL_WIDTH               //          11,        10,        9,      8,              16,                18,                     23,          12,         11,         11,                18,                  20,              16
//      P053_TIMING_ERRORS_COL_MASK                //           0,         0,        0,      0,               0,                 0,                      0,           0,          0,          0,                 0,                   0,               0
//      P053_TIMING_ERRORS_COL_TYPES               // *
//      P053_TIMING_ERRORS_TABLE_TYPE              // S
#define P135_MEASUREMENT_DATA3               2065  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,SENSOR_NUM,SENSOR_METHOD,SENSOR_METRIC,SENSOR_AVG_TYPE,OVRSHT_AMP,OVRSHT_DUR,WRT_CUR_DAC,HTR_DAC,DELTA_DAC,TEST_ITERATION,CNTCT_TEST_STAGE,HTR_DAC_STEP_SIZE,CONTACT,TRIP,LIMIT,MEASURED,SNR,RMS_NM,ACTIVE_HEATER,INACTIVE_HEATER_DAC,DETCR_COUNT,WEDGE_CNT
//      P135_MEASUREMENT_DATA3_COL_WIDTH           //          11,        9,      7,        10,        10,           13,           13,             15,        10,        10,         11,      7,        9,            14,              16,               17,      7,   7,    7,       8,  7,     9,           13,                 19,         11,        9
//      P135_MEASUREMENT_DATA3_COL_MASK            //           0,        0,      0,         0,         0,            0,            0,              0,         0,         0,          0,      0,        0,             0,               0,                0,      0,   0,    0,       0,  0,     0,            0,                  0,          0,        0
//      P135_MEASUREMENT_DATA3_COL_TYPES           // *
//      P135_MEASUREMENT_DATA3_TABLE_TYPE          // S
#define P282_PHASE_NOTCH_DTLS                2066  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,PEAK_FREQUENCY,PHASE_SHIFT,DEPTH,BANDWIDTH,APPLY_NOTCH
//      P282_PHASE_NOTCH_DTLS_COL_WIDTH            //          11,        10,      7,            14,         11,    5,        9,         11
//      P282_PHASE_NOTCH_DTLS_COL_MASK             //           0,         0,      0,             0,          0,    0,        0,          0
//      P282_PHASE_NOTCH_DTLS_COL_TYPES            // *
//      P282_PHASE_NOTCH_DTLS_TABLE_TYPE           // S
#define P282_DETRENDED_PHASE                 2067  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,FREQ,PHASE
//      P282_DETRENDED_PHASE_COL_WIDTH             //          11,        10,      7,   8,    8
//      P282_DETRENDED_PHASE_COL_MASK              //           0,         0,      0,   0,    0
//      P282_DETRENDED_PHASE_COL_TYPES             // *
//      P282_DETRENDED_PHASE_TABLE_TYPE            // S
#define P149_WRO_LIST_REPORT                 2068  // TOTAL_LIST_CNT,ADD_SLIST_CNT,ADD_PLIST_CNT,SPARE_SPACES
//      P149_WRO_LIST_REPORT_COL_WIDTH             //             14,           13,           13,          12
//      P149_WRO_LIST_REPORT_COL_MASK              //              0,            0,            0,           0
//      P149_WRO_LIST_REPORT_COL_TYPES             // *
//      P149_WRO_LIST_REPORT_TABLE_TYPE            // S
#define P_NTZ_DRV_CONDITIONS1                2069  // SHOCK_SENSOR_SUPPT,INITL_SHOCK_SENSOR_STATE,SHOCK_SENSOR_STATE,CHROME_STATE,PZT_SLEW_LMT_ORGNL,PZT_SLEW_LMT_NEW,ACFF_STATE,ZEST_STATE,ZAP_STATE,PES_FIFO_STATE,SERVO_FAULT_MASK,SAP_MISC_FLAG_ORGNL,SAP_MISC_FLAG_NEW
//      P_NTZ_DRV_CONDITIONS1_COL_WIDTH            //                 18,                      24,                18,          12,                18,              16,        10,        10,        9,            14,              16,                 19,               17
//      P_NTZ_DRV_CONDITIONS1_COL_MASK             //                  0,                       0,                 0,           0,                 0,               0,         0,         0,        0,             0,               0,                  0,                0
//      P_NTZ_DRV_CONDITIONS1_COL_TYPES            // *
//      P_NTZ_DRV_CONDITIONS1_TABLE_TYPE           // S
#define P_SADC_DATA                          2070  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,KBPI,KTPI,CALC_ADC,SERVO_DAC,BPI_NDX,IOP_MA,IOP_PCT,CWFR,SERVO_KTPI
//      P_SADC_DATA_COL_WIDTH                      //          11,        10,        9,   6,   6,       8,        9,      7,     6,      7,   4,        10
//      P_SADC_DATA_COL_MASK                       //           1,         1,        1,   1,   1,       1,        1,      1,     1,      1,   1,         1
//      P_SADC_DATA_COL_TYPES                      //           N,         N,        N,   N,   N,       N,        N,      N,     N,      N,   N,         N
//      P_SADC_DATA_TABLE_TYPE                     // S
#define P_SADC_DATA_FULL                     2071  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,BPI,BPI_NDX,IOP_MA,IOP_PCT,SNGL_TRK_BER
//      P_SADC_DATA_FULL_COL_WIDTH                 //          11,        10,        9,  9,      7,     6,      7,          12
//      P_SADC_DATA_FULL_COL_MASK                  //           1,         1,        1,  1,      1,     1,      1,           1
//      P_SADC_DATA_FULL_COL_TYPES                 //           N,         N,        N,  N,      N,     N,      N,           N
//      P_SADC_DATA_FULL_TABLE_TYPE                // S
#define P_SADC_SUMMARY                       2072  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,KBPI,KTPI,CALC_ADC,IOP_MA,IOP_PCT,ITH_MA,ITOTAL_MA,SERVO_DAC,XDG,CWFR,CH_ITRTN,ADJ_TRK_WRT
//      P_SADC_SUMMARY_COL_WIDTH                   //          11,        10,        9,   6,   6,       8,     6,      7,     6,        9,        9, 10,   7,       8,         11
//      P_SADC_SUMMARY_COL_MASK                    //           1,         1,        1,   1,   1,       1,     1,      1,     1,        1,        1,  1,   1,       1,          1
//      P_SADC_SUMMARY_COL_TYPES                   //           N,         N,        N,   N,   N,       N,     N,      N,     N,        N,        N,  V,   N,       N,          N
//      P_SADC_SUMMARY_TABLE_TYPE                  // S
#define P345_QUALITY_RANKING                 2073  // HD_PHYS_PSN,HD_LGC_PSN,TEST_NUM,TEST_DESCRIPTION,LEVEL_ONE,LEVEL_TEN,TEST_WT,RAW_SCORE,RANK,OVERALL_RANK,ACTIVE_HEATER
//      P345_QUALITY_RANKING_COL_WIDTH             //          11,        10,       8,              16,        9,        9,      7,        9,   4,          12,           13
//      P345_QUALITY_RANKING_COL_MASK              //           0,         0,       0,               0,        0,        0,      0,        0,   0,           0,            0
//      P345_QUALITY_RANKING_COL_TYPES             // *
//      P345_QUALITY_RANKING_TABLE_TYPE            // S
#define P276_SCOPY_NRRO_MEAS2                2074  // HD_PHYS_PSN,HD_LGC_PSN,SPIRAL_CYL,POSNRRO_3SIGMA,POSRRO_3SIGMA,TIMNRRO_3SIGMA,TIMRRO_3SIGMA
//      P276_SCOPY_NRRO_MEAS2_COL_WIDTH            //          11,        10,        10,            14,           13,            14,           13
//      P276_SCOPY_NRRO_MEAS2_COL_MASK             //           0,         0,         0,             0,            0,             0,            0
//      P276_SCOPY_NRRO_MEAS2_COL_TYPES            // *
//      P276_SCOPY_NRRO_MEAS2_TABLE_TYPE           // S
#define P074_LOCATION_INFO_HEAD              2075  // DIAMETER,RELOCATION_COUNT,HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,LGC_TRK_NUM,LOCATION_ENABLED_FLAGS,FREE_SUBSERPENT,FAFH_SUBSERPENT_START,FREE_SUBSERPENT_START,FAFH_SUBSERPENT_END
//      P074_LOCATION_INFO_HEAD_COL_WIDTH          //        9,              16,         11,        10,        9,         11,                    22,             15,                   21,                   21,                 19
//      P074_LOCATION_INFO_HEAD_COL_MASK           //        0,               0,          0,         0,        0,          0,                     0,              0,                    0,                    0,                  0
//      P074_LOCATION_INFO_HEAD_COL_TYPES          // *
//      P074_LOCATION_INFO_HEAD_TABLE_TYPE         // S
#define P074_LOCATION_INFO_DIAM              2076  // DIAMETER,RELOCATION_COUNT,LOCATION_ENABLED_COUNT,FREE_SUBSERPENTS
//      P074_LOCATION_INFO_DIAM_COL_WIDTH          //        9,              16,                    22,              16
//      P074_LOCATION_INFO_DIAM_COL_MASK           //        0,               0,                     0,               0
//      P074_LOCATION_INFO_DIAM_COL_TYPES          // *
//      P074_LOCATION_INFO_DIAM_TABLE_TYPE         // S
#define P074_BEST_LOCATION_INFO              2077  // DIAMETER,LOCATION_SELECTED,HEADS_ENABLED,FREE_SUBSERPENTS
//      P074_BEST_LOCATION_INFO_COL_WIDTH          //        9,               17,           13,              16
//      P074_BEST_LOCATION_INFO_COL_MASK           //        0,                0,            0,               0
//      P074_BEST_LOCATION_INFO_COL_TYPES          // *
//      P074_BEST_LOCATION_INFO_TABLE_TYPE         // S
#define P074_FAFH_SERPENTS_ALLOC             2078  // DIAMETER,DATA_ZONE,NUM_SUBSERPENTS
//      P074_FAFH_SERPENTS_ALLOC_COL_WIDTH         //        9,        9,             15
//      P074_FAFH_SERPENTS_ALLOC_COL_MASK          //        0,        0,              0
//      P074_FAFH_SERPENTS_ALLOC_COL_TYPES         // *
//      P074_FAFH_SERPENTS_ALLOC_TABLE_TYPE        // S
#define P287_PHYS_TRK_ZONE_STATS             2079  // HD_PHYS_PSN,HD_LGC_PSN,SRVO_ZONE,ZONE_START_CYL,ZONE_END_CYL,MABS_JOG_ERR,MABS_DC_ERR
//      P287_PHYS_TRK_ZONE_STATS_COL_WIDTH         //          11,        10,        9,            14,          12,          12,         11
//      P287_PHYS_TRK_ZONE_STATS_COL_MASK          //           0,         0,        0,             0,           0,           0,          0
//      P287_PHYS_TRK_ZONE_STATS_COL_TYPES         // *
//      P287_PHYS_TRK_ZONE_STATS_TABLE_TYPE        // S
#define P250_1K_TSHR_RESULT                  2080  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TEST_CYL,R_AVG_RAW_BER,R_STD_DLT_BER,R_STD_RAW_BER,F_AVG_RAW_BER,F_STD_DLT_BER,F_STD_RAW_BER,SHK_CNT,MIN_PWR,MAX_PWR,SHOCK,RECOVER
//      P250_1K_TSHR_RESULT_COL_WIDTH              //          11,        9,        10,       8,           13,           13,           13,           13,           13,           13,      7,      7,      7,    5,      7
//      P250_1K_TSHR_RESULT_COL_MASK               //           0,        0,         0,       0,            0,            0,            0,            0,            0,            0,      0,      0,      0,    0,      0
//      P250_1K_TSHR_RESULT_COL_TYPES              // *
//      P250_1K_TSHR_RESULT_TABLE_TYPE             // S
#define P_HEAD_OFFSET_MEASUREMENT            2081  // HD_PHYS_PSN,HD_LGC_PSN,REF_HD_PHYS_PSN,REF_HD_LGC_PSN,CYLINDER,OFFSET,TEMPERATURE
//      P_HEAD_OFFSET_MEASUREMENT_COL_WIDTH        //          11,        10,             15,            14,      10,    10,         13
//      P_HEAD_OFFSET_MEASUREMENT_COL_MASK         //           0,         0,              0,             0,       0,     0,          0
//      P_HEAD_OFFSET_MEASUREMENT_COL_TYPES        // *
//      P_HEAD_OFFSET_MEASUREMENT_TABLE_TYPE       // S
#define P_FINAL_HEAD_OFFSET                  2082  // OFFSET
//      P_FINAL_HEAD_OFFSET_COL_WIDTH              //      6
//      P_FINAL_HEAD_OFFSET_COL_MASK               //      0
//      P_FINAL_HEAD_OFFSET_COL_TYPES              // *
//      P_FINAL_HEAD_OFFSET_TABLE_TYPE             // S
#define P033_PES_EVENT2                      2083  // HD_PHYS_PSN,HD_LGC_PSN,ORIG_CYL,NEW_CYL,RETRIES,UNSAFES,REPLACED_PES,FAILCODE
//      P033_PES_EVENT2_COL_WIDTH                  //          11,        10,       8,      7,      7,      7,          12,       8
//      P033_PES_EVENT2_COL_MASK                   //           0,         0,       0,      0,      0,      0,           0,       0
//      P033_PES_EVENT2_COL_TYPES                  // *
//      P033_PES_EVENT2_TABLE_TYPE                 // M
#define P074_FAFH_RAP_DATA                   2084  // HD_PHYS_PSN,HD_LGC_PSN,DIAMETER,DATA_ZONE,START_MINI_ZONE,NUM_MINI_ZONES,TEST_TRACK,SERPENT_START,SERPENT_END,OPTI_FREQUENCY,UTILTIY_FLAGS,DATA_VALID_FLAGS,PREAMP_GAIN,LSI_M_OR_MVL_N,R,DIVSEL,MSMR_READER_SEL
//      P074_FAFH_RAP_DATA_COL_WIDTH               //          11,        10,       8,        9,             15,            14,        10,           13,         11,            14,           13,              15,         11,            14,3,     6,             15
//      P074_FAFH_RAP_DATA_COL_MASK                //           0,         0,       0,        0,              0,             0,         0,            0,          0,             0,            0,               0,          0,             0,0,     0,              0
//      P074_FAFH_RAP_DATA_COL_TYPES               // *
//      P074_FAFH_RAP_DATA_TABLE_TYPE              // S
#define P074_TRK_PREP_SERPENT                2085  // HD_PHYS_PSN,HD_LGC_PSN,DIAMETER,LOCATION_NUM,DATA_ZONE,NOM_TRK_NUM,LGC_TRK_NUM,FAFH_SERPENT_START,FAFH_SERPENT_END,TA_BAND_SIZE,TA_COUNT,UJOG_MARGIN,TA_MARGIN,STE_MARGIN,RD_CLRNC_TRGT
//      P074_TRK_PREP_SERPENT_COL_WIDTH            //          11,        10,       8,          11,        9,         11,         11,                18,              16,          12,       8,         11,        9,        10,           13
//      P074_TRK_PREP_SERPENT_COL_MASK             //           0,         0,       0,           0,        0,          0,          0,                 0,               0,           0,       0,          0,        0,         0,            0
//      P074_TRK_PREP_SERPENT_COL_TYPES            // *
//      P074_TRK_PREP_SERPENT_TABLE_TYPE           // S
#define P010_BDRAG_SLOPE_SUMMARY             2086  // SLOPE_LIMIT,SLOPE_BDRAG,ERROR_CODE
//      P010_BDRAG_SLOPE_SUMMARY_COL_WIDTH         //          11,         11,        10
//      P010_BDRAG_SLOPE_SUMMARY_COL_MASK          //           1,          1,         1
//      P010_BDRAG_SLOPE_SUMMARY_COL_TYPES         //           N,          N,         N
//      P010_BDRAG_SLOPE_SUMMARY_TABLE_TYPE        // S
#define P130_FAILED_LOCATION_INFO            2087  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,RW_ERROR_CODE,FAILED_PBA,CYLINDER,HEAD,SECTOR,STR_LBA,XFR_BLOCK,AROUND
//      P130_FAILED_LOCATION_INFO_COL_WIDTH        //          11,        10,      7,           13,        10,       8,   4,     6,     10,        9,     6
//      P130_FAILED_LOCATION_INFO_COL_MASK         //           0,         0,      0,            0,         0,       0,   0,     0,      0,        0,     0
//      P130_FAILED_LOCATION_INFO_COL_TYPES        // *
//      P130_FAILED_LOCATION_INFO_TABLE_TYPE       // S
#define P175_SAT_SCTR_COUNT                  2088  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,FINAL_SAT_SCTR_CNT,MAX_SAT_SCTR_CNT
//      P175_SAT_SCTR_COUNT_COL_WIDTH              //          11,        10,       8,                18,              16
//      P175_SAT_SCTR_COUNT_COL_MASK               //           0,         0,       0,                 0,               0
//      P175_SAT_SCTR_COUNT_COL_TYPES              // *
//      P175_SAT_SCTR_COUNT_TABLE_TYPE             // S
#define P_MEMORY_LEAK_INFO                   2089  // HEAP_TYPE,ADDRESS,SIZE,RET_ADDRESS
//      P_MEMORY_LEAK_INFO_COL_WIDTH               //         9,      9,  10,         11
//      P_MEMORY_LEAK_INFO_COL_MASK                //         0,      0,   0,          0
//      P_MEMORY_LEAK_INFO_COL_TYPES               // *
//      P_MEMORY_LEAK_INFO_TABLE_TYPE              // S
#define P_UNIT_TEST_STATUS                   2090  // RANDOM_SEED,UNIT_TEST,LOCATION,LOOP_COUNTER,MODE,STATUS,POINTER
//      P_UNIT_TEST_STATUS_COL_WIDTH               //          15,       12,      12,          12,   8,     8,      9
//      P_UNIT_TEST_STATUS_COL_MASK                //           0,        0,       0,           0,   0,     0,      0
//      P_UNIT_TEST_STATUS_COL_TYPES               // *
//      P_UNIT_TEST_STATUS_TABLE_TYPE              // S
#define P228_IBIAS_OSC_DETCR_DATA            2091  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,OSC_FREQ,OSC_AMP,DETCR_GAIN,LASER_BIAS_CUR_DAC,LASER_OPERATING_CUR_DAC,MAGNITUDE
//      P228_IBIAS_OSC_DETCR_DATA_COL_WIDTH        //          11,        10,        9,      7,       8,      7,        10,                18,                     23,        9
//      P228_IBIAS_OSC_DETCR_DATA_COL_MASK         //           0,         0,        0,      0,       0,      0,         0,                 0,                      0,        0
//      P228_IBIAS_OSC_DETCR_DATA_COL_TYPES        // *
//      P228_IBIAS_OSC_DETCR_DATA_TABLE_TYPE       // S
#define P228_IBIAS_OSC_SUMMARY               2092  // HD_PHYS_PSN,HD_LGC_PSN,LASER_THRSHLD_CUR_DAC,LASER_BIAS_CUR_DAC
//      P228_IBIAS_OSC_SUMMARY_COL_WIDTH           //          11,        10,                   21,                18
//      P228_IBIAS_OSC_SUMMARY_COL_MASK            //           0,         0,                    0,                 0
//      P228_IBIAS_OSC_SUMMARY_COL_TYPES           // *
//      P228_IBIAS_OSC_SUMMARY_TABLE_TYPE          // S
#define P2108_MSMR_READER_OFFSETS            2093  // HEAD,ZONE,CYLINDER,R0_OFFSET,R1_OFFSET,CENTER_OFFSET,R0_CENTER_OFFTRK_PCT,R1_CENTER_OFFTRK_PCT,EN_R0_DETECTORS,EN_R1_DETECTORS
//      P2108_MSMR_READER_OFFSETS_COL_WIDTH        //    4,   4,       8,        9,        9,           13,                  19,                  19,             15,             15
//      P2108_MSMR_READER_OFFSETS_COL_MASK         //    0,   0,       0,        0,        0,            0,                   0,                   0,              0,              0
//      P2108_MSMR_READER_OFFSETS_COL_TYPES        // *
//      P2108_MSMR_READER_OFFSETS_TABLE_TYPE       // S
#define P172_FACTORY_RESISTANCE              2094  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,RDR_RESISTANCE
//      P172_FACTORY_RESISTANCE_COL_WIDTH          //          11,        10,          12,         12,            14
//      P172_FACTORY_RESISTANCE_COL_MASK           //           0,         0,           0,          0,             0
//      P172_FACTORY_RESISTANCE_COL_TYPES          // *
//      P172_FACTORY_RESISTANCE_TABLE_TYPE         // S
#define P425_SOC_PHASE_CAL_VAL1              2095  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,COARSE_DLY,FINE_DLY
//      P425_SOC_PHASE_CAL_VAL1_COL_WIDTH          //          11,        10,        9,        10,       8
//      P425_SOC_PHASE_CAL_VAL1_COL_MASK           //           0,         0,        0,         0,       0
//      P425_SOC_PHASE_CAL_VAL1_COL_TYPES          // *
//      P425_SOC_PHASE_CAL_VAL1_TABLE_TYPE         // S
#define P285_FORST_DETCR_DATA                2096  // HD_PHYS_PSN,HD_LGC_PSN,ITERATION,RAMP_TRK_ID,START_TRK_ID,OGB_TRK_ID,START_BEMF_INTG,OGB_BEMF_INTG,RAMP_BEMF_INTG,RAMP_SEC_NUM
//      P285_FORST_DETCR_DATA_COL_WIDTH            //          11,        10,        9,         11,          12,        10,             15,           13,            14,          12
//      P285_FORST_DETCR_DATA_COL_MASK             //           0,         0,        0,          0,           0,         0,              0,            0,             0,           0
//      P285_FORST_DETCR_DATA_COL_TYPES            // *
//      P285_FORST_DETCR_DATA_TABLE_TYPE           // S
#define P285_FORST_DETCR_SUMMARY             2097  // HD_PHYS_PSN,HD_LGC_PSN,VALID_COUNT,IGNORE_COUNT,TRK_DC_OFST,RAMP_TRK_MEAN,RAMP_TRK_MEAN_OFST_ADJ,RAMP_TRK_STDEV
//      P285_FORST_DETCR_SUMMARY_COL_WIDTH         //          11,        10,         11,          12,         11,           13,                    22,            14
//      P285_FORST_DETCR_SUMMARY_COL_MASK          //           0,         0,          0,           0,          0,            0,                     0,             0
//      P285_FORST_DETCR_SUMMARY_COL_TYPES         // *
//      P285_FORST_DETCR_SUMMARY_TABLE_TYPE        // S

#define P438_ZONE_POLYFIT_DATA               2098  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,DATA_ZONE,TRK_NUM,SIDE,COEF_2,COEF_1,COEF_0,R_SQRD,OFS_MIN,POLY_BER_MIN,MEASURED_BER,PICKED
//      P438_ZONE_POLYFIT_DATA_COL_WIDTH           //          11,        10,          12,         11,        9,      7,   4,     6,     6,     6,     6,      7,          12,          12,     6
//      P438_ZONE_POLYFIT_DATA_COL_MASK            //           0,         0,           0,          0,        0,      0,   0,     0,     0,     0,     0,      0,           0,           0,     0
//      P438_ZONE_POLYFIT_DATA_COL_TYPES           // *
//      P438_ZONE_POLYFIT_DATA_TABLE_TYPE          // S
#define P438_FINE_BATHTUB_SWEEP              2099  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,DATA_ZONE,TRK_NUM,OFFSET,BIE_MEAN_LOG10,PCT_DEG,SIDE
//      P438_FINE_BATHTUB_SWEEP_COL_WIDTH          //          11,        10,          12,         11,        9,      7,     6,            14,      7,   4
//      P438_FINE_BATHTUB_SWEEP_COL_MASK           //           0,         0,           0,          0,        0,      0,     0,             0,      0,   0
//      P438_FINE_BATHTUB_SWEEP_COL_TYPES          // *
//      P438_FINE_BATHTUB_SWEEP_TABLE_TYPE         // S
#define P438_ZONE_UJOG_PICK                  2100  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,DATA_ZONE,TRK_NUM,SIDE,OFFSET_MIN,POLY_BER_MIN,MEASURED_BER,VALID_PICK
//      P438_ZONE_UJOG_PICK_COL_WIDTH              //          11,        10,          12,         11,        9,      7,   4,        10,          12,          12,        10
//      P438_ZONE_UJOG_PICK_COL_MASK               //           0,         0,           0,          0,        0,      0,   0,         0,           0,           0,         0
//      P438_ZONE_UJOG_PICK_COL_TYPES              // *
//      P438_ZONE_UJOG_PICK_TABLE_TYPE             // S
#define P438_ACROSS_STROKE_DATA              2101  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,DATA_ZONE,TRK_NUM,OFST_PICK,BER_PICK,R_SQRD_PICK,SIDE,FLTR_OFS_PICK,FLTR_BER_PICK,FLTR_R_SQRD_PICK,FLTR_SIDE
//      P438_ACROSS_STROKE_DATA_COL_WIDTH          //          11,        10,          12,         11,        9,      7,        9,       8,         11,   4,           13,           13,              16,        9
//      P438_ACROSS_STROKE_DATA_COL_MASK           //           0,         0,           0,          0,        0,      0,        0,       0,          0,   0,            0,            0,               0,        0
//      P438_ACROSS_STROKE_DATA_COL_TYPES          // *
//      P438_ACROSS_STROKE_DATA_TABLE_TYPE         // S
#define P280_SCOPY_AC_AFH_CONTACT            2102  // TARGET_HD,AFH_ZONE,SPIRAL_CYL,ITER,CONTACT_DAC,DETECTOR_MASK,CONTACT_FAULT,CONTACT_PES
//      P280_SCOPY_AC_AFH_CONTACT_COL_WIDTH        //         9,       8,        10,   4,         11,           13,           13,         11
//      P280_SCOPY_AC_AFH_CONTACT_COL_MASK         //         0,       0,         0,   0,          0,            0,            0,          0
//      P280_SCOPY_AC_AFH_CONTACT_COL_TYPES        // *
//      P280_SCOPY_AC_AFH_CONTACT_TABLE_TYPE       // S
#define P434_WRT_RD_COUNTS_OTF               2103  // STEP_ID,PASS_READ_CNT,FAIL_READ_CNT,PASS_WRT_CNT,FAIL_WRT_CNT,PASS_READ_PCT,PASS_WRT_PCT
//      P434_WRT_RD_COUNTS_OTF_COL_WIDTH           //       7,           13,           13,          12,          12,           13,          12
//      P434_WRT_RD_COUNTS_OTF_COL_MASK            //       0,            0,            0,           0,           0,            0,           0
//      P434_WRT_RD_COUNTS_OTF_COL_TYPES           // *
//      P434_WRT_RD_COUNTS_OTF_TABLE_TYPE          // S
#define P434_WRT_RD_COUNTS_SUM               2104  // STEP_ID,PASS_READ_CNT,FAIL_READ_CNT,PASS_WRT_CNT,FAIL_WRT_CNT,PASS_READ_PCT,PASS_WRT_PCT
//      P434_WRT_RD_COUNTS_SUM_COL_WIDTH           //       7,           13,           13,          12,          12,           13,          12
//      P434_WRT_RD_COUNTS_SUM_COL_MASK            //       0,            0,            0,           0,           0,            0,           0
//      P434_WRT_RD_COUNTS_SUM_COL_TYPES           // *
//      P434_WRT_RD_COUNTS_SUM_TABLE_TYPE          // S
#define P276_SCOPY_GRAY_CODE_CYL             2105  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,START_GC_CYL,END_GC_CYL
//      P276_SCOPY_GRAY_CODE_CYL_COL_WIDTH         //          11,        10,   4,          12,        10
//      P276_SCOPY_GRAY_CODE_CYL_COL_MASK          //           0,         0,   0,           0,         0
//      P276_SCOPY_GRAY_CODE_CYL_COL_TYPES         // *
//      P276_SCOPY_GRAY_CODE_CYL_TABLE_TYPE        // S
#define P130_UNVER_TRACK_INFO                2106  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM
//      P130_UNVER_TRACK_INFO_COL_WIDTH            //          11,        10,      7
//      P130_UNVER_TRACK_INFO_COL_MASK             //           0,         0,      0
//      P130_UNVER_TRACK_INFO_COL_TYPES            // *
//      P130_UNVER_TRACK_INFO_TABLE_TYPE           // S
#define P182_COIL_RESISTANCE_TEMP            2107  // COIL_RESISTANCE,THERMISTOR_TEMP
//      P182_COIL_RESISTANCE_TEMP_COL_WIDTH        //              15,             15
//      P182_COIL_RESISTANCE_TEMP_COL_MASK         //               0,              0
//      P182_COIL_RESISTANCE_TEMP_COL_TYPES        // *
//      P182_COIL_RESISTANCE_TEMP_TABLE_TYPE       // S
#define P182_COIL_REF_SUMMARY_TBL            2108  // R0_CAL,T0_RAM,RMEAS_AVG,TMEAS_AVG
//      P182_COIL_REF_SUMMARY_TBL_COL_WIDTH        //      6,     6,        9,        9
//      P182_COIL_REF_SUMMARY_TBL_COL_MASK         //      0,     0,        0,        0
//      P182_COIL_REF_SUMMARY_TBL_COL_TYPES        // *
//      P182_COIL_REF_SUMMARY_TBL_TABLE_TYPE       // S


/****************************************************************************************************************************

   #               #    ##        ######      #      #   ###   #      #     ######
    #             #    #  #       #      #    # #    #    #    # #    #    #      #
     #     #     #    #    #      #      #    #  #   #    #    #  #   #   #
      #   # #   #    ########     ######      #   #  #    #    #   #  #   #     ###
       # #   # #    #        #    #     #     #    # #    #    #    # #   #       #
        #     #    #          #   #      #    #     ##    #    #     ##    #      #
        #     #   #            #  #       #   #      #   ###   #      #      ####

 Deleting or modifying any established entry or its attributes in this file could result in serious process consequences.
 E.g. previously released firmware that depends on the changed or deleted entry will function incorrectly or could stop
 functioning altogether.

 If a change is needed in an established entry, a new entry must be made to incorporate that change.
 This MUST be observed until a permanent solution is in place.

*****************************************************************************************************************************/
// *******************  IOTEST DBLOG Table definitions  (Starts @ IOTEST_DBLOG_INDEX_OFFSET (in table_offsets.h)) *************************************
// ***  Table Names                                ***  Table Column Names / Column Widths / Masks / Table type ***
#define P000_IO_DEBUG_DATA                  16000  // *
//      P000_IO_DEBUG_DATA_COL_WIDTH               // 5
//      P000_IO_DEBUG_DATA_COL_MASK                // 0
//      P000_IO_DEBUG_DATA_COL_TYPES               // *
//      P000_IO_DEBUG_DATA_TABLE_TYPE              // S
#define P621_STE                            16001  // HD_PHYS_PSN,WRITE_CYCLE,HD_LGC_PSN,ERROR_RATE10,NORMALIZED_ERASURE_LOSS,STE_MAX_ERASURE,STE_MAX_POSITION,ATI_ID,ATI_OD,FULL_WIDTH_HALF_MAX,ERROR_DELTA_AT_MAX_STE,ATI_OD_MRGN,ATI_ID_MRGN,STE_MRGN
//      P621_STE_COL_WIDTH                         //          11,         11,        10,          12,                     23,             15,              16,     6,     6,                 19,                    22,         11,         11,       8
//      P621_STE_COL_MASK                          //           1,          1,         1,           1,                      1,              1,               1,     1,     1,                  1,                     1,          1,          1,       1
//      P621_STE_COL_TYPES                         //           N,          N,         N,           N,                      N,              N,               N,     N,     N,                  N,                     N,          N,          N,       N
//      P621_STE_TABLE_TYPE                        // M
#define P621_BITS_RD                        16002  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,WRITE_CYLCE_BASE,WRITE_CYCLE_MAX
//      P621_BITS_RD_COL_WIDTH                     //          11,        10,       8,              16,             15
//      P621_BITS_RD_COL_MASK                      //           0,         0,       0,               0,              0
//      P621_BITS_RD_COL_TYPES                     // *
//      P621_BITS_RD_TABLE_TYPE                    // M
#define P621_BITS_RD_SWEEP                  16003  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,WRITE_CYCLE_1,WRITE_CYCLE_10,WRITE_CYCLE_100,WRITE_CYCLE_1_000,WRITE_CYCLE_10_000,WRITE_CYCLE_100_000,WRITE_CYCLE_1_000_000
//      P621_BITS_RD_SWEEP_COL_WIDTH               //          11,        10,       8,           13,            14,             15,               17,                18,                 19,                   21
//      P621_BITS_RD_SWEEP_COL_MASK                //           0,         0,       0,            0,             0,              0,                0,                 0,                  0,                    0
//      P621_BITS_RD_SWEEP_COL_TYPES               // *
//      P621_BITS_RD_SWEEP_TABLE_TYPE              // M
#define P621_ERROR_PER_HEAD                 16004  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,WRITE_CYLCE_BASE,WRITE_CYCLE_MAX
//      P621_ERROR_PER_HEAD_COL_WIDTH              //          11,        10,       8,              16,             15
//      P621_ERROR_PER_HEAD_COL_MASK               //           0,         0,       0,               0,              0
//      P621_ERROR_PER_HEAD_COL_TYPES              // *
//      P621_ERROR_PER_HEAD_TABLE_TYPE             // M
#define P621_ERROR_PER_HEAD_SWEEP           16005  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,WRITE_CYCLE_1,WRITE_CYCLE_10,WRITE_CYCLE_100,WRITE_CYCLE_1_000,WRITE_CYCLE_10_000,WRITE_CYCLE_100_000,WRITE_CYCLE_1_000_000
//      P621_ERROR_PER_HEAD_SWEEP_COL_WIDTH        //          11,        10,       8,           13,            14,             15,               17,                18,                 19,                   21
//      P621_ERROR_PER_HEAD_SWEEP_COL_MASK         //           0,         0,       0,            0,             0,              0,                0,                 0,                  0,                    0
//      P621_ERROR_PER_HEAD_SWEEP_COL_TYPES        // *
//      P621_ERROR_PER_HEAD_SWEEP_TABLE_TYPE       // M
#define P621_BASE_LINE_BER                  16006  // HD_PHYS_PSN,HD_LGC_PSN,BASE_LINE_BER,LOG10_BASELINE_BER
//      P621_BASE_LINE_BER_COL_WIDTH               //          11,        10,           13,                18
//      P621_BASE_LINE_BER_COL_MASK                //           0,         0,            0,                 0
//      P621_BASE_LINE_BER_COL_TYPES               // *
//      P621_BASE_LINE_BER_TABLE_TYPE              // V
#define P503_LOG_PAGE_INFO                  16007  // PAGE,PAGE_HEX,PAGE_LENGTH,ROBUST_LOGGING,ROBUST_LOGGING_HEX,SUB_PAGE,SUB_PAGE_HEX
//      P503_LOG_PAGE_INFO_COL_WIDTH               //    4,       8,         11,            14,                18,       8,          12
//      P503_LOG_PAGE_INFO_COL_MASK                //    0,       0,          0,             0,                 0,       0,           0
//      P503_LOG_PAGE_INFO_COL_TYPES               // *
//      P503_LOG_PAGE_INFO_TABLE_TYPE              // S
#define P503_LOG_PAGES_V2                   16008  // PARAMETER,LINE,PARAMETER_HEX,LOG_PARAMETER_DATA,ROBUST_LOGGING,ROBUST_LOGGING_HEX,PAGE,PAGE_HEX
//      P503_LOG_PAGES_V2_COL_WIDTH                //         9,   4,           13,                64,            14,                18,   4,       8
//      P503_LOG_PAGES_V2_COL_MASK                 //         1,   1,            1,                 1,             1,                 1,   1,       1
//      P503_LOG_PAGES_V2_COL_TYPES                //         N,   N,            V,                 V,             N,                 V,   N,       V
//      P503_LOG_PAGES_V2_TABLE_TYPE               // M
#define P503_FAILURE_TABLE                  16009  // STATUS,FAILURE_REASON
//      P503_FAILURE_TABLE_COL_WIDTH               //      6,            40
//      P503_FAILURE_TABLE_COL_MASK                //      0,             0
//      P503_FAILURE_TABLE_COL_TYPES               // *
//      P503_FAILURE_TABLE_TABLE_TYPE              // S
#define P503_SUPPORTED_PAGES                16010  // PAGE,PAGE_HEX,SUB_PAGE,SUB_PAGE_HEX
//      P503_SUPPORTED_PAGES_COL_WIDTH             //    4,       8,       8,          12
//      P503_SUPPORTED_PAGES_COL_MASK              //    0,       0,       0,           0
//      P503_SUPPORTED_PAGES_COL_TYPES             // *
//      P503_SUPPORTED_PAGES_TABLE_TYPE            // S
#define P503_COMMAND_CDB                    16011  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P503_COMMAND_CDB_COL_WIDTH                 // 2,2,2,2,2,2,2,2,2,2, 2, 2, 2, 2, 2, 2
//      P503_COMMAND_CDB_COL_MASK                  // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P503_COMMAND_CDB_COL_TYPES                 // *
//      P503_COMMAND_CDB_TABLE_TYPE                // S
#define P503_SENSE_DATA                     16012  // 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17
//      P503_SENSE_DATA_COL_WIDTH                  // 2,2,2,2,2,2,2,2,2,2, 2, 2, 2, 2, 2, 2, 2, 2
//      P503_SENSE_DATA_COL_MASK                   // 0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0, 0, 0
//      P503_SENSE_DATA_COL_TYPES                  // *
//      P503_SENSE_DATA_TABLE_TYPE                 // S
#define P503_FAILED_LOCATION                16013  // LBA,CYLINDER,HEAD,SECTOR
//      P503_FAILED_LOCATION_COL_WIDTH             //  16,       8,   4,     8
//      P503_FAILED_LOCATION_COL_MASK              //   0,       0,   0,     0
//      P503_FAILED_LOCATION_COL_TYPES             // *
//      P503_FAILED_LOCATION_TABLE_TYPE            // S
#define P503_LOG_PARAM_CHECK                16014  // PARAMETER_CODE,PARAMETER_VALUE,PARAMETER_LIMIT
//      P503_LOG_PARAM_CHECK_COL_WIDTH             //             14,             15,             15
//      P503_LOG_PARAM_CHECK_COL_MASK              //              0,              0,              0
//      P503_LOG_PARAM_CHECK_COL_TYPES             // *
//      P503_LOG_PARAM_CHECK_TABLE_TYPE            // S
#define P564_SMART_FRAME_DATA               16015  // LINE,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P564_SMART_FRAME_DATA_COL_WIDTH            //    4,3,2,2,2,2,2,2,2,2,2, 2, 2, 2, 2, 2, 2
//      P564_SMART_FRAME_DATA_COL_MASK             //    0,0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P564_SMART_FRAME_DATA_COL_TYPES            // *
//      P564_SMART_FRAME_DATA_TABLE_TYPE           // V
#define P564_WRITE_FAULT_CHECK              16016  // HEAD,WRITE_FAULT_HEX,WRITE_FAULT_DEC,STATUS
//      P564_WRITE_FAULT_CHECK_COL_WIDTH           //    4,             15,             15,     6
//      P564_WRITE_FAULT_CHECK_COL_MASK            //    0,              0,              0,     0
//      P564_WRITE_FAULT_CHECK_COL_TYPES           // *
//      P564_WRITE_FAULT_CHECK_TABLE_TYPE          // V
#define P564_SMRT_ATTCHK                    16017  // TIME_STAMP,CODE_REV,SEC_SIZE,VERSION,TEMPERATURE,SECTORS_READ,AVG_OD,AVG_ID,SPIN_UPS,BUZZ_COUNT,FLAGS,BD_SAMPLE_CNT,NO_TMD_CNT,TF_ERRS,ARE_CNT,ONE_THIRD_SEEK,ONE_TRACK,SVO_CODE_REV,CUM_GLIST,MOTOR_POWER,WRT_UNRECOVERED,MOTOR_POWER_MAX,WRITE_FREE_10,UNLATCH_CUR_MAX,MAX_TEMPERATURE,MIN_TEMPERATURE
//      P564_SMRT_ATTCHK_COL_WIDTH                 //         20,       8,       8,      8,         11,          20,     8,     8,       8,        10,    8,           13,        10,      8,      8,            14,        9,          12,        9,         11,             15,             15,           13,             15,             15,             15
//      P564_SMRT_ATTCHK_COL_MASK                  //          1,       1,       1,      1,          1,           1,     1,     1,       1,         1,    1,            1,         1,      1,      1,             1,        1,           1,        1,          1,              1,              1,            1,              1,              1,              1
//      P564_SMRT_ATTCHK_COL_TYPES                 //          N,       N,       N,      N,          N,           N,     N,     N,       N,         N,    N,            N,         N,      N,      N,             N,        N,           N,        N,          N,              N,              N,            N,              N,              N,              N
//      P564_SMRT_ATTCHK_TABLE_TYPE                // S
#define P564_SMRT_HDER                      16018  // HD_PHYS_PSN,HD_LGC_PSN,SEEK_CNT,SEEK_ERR,TA_ERP,TA_WUS,SRVO_UNSF,READ_ERRORS
//      P564_SMRT_HDER_COL_WIDTH                   //          11,        10,       8,       8,     8,     8,        9,         11
//      P564_SMRT_HDER_COL_MASK                    //           0,         0,       0,       0,     0,     0,        0,          0
//      P564_SMRT_HDER_COL_TYPES                   // *
//      P564_SMRT_HDER_TABLE_TYPE                  // V
#define P564_SMRT_HDFH                      16019  // HD_PHYS_PSN,HD_LGC_PSN,HF_OD,LF_OD,HF_ID,LF_ID
//      P564_SMRT_HDFH_COL_WIDTH                   //          11,        10,    8,    8,    8,    8
//      P564_SMRT_HDFH_COL_MASK                    //           0,         0,    0,    0,    0,    0
//      P564_SMRT_HDFH_COL_TYPES                   // *
//      P564_SMRT_HDFH_TABLE_TYPE                  // V
#define P605_PORT_BYPASS_REPORT             16020  // TEST_STATUS,PORTS_NOT_BYPASSED
//      P605_PORT_BYPASS_REPORT_COL_WIDTH          //          11,                18
//      P605_PORT_BYPASS_REPORT_COL_MASK           //           0,                 0
//      P605_PORT_BYPASS_REPORT_COL_TYPES          // *
//      P605_PORT_BYPASS_REPORT_TABLE_TYPE         // S
#define P605_ADDRESS_LINE_TEST              16021  // TEST_STATUS,EXPECTED_VALUE,RECEIVED_VALUE
//      P605_ADDRESS_LINE_TEST_COL_WIDTH           //          11,            14,            14
//      P605_ADDRESS_LINE_TEST_COL_MASK            //           0,             0,             0
//      P605_ADDRESS_LINE_TEST_COL_TYPES           // *
//      P605_ADDRESS_LINE_TEST_TABLE_TYPE          // S
#define P605_ADDRESS_LINE_BIT_ERR           16022  // ERROR_AT_BIT
//      P605_ADDRESS_LINE_BIT_ERR_COL_WIDTH        //           12
//      P605_ADDRESS_LINE_BIT_ERR_COL_MASK         //            0
//      P605_ADDRESS_LINE_BIT_ERR_COL_TYPES        // *
//      P605_ADDRESS_LINE_BIT_ERR_TABLE_TYPE       // S
#define P605_ADDRESS_LINE_REPORT            16023  // BIT_NUMBER,RETURN_ADDR
//      P605_ADDRESS_LINE_REPORT_COL_WIDTH         //         10,         11
//      P605_ADDRESS_LINE_REPORT_COL_MASK          //          0,          0
//      P605_ADDRESS_LINE_REPORT_COL_TYPES         // *
//      P605_ADDRESS_LINE_REPORT_TABLE_TYPE        // S
#define P605_ADDRESS_LINE_STATUS            16024  // TEST_STATUS
//      P605_ADDRESS_LINE_STATUS_COL_WIDTH         //          11
//      P605_ADDRESS_LINE_STATUS_COL_MASK          //           0
//      P605_ADDRESS_LINE_STATUS_COL_TYPES         // *
//      P605_ADDRESS_LINE_STATUS_TABLE_TYPE        // S
#define P605_ESI_REPORT                     16025  // TEST_STATUS,BEFORE_DATA,AFTER_DATA
//      P605_ESI_REPORT_COL_WIDTH                  //          11,         11,        10
//      P605_ESI_REPORT_COL_MASK                   //           0,          0,         0
//      P605_ESI_REPORT_COL_TYPES                  // *
//      P605_ESI_REPORT_TABLE_TYPE                 // S
#define P604_DISPARITY_LOSS_SYNC            16026  // MAX_DISP_PER_PORT,DISP_COUNT_A,DISP_COUNT_B,MAX_SYNC_LOSS_PER_PORT,LOSS_COUNT_A,LOSS_COUNT_B
//      P604_DISPARITY_LOSS_SYNC_COL_WIDTH         //                17,          12,          12,                    22,          12,          12
//      P604_DISPARITY_LOSS_SYNC_COL_MASK          //                 0,           0,           0,                     0,           0,           0
//      P604_DISPARITY_LOSS_SYNC_COL_TYPES         // *
//      P604_DISPARITY_LOSS_SYNC_TABLE_TYPE        // S
#define P603_RV_SENSOR_REPORT               16027  // INIT_RV_ABS,INIT_RV_MEAN,FINAL_RV_ABS,FINAL_RV_MEAN
//      P603_RV_SENSOR_REPORT_COL_WIDTH            //          11,          12,          12,           13
//      P603_RV_SENSOR_REPORT_COL_MASK             //           0,           0,           0,            0
//      P603_RV_SENSOR_REPORT_COL_TYPES            // *
//      P603_RV_SENSOR_REPORT_TABLE_TYPE           // S
#define P528_SPINUPDOWN                     16028  // SPINUP_TIME,SPINDOWN_TIME
//      P528_SPINUPDOWN_COL_WIDTH                  //          11,           13
//      P528_SPINUPDOWN_COL_MASK                   //           1,            1
//      P528_SPINUPDOWN_COL_TYPES                  //           N,            N
//      P528_SPINUPDOWN_TABLE_TYPE                 // S
#define P528_TIMED_PWRUP                    16029  // POWERUP_TIME,TIME_MODE
//      P528_TIMED_PWRUP_COL_WIDTH                 //           12,        9
//      P528_TIMED_PWRUP_COL_MASK                  //            1,        0
//      P528_TIMED_PWRUP_COL_TYPES                 //            N
//      P528_TIMED_PWRUP_TABLE_TYPE                // S
#define P000_RW_ERROR                       16030  // KEY,CODE_0,CD1,FRU,RTYS,BLOCK,CYL,HD,SEC,COMMAND_0,C1,C2,C3,C4,C5,C6,C7,C8,C9
//      P000_RW_ERROR_COL_WIDTH                    //   3,     6,  3,  3,   4,   10, 10, 5,  6,        9, 2, 2, 2, 2, 2, 2, 2, 2, 2
//      P000_RW_ERROR_COL_MASK                     //   0,     0,  0,  0,   0,    0,  0, 0,  0,        0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//      P000_RW_ERROR_COL_TYPES                    // *
//      P000_RW_ERROR_TABLE_TYPE                   // S
#define P000_RW_ERROR_SERIALNUM             16031  // SERIALNUM,KEY,CODE,QUAL,FRU,RTYS,BLOCK,CYL,HD,SEC,COMMAND_0,C1,C2,C3,C4,C5,C6,C7,C8,C9
//      P000_RW_ERROR_SERIALNUM_COL_WIDTH          //         9,  3,   4,   4,  3,   4,   10, 10, 5,  6,        9, 2, 2, 2, 2, 2, 2, 2, 2, 2
//      P000_RW_ERROR_SERIALNUM_COL_MASK           //         0,  0,   0,   0,  0,   0,    0,  0, 0,  0,        0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//      P000_RW_ERROR_SERIALNUM_COL_TYPES          // *
//      P000_RW_ERROR_SERIALNUM_TABLE_TYPE         // S
#define P000_RW_ERROR_LOOP                  16032  // KEY,CODE,QUAL,FRU,RTYS,BLOCK,CYL,HD,SEC,CMD_0,C_01,C_02,C_03,C_04,C_05,C_06,C_07,C_08,C_09,C10,C11,C12,C13,C14,C15,LOOP
//      P000_RW_ERROR_LOOP_COL_WIDTH               //   3,   4,   4,  3,   4,    9,  8, 3,  5,    5,   3,   3,   3,   3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,   5
//      P000_RW_ERROR_LOOP_COL_MASK                //   0,   0,   0,  0,   0,    0,  0, 0,  0,    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,   0
//      P000_RW_ERROR_LOOP_COL_TYPES               // *
//      P000_RW_ERROR_LOOP_TABLE_TYPE              // S
#define P517_SENSE_DATA                     16033  // *
//      P517_SENSE_DATA_COL_WIDTH                  // 2
//      P517_SENSE_DATA_COL_MASK                   // 0
//      P517_SENSE_DATA_COL_TYPES                  // *
//      P517_SENSE_DATA_TABLE_TYPE                 // S
#define P517_REQ_SENSE_COMMANDS             16034  // COMMANDS_EXECUTED
//      P517_REQ_SENSE_COMMANDS_COL_WIDTH          //                17
//      P517_REQ_SENSE_COMMANDS_COL_MASK           //                 0
//      P517_REQ_SENSE_COMMANDS_COL_TYPES          // *
//      P517_REQ_SENSE_COMMANDS_TABLE_TYPE         // S
#define P517_CLEAR_UNIT_ATTN                16035  // REQ_SENSE,S_KEY,S_CODE,QUALFR,F_CODE
//      P517_CLEAR_UNIT_ATTN_COL_WIDTH             //         9,    5,     6,     6,     6
//      P517_CLEAR_UNIT_ATTN_COL_MASK              //         0,    0,     0,     0,     0
//      P517_CLEAR_UNIT_ATTN_COL_TYPES             // *
//      P517_CLEAR_UNIT_ATTN_TABLE_TYPE            // S
#define P714_MSE_PMSE                       16036  // HD_PHYS_PSN,HD_LGC_PSN,MSE,PMSE,DATA_POINTS,STATUS,HD_STATUS
//      P714_MSE_PMSE_COL_WIDTH                    //          11,        10,  8,   8,         11,     6,        9
//      P714_MSE_PMSE_COL_MASK                     //           1,         1,  1,   1,          1,     0,        1
//      P714_MSE_PMSE_COL_TYPES                    //           N,         N,  N,   N,          N,               N
//      P714_MSE_PMSE_TABLE_TYPE                   // V
#define P714_DELTA_CQM                      16037  // HD_PHYS_PSN,HD_LGC_PSN,CUR_CQM,PREV_CQM,CQM_DELTA,STATUS,HD_STATUS
//      P714_DELTA_CQM_COL_WIDTH                   //          11,        10,      7,       8,        9,     6,        9
//      P714_DELTA_CQM_COL_MASK                    //           1,         1,      1,       1,        1,     0,        1
//      P714_DELTA_CQM_COL_TYPES                   //           N,         N,      N,       N,        N,               N
//      P714_DELTA_CQM_TABLE_TYPE                  // V
#define P714_DELTA_MSE                      16038  // HD_PHYS_PSN,HD_LGC_PSN,B2D_MSE,SPT_MSE,MSE_DELTA,STATUS,HD_STATUS
//      P714_DELTA_MSE_COL_WIDTH                   //          11,        10,      8,      8,        9,     6,        9
//      P714_DELTA_MSE_COL_MASK                    //           0,         0,      0,      0,        0,     0,        0
//      P714_DELTA_MSE_COL_TYPES                   // *
//      P714_DELTA_MSE_TABLE_TYPE                  // V
#define P714_DELTA_PMSE                     16039  // HD_PHYS_PSN,HD_LGC_PSN,CUR_PMSE,PREV_PMSE,PMSE_DELTA,STATUS,HD_STATUS
//      P714_DELTA_PMSE_COL_WIDTH                  //          11,        10,       8,        9,        10,     6,        9
//      P714_DELTA_PMSE_COL_MASK                   //           1,         1,       1,        1,         1,     0,        1
//      P714_DELTA_PMSE_COL_TYPES                  //           N,         N,       N,        N,         N,               N
//      P714_DELTA_PMSE_TABLE_TYPE                 // V
#define P714_DELTA_SUMMARY                  16040  // HD_PHYS_PSN,HD_LGC_PSN,SUM_DELTA_POS,HD_STATUS
//      P714_DELTA_SUMMARY_COL_WIDTH               //          11,        10,           13,        9
//      P714_DELTA_SUMMARY_COL_MASK                //           1,         1,            1,        1
//      P714_DELTA_SUMMARY_COL_TYPES               //           N,         N,            N,        N
//      P714_DELTA_SUMMARY_TABLE_TYPE              // V
#define P714_PMSE_SPEC                      16041  // PMSE_SPEC
//      P714_PMSE_SPEC_COL_WIDTH                   //         9
//      P714_PMSE_SPEC_COL_MASK                    //         0
//      P714_PMSE_SPEC_COL_TYPES                   // *
//      P714_PMSE_SPEC_TABLE_TYPE                  // S
#define P714_B2D_RESULTS                    16042  // BIAS,HEAD,CQM,LOG(CQM+1),DELTA_LOG(CQM+1)
//      P714_B2D_RESULTS_COL_WIDTH                 //    4,   4,  8,        10,              16
//      P714_B2D_RESULTS_COL_MASK                  //    0,   0,  0,         0,               0
//      P714_B2D_RESULTS_COL_TYPES                 // *
//      P714_B2D_RESULTS_TABLE_TYPE                // M
#define P714_SPT_RESULTS                    16043  // BIAS,HEAD,CQM,LOG(CQM+1),DELTA_LOG(CQM+1)
//      P714_SPT_RESULTS_COL_WIDTH                 //    4,   4,  8,        10,              16
//      P714_SPT_RESULTS_COL_MASK                  //    0,   0,  0,         0,               0
//      P714_SPT_RESULTS_COL_TYPES                 // *
//      P714_SPT_RESULTS_TABLE_TYPE                // M
#define P714_B2D_CQM_DELTA_CHECK            16044  // CQM_POS_DELTA_SPEC,CQM_NEG_DELTA_SPEC
//      P714_B2D_CQM_DELTA_CHECK_COL_WIDTH         //                 18,                18
//      P714_B2D_CQM_DELTA_CHECK_COL_MASK          //                  0,                 0
//      P714_B2D_CQM_DELTA_CHECK_COL_TYPES         // *
//      P714_B2D_CQM_DELTA_CHECK_TABLE_TYPE        // S
#define P714_SPT_CQM_DELTA_CHECK            16045  // CQM_POS_DELTA_SPEC,CQM_NEG_DELTA_SPEC,BIAS
//      P714_SPT_CQM_DELTA_CHECK_COL_WIDTH         //                 18,                18,   8
//      P714_SPT_CQM_DELTA_CHECK_COL_MASK          //                  0,                 0,   0
//      P714_SPT_CQM_DELTA_CHECK_COL_TYPES         // *
//      P714_SPT_CQM_DELTA_CHECK_TABLE_TYPE        // S
#define P714_B2D_PMSE_DELTA_SPEC            16046  // PMSE_POS_DELTA_SPEC,PMSE_NEG_DELTA_SPEC
//      P714_B2D_PMSE_DELTA_SPEC_COL_WIDTH         //                  19,                 19
//      P714_B2D_PMSE_DELTA_SPEC_COL_MASK          //                   0,                  0
//      P714_B2D_PMSE_DELTA_SPEC_COL_TYPES         // *
//      P714_B2D_PMSE_DELTA_SPEC_TABLE_TYPE        // S
#define P714_SPT_PMSE_DELTA_SPEC            16047  // PMSE_POS_DELTA_SPEC,PMSE_NEG_DELTA_SPEC
//      P714_SPT_PMSE_DELTA_SPEC_COL_WIDTH         //                  19,                 19
//      P714_SPT_PMSE_DELTA_SPEC_COL_MASK          //                   0,                  0
//      P714_SPT_PMSE_DELTA_SPEC_COL_TYPES         // *
//      P714_SPT_PMSE_DELTA_SPEC_TABLE_TYPE        // S
#define P714_CHS_LBA_X_TO_Y                 16048  // CYLINDER_X,HEAD_X,SECTOR_X,LBA_X,CYLINDER_Y,HEAD_Y,SECTOR_Y,LBA_Y
//      P714_CHS_LBA_X_TO_Y_COL_WIDTH              //         10,     6,       8,   10,        10,     6,       8,   10
//      P714_CHS_LBA_X_TO_Y_COL_MASK               //          0,     0,       0,    0,         0,     0,       0,    0
//      P714_CHS_LBA_X_TO_Y_COL_TYPES              // *
//      P714_CHS_LBA_X_TO_Y_TABLE_TYPE             // S
#define P714_SPT_MSE_DELTA_SPEC             16049  // MSE_POS_DELTA_SPEC,MSE_NEG_DELTA_SPEC
//      P714_SPT_MSE_DELTA_SPEC_COL_WIDTH          //                 18,                18
//      P714_SPT_MSE_DELTA_SPEC_COL_MASK           //                  0,                 0
//      P714_SPT_MSE_DELTA_SPEC_COL_TYPES          // *
//      P714_SPT_MSE_DELTA_SPEC_TABLE_TYPE         // S
#define P714_ABNORMAL_CQM_CHECK             16050  // HEAD,AVG_CQM_LOW_BIAS,AVG_CQM_HIGH_BIAS,STATUS
//      P714_ABNORMAL_CQM_CHECK_COL_WIDTH          //    4,              16,               17,     6
//      P714_ABNORMAL_CQM_CHECK_COL_MASK           //    0,               0,                0,     0
//      P714_ABNORMAL_CQM_CHECK_COL_TYPES          // *
//      P714_ABNORMAL_CQM_CHECK_TABLE_TYPE         // V
#define P714_SPT_MSE_PMSE                   16051  // HEAD,MSE,PMSE,POINTS
//      P714_SPT_MSE_PMSE_COL_WIDTH                //    4,  8,   8,     6
//      P714_SPT_MSE_PMSE_COL_MASK                 //    0,  0,   0,     0
//      P714_SPT_MSE_PMSE_COL_TYPES                // *
//      P714_SPT_MSE_PMSE_TABLE_TYPE               // V
#define P714_HIGH_LOW_PMSE                  16052  // HEAD,LOW_PMSE,HIGH_PMSE
//      P714_HIGH_LOW_PMSE_COL_WIDTH               //    4,       8,        9
//      P714_HIGH_LOW_PMSE_COL_MASK                //    0,       0,        0
//      P714_HIGH_LOW_PMSE_COL_TYPES               // *
//      P714_HIGH_LOW_PMSE_TABLE_TYPE              // V
#define P714_PMSE_DELTA_FAILURE             16053  // DELTA_SPEC_TYPE,DELTA_SPEC
//      P714_PMSE_DELTA_FAILURE_COL_WIDTH          //              15,        10
//      P714_PMSE_DELTA_FAILURE_COL_MASK           //               0,         0
//      P714_PMSE_DELTA_FAILURE_COL_TYPES          // *
//      P714_PMSE_DELTA_FAILURE_TABLE_TYPE         // S
#define P714_CQM_DELTA_FAILURE              16054  // DELTA_SPEC_TYPE,DELTA_SPEC
//      P714_CQM_DELTA_FAILURE_COL_WIDTH           //              15,        10
//      P714_CQM_DELTA_FAILURE_COL_MASK            //               0,         0
//      P714_CQM_DELTA_FAILURE_COL_TYPES           // *
//      P714_CQM_DELTA_FAILURE_TABLE_TYPE          // S
#define P525_ECC                            16055  // MAXIMUM_LBA,INITIAL_LBA,LBA_NUMBER,TEST_SEGMENT,LBA_INCREMENT,W_R_PER_TRY,RETRIES
//      P525_ECC_COL_WIDTH                         //          11,         12,        11,          12,           13,         12,      8
//      P525_ECC_COL_MASK                          //           0,          0,         0,           0,            0,          0,      0
//      P525_ECC_COL_TYPES                         // *
//      P525_ECC_TABLE_TYPE                        // S
#define P525_SENSE_DATA                     16056  // *
//      P525_SENSE_DATA_COL_WIDTH                  // 2
//      P525_SENSE_DATA_COL_MASK                   // 0
//      P525_SENSE_DATA_COL_TYPES                  // *
//      P525_SENSE_DATA_TABLE_TYPE                 // S
#define P515_DISPLAY_BBT                    16057  // BLOCK_NUM,TYPE,ACTUAL_RTY_CNT,SENSE_DATA
//      P515_DISPLAY_BBT_COL_WIDTH                 //        11,  15,            14,        10
//      P515_DISPLAY_BBT_COL_MASK                  //         0,   0,             0,         0
//      P515_DISPLAY_BBT_COL_TYPES                 // *
//      P515_DISPLAY_BBT_TABLE_TYPE                // S
#define P000_NUM_OF_ENTRIES                 16058  // *
//      P000_NUM_OF_ENTRIES_COL_WIDTH              // 5
//      P000_NUM_OF_ENTRIES_COL_MASK               // 0
//      P000_NUM_OF_ENTRIES_COL_TYPES              // *
//      P000_NUM_OF_ENTRIES_TABLE_TYPE             // S
#define P515_DISPLAY_CERT_DATA              16059  // BLOCK,CYL,HEAD,SECTOR,SENSE_DATA,ERROR_TYPE_1,ERROR_TYPE_2
//      P515_DISPLAY_CERT_DATA_COL_WIDTH           //    10, 10,   5,    10,        12,          20,          15
//      P515_DISPLAY_CERT_DATA_COL_MASK            //     0,  0,   0,     0,         0,           0,           0
//      P515_DISPLAY_CERT_DATA_COL_TYPES           // *
//      P515_DISPLAY_CERT_DATA_TABLE_TYPE          // S
#define P505_TST_TIME                       16060  // TEST_TIME
//      P505_TST_TIME_COL_WIDTH                    //        10
//      P505_TST_TIME_COL_MASK                     //         0
//      P505_TST_TIME_COL_TYPES                    // *
//      P505_TST_TIME_TABLE_TYPE                   // S
#define P508_BUFFER                         16061  // LINE,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,BA,BB,BC,BD,BE,BF
//      P508_BUFFER_COL_WIDTH                      //    4, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
//      P508_BUFFER_COL_MASK                       //    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//      P508_BUFFER_COL_TYPES                      // *
//      P508_BUFFER_TABLE_TYPE                     // V
#define P514_STANDARD_INQUIRY               16062  // VENDOR_ID,PRODUCT_ID,SCSI_FW_REV
//      P514_STANDARD_INQUIRY_COL_WIDTH            //        16,        16,         11
//      P514_STANDARD_INQUIRY_COL_MASK             //         0,         0,          0
//      P514_STANDARD_INQUIRY_COL_TYPES            // *
//      P514_STANDARD_INQUIRY_TABLE_TYPE           // S
#define P514_STD_INQUIRY_DATA               16063  // B0,B1,B2,B3,B4,B5,B6,B7
//      P514_STD_INQUIRY_DATA_COL_WIDTH            //  2, 2, 2, 2, 2, 2, 2, 2
//      P514_STD_INQUIRY_DATA_COL_MASK             //  0, 0, 0, 0, 0, 0, 0, 0
//      P514_STD_INQUIRY_DATA_COL_TYPES            // *
//      P514_STD_INQUIRY_DATA_TABLE_TYPE           // S
#define P514_VPD_PAGE_DATA                  16064  // LINE,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,BA,BB,BC,BD,BE,BF
//      P514_VPD_PAGE_DATA_COL_WIDTH               //    4, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
//      P514_VPD_PAGE_DATA_COL_MASK                //    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//      P514_VPD_PAGE_DATA_COL_TYPES               // *
//      P514_VPD_PAGE_DATA_TABLE_TYPE              // V
#define P514_VPD_PAGE_CODE                  16065  // PAGE_CODE
//      P514_VPD_PAGE_CODE_COL_WIDTH               //         9
//      P514_VPD_PAGE_CODE_COL_MASK                //         0
//      P514_VPD_PAGE_CODE_COL_TYPES               // *
//      P514_VPD_PAGE_CODE_TABLE_TYPE              // S
#define P514_FIRMWARE_NUMBERS               16066  // SCSI_FW_REV,TMS_OR_SERVO_RAM_REV,SERVO_ROM_REV
//      P514_FIRMWARE_NUMBERS_COL_WIDTH            //          11,                  20,           13
//      P514_FIRMWARE_NUMBERS_COL_MASK             //           0,                   0,            0
//      P514_FIRMWARE_NUMBERS_COL_TYPES            // *
//      P514_FIRMWARE_NUMBERS_TABLE_TYPE           // S
#define P514_MODEL_INTERFACE_CHK            16067  // EXPECTED_PRODUCT_ID,PRODUCT_ID
//      P514_MODEL_INTERFACE_CHK_COL_WIDTH         //                  19,        16
//      P514_MODEL_INTERFACE_CHK_COL_MASK          //                   0,         0
//      P514_MODEL_INTERFACE_CHK_COL_TYPES         // *
//      P514_MODEL_INTERFACE_CHK_TABLE_TYPE        // S
#define P552_DISPLAY_STD_INQUIRY            16068  // *
//      P552_DISPLAY_STD_INQUIRY_COL_WIDTH         // 2
//      P552_DISPLAY_STD_INQUIRY_COL_MASK          // 0
//      P552_DISPLAY_STD_INQUIRY_COL_TYPES         // *
//      P552_DISPLAY_STD_INQUIRY_TABLE_TYPE        // S
#define P552_DISPLAY_DRIVE_INFO             16069  // SERIAL_NUM,MODEL_NUM,CFW_REV,SERVO_REV,PROD_ID,CTRL_NAME,CHIP_VER,SENSE_MODE
//      P552_DISPLAY_DRIVE_INFO_COL_WIDTH          //         12,       11,      9,       11,      9,       11,      10,        12
//      P552_DISPLAY_DRIVE_INFO_COL_MASK           //          0,        0,      0,        0,      0,        0,       0,         0
//      P552_DISPLAY_DRIVE_INFO_COL_TYPES          // *
//      P552_DISPLAY_DRIVE_INFO_TABLE_TYPE         // S
#define P552_DISPLAY_EXTRA_INFO             16070  // READ_CHANNEL,SEC_SIZE,RAP_KEY,LBA_SUPPORT,MC_SUPPORT,NVC_SUPPORT,HYBRID_SUPPORT,PI_FORMAT,5XXE
//      P552_DISPLAY_EXTRA_INFO_COL_WIDTH          //           14,       9,      8,         12,        11,         12,            15,       10,   5
//      P552_DISPLAY_EXTRA_INFO_COL_MASK           //            0,       0,      0,          0,         0,          0,             0,        0,   0
//      P552_DISPLAY_EXTRA_INFO_COL_TYPES          // *
//      P552_DISPLAY_EXTRA_INFO_TABLE_TYPE         // S
#define P552_VBAR_INFO_PER_HD               16071  // HEAD,MAX_CYL,SERPENT_SIZE
//      P552_VBAR_INFO_PER_HD_COL_WIDTH            //    4,     10,          12
//      P552_VBAR_INFO_PER_HD_COL_MASK             //    0,      0,           0
//      P552_VBAR_INFO_PER_HD_COL_TYPES            // *
//      P552_VBAR_INFO_PER_HD_TABLE_TYPE           // V
#define P552_DISP_MAX_LBA_HD                16072  // MAX_LBA,MAX_HD
//      P552_DISP_MAX_LBA_HD_COL_WIDTH             //      12,     5
//      P552_DISP_MAX_LBA_HD_COL_MASK              //       0,     0
//      P552_DISP_MAX_LBA_HD_COL_TYPES             // *
//      P552_DISP_MAX_LBA_HD_TABLE_TYPE            // S
#define P552_DISP_LBA_CHS                   16073  // LBA,CYLINDER,HEAD,SECTOR
//      P552_DISP_LBA_CHS_COL_WIDTH                //  10,       8,   4,    10
//      P552_DISP_LBA_CHS_COL_MASK                 //   0,       0,   0,     0
//      P552_DISP_LBA_CHS_COL_TYPES                // *
//      P552_DISP_LBA_CHS_TABLE_TYPE               // S
#define P552_DISP_CAPACITY                  16074  // SIZE
//      P552_DISP_CAPACITY_COL_WIDTH               //    8
//      P552_DISP_CAPACITY_COL_MASK                //    0
//      P552_DISP_CAPACITY_COL_TYPES               // *
//      P552_DISP_CAPACITY_TABLE_TYPE              // S
#define P552_INITIATOR_FW_REV               16075  // INITIATOR_FILE_NAME,RELEASE_DATES
//      P552_INITIATOR_FW_REV_COL_WIDTH            //                  35,           25
//      P552_INITIATOR_FW_REV_COL_MASK             //                   0,            0
//      P552_INITIATOR_FW_REV_COL_TYPES            // *
//      P552_INITIATOR_FW_REV_TABLE_TYPE           // S
#define P503_LOG_PAGES                      16076  // PAGE,PARAMETER,LINE,LOG_PARAMETER_DATA,ROBUST_LOGGING,PAGE_HEX,PARAMETER_HEX,ROBUST_LOGGING_HEX
//      P503_LOG_PAGES_COL_WIDTH                   //    4,        9,   4,                64,            14,       8,           13,                18
//      P503_LOG_PAGES_COL_MASK                    //    1,        1,   1,                 1,             1,       1,            1,                 1
//      P503_LOG_PAGES_COL_TYPES                   //    N,        N,   N,                 V,             N,       V,            V,                 V
//      P503_LOG_PAGES_TABLE_TYPE                  // M
#define P515_CERT_EVT_DRV                   16077  // VFYD,UNVFYD,RCVRBL_VFYD,RCVRBL_UNVFYD,UNRCVRBL_VFYD,UNRCVRBL_UNVFYD
//      P515_CERT_EVT_DRV_COL_WIDTH                //   11,    11,         12,           13,           13,             15
//      P515_CERT_EVT_DRV_COL_MASK                 //    1,     1,          1,            1,            1,              1
//      P515_CERT_EVT_DRV_COL_TYPES                //    N,     N,          N,            N,            N,              N
//      P515_CERT_EVT_DRV_TABLE_TYPE               // S
#define P515_CERT_EVT_HD                    16078  // HD_PHYS_PSN,HD_LGC_PSN,VFYD,UNVFYD,RCVRBL_VFYD,RCVRBL_UNVFYD,UNRCVRBL_VFYD,UNRCVRBL_UNVFYD
//      P515_CERT_EVT_HD_COL_WIDTH                 //          11,        10,  10,    10,         11,           13,           13,             15
//      P515_CERT_EVT_HD_COL_MASK                  //           1,         1,   1,     1,          1,            1,            1,              1
//      P515_CERT_EVT_HD_COL_TYPES                 //           N,         N,   N,     N,          N,            N,            N,              N
//      P515_CERT_EVT_HD_TABLE_TYPE                // V
#define P518_EXPECTED                       16079  // *
//      P518_EXPECTED_COL_WIDTH                    // 2
//      P518_EXPECTED_COL_MASK                     // 0
//      P518_EXPECTED_COL_TYPES                    // *
//      P518_EXPECTED_TABLE_TYPE                   // S
#define P518_RECEIVED                       16080  // *
//      P518_RECEIVED_COL_WIDTH                    // 2
//      P518_RECEIVED_COL_MASK                     // 0
//      P518_RECEIVED_COL_TYPES                    // *
//      P518_RECEIVED_TABLE_TYPE                   // S
#define P518_MODE_SENSE_HEADER              16081  // *
//      P518_MODE_SENSE_HEADER_COL_WIDTH           // 2
//      P518_MODE_SENSE_HEADER_COL_MASK            // 0
//      P518_MODE_SENSE_HEADER_COL_TYPES           // *
//      P518_MODE_SENSE_HEADER_TABLE_TYPE          // S
#define P518_MODE_PAGE_DATA                 16082  // *
//      P518_MODE_PAGE_DATA_COL_WIDTH              // 2
//      P518_MODE_PAGE_DATA_COL_MASK               // 0
//      P518_MODE_PAGE_DATA_COL_TYPES              // *
//      P518_MODE_PAGE_DATA_TABLE_TYPE             // S
#define P731_DBUG_DATA_NEG_OFFSET           16083  // HD_PHYS_PSN,CYLINDER,SECTOR,RETRY_CNT,VALUE,CYCLES,LBA
//      P731_DBUG_DATA_NEG_OFFSET_COL_WIDTH        //          11,      11,     6,        9,    5,     6, 11
//      P731_DBUG_DATA_NEG_OFFSET_COL_MASK         //           0,       0,     0,        0,    0,     0,  0
//      P731_DBUG_DATA_NEG_OFFSET_COL_TYPES        // *
//      P731_DBUG_DATA_NEG_OFFSET_TABLE_TYPE       // M
#define P731_DBUG_DATA_POS_OFFSET           16084  // HD_PHYS_PSN,CYLINDER,SECTOR,RETRY_CNT,VALUE,CYCLES,LBA
//      P731_DBUG_DATA_POS_OFFSET_COL_WIDTH        //          11,      11,     6,        9,    5,     6, 11
//      P731_DBUG_DATA_POS_OFFSET_COL_MASK         //           0,       0,     0,        0,    0,     0,  0
//      P731_DBUG_DATA_POS_OFFSET_COL_TYPES        // *
//      P731_DBUG_DATA_POS_OFFSET_TABLE_TYPE       // M
#define P731_POSITIVE_OFFSET_DATA           16085  // HD_PHYS_PSN,CYLINDER,CYCLES_PER_CYL,CONSECUTIVE_CYCLES
//      P731_POSITIVE_OFFSET_DATA_COL_WIDTH        //          11,      11,            14,                18
//      P731_POSITIVE_OFFSET_DATA_COL_MASK         //           0,       0,             0,                 0
//      P731_POSITIVE_OFFSET_DATA_COL_TYPES        // *
//      P731_POSITIVE_OFFSET_DATA_TABLE_TYPE       // M
#define P731_NEGATIVE_OFFSET_DATA           16086  // HD_PHYS_PSN,CYLINDER,CYCLES_PER_CYL,CONSECUTIVE_CYCLES
//      P731_NEGATIVE_OFFSET_DATA_COL_WIDTH        //          11,      11,            14,                18
//      P731_NEGATIVE_OFFSET_DATA_COL_MASK         //           0,       0,             0,                 0
//      P731_NEGATIVE_OFFSET_DATA_COL_TYPES        // *
//      P731_NEGATIVE_OFFSET_DATA_TABLE_TYPE       // M
#define P731_POSITIVE_SUMMARY               16087  // HD_PHYS_PSN,CYCLES_PER_HEAD,CONSECUTIVE_CYCLES_HEAD
//      P731_POSITIVE_SUMMARY_COL_WIDTH            //          11,             15,                     23
//      P731_POSITIVE_SUMMARY_COL_MASK             //           0,              0,                      0
//      P731_POSITIVE_SUMMARY_COL_TYPES            // *
//      P731_POSITIVE_SUMMARY_TABLE_TYPE           // V
#define P731_NEGATIVE_SUMMARY               16088  // HD_PHYS_PSN,CYCLES_PER_HEAD,CONSECUTIVE_CYCLES_HEAD
//      P731_NEGATIVE_SUMMARY_COL_WIDTH            //          11,             15,                     23
//      P731_NEGATIVE_SUMMARY_COL_MASK             //           0,              0,                      0
//      P731_NEGATIVE_SUMMARY_COL_TYPES            // *
//      P731_NEGATIVE_SUMMARY_TABLE_TYPE           // V
#define P620_AGC_TEST                       16089  // HD_PHYS_PSN,CYLINDER,AGC_VALUE,HD_LGC_PSN
//      P620_AGC_TEST_COL_WIDTH                    //          11,      11,        9,        10
//      P620_AGC_TEST_COL_MASK                     //           0,       0,        0,         0
//      P620_AGC_TEST_COL_TYPES                    // *
//      P620_AGC_TEST_TABLE_TYPE                   // M
#define P000_HW_MAX_BLOCK_LIMIT             16090  // MAX_BLOCKS,MAX_BLOCKS_HEX
//      P000_HW_MAX_BLOCK_LIMIT_COL_WIDTH          //         10,            14
//      P000_HW_MAX_BLOCK_LIMIT_COL_MASK           //          0,             0
//      P000_HW_MAX_BLOCK_LIMIT_COL_TYPES          // *
//      P000_HW_MAX_BLOCK_LIMIT_TABLE_TYPE         // S
#define P510_IOPS_MEASUREMENT               16091  // MIN_IOPS_LIMIT,ACTUAL_IOPS,TOTAL_TIME,TOTAL_COMMANDS,NUM_WRT_EXT_CMDS,NUM_RD_EXT_CMDS,FAIL_SAFE
//      P510_IOPS_MEASUREMENT_COL_WIDTH            //             14,         11,        10,            14,              16,             15,        9
//      P510_IOPS_MEASUREMENT_COL_MASK             //              0,          0,         0,             0,               0,              0,        0
//      P510_IOPS_MEASUREMENT_COL_TYPES            // *
//      P510_IOPS_MEASUREMENT_TABLE_TYPE           // S
#define P510_REPORT_RESPONSE_TIME           16092  // COMMAND_TIME,RESPONSE_TIME,COMMAND_BYTES_0,1,2,3,4,5,6,7,8,9
//      P510_REPORT_RESPONSE_TIME_COL_WIDTH        //           12,           13,             15,2,2,2,2,2,2,2,2,2
//      P510_REPORT_RESPONSE_TIME_COL_MASK         //            0,            0,              0,0,0,0,0,0,0,0,0,0
//      P510_REPORT_RESPONSE_TIME_COL_TYPES        // *
//      P510_REPORT_RESPONSE_TIME_TABLE_TYPE       // S
#define P510_BLOCKS_TRANSFERRED             16093  // BLOCKS
//      P510_BLOCKS_TRANSFERRED_COL_WIDTH          //     10
//      P510_BLOCKS_TRANSFERRED_COL_MASK           //      0
//      P510_BLOCKS_TRANSFERRED_COL_TYPES          // *
//      P510_BLOCKS_TRANSFERRED_TABLE_TYPE         // S
#define P000_FAILED_LBA                     16094  // FAILED_LBA
//      P000_FAILED_LBA_COL_WIDTH                  //         10
//      P000_FAILED_LBA_COL_MASK                   //          0
//      P000_FAILED_LBA_COL_TYPES                  // *
//      P000_FAILED_LBA_TABLE_TYPE                 // S
#define P000_HEAD_ERROR_TABLE               16095  // HD_PHYS_PSN,REC_ERRORS,NON_REC_ERRORS,HD_LGC_PSN
//      P000_HEAD_ERROR_TABLE_COL_WIDTH            //          11,        10,            14,        10
//      P000_HEAD_ERROR_TABLE_COL_MASK             //           0,         0,             0,         0
//      P000_HEAD_ERROR_TABLE_COL_TYPES            // *
//      P000_HEAD_ERROR_TABLE_TABLE_TYPE           // V
#define P510_ERROR_RATE                     16096  // HD_PHYS_PSN,HD_LGC_PSN,STARTING_LBA,DATA_ERRORS,BITS_READ,ERROR_RATE,ERROR_RATE10,HARD_ERROR_RATE,SOFT_ERROR_RATE
//      P510_ERROR_RATE_COL_WIDTH                  //          11,        10,          12,         11,       12,        15,          12,             15,             15
//      P510_ERROR_RATE_COL_MASK                   //           1,         1,           1,          1,        1,         1,           1,              1,              1
//      P510_ERROR_RATE_COL_TYPES                  //           N,         N,           N,          N,        N,         N,           N,              N,              N
//      P510_ERROR_RATE_TABLE_TYPE                 // V
#define P000_BLOCKS_TRANSFERRED             16097  // BLOCKS
//      P000_BLOCKS_TRANSFERRED_COL_WIDTH          //     10
//      P000_BLOCKS_TRANSFERRED_COL_MASK           //      0
//      P000_BLOCKS_TRANSFERRED_COL_TYPES          // *
//      P000_BLOCKS_TRANSFERRED_TABLE_TYPE         // S
#define P618_HEADS_TESTED                   16098  // HD_PHYS_PSN
//      P618_HEADS_TESTED_COL_WIDTH                //          11
//      P618_HEADS_TESTED_COL_MASK                 //           0
//      P618_HEADS_TESTED_COL_TYPES                // *
//      P618_HEADS_TESTED_TABLE_TYPE               // V
#define P618_COMPARE_BER                    16099  // HD_PHYS_PSN,HD_LGC_PSN,CYL_BEFORE,CYL_AFTER,BER_BEFORE,BER_AFTER,BER_DELTA,STATUS
//      P618_COMPARE_BER_COL_WIDTH                 //          11,        10,        10,        9,        10,        9,        9,     6
//      P618_COMPARE_BER_COL_MASK                  //           0,         0,         0,        0,         0,        0,        0,     0
//      P618_COMPARE_BER_COL_TYPES                 // *
//      P618_COMPARE_BER_TABLE_TYPE                // V
#define P000_EXP_REC_DATA_PATRN             16100  // EXPECTED_DATA,RECEIVED_DATA
//      P000_EXP_REC_DATA_PATRN_COL_WIDTH          //            13,           13
//      P000_EXP_REC_DATA_PATRN_COL_MASK           //             0,            0
//      P000_EXP_REC_DATA_PATRN_COL_TYPES          // *
//      P000_EXP_REC_DATA_PATRN_TABLE_TYPE         // S
#define P558_FAILED_INDEX                   16101  // FAILED_INDEX
//      P558_FAILED_INDEX_COL_WIDTH                //           12
//      P558_FAILED_INDEX_COL_MASK                 //            0
//      P558_FAILED_INDEX_COL_TYPES                // *
//      P558_FAILED_INDEX_TABLE_TYPE               // S
#define P598_REPORT_HIDDEN_RTRYS            16102  // SENSE_KEY,SENSE_CODE,FRU,RETRIES,CYLINDER,HEAD,SECTOR
//      P598_REPORT_HIDDEN_RTRYS_COL_WIDTH         //         9,        10,  3,      7,       8,   4,     6
//      P598_REPORT_HIDDEN_RTRYS_COL_MASK          //         0,         0,  0,      0,       0,   0,     0
//      P598_REPORT_HIDDEN_RTRYS_COL_TYPES         // *
//      P598_REPORT_HIDDEN_RTRYS_TABLE_TYPE        // S
#define P598_RECOVERED_ERRORS               16103  // CYLINDER,HEAD,SECTOR
//      P598_RECOVERED_ERRORS_COL_WIDTH            //        8,   4,     6
//      P598_RECOVERED_ERRORS_COL_MASK             //        0,   0,     0
//      P598_RECOVERED_ERRORS_COL_TYPES            // *
//      P598_RECOVERED_ERRORS_TABLE_TYPE           // S
#define P598_ZONE_0_DATA_RATE               16104  // DATA_RATE,SPEC,STATUS
//      P598_ZONE_0_DATA_RATE_COL_WIDTH            //        10,   4,     6
//      P598_ZONE_0_DATA_RATE_COL_MASK             //         0,   0,     0
//      P598_ZONE_0_DATA_RATE_COL_TYPES            // *
//      P598_ZONE_0_DATA_RATE_TABLE_TYPE           // S
#define P598_ZONE_XFER_RATE                 16105  // DATA_ZONE,TIME,DATA_RATE,LBAS_XFERED,CALC_RATE,RATIO,STATUS,START_LBA,END_LBA,MAX_TIME_PER_XFER,LBA_AT_MAX_TIME,MIN_TIME_PER_XFER,LBA_AT_MIN_TIME,PARAMETER_1,IOPS,WEAK_HD_PHYS_PSN,WEAK_HD_LGC_PSN,TRK_NUM,PHYS_BLK
//      P598_ZONE_XFER_RATE_COL_WIDTH              //         9,  10,        9,         11,        9,    8,     8,       10,     10,               17,             15,               17,             15,         11,   4,              16,             15,      7,       8
//      P598_ZONE_XFER_RATE_COL_MASK               //         1,   1,        1,          1,        1,    1,     1,        1,      1,                1,              1,                1,              1,          1,   0,               1,              1,      1,       1
//      P598_ZONE_XFER_RATE_COL_TYPES              //         N,   N,        N,          N,        N,    N,     V,        V,      V,                N,              V,                N,              V,          N,                    N,              N,      N,       N
//      P598_ZONE_XFER_RATE_TABLE_TYPE             // V
#define P598_ZONE_XFER_RATE_CHS             16106  // ZONE,TIME,DATA_RATE,LBAS_XFERED,CALC_RATE,PERCENT,START_LBA,WEAK_HEAD,CYLINDER,SECTOR
//      P598_ZONE_XFER_RATE_CHS_COL_WIDTH          //    4,  10,        9,         11,        9,     10,       10,        9,       8,     6
//      P598_ZONE_XFER_RATE_CHS_COL_MASK           //    0,   0,        0,          0,        0,      0,        0,        0,       0,     0
//      P598_ZONE_XFER_RATE_CHS_COL_TYPES          // *
//      P598_ZONE_XFER_RATE_CHS_TABLE_TYPE         // V
#define P597_ADV_TAG_Q                      16107  // TEST_MODE,RCVBL_RD_ERR,RCVBL_WRT_ERR,RCVBL_SRVO_ERR,UNRCVBL_ERR,WRT_XTND_CMD,RD_XTND_CMD,WRT_VFY_CMD,SEEK_XTND_CMD,NUM_OTHER_CMD,IOPS
//      P597_ADV_TAG_Q_COL_WIDTH                   //         9,          12,           13,            14,         11,          12,         11,         11,           13,           13,  11
//      P597_ADV_TAG_Q_COL_MASK                    //         1,           1,            1,             1,          1,           1,          1,          1,            1,            1,   1
//      P597_ADV_TAG_Q_COL_TYPES                   //         N,           N,            N,             N,          N,           N,          N,          N,            N,            N,   N
//      P597_ADV_TAG_Q_TABLE_TYPE                  // S
#define P616_SP240_AGC_GAIN                 16108  // HEAD,AGC_VALUE
//      P616_SP240_AGC_GAIN_COL_WIDTH              //    4,        9
//      P616_SP240_AGC_GAIN_COL_MASK               //    0,        0
//      P616_SP240_AGC_GAIN_COL_TYPES              // *
//      P616_SP240_AGC_GAIN_TABLE_TYPE             // V
#define P616_B2D_AGC_GAIN                   16109  // HEAD,AGC_VALUE
//      P616_B2D_AGC_GAIN_COL_WIDTH                //    4,        9
//      P616_B2D_AGC_GAIN_COL_MASK                 //    0,        0
//      P616_B2D_AGC_GAIN_COL_TYPES                // *
//      P616_B2D_AGC_GAIN_TABLE_TYPE               // V
#define P000_FLAW_COUNT                     16110  // NUMBER_OF_FLAWS
//      P000_FLAW_COUNT_COL_WIDTH                  //              15
//      P000_FLAW_COUNT_COL_MASK                   //               0
//      P000_FLAW_COUNT_COL_TYPES                  // *
//      P000_FLAW_COUNT_TABLE_TYPE                 // S
#define P529_PRIMARY_SERVO_FLAWS            16111  // CYLINDER,HEAD,WEDGE
//      P529_PRIMARY_SERVO_FLAWS_COL_WIDTH         //        8,   4,    8
//      P529_PRIMARY_SERVO_FLAWS_COL_MASK          //        0,   0,    0
//      P529_PRIMARY_SERVO_FLAWS_COL_TYPES         // *
//      P529_PRIMARY_SERVO_FLAWS_TABLE_TYPE        // V
#define P529_ADDED_SERVO_FLAWS              16112  // CYLINDER,HEAD,WEDGE
//      P529_ADDED_SERVO_FLAWS_COL_WIDTH           //        8,   4,    8
//      P529_ADDED_SERVO_FLAWS_COL_MASK            //        0,   0,    0
//      P529_ADDED_SERVO_FLAWS_COL_TYPES           // *
//      P529_ADDED_SERVO_FLAWS_TABLE_TYPE          // V
#define P529_DISPLAY_ASFT                   16113  // CYLINDER,HEAD,WEDGE
//      P529_DISPLAY_ASFT_COL_WIDTH                //        8,   4,    8
//      P529_DISPLAY_ASFT_COL_MASK                 //        0,   0,    0
//      P529_DISPLAY_ASFT_COL_TYPES                // *
//      P529_DISPLAY_ASFT_TABLE_TYPE               // V
#define P529_TA_LIST                        16114  // CYLINDER,HEAD,SECTOR_COUNT,AMPLITUDE,POSITION,LENGTH,FLAG
//      P529_TA_LIST_COL_WIDTH                     //        8,   4,          12,        9,       8,     8,   4
//      P529_TA_LIST_COL_MASK                      //        0,   0,           0,        0,       0,     0,   0
//      P529_TA_LIST_COL_TYPES                     // *
//      P529_TA_LIST_TABLE_TYPE                    // V
#define P529_GROWN_DATA_DEFECTS             16115  // CYLINDER,HEAD,BCAI,LENGTH
//      P529_GROWN_DATA_DEFECTS_COL_WIDTH          //        8,   4,   8,     8
//      P529_GROWN_DATA_DEFECTS_COL_MASK           //        0,   0,   0,     0
//      P529_GROWN_DATA_DEFECTS_COL_TYPES          // *
//      P529_GROWN_DATA_DEFECTS_TABLE_TYPE         // V
#define P529_SERVO_FLAW_CHECK               16116  // TOTAL_FLAWS,FLAW_SPEC,STATUS
//      P529_SERVO_FLAW_CHECK_COL_WIDTH            //          11,        9,     8
//      P529_SERVO_FLAW_CHECK_COL_MASK             //           0,        0,     0
//      P529_SERVO_FLAW_CHECK_COL_TYPES            // *
//      P529_SERVO_FLAW_CHECK_TABLE_TYPE           // S
#define P529_SLIPPED_TRACKES                16117  // CYLINDER,HEAD,WEDGE
//      P529_SLIPPED_TRACKES_COL_WIDTH             //        8,   4,    5
//      P529_SLIPPED_TRACKES_COL_MASK              //        0,   0,    0
//      P529_SLIPPED_TRACKES_COL_TYPES             // *
//      P529_SLIPPED_TRACKES_TABLE_TYPE            // V
#define P529_SLIPPED_TRACK_CHECK            16118  // TOTAL_SLIPPED_TRACKS,SLIPPED_TRACK_SPEC,STATUS
//      P529_SLIPPED_TRACK_CHECK_COL_WIDTH         //                   20,                18,     8
//      P529_SLIPPED_TRACK_CHECK_COL_MASK          //                    0,                 0,     0
//      P529_SLIPPED_TRACK_CHECK_COL_TYPES         // *
//      P529_SLIPPED_TRACK_CHECK_TABLE_TYPE        // S
#define P509_ERROR_RATE                     16119  // HD_PHYS_PSN,HD_LGC_PSN,STARTING_LBA,DATA_ERRORS,BITS_READ,ERROR_RATE,ERROR_RATE10,HARD_ERROR_RATE,SOFT_ERROR_RATE,BER10_SAVED,BER10_DELTA,PASS_FAIL_FLAG,DATA_ZONE,BER_PASS_FAIL_FLAG
//      P509_ERROR_RATE_COL_WIDTH                  //          11,        10,          12,         11,       12,        15,          12,             15,             15,         11,         11,            14,        9,                18
//      P509_ERROR_RATE_COL_MASK                   //           1,         1,           1,          1,        1,         1,           1,              1,              1,          1,          1,             1,        1,                 0
//      P509_ERROR_RATE_COL_TYPES                  //           N,         N,           N,          N,        N,         N,           N,              N,              N,          N,          N,             V,        N
//      P509_ERROR_RATE_TABLE_TYPE                 // V
#define P618_ERROR_RATE                     16120  // HD_PHYS_PSN,HD_LGC_PSN,STARTING_LBA,TOT_DATA_ERR,BITS_READ,ERROR_RATE,ERROR_RATE10,HARD_ERROR_RATE,SOFT_ERROR_RATE
//      P618_ERROR_RATE_COL_WIDTH                  //          11,        10,          12,          12,       12,        15,          12,             15,             15
//      P618_ERROR_RATE_COL_MASK                   //           0,         0,           0,           0,        0,         0,           0,              0,              0
//      P618_ERROR_RATE_COL_TYPES                  // *
//      P618_ERROR_RATE_TABLE_TYPE                 // V
#define P000_BUFFER_DATA                    16121  // *
//      P000_BUFFER_DATA_COL_WIDTH                 // 2
//      P000_BUFFER_DATA_COL_MASK                  // 0
//      P000_BUFFER_DATA_COL_TYPES                 // *
//      P000_BUFFER_DATA_TABLE_TYPE                // S
#define P538_ACTUAL_SENSE_DATA              16122  // *
//      P538_ACTUAL_SENSE_DATA_COL_WIDTH           // 2
//      P538_ACTUAL_SENSE_DATA_COL_MASK            // 0
//      P538_ACTUAL_SENSE_DATA_COL_TYPES           // *
//      P538_ACTUAL_SENSE_DATA_TABLE_TYPE          // S
#define P538_EXPECTED_SENSE_DATA            16123  // *
//      P538_EXPECTED_SENSE_DATA_COL_WIDTH         // 2
//      P538_EXPECTED_SENSE_DATA_COL_MASK          // 0
//      P538_EXPECTED_SENSE_DATA_COL_TYPES         // *
//      P538_EXPECTED_SENSE_DATA_TABLE_TYPE        // S
#define P529_OPEN_LATCH_CHECK               16124  // OPEN_LATCH_RETRIES,OPEN_LATCH_SPEC,STATUS
//      P529_OPEN_LATCH_CHECK_COL_WIDTH            //                 18,             15,     8
//      P529_OPEN_LATCH_CHECK_COL_MASK             //                  0,              0,     0
//      P529_OPEN_LATCH_CHECK_COL_TYPES            // *
//      P529_OPEN_LATCH_CHECK_TABLE_TYPE           // S
#define P638_INCOMING_DATA_SIZE             16125  // BYTES
//      P638_INCOMING_DATA_SIZE_COL_WIDTH          //    10
//      P638_INCOMING_DATA_SIZE_COL_MASK           //     0
//      P638_INCOMING_DATA_SIZE_COL_TYPES          // *
//      P638_INCOMING_DATA_SIZE_TABLE_TYPE         // S
#define P151_ERROR_INFO                     16126  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,ERROR_CODE
//      P151_ERROR_INFO_COL_WIDTH                  //          11,        10,       8,        10
//      P151_ERROR_INFO_COL_MASK                   //           0,         0,       0,         0
//      P151_ERROR_INFO_COL_TYPES                  // *
//      P151_ERROR_INFO_TABLE_TYPE                 // S
#define P597_TAGGED_CMD_LIMITS              16127  // MINIMUM_IOPS,REC_READ_ERRS_ALLOWED,REC_WRITE_ERRS_ALLOWED,REC_SERVO_ERRS_ALLOWED,UNREC_ERRS_ALLOWED
//      P597_TAGGED_CMD_LIMITS_COL_WIDTH           //           12,                   21,                    22,                    22,                18
//      P597_TAGGED_CMD_LIMITS_COL_MASK            //            0,                    0,                     0,                     0,                 0
//      P597_TAGGED_CMD_LIMITS_COL_TYPES           // *
//      P597_TAGGED_CMD_LIMITS_TABLE_TYPE          // S
#define P515_DIT_INFO                       16128  // SER_NUM,ETF_LOG_DATE,HEAD_MEDIA_LABEL,SEAGATE_CONTROL_NUM
//      P515_DIT_INFO_COL_WIDTH                    //      10,          14,              18,                 20
//      P515_DIT_INFO_COL_MASK                     //       0,           0,               0,                  0
//      P515_DIT_INFO_COL_TYPES                    // *
//      P515_DIT_INFO_TABLE_TYPE                   // S
#define P608_TEST_INFO                      16129  // *
//      P608_TEST_INFO_COL_WIDTH                   // 30
//      P608_TEST_INFO_COL_MASK                    // 0
//      P608_TEST_INFO_COL_TYPES                   // *
//      P608_TEST_INFO_TABLE_TYPE                  // S
#define P608_HEADER_VALUES                  16130  // HEADER_BYTES,0,1,2,3,4,5,6,7
//      P608_HEADER_VALUES_COL_WIDTH               //           12,2,2,2,2,2,2,2,2
//      P608_HEADER_VALUES_COL_MASK                //            0,0,0,0,0,0,0,0,0
//      P608_HEADER_VALUES_COL_TYPES               // *
//      P608_HEADER_VALUES_TABLE_TYPE              // S
#define P608_PAYLOAD_VALUES                 16131  // PAYLOAD_BYTES,0,1,2,3,4,5,6,7
//      P608_PAYLOAD_VALUES_COL_WIDTH              //            13,2,2,2,2,2,2,2,2
//      P608_PAYLOAD_VALUES_COL_MASK               //             0,0,0,0,0,0,0,0,0
//      P608_PAYLOAD_VALUES_COL_TYPES              // *
//      P608_PAYLOAD_VALUES_TABLE_TYPE             // S
#define P608_PORT_ALPA                      16132  // PORT_ALPA
//      P608_PORT_ALPA_COL_WIDTH                   //         8
//      P608_PORT_ALPA_COL_MASK                    //         0
//      P608_PORT_ALPA_COL_TYPES                   // *
//      P608_PORT_ALPA_TABLE_TYPE                  // S
#define P608_PORT_NAME                      16133  // PORT_NAME
//      P608_PORT_NAME_COL_WIDTH                   //        16
//      P608_PORT_NAME_COL_MASK                    //         0
//      P608_PORT_NAME_COL_TYPES                   // *
//      P608_PORT_NAME_TABLE_TYPE                  // S
#define P608_FRAME_SIZE                     16134  // FRAME_SIZE
//      P608_FRAME_SIZE_COL_WIDTH                  //          4
//      P608_FRAME_SIZE_COL_MASK                   //          0
//      P608_FRAME_SIZE_COL_TYPES                  // *
//      P608_FRAME_SIZE_TABLE_TYPE                 // S
#define P608_ELS_RJT_REASON                 16135  // REJECT_CODE,EXPLANATION
//      P608_ELS_RJT_REASON_COL_WIDTH              //          11,         12
//      P608_ELS_RJT_REASON_COL_MASK               //           0,          0
//      P608_ELS_RJT_REASON_COL_TYPES              // *
//      P608_ELS_RJT_REASON_TABLE_TYPE             // S
#define P533_IO_TEST_INFO                   16136  // *
//      P533_IO_TEST_INFO_COL_WIDTH                // 40
//      P533_IO_TEST_INFO_COL_MASK                 // 0
//      P533_IO_TEST_INFO_COL_TYPES                // *
//      P533_IO_TEST_INFO_TABLE_TYPE               // S
#define P515_PRIMARY_DEFECT_LIST            16137  //  CYLINDER,HEAD,POSITION,LENGTH
//      P515_PRIMARY_DEFECT_LIST_COL_WIDTH         //         8,   4,       8,     8
//      P515_PRIMARY_DEFECT_LIST_COL_MASK          //         0,   0,       0,     0
//      P515_PRIMARY_DEFECT_LIST_COL_TYPES         // *
//      P515_PRIMARY_DEFECT_LIST_TABLE_TYPE        // V
#define P000_TRANSFER_RATE                  16138  // TRANSFER_RATE_SET
//      P000_TRANSFER_RATE_COL_WIDTH               //                17
//      P000_TRANSFER_RATE_COL_MASK                //                 0
//      P000_TRANSFER_RATE_COL_TYPES               // *
//      P000_TRANSFER_RATE_TABLE_TYPE              // S
#define P000_IO_TEST_INFO                   16139  // _0,_1,_2,_3,_4,_5,_6,_7,_8,_9,_A,_B,_C,_D,_E,_F
//      P000_IO_TEST_INFO_COL_WIDTH                //  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
//      P000_IO_TEST_INFO_COL_MASK                 //  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//      P000_IO_TEST_INFO_COL_TYPES                // *
//      P000_IO_TEST_INFO_TABLE_TYPE               // S
#define P535_DOWNLOAD_FNAME                 16140  // FILE_NAME,DATE_STAMP
//      P535_DOWNLOAD_FNAME_COL_WIDTH              //        12,        12
//      P535_DOWNLOAD_FNAME_COL_MASK               //         0,         0
//      P535_DOWNLOAD_FNAME_COL_TYPES              // *
//      P535_DOWNLOAD_FNAME_TABLE_TYPE             // S
#define P535_INTERFACE_CONT                 16141  // CONTROLLER,REV
//      P535_INTERFACE_CONT_COL_WIDTH              //         10,  5
//      P535_INTERFACE_CONT_COL_MASK               //          0,  0
//      P535_INTERFACE_CONT_COL_TYPES              // *
//      P535_INTERFACE_CONT_TABLE_TYPE             // S
#define P000_PWA_MOD_NO                     16142  // PWA_MODEL_NUMBER
//      P000_PWA_MOD_NO_COL_WIDTH                  //               10
//      P000_PWA_MOD_NO_COL_MASK                   //                0
//      P000_PWA_MOD_NO_COL_TYPES                  // *
//      P000_PWA_MOD_NO_TABLE_TYPE                 // S
#define P000_PWA_SERIAL_NO                  16143  // PWA_SERIAL_NUMBER
//      P000_PWA_SERIAL_NO_COL_WIDTH               //                12
//      P000_PWA_SERIAL_NO_COL_MASK                //                 0
//      P000_PWA_SERIAL_NO_COL_TYPES               // *
//      P000_PWA_SERIAL_NO_TABLE_TYPE              // S
#define P000_REGISTER_READ                  16144  // ADDRESS,DATA
//      P000_REGISTER_READ_COL_WIDTH               //      10,   4
//      P000_REGISTER_READ_COL_MASK                //       0,   0
//      P000_REGISTER_READ_COL_TYPES               // *
//      P000_REGISTER_READ_TABLE_TYPE              // S
#define P708_TEMPERATURE_TEST               16145  // TEMPERATURE_DIFF_LIMIT,TEMPERATURE1,TEMPERATURE2,TEMPERATURE_DIFFERENCE
//      P708_TEMPERATURE_TEST_COL_WIDTH            //                     22,          12,          12,                    22
//      P708_TEMPERATURE_TEST_COL_MASK             //                      0,           0,           0,                     0
//      P708_TEMPERATURE_TEST_COL_TYPES            // *
//      P708_TEMPERATURE_TEST_TABLE_TYPE           // S
#define P710_RZDT_VERIFICATION              16146  // ENTRY_COUNT
//      P710_RZDT_VERIFICATION_COL_WIDTH           //          11
//      P710_RZDT_VERIFICATION_COL_MASK            //           0
//      P710_RZDT_VERIFICATION_COL_TYPES           // *
//      P710_RZDT_VERIFICATION_TABLE_TYPE          // S
#define P712_READ_RAW_TRACK_ID              16147  // SERVO_ADDR,RAW_TRACK_ID
//      P712_READ_RAW_TRACK_ID_COL_WIDTH           //         10,          12
//      P712_READ_RAW_TRACK_ID_COL_MASK            //          0,           0
//      P712_READ_RAW_TRACK_ID_COL_TYPES           // *
//      P712_READ_RAW_TRACK_ID_TABLE_TYPE          // S
#define P717_THUMPER_TEST                   16148  // FAIL_SAFE,LOOP_CNT
//      P717_THUMPER_TEST_COL_WIDTH                //         9,       8
//      P717_THUMPER_TEST_COL_MASK                 //         0,       0
//      P717_THUMPER_TEST_COL_TYPES                // *
//      P717_THUMPER_TEST_TABLE_TYPE               // S
#define P550_SUSTAINED_TRANSFER             16149  // INITIATOR_ERR_COUNT,TARGET_DETECTED_ERR_COUNT
//      P550_SUSTAINED_TRANSFER_COL_WIDTH          //                  21,                       27
//      P550_SUSTAINED_TRANSFER_COL_MASK           //                   0,                        0
//      P550_SUSTAINED_TRANSFER_COL_TYPES          // *
//      P550_SUSTAINED_TRANSFER_TABLE_TYPE         // S
#define P549_IO_SERP                        16150  // AVG_SK_TIME_HD0,AVG_SK_TIME_HDMAX,AVG_HD_SWT_FWD,AVG_HD_SWT_RVRS
//      P549_IO_SERP_COL_WIDTH                     //              15,               17,            14,             15
//      P549_IO_SERP_COL_MASK                      //               1,                1,             1,              1
//      P549_IO_SERP_COL_TYPES                     //               N,                N,             N,              N
//      P549_IO_SERP_TABLE_TYPE                    // S
#define P549_IO_SK_TIME                     16151  // MIN_SEEK,AVG_SEEK,MAX_SEEK,SEEK_MODE
//      P549_IO_SK_TIME_COL_WIDTH                  //        8,       8,       8,        9
//      P549_IO_SK_TIME_COL_MASK                   //        1,       1,       1,        1
//      P549_IO_SK_TIME_COL_TYPES                  //        N,       N,       N,        N
//      P549_IO_SK_TIME_TABLE_TYPE                 // S
#define P549_IO_HD_SW                       16152  // MIN_HD_SW,AVG_HD_SW,MAX_HD_SW,SEEK_MODE
//      P549_IO_HD_SW_COL_WIDTH                    //         9,        9,        9,        9
//      P549_IO_HD_SW_COL_MASK                     //         0,        0,        0,        0
//      P549_IO_HD_SW_COL_TYPES                    // *
//      P549_IO_HD_SW_TABLE_TYPE                   // S
#define P549_IO_HS_DATA                     16153  // TIME_VAL,POS_VAL
//      P549_IO_HS_DATA_COL_WIDTH                  //        8,      8
//      P549_IO_HS_DATA_COL_MASK                   //        0,      0
//      P549_IO_HS_DATA_COL_TYPES                  // *
//      P549_IO_HS_DATA_TABLE_TYPE                 // S
#define P549_IO_OFF_TRK                     16154  // OFF_TRACKS
//      P549_IO_OFF_TRK_COL_WIDTH                  //         10
//      P549_IO_OFF_TRK_COL_MASK                   //          0
//      P549_IO_OFF_TRK_COL_TYPES                  // *
//      P549_IO_OFF_TRK_TABLE_TYPE                 // S
#define P549_IO_MIN_SEEK_TIME               16155  // CURRENT,SAVED,DELTA,PASSFAIL
//      P549_IO_MIN_SEEK_TIME_COL_WIDTH            //       7,    7,    7,       8
//      P549_IO_MIN_SEEK_TIME_COL_MASK             //       0,    0,    0,       0
//      P549_IO_MIN_SEEK_TIME_COL_TYPES            // *
//      P549_IO_MIN_SEEK_TIME_TABLE_TYPE           // S
#define P549_IO_AVG_SEEK_TIME               16156  // CURRENT,SAVED,DELTA,PASSFAIL
//      P549_IO_AVG_SEEK_TIME_COL_WIDTH            //       7,    7,    7,       8
//      P549_IO_AVG_SEEK_TIME_COL_MASK             //       0,    0,    0,       0
//      P549_IO_AVG_SEEK_TIME_COL_TYPES            // *
//      P549_IO_AVG_SEEK_TIME_TABLE_TYPE           // S
#define P549_IO_MAX_SEEK_TIME               16157  // CURRENT,SAVED,DELTA,PASSFAIL
//      P549_IO_MAX_SEEK_TIME_COL_WIDTH            //       7,    7,    7,       8
//      P549_IO_MAX_SEEK_TIME_COL_MASK             //       0,    0,    0,       0
//      P549_IO_MAX_SEEK_TIME_COL_TYPES            // *
//      P549_IO_MAX_SEEK_TIME_TABLE_TYPE           // S
#define P536_IO_COMPARE                     16158  // BLOCKS,BYTE_NO,EXPECTED,RECEIVED
//      P536_IO_COMPARE_COL_WIDTH                  //      8,      4,       8,       8
//      P536_IO_COMPARE_COL_MASK                   //      0,      0,       0,       0
//      P536_IO_COMPARE_COL_TYPES                  // *
//      P536_IO_COMPARE_TABLE_TYPE                 // S
#define P523_IO_SUMMARY                     16159  // WEAK_HEAD_COUNT,RETRYS
//      P523_IO_SUMMARY_COL_WIDTH                  //              15,     6
//      P523_IO_SUMMARY_COL_MASK                   //               0,     0
//      P523_IO_SUMMARY_COL_TYPES                  // *
//      P523_IO_SUMMARY_TABLE_TYPE                 // S
#define P523_IO_WORST_HEADS                 16160  // HEAD_NUM,UNVER_ERRORS
//      P523_IO_WORST_HEADS_COL_WIDTH              //        8,          12
//      P523_IO_WORST_HEADS_COL_MASK               //        0,           0
//      P523_IO_WORST_HEADS_COL_TYPES              // *
//      P523_IO_WORST_HEADS_TABLE_TYPE             // S
#define P507_IO_LAST_50_CMDS                16161  // TEST_NUM,P_F,C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,C10,C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,C21,C22,C23,C24,C25,C26,C27,C28,C29,C30,C31
//      P507_IO_LAST_50_CMDS_COL_WIDTH             //        8,  3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3
//      P507_IO_LAST_50_CMDS_COL_MASK              //        0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
//      P507_IO_LAST_50_CMDS_COL_TYPES             // *
//      P507_IO_LAST_50_CMDS_TABLE_TYPE            // S
#define P530_PLIST                          16162  // MAX_HEAD,TOTAL_DEFECT
//      P530_PLIST_COL_WIDTH                       //        8,          12
//      P530_PLIST_COL_MASK                        //        0,           0
//      P530_PLIST_COL_TYPES                       // *
//      P530_PLIST_TABLE_TYPE                      // S
#define P530_DSPL_PLIST                     16163  // COUNT,CYLINDER,HEAD,SECTOR,DUP_SKPTRK
//      P530_DSPL_PLIST_COL_WIDTH                  //     6,       8,   5,     8,        10
//      P530_DSPL_PLIST_COL_MASK                   //     0,       0,   0,     0,         0
//      P530_DSPL_PLIST_COL_TYPES                  // *
//      P530_DSPL_PLIST_TABLE_TYPE                 // V
#define P530_DISP_ZONE_HEAD                 16164  // ZONE,HEAD,ERROR_COUNT
//      P530_DISP_ZONE_HEAD_COL_WIDTH              //    4,   4,         11
//      P530_DISP_ZONE_HEAD_COL_MASK               //    0,   0,          0
//      P530_DISP_ZONE_HEAD_COL_TYPES              // *
//      P530_DISP_ZONE_HEAD_TABLE_TYPE             // M
#define P530_P_LIST_PZ_HEADER               16165  // TOTAL_NUMBER_OF_HEADS
//      P530_P_LIST_PZ_HEADER_COL_WIDTH            //                    21
//      P530_P_LIST_PZ_HEADER_COL_MASK             //                     0
//      P530_P_LIST_PZ_HEADER_COL_TYPES            // *
//      P530_P_LIST_PZ_HEADER_TABLE_TYPE           // S
#define P530_PL_LIMIT_PER_ZONE              16166  // LIM_PER_UNIT,LIM_PER_HEAD,LIM_PER_ZONE,%SPARE_USED
//      P530_PL_LIMIT_PER_ZONE_COL_WIDTH           //           12,          12,          12,         12
//      P530_PL_LIMIT_PER_ZONE_COL_MASK            //            0,           0,           0,          0
//      P530_PL_LIMIT_PER_ZONE_COL_TYPES           // *
//      P530_PL_LIMIT_PER_ZONE_TABLE_TYPE          // S
#define P530_PL_ACTUAL_PER_ZONE             16167  // ACT_PER_UNIT,ACT_PER_HEAD,ACT_PER_ZONE,CYL_COUNT,%SPARE_USED
//      P530_PL_ACTUAL_PER_ZONE_COL_WIDTH          //           12,          12,          12,        9,         12
//      P530_PL_ACTUAL_PER_ZONE_COL_MASK           //            0,           0,           0,        0,          0
//      P530_PL_ACTUAL_PER_ZONE_COL_TYPES          // *
//      P530_PL_ACTUAL_PER_ZONE_TABLE_TYPE         // S
#define P530_FAILED_DEFECT_REGION           16168  // ZONE,CYL_COUNT,SPARE_USED
//      P530_FAILED_DEFECT_REGION_COL_WIDTH        //    4,        9,        10
//      P530_FAILED_DEFECT_REGION_COL_MASK         //    0,        0,         0
//      P530_FAILED_DEFECT_REGION_COL_TYPES        // *
//      P530_FAILED_DEFECT_REGION_TABLE_TYPE       // S
#define P530_UNUSED_DEFECT_ENTRY            16169  // DEFECT_ENTRIES_AVAILABLE
//      P530_UNUSED_DEFECT_ENTRY_COL_WIDTH         //                       25
//      P530_UNUSED_DEFECT_ENTRY_COL_MASK          //                        0
//      P530_UNUSED_DEFECT_ENTRY_COL_TYPES         // *
//      P530_UNUSED_DEFECT_ENTRY_TABLE_TYPE        // S
#define P530_TOTAL_DDT_ENTRIES              16170  // ENTRY_UNUSED,ENTRY_USED
//      P530_TOTAL_DDT_ENTRIES_COL_WIDTH           //           12,        12
//      P530_TOTAL_DDT_ENTRIES_COL_MASK            //            0,         0
//      P530_TOTAL_DDT_ENTRIES_COL_TYPES           // *
//      P530_TOTAL_DDT_ENTRIES_TABLE_TYPE          // S
#define P530_PL_LIMIT_PER_PARAM             16171  // LIM_PER_UNIT,LIM_PER_HEAD,LIM_PER_CYL,LIM_PER_TRK
//      P530_PL_LIMIT_PER_PARAM_COL_WIDTH          //           12,          12,         12,         12
//      P530_PL_LIMIT_PER_PARAM_COL_MASK           //            0,           0,          0,          0
//      P530_PL_LIMIT_PER_PARAM_COL_TYPES          // *
//      P530_PL_LIMIT_PER_PARAM_TABLE_TYPE         // S
#define P530_PL_ACTUAL_PER_PARAM            16172  // ACT_PER_UNIT,ACT_PER_HEAD,ACT_PER_CYL,CYLINDER,ACT_PER_TRK,CYLINDER,HEAD
//      P530_PL_ACTUAL_PER_PARAM_COL_WIDTH         //           12,          12,         12,       8,         12,       8,   4
//      P530_PL_ACTUAL_PER_PARAM_COL_MASK          //            0,           0,          0,       0,          0,       0,   0
//      P530_PL_ACTUAL_PER_PARAM_COL_TYPES         // *
//      P530_PL_ACTUAL_PER_PARAM_TABLE_TYPE        // S
#define P530_FAILED_DEFECT_CYL              16173  // CYLINDERS,CYL_COUNT
//      P530_FAILED_DEFECT_CYL_COL_WIDTH           //         9,        9
//      P530_FAILED_DEFECT_CYL_COL_MASK            //         0,        0
//      P530_FAILED_DEFECT_CYL_COL_TYPES           // *
//      P530_FAILED_DEFECT_CYL_TABLE_TYPE          // S
#define P530_FAILED_DEFECT_TRK              16174  // CYLINDERS,HEAD,CYL_COUNT
//      P530_FAILED_DEFECT_TRK_COL_WIDTH           //         9,   4,        9
//      P530_FAILED_DEFECT_TRK_COL_MASK            //         0,   0,        0
//      P530_FAILED_DEFECT_TRK_COL_TYPES           // *
//      P530_FAILED_DEFECT_TRK_TABLE_TYPE          // S
#define P530_DEFECT_SECTOR_PER_HD           16175  // HEAD,DEFECT_SECTOR
//      P530_DEFECT_SECTOR_PER_HD_COL_WIDTH        //    4,           13
//      P530_DEFECT_SECTOR_PER_HD_COL_MASK         //    0,            0
//      P530_DEFECT_SECTOR_PER_HD_COL_TYPES        // *
//      P530_DEFECT_SECTOR_PER_HD_TABLE_TYPE       // S
#define P524_DSPL_DATA_COMPARE              16176  // BLK_NUM,BYTE_NUM,EXP_DATA,ACT_DATA
//      P524_DSPL_DATA_COMPARE_COL_WIDTH           //       8,       8,       8,       8
//      P524_DSPL_DATA_COMPARE_COL_MASK            //       0,       0,       0,       0
//      P524_DSPL_DATA_COMPARE_COL_TYPES           // *
//      P524_DSPL_DATA_COMPARE_TABLE_TYPE          // S
#define P515_DISP_P_LIST_HEADER             16177  // DRIVE_SERIAL_NUMBER,ETF_LOG_DATE,HD_MEDIA_LABEL,SEAGATE_CTRL_NUMBER,FLAW_COUNT
//      P515_DISP_P_LIST_HEADER_COL_WIDTH          //                  20,          12,            20,                 20,        12
//      P515_DISP_P_LIST_HEADER_COL_MASK           //                   0,           0,             0,                  0,         0
//      P515_DISP_P_LIST_HEADER_COL_TYPES          // *
//      P515_DISP_P_LIST_HEADER_TABLE_TYPE         // S
#define P515_DISPLAY_P_LIST                 16178  // CYLINDER,HEAD,POSITION,LENGTH
//      P515_DISPLAY_P_LIST_COL_WIDTH              //       11,   5,      11,    11
//      P515_DISPLAY_P_LIST_COL_MASK               //        0,   0,       0,     0
//      P515_DISPLAY_P_LIST_COL_TYPES              // *
//      P515_DISPLAY_P_LIST_TABLE_TYPE             // S
#define P515_DISPLAY_FLAW_CTRL              16179  // CYLINDER,HEAD,POSITION,LENGTH
//      P515_DISPLAY_FLAW_CTRL_COL_WIDTH           //       11,   5,      11,    11
//      P515_DISPLAY_FLAW_CTRL_COL_MASK            //        0,   0,       0,     0
//      P515_DISPLAY_FLAW_CTRL_COL_TYPES           // *
//      P515_DISPLAY_FLAW_CTRL_TABLE_TYPE          // S
#define P515_DSPL_REASSIGN_BLOCK            16180  // BLOCK_NUMBER,CYLINDER,HEAD,POSITION,LENGTH,ERROR_TYPE
//      P515_DSPL_REASSIGN_BLOCK_COL_WIDTH         //           11,      11,   5,      11,    11,        15
//      P515_DSPL_REASSIGN_BLOCK_COL_MASK          //            0,       0,   0,       0,     0,         0
//      P515_DSPL_REASSIGN_BLOCK_COL_TYPES         // *
//      P515_DSPL_REASSIGN_BLOCK_TABLE_TYPE        // S
#define P504_DIAGNOSTICS                    16181  // RTN_STATUS,ERR_CODE,SENSE_KEY,INFO_BYTE,SENSE_DATA_LEN,CMD_DATA,SENSE_CODE,SENSE_QLFYR,FRU_CODE,SENSE_KEY_DETAIL
//      P504_DIAGNOSTICS_COL_WIDTH                 //         10,       8,        9,        9,            14,       8,        10,         11,       8,              16
//      P504_DIAGNOSTICS_COL_MASK                  //          1,       1,        1,        1,             1,       1,         1,          1,       1,               1
//      P504_DIAGNOSTICS_COL_TYPES                 //          N,       V,        V,        V,             V,       V,         V,          V,       V,               V
//      P504_DIAGNOSTICS_TABLE_TYPE                // S
#define P504_LAST_COMMAND                   16182  // *
//      P504_LAST_COMMAND_COL_WIDTH                // 2
//      P504_LAST_COMMAND_COL_MASK                 // 0
//      P504_LAST_COMMAND_COL_TYPES                // *
//      P504_LAST_COMMAND_TABLE_TYPE               // S
#define P504_DISP_CHS                       16183  // BLOCK_NUMBER,CYLINDER,HEAD,SECTOR
//      P504_DISP_CHS_COL_WIDTH                    //           11,      11,   4,    10
//      P504_DISP_CHS_COL_MASK                     //            0,       0,   0,     0
//      P504_DISP_CHS_COL_TYPES                    // *
//      P504_DISP_CHS_TABLE_TYPE                   // S
#define P504_CTRCHIP_REG                    16184  // BK,ADR,___0,___1,___2,___3,___4,___5,___6,___7,___8,___9,___A,___B,___C,___D,___E,___F
//      P504_CTRCHIP_REG_COL_WIDTH                 //  2,  3,   5,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4
//      P504_CTRCHIP_REG_COL_MASK                  //  0,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
//      P504_CTRCHIP_REG_COL_TYPES                 // *
//      P504_CTRCHIP_REG_TABLE_TYPE                // S
#define P555_CAP_COMPARE                    16185  // IN_VALUE,RET_VALUE
//      P555_CAP_COMPARE_COL_WIDTH                 //        8,        8
//      P555_CAP_COMPARE_COL_MASK                  //        0,        0
//      P555_CAP_COMPARE_COL_TYPES                 // *
//      P555_CAP_COMPARE_TABLE_TYPE                // S
#define P555_REPORT                         16186  // ADR,__0,__1,__2,__3,__4,__5,__6,__7,__8,__9,_10,_11,_12,_13,_14,_15
//      P555_REPORT_COL_WIDTH                      //   3,  5,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3
//      P555_REPORT_COL_MASK                       //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
//      P555_REPORT_COL_TYPES                      // *
//      P555_REPORT_TABLE_TYPE                     // S
#define P556_FLY_HEIGHT                     16187  // HD_PHYS_PSN,OD_REL_MAX,OD_REL_DELTA,ID_REL_MIN,ID_REL_MAX,ID_REL_DELTA
//      P556_FLY_HEIGHT_COL_WIDTH                  //          11,        10,          12,        10,        10,          12
//      P556_FLY_HEIGHT_COL_MASK                   //           0,         0,           0,         0,         0,           0
//      P556_FLY_HEIGHT_COL_TYPES                  // *
//      P556_FLY_HEIGHT_TABLE_TYPE                 // V
#define P556_OD_ID_DELTA_REPORT             16188  // HEAD,OD_FLYHIGH_MIN,OD_FLYHIGH_MAX,OD_FLYHIGH_DELTA,ID_FLYHIGH_MIN,ID_FLYHIGH_MAX,ID_FLYHIGH_DELTA
//      P556_OD_ID_DELTA_REPORT_COL_WIDTH          //    5,            16,            16,              16,            16,            16,              16
//      P556_OD_ID_DELTA_REPORT_COL_MASK           //    0,             0,             0,               0,             0,             0,               0
//      P556_OD_ID_DELTA_REPORT_COL_TYPES          // *
//      P556_OD_ID_DELTA_REPORT_TABLE_TYPE         // S
#define P556_SMART_OR_EVENT_DATA            16189  // *
//      P556_SMART_OR_EVENT_DATA_COL_WIDTH         // 2
//      P556_SMART_OR_EVENT_DATA_COL_MASK          // 0
//      P556_SMART_OR_EVENT_DATA_COL_TYPES         // *
//      P556_SMART_OR_EVENT_DATA_TABLE_TYPE        // S
#define P556_HD_AMP_NORM_COEFF              16190  // HEAD,OD_MIN,OD_MAX,OD_AVE,ID_MIN,ID_MAX,ID_AVE
//      P556_HD_AMP_NORM_COEFF_COL_WIDTH           //    5,     8,     8,     8,     8,     8,     8
//      P556_HD_AMP_NORM_COEFF_COL_MASK            //    0,     0,     0,     0,     0,     0,     0
//      P556_HD_AMP_NORM_COEFF_COL_TYPES           // *
//      P556_HD_AMP_NORM_COEFF_TABLE_TYPE          // S
#define P557_WRITE_ETF_DATE                 16191  // *
//      P557_WRITE_ETF_DATE_COL_WIDTH              // 0
//      P557_WRITE_ETF_DATE_COL_MASK               // 0
//      P557_WRITE_ETF_DATE_COL_TYPES              // *
//      P557_WRITE_ETF_DATE_TABLE_TYPE             // S
#define P557_READ_ETF_LOG_DATE              16192  // ETF_FA_LOG_DATE
//      P557_READ_ETF_LOG_DATE_COL_WIDTH           //              20
//      P557_READ_ETF_LOG_DATE_COL_MASK            //               0
//      P557_READ_ETF_LOG_DATE_COL_TYPES           // *
//      P557_READ_ETF_LOG_DATE_TABLE_TYPE          // S
#define P557_COMPARE_ETF_DATE               16193  // ETF_FA_Log_Date,Current_Date
//      P557_COMPARE_ETF_DATE_COL_WIDTH            //              15,          15
//      P557_COMPARE_ETF_DATE_COL_MASK             //               0,           0
//      P557_COMPARE_ETF_DATE_COL_TYPES            // *
//      P557_COMPARE_ETF_DATE_TABLE_TYPE           // S
#define P561_CLEAR_SRVO_RAM_ADDR            16194  // *
//      P561_CLEAR_SRVO_RAM_ADDR_COL_WIDTH         // 0
//      P561_CLEAR_SRVO_RAM_ADDR_COL_MASK          // 0
//      P561_CLEAR_SRVO_RAM_ADDR_COL_TYPES         // *
//      P561_CLEAR_SRVO_RAM_ADDR_TABLE_TYPE        // S
#define P561_RD_SERVO_RAM_ADDR32            16195  // BAD_IDS,SRV_UNSAFE
//      P561_RD_SERVO_RAM_ADDR32_COL_WIDTH         //      10,        10
//      P561_RD_SERVO_RAM_ADDR32_COL_MASK          //       0,         0
//      P561_RD_SERVO_RAM_ADDR32_COL_TYPES         // *
//      P561_RD_SERVO_RAM_ADDR32_TABLE_TYPE        // S
#define P561_RD_SRVO_RAM_ADDR_32            16196  // NO_TMDS
//      P561_RD_SRVO_RAM_ADDR_32_COL_WIDTH         //      10
//      P561_RD_SRVO_RAM_ADDR_32_COL_MASK          //       0
//      P561_RD_SRVO_RAM_ADDR_32_COL_TYPES         // *
//      P561_RD_SRVO_RAM_ADDR_32_TABLE_TYPE        // S
#define P561_READ_SRVO_RAM_ADDR             16197  // NO_TMDS,BAD_IDS,SRV_UNSAFE
//      P561_READ_SRVO_RAM_ADDR_COL_WIDTH          //      10,     10,        10
//      P561_READ_SRVO_RAM_ADDR_COL_MASK           //       0,      0,         0
//      P561_READ_SRVO_RAM_ADDR_COL_TYPES          // *
//      P561_READ_SRVO_RAM_ADDR_TABLE_TYPE         // S
#define P561_HEAD_STABILITY_TEST            16198  // HEAD,INSTABILITY_VALUE
//      P561_HEAD_STABILITY_TEST_COL_WIDTH         //    5,               17
//      P561_HEAD_STABILITY_TEST_COL_MASK          //    0,                0
//      P561_HEAD_STABILITY_TEST_COL_TYPES         // *
//      P561_HEAD_STABILITY_TEST_TABLE_TYPE        // V
#define P569_ETF_FILE_LENGTH                16199  // CTRL_PRM_FILE,PMRY_DEF_FILE,SRVO_PRM_FILE,MFG_INFO_FILE
//      P569_ETF_FILE_LENGTH_COL_WIDTH             //            13,           13,           13,           13
//      P569_ETF_FILE_LENGTH_COL_MASK              //             0,            0,            0,            0
//      P569_ETF_FILE_LENGTH_COL_TYPES             // *
//      P569_ETF_FILE_LENGTH_TABLE_TYPE            // S
#define P569_ETF_LOG_D_C_TABLE              16200  // __0,__1,__2,__3,__4,__5,__6,__7,__8,__9,_10,_11,_12,_13,_14,_15
//      P569_ETF_LOG_D_C_TABLE_COL_WIDTH           //   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3
//      P569_ETF_LOG_D_C_TABLE_COL_MASK            //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
//      P569_ETF_LOG_D_C_TABLE_COL_TYPES           // *
//      P569_ETF_LOG_D_C_TABLE_TABLE_TYPE          // S
#define P569_ETF_LOG_ZONE_TABLE             16201  // __0,__1,__2,__3,__4,__5,__6,__7,__8,__9,_10,_11,_12,_13,_14,_15
//      P569_ETF_LOG_ZONE_TABLE_COL_WIDTH          //   3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3
//      P569_ETF_LOG_ZONE_TABLE_COL_MASK           //   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
//      P569_ETF_LOG_ZONE_TABLE_COL_TYPES          // *
//      P569_ETF_LOG_ZONE_TABLE_TABLE_TYPE         // S
#define P595_EXPECTED_DATA                  16202  // *
//      P595_EXPECTED_DATA_COL_WIDTH               // 3
//      P595_EXPECTED_DATA_COL_MASK                // 0
//      P595_EXPECTED_DATA_COL_TYPES               // *
//      P595_EXPECTED_DATA_TABLE_TYPE              // S
#define P595_RECEIVED_DATA                  16203  // *
//      P595_RECEIVED_DATA_COL_WIDTH               // 3
//      P595_RECEIVED_DATA_COL_MASK                // 0
//      P595_RECEIVED_DATA_COL_TYPES               // *
//      P595_RECEIVED_DATA_TABLE_TYPE              // S
#define P544_MODE_SENSE_HEADER              16204  // *
//      P544_MODE_SENSE_HEADER_COL_WIDTH           // 3
//      P544_MODE_SENSE_HEADER_COL_MASK            // 0
//      P544_MODE_SENSE_HEADER_COL_TYPES           // *
//      P544_MODE_SENSE_HEADER_TABLE_TYPE          // S
#define P544_MODE_PAGE_DATA                 16205  // *
//      P544_MODE_PAGE_DATA_COL_WIDTH              // 3
//      P544_MODE_PAGE_DATA_COL_MASK               // 0
//      P544_MODE_PAGE_DATA_COL_TYPES              // *
//      P544_MODE_PAGE_DATA_TABLE_TYPE             // S
#define P556_PARITY_COUNTER                 16206  // CTLPGM,CTLDATA,SVOPGM,SVODATA
//      P556_PARITY_COUNTER_COL_WIDTH              //      6,      7,     6,      7
//      P556_PARITY_COUNTER_COL_MASK               //      0,      0,     0,      0
//      P556_PARITY_COUNTER_COL_TYPES              // *
//      P556_PARITY_COUNTER_TABLE_TYPE             // S
#define P600_SELFTEST_LBA                   16207  // LBA1,LBA2
//      P600_SELFTEST_LBA_COL_WIDTH                //   16,  16
//      P600_SELFTEST_LBA_COL_MASK                 //    0,   0
//      P600_SELFTEST_LBA_COL_TYPES                // *
//      P600_SELFTEST_LBA_TABLE_TYPE               // S
#define P600_SELFTEST_FAILED                16208  // LBA1,LBA2,CYLINDER,HEAD,SECTOR
//      P600_SELFTEST_FAILED_COL_WIDTH             //   16,  16,       8,   4,     8
//      P600_SELFTEST_FAILED_COL_MASK              //    0,   0,       0,   0,     0
//      P600_SELFTEST_FAILED_COL_TYPES             // *
//      P600_SELFTEST_FAILED_TABLE_TYPE            // S
#define P600_SENSE_DATA                     16209  // SENSE_DATA,FRU_CODE
//      P600_SENSE_DATA_COL_WIDTH                  //         12,      10
//      P600_SENSE_DATA_COL_MASK                   //          0,       0
//      P600_SENSE_DATA_COL_TYPES                  // *
//      P600_SENSE_DATA_TABLE_TYPE                 // S
#define P602_UDS_SUMMARY                    16210  // UDS_PORT,SEGMENT_SIZE,TRACE_ALLOC,FUNCT_ID,VERSION,CTR_BYTE,CLEAR,INDEX,STATUS
//      P602_UDS_SUMMARY_COL_WIDTH                 //       10,          12,         12,       8,      8,       8,    5,    5,     8
//      P602_UDS_SUMMARY_COL_MASK                  //        0,           0,          0,       0,      0,       0,    0,    0,     0
//      P602_UDS_SUMMARY_COL_TYPES                 // *
//      P602_UDS_SUMMARY_TABLE_TYPE                // S
#define P602_UDS_DATA_RETURNED              16211  // *
//      P602_UDS_DATA_RETURNED_COL_WIDTH           // 2
//      P602_UDS_DATA_RETURNED_COL_MASK            // 0
//      P602_UDS_DATA_RETURNED_COL_TYPES           // *
//      P602_UDS_DATA_RETURNED_TABLE_TYPE          // S
#define P606_CRC_ERROR_DETECT               16212  // TEST_STATUS,SENSE_DATA_12,SENSE_DATA_13
//      P606_CRC_ERROR_DETECT_COL_WIDTH            //          11,           13,           13
//      P606_CRC_ERROR_DETECT_COL_MASK             //           0,            0,            0
//      P606_CRC_ERROR_DETECT_COL_TYPES            // *
//      P606_CRC_ERROR_DETECT_TABLE_TYPE           // V
#define P510_CMD_ABORTED_REPORT             16213  // WRTCMD_ABORTED,RDCMD_ABORTED
//      P510_CMD_ABORTED_REPORT_COL_WIDTH          //             15,           15
//      P510_CMD_ABORTED_REPORT_COL_MASK           //              0,            0
//      P510_CMD_ABORTED_REPORT_COL_TYPES          // *
//      P510_CMD_ABORTED_REPORT_TABLE_TYPE         // S
#define P611_WRITE_SERVO_RAM                16214  // TEST_OPTION,SYMBOL_INDEX,DATA,ADDRESS
//      P611_WRITE_SERVO_RAM_COL_WIDTH             //          12,          14,   6,     10
//      P611_WRITE_SERVO_RAM_COL_MASK              //           0,           0,   0,      0
//      P611_WRITE_SERVO_RAM_COL_TYPES             // *
//      P611_WRITE_SERVO_RAM_TABLE_TYPE            // V
#define P611_READ_SERVO_RAM                 16215  // TEST_OPTION,SYMBOL_INDEX,ADDRESS,RETURNED_DATA,ADDRESS_HEX,RETURNED_DATA_HEX
//      P611_READ_SERVO_RAM_COL_WIDTH              //          12,          14,     10,           14,         11,               17
//      P611_READ_SERVO_RAM_COL_MASK               //           1,           1,      1,            1,          0,                0
//      P611_READ_SERVO_RAM_COL_TYPES              //           N,           N,      V,            V
//      P611_READ_SERVO_RAM_TABLE_TYPE             // S
#define P611_WORD_COMPARE                   16216  // TEST_OPTION,SYMBOL_INDEX,EXP_DATA,ACT_DATA
//      P611_WORD_COMPARE_COL_WIDTH                //          12,          14,       8,       8
//      P611_WORD_COMPARE_COL_MASK                 //           0,           0,       0,       0
//      P611_WORD_COMPARE_COL_TYPES                // *
//      P611_WORD_COMPARE_TABLE_TYPE               // V
#define P611_LSB_COMPARE                    16217  // TEST_OPTION,SYMBOL_INDEX,EXP_DATA,ACT_DATA
//      P611_LSB_COMPARE_COL_WIDTH                 //          12,          14,       8,       8
//      P611_LSB_COMPARE_COL_MASK                  //           0,           0,       0,       0
//      P611_LSB_COMPARE_COL_TYPES                 // *
//      P611_LSB_COMPARE_TABLE_TYPE                // S
#define P611_MSB_COMPARE                    16218  // TEST_OPTION,SYMBOL_INDEX,EXP_DATA,ACT_DATA
//      P611_MSB_COMPARE_COL_WIDTH                 //          12,          14,       8,       8
//      P611_MSB_COMPARE_COL_MASK                  //           0,           0,       0,       0
//      P611_MSB_COMPARE_COL_TYPES                 // *
//      P611_MSB_COMPARE_TABLE_TYPE                // V
#define P611_RANGE_COMPARE                  16219  // TEST_OPTION,SYMBOL_INDEX,RETURNED_DATA
//      P611_RANGE_COMPARE_COL_WIDTH               //          12,          14,           14
//      P611_RANGE_COMPARE_COL_MASK                //           0,           0,            0
//      P611_RANGE_COMPARE_COL_TYPES               // *
//      P611_RANGE_COMPARE_TABLE_TYPE              // S
#define P611_SERVO_EVENT_FIFO               16220  // *
//      P611_SERVO_EVENT_FIFO_COL_WIDTH            // 20
//      P611_SERVO_EVENT_FIFO_COL_MASK             // 0
//      P611_SERVO_EVENT_FIFO_COL_TYPES            // *
//      P611_SERVO_EVENT_FIFO_TABLE_TYPE           // S
#define P613_LBA_CHS                        16221  // START_END_LBA,CYLINDER,HEAD,SECTOR,NO_MATCH,TRACK_TYPE
//      P613_LBA_CHS_COL_WIDTH                     //            13,      10,   5,    10,       8,        12
//      P613_LBA_CHS_COL_MASK                      //             0,       0,   0,     0,       0,         0
//      P613_LBA_CHS_COL_TYPES                     // *
//      P613_LBA_CHS_TABLE_TYPE                    // V
#define P613_THERMAL_TRK_REPORT             16222  // ZONE,LOOP_CNT,ERR_CNT,BLK_XFER,ERR_RATE,SRVO_CNT,HEAD,TOTAL_TIME,TRACK_TYPE
//      P613_THERMAL_TRK_REPORT_COL_WIDTH          //    5,       8,      8,      10,      10,       8,   5,        10,        12
//      P613_THERMAL_TRK_REPORT_COL_MASK           //    0,       0,      0,       0,       0,       0,   0,         0,         0
//      P613_THERMAL_TRK_REPORT_COL_TYPES          // *
//      P613_THERMAL_TRK_REPORT_TABLE_TYPE         // V
#define P613_THERMAL_ERR_RATE               16223  // ERR_CNT,BLK_XFER,ERR_RATE,SRVO_CNT,TICK_CNT
//      P613_THERMAL_ERR_RATE_COL_WIDTH            //       5,       8,       8,       8,      10
//      P613_THERMAL_ERR_RATE_COL_MASK             //       0,       0,       0,       0,       0
//      P613_THERMAL_ERR_RATE_COL_TYPES            // *
//      P613_THERMAL_ERR_RATE_TABLE_TYPE           // V
#define P613_THERMAL_ERR_COUNT              16224  // COUNT_0311,COUNT_0316,COUNT_OTHERS
//      P613_THERMAL_ERR_COUNT_COL_WIDTH           //         10,        10,          12
//      P613_THERMAL_ERR_COUNT_COL_MASK            //          0,         0,           0
//      P613_THERMAL_ERR_COUNT_COL_TYPES           // *
//      P613_THERMAL_ERR_COUNT_TABLE_TYPE          // V
#define P613_THERMAL_DECAY                  16225  // HD_PHYS_PSN,HD_LGC_PSN,SLOPE,INTERCEPT,R_SQUARED,PROJ_5_YEAR,DATA_ZONE,SERVO_CNT
//      P613_THERMAL_DECAY_COL_WIDTH               //          11,        10,    5,        9,        9,         11,        9,        9
//      P613_THERMAL_DECAY_COL_MASK                //           0,         0,    0,        0,        0,          0,        0,        0
//      P613_THERMAL_DECAY_COL_TYPES               // *
//      P613_THERMAL_DECAY_TABLE_TYPE              // V
#define P613_WRITE_REF_TRK                  16226  // LBA,BLK_XFER,TICK_CNT
//      P613_WRITE_REF_TRK_COL_WIDTH               //  10,      10,      10
//      P613_WRITE_REF_TRK_COL_MASK                //   0,       0,       0
//      P613_WRITE_REF_TRK_COL_TYPES               // *
//      P613_WRITE_REF_TRK_TABLE_TYPE              // V
#define P613_WRITE_DECAY_TRK                16227  // LBA,BLK_XFER,TICK_CNT
//      P613_WRITE_DECAY_TRK_COL_WIDTH             //  10,      10,      10
//      P613_WRITE_DECAY_TRK_COL_MASK              //   0,       0,       0
//      P613_WRITE_DECAY_TRK_COL_TYPES             // *
//      P613_WRITE_DECAY_TRK_TABLE_TYPE            // V
#define P614_PORT_ALPA_SOFT_ADDR            16228  // WORD_0,WORD_1,WORD_2,WORD_3
//      P614_PORT_ALPA_SOFT_ADDR_COL_WIDTH         //      6,     6,     6,     6
//      P614_PORT_ALPA_SOFT_ADDR_COL_MASK          //      0,     0,     0,     0
//      P614_PORT_ALPA_SOFT_ADDR_COL_TYPES         // *
//      P614_PORT_ALPA_SOFT_ADDR_TABLE_TYPE        // V
#define P615_AGC_VALUE                      16229  // HEAD,AGC_VALUE
//      P615_AGC_VALUE_COL_WIDTH                   //    5,        8
//      P615_AGC_VALUE_COL_MASK                    //    0,        0
//      P615_AGC_VALUE_COL_TYPES                   // *
//      P615_AGC_VALUE_TABLE_TYPE                  // S
#define P615_DITHER_VALUE                   16230  // HEAD,COUNT,NULL_CURRENT,DITHER_CURRENT
//      P615_DITHER_VALUE_COL_WIDTH                //    5,    5,          12,            15
//      P615_DITHER_VALUE_COL_MASK                 //    0,    0,           0,             0
//      P615_DITHER_VALUE_COL_TYPES                // *
//      P615_DITHER_VALUE_TABLE_TYPE               // V
#define P615_LANDING_ZN_ASPERITY            16231  // HEAD,NUMBER_TAs,STATUS
//      P615_LANDING_ZN_ASPERITY_COL_WIDTH         //    5,        10,     6
//      P615_LANDING_ZN_ASPERITY_COL_MASK          //    0,         0,     0
//      P615_LANDING_ZN_ASPERITY_COL_TYPES         // *
//      P615_LANDING_ZN_ASPERITY_TABLE_TYPE        // V
#define P619_DAC_GAIN_SCREEN                16232  // THERMAL_ROOM,THERMAL_B2D
//      P619_DAC_GAIN_SCREEN_COL_WIDTH             //           12,         12
//      P619_DAC_GAIN_SCREEN_COL_MASK              //            0,          0
//      P619_DAC_GAIN_SCREEN_COL_TYPES             // *
//      P619_DAC_GAIN_SCREEN_TABLE_TYPE            // V
#define P619_THERMAL_MATRIX_TEMP            16233  // HEAD,NUMBER_TAs,STATUS
//      P619_THERMAL_MATRIX_TEMP_COL_WIDTH         //    5,        10,     6
//      P619_THERMAL_MATRIX_TEMP_COL_MASK          //    0,         0,     0
//      P619_THERMAL_MATRIX_TEMP_COL_TYPES         // *
//      P619_THERMAL_MATRIX_TEMP_TABLE_TYPE        // S
#define P619_THERMAL_GAIN                   16234  // HEAD,ROOMTMP_GN,HOTTMP_GN,GN_DELTA,STATUS
//      P619_THERMAL_GAIN_COL_WIDTH                //    5,        10,       10,      10,     7
//      P619_THERMAL_GAIN_COL_MASK                 //    0,         0,        0,       0,     0
//      P619_THERMAL_GAIN_COL_TYPES                // *
//      P619_THERMAL_GAIN_TABLE_TYPE               // V
#define P705_NO_TMD_SPEC                    16235  // TMD_LIMIT
//      P705_NO_TMD_SPEC_COL_WIDTH                 //        10
//      P705_NO_TMD_SPEC_COL_MASK                  //         0
//      P705_NO_TMD_SPEC_COL_TYPES                 // *
//      P705_NO_TMD_SPEC_TABLE_TYPE                // V
#define P705_NO_TMD_CNT                     16236  // HEAD,NO_TMDS,ERROR_TYPE
//      P705_NO_TMD_CNT_COL_WIDTH                  //    5,      8,        25
//      P705_NO_TMD_CNT_COL_MASK                   //    0,      0,         0
//      P705_NO_TMD_CNT_COL_TYPES                  // *
//      P705_NO_TMD_CNT_TABLE_TYPE                 // V
#define P504_SENSE_DATA                     16237  // *
//      P504_SENSE_DATA_COL_WIDTH                  // 2
//      P504_SENSE_DATA_COL_MASK                   // 0
//      P504_SENSE_DATA_COL_TYPES                  // *
//      P504_SENSE_DATA_TABLE_TYPE                 // S
#define P556_FLY_HEIGHT_SPEC                16238  // NUM_HD,OD_COEF,ID_COEF,OD_SPEC,ID_SPEC
//      P556_FLY_HEIGHT_SPEC_COL_WIDTH             //      6,      8,      8,      8,      8
//      P556_FLY_HEIGHT_SPEC_COL_MASK              //      0,      0,      0,      0,      0
//      P556_FLY_HEIGHT_SPEC_COL_TYPES             // *
//      P556_FLY_HEIGHT_SPEC_TABLE_TYPE            // V
#define P707_ADAPGAIN_COMP                  16239  // HD_PHYS_PSN,HD_LGC_PSN,PREV_ADAPT,CURR_ADAPT,DELTA,HD_STATUS
//      P707_ADAPGAIN_COMP_COL_WIDTH               //          11,        10,        10,        10,    8,        9
//      P707_ADAPGAIN_COMP_COL_MASK                //           0,         0,         0,         0,    0,        0
//      P707_ADAPGAIN_COMP_COL_TYPES               // *
//      P707_ADAPGAIN_COMP_TABLE_TYPE              // V
#define P707_VGA_DATA                       16240  // HD_PHYS_PSN,HD_LGC_PSN,OPT_GAIN,ADPTV_GAIN,DELTA,HD_STATUS
//      P707_VGA_DATA_COL_WIDTH                    //          11,        10,       8,        10,    8,        9
//      P707_VGA_DATA_COL_MASK                     //           1,         1,       1,         1,    1,        1
//      P707_VGA_DATA_COL_TYPES                    //           N,         N,       N,         N,    N,        N
//      P707_VGA_DATA_TABLE_TYPE                   // V
#define P707_GRADIENT_SPEC                  16241  // GRADIENT,UPR_BND,LOW_BND
//      P707_GRADIENT_SPEC_COL_WIDTH               //        8,      8,      8
//      P707_GRADIENT_SPEC_COL_MASK                //        0,      0,      0
//      P707_GRADIENT_SPEC_COL_TYPES               // *
//      P707_GRADIENT_SPEC_TABLE_TYPE              // V
#define P707_GAIN_SPEC                      16242  // HEAD,PREAMP_GAIN,OPT_GAIN,ADAPT_GAIN,T_A,+DELTA,-DELTA,STATUS
//      P707_GAIN_SPEC_COL_WIDTH                   //    5,         12,       8,        10,  6,     8,     8,    15
//      P707_GAIN_SPEC_COL_MASK                    //    0,          0,       0,         0,  0,     0,     0,     0
//      P707_GAIN_SPEC_COL_TYPES                   // *
//      P707_GAIN_SPEC_TABLE_TYPE                  // V
#define P707_COMBO_GAIN                     16243  // HEAD,OPT_GAIN,ADAPT_GAIN,+DELTA,-DELTA
//      P707_COMBO_GAIN_COL_WIDTH                  //    5,       8,        10,     8,     8
//      P707_COMBO_GAIN_COL_MASK                   //    0,       0,         0,     0,     0
//      P707_COMBO_GAIN_COL_TYPES                  // *
//      P707_COMBO_GAIN_TABLE_TYPE                 // V
#define P707_COMBO_SPEC                     16244  // +DELTA_MAX,REG13_MIN,-DELTA_MAX,REG13_MAX
//      P707_COMBO_SPEC_COL_WIDTH                  //          9,        9,         9,        9
//      P707_COMBO_SPEC_COL_MASK                   //          0,        0,         0,        0
//      P707_COMBO_SPEC_COL_TYPES                  // *
//      P707_COMBO_SPEC_TABLE_TYPE                 // V
#define P709_DISP_LBA_CHS                   16245  // LBA,CYLINDER,HEAD,SECTOR
//      P709_DISP_LBA_CHS_COL_WIDTH                //   8,       8,   5,     8
//      P709_DISP_LBA_CHS_COL_MASK                 //   0,       0,   0,     0
//      P709_DISP_LBA_CHS_COL_TYPES                // *
//      P709_DISP_LBA_CHS_TABLE_TYPE               // V
#define P709_DISP_CHS                       16246  // CYLINDER,HEAD,SECTOR
//      P709_DISP_CHS_COL_WIDTH                    //        8,   5,     8
//      P709_DISP_CHS_COL_MASK                     //        0,   0,     0
//      P709_DISP_CHS_COL_TYPES                    // *
//      P709_DISP_CHS_TABLE_TYPE                   // V
#define P707_VGA_GAIN_REPORT                16247  // HEAD,PREAMP_GAIN,OPT_GAIN,ADAPT_GAIN,T_A,DELTA,STATUS
//      P707_VGA_GAIN_REPORT_COL_WIDTH             //    5,         12,       8,        10,  6,    8,    15
//      P707_VGA_GAIN_REPORT_COL_MASK              //    0,          0,       0,         0,  0,    0,     0
//      P707_VGA_GAIN_REPORT_COL_TYPES             // *
//      P707_VGA_GAIN_REPORT_TABLE_TYPE            // V
#define P715_SVGA_DATA                      16248  // HEAD,ZONE,B2D_SVGA,STP_SVGA,+DELTA,-DELTA,G_SPEC
//      P715_SVGA_DATA_COL_WIDTH                   //    5,   5,       8,       8,     8,     8,     8
//      P715_SVGA_DATA_COL_MASK                    //    0,   0,       0,       0,     0,     0,     0
//      P715_SVGA_DATA_COL_TYPES                   // *
//      P715_SVGA_DATA_TABLE_TYPE                  // V
#define P715_SVGA_COMP                      16249  // HEAD,ZONE,CURR_SVGA,PREV_SVGA,+DELTA,-DELTA,G_SPEC
//      P715_SVGA_COMP_COL_WIDTH                   //    5,   5,        9,        9,     8,     8,     8
//      P715_SVGA_COMP_COL_MASK                    //    0,   0,        0,        0,     0,     0,     0
//      P715_SVGA_COMP_COL_TYPES                   // *
//      P715_SVGA_COMP_TABLE_TYPE                  // V
#define P715_SAVED_SVGA                     16250  // HEAD,ZONE,SVGA_GAIN
//      P715_SAVED_SVGA_COL_WIDTH                  //    5,   5,       10
//      P715_SAVED_SVGA_COL_MASK                   //    0,   0,        0
//      P715_SAVED_SVGA_COL_TYPES                  // *
//      P715_SAVED_SVGA_TABLE_TYPE                 // V
#define P715_SVGA_OTF                       16251  // HEAD,ZONE,SVGA_GAIN,+DELTA,-DELTA,GAIN_SPEC
//      P715_SVGA_OTF_COL_WIDTH                    //    5,   5,       10,    10,    10,       10
//      P715_SVGA_OTF_COL_MASK                     //    0,   0,        0,     0,     0,        0
//      P715_SVGA_OTF_COL_TYPES                    // *
//      P715_SVGA_OTF_TABLE_TYPE                   // V
#define P715_B2DSVGA_TST                    16252  // EXP_CHKSUM,CAL_CHKSUM
//      P715_B2DSVGA_TST_COL_WIDTH                 //         10,        10
//      P715_B2DSVGA_TST_COL_MASK                  //          0,         0
//      P715_B2DSVGA_TST_COL_TYPES                 // *
//      P715_B2DSVGA_TST_TABLE_TYPE                // V
#define P716_SMRT_TSTAMP                    16253  // TIME_STAMP,TSTMP_SPEC
//      P716_SMRT_TSTAMP_COL_WIDTH                 //         10,        10
//      P716_SMRT_TSTAMP_COL_MASK                  //          0,         0
//      P716_SMRT_TSTAMP_COL_TYPES                 // *
//      P716_SMRT_TSTAMP_TABLE_TYPE                // V
#define P716_SMRT_NO_TMD                    16254  // CURR_TMD,PREV_TMD,DELTA
//      P716_SMRT_NO_TMD_COL_WIDTH                 //       10,      10,   10
//      P716_SMRT_NO_TMD_COL_MASK                  //        0,       0,    0
//      P716_SMRT_NO_TMD_COL_TYPES                 // *
//      P716_SMRT_NO_TMD_TABLE_TYPE                // V
#define P716_SMRT_ODHF                      16255  // HEAD,CURRENT,PREVIOUS,DELTA
//      P716_SMRT_ODHF_COL_WIDTH                   //    5,     10,      10,   10
//      P716_SMRT_ODHF_COL_MASK                    //    0,      0,       0,    0
//      P716_SMRT_ODHF_COL_TYPES                   // *
//      P716_SMRT_ODHF_TABLE_TYPE                  // V
#define P716_SMRT_ODLF                      16256  // HEAD,CURRENT,PREVIOUS,DELTA
//      P716_SMRT_ODLF_COL_WIDTH                   //    5,     10,      10,   10
//      P716_SMRT_ODLF_COL_MASK                    //    0,      0,       0,    0
//      P716_SMRT_ODLF_COL_TYPES                   // *
//      P716_SMRT_ODLF_TABLE_TYPE                  // V
#define P716_SMRT_IDHF                      16257  // HEAD,CURRENT,PREVIOUS,DELTA
//      P716_SMRT_IDHF_COL_WIDTH                   //    5,     10,      10,   10
//      P716_SMRT_IDHF_COL_MASK                    //    0,      0,       0,    0
//      P716_SMRT_IDHF_COL_TYPES                   // *
//      P716_SMRT_IDHF_TABLE_TYPE                  // V
#define P716_SMRT_IDLF                      16258  // HEAD,CURRENT,PREVIOUS,DELTA
//      P716_SMRT_IDLF_COL_WIDTH                   //    5,     10,      10,   10
//      P716_SMRT_IDLF_COL_MASK                    //    0,      0,       0,    0
//      P716_SMRT_IDLF_COL_TYPES                   // *
//      P716_SMRT_IDLF_TABLE_TYPE                  // V
#define P716_SMRT_ODLFHF                    16259  // HEAD,CURRENT,PREVIOUS,DELTA
//      P716_SMRT_ODLFHF_COL_WIDTH                 //    5,     10,      10,   10
//      P716_SMRT_ODLFHF_COL_MASK                  //    0,      0,       0,    0
//      P716_SMRT_ODLFHF_COL_TYPES                 // *
//      P716_SMRT_ODLFHF_TABLE_TYPE                // V
#define P716_SMRT_IDLFHF                    16260  // HEAD,CURRENT,PREVIOUS,DELTA
//      P716_SMRT_IDLFHF_COL_WIDTH                 //    5,     10,      10,   10
//      P716_SMRT_IDLFHF_COL_MASK                  //    0,      0,       0,    0
//      P716_SMRT_IDLFHF_COL_TYPES                 // *
//      P716_SMRT_IDLFHF_TABLE_TYPE                // V
#define P716_SMRT_RDERR_V                   16261  // HEAD,CURRENT,PREVIOUS,DELTA
//      P716_SMRT_RDERR_V_COL_WIDTH                //    5,     10,      10,   10
//      P716_SMRT_RDERR_V_COL_MASK                 //    0,      0,       0,    0
//      P716_SMRT_RDERR_V_COL_TYPES                // *
//      P716_SMRT_RDERR_V_TABLE_TYPE               // V
#define P716_SMRT_RDERR_H                   16262  // HEAD,CURRENT,PREVIOUS,DELTA
//      P716_SMRT_RDERR_H_COL_WIDTH                //    5,     10,      10,   10
//      P716_SMRT_RDERR_H_COL_MASK                 //    0,      0,       0,    0
//      P716_SMRT_RDERR_H_COL_TYPES                // *
//      P716_SMRT_RDERR_H_TABLE_TYPE               // V
#define P716_SMRT_WRTFLT                    16263  // HEAD,CURRENT,PREVIOUS,DELTA
//      P716_SMRT_WRTFLT_COL_WIDTH                 //    5,     10,      10,   10
//      P716_SMRT_WRTFLT_COL_MASK                  //    0,      0,       0,    0
//      P716_SMRT_WRTFLT_COL_TYPES                 // *
//      P716_SMRT_WRTFLT_TABLE_TYPE                // V
#define P716_SMRT_SKERR                     16264  // HEAD,CURRENT,PREVIOUS,DELTA
//      P716_SMRT_SKERR_COL_WIDTH                  //    5,     10,      10,   10
//      P716_SMRT_SKERR_COL_MASK                   //    0,      0,       0,    0
//      P716_SMRT_SKERR_COL_TYPES                  // *
//      P716_SMRT_SKERR_TABLE_TYPE                 // V
#define P504_LAST_CMD_STATUS                16265  // *
//      P504_LAST_CMD_STATUS_COL_WIDTH             // 5
//      P504_LAST_CMD_STATUS_COL_MASK              // 0
//      P504_LAST_CMD_STATUS_COL_TYPES             // *
//      P504_LAST_CMD_STATUS_TABLE_TYPE            // S
#define P535_INITIATOR_RELEASE              16266  // DOWNLOAD_FILE_NAME,DATE_STAMP
//      P535_INITIATOR_RELEASE_COL_WIDTH           //                 35,        20
//      P535_INITIATOR_RELEASE_COL_MASK            //                  0,         0
//      P535_INITIATOR_RELEASE_COL_TYPES           // *
//      P535_INITIATOR_RELEASE_TABLE_TYPE          // S
#define P730_DSPL_GAIN_SPEC                 16267  // ADAPT_SPEC,-DELTA_SPEC,CQM_SPEC
//      P730_DSPL_GAIN_SPEC_COL_WIDTH              //         10,         10,       8
//      P730_DSPL_GAIN_SPEC_COL_MASK               //          0,          0,       0
//      P730_DSPL_GAIN_SPEC_COL_TYPES              // *
//      P730_DSPL_GAIN_SPEC_TABLE_TYPE             // V
#define P730_CQM_GAIN_COMPARE               16268  // HEAD,OPT_GAIN,ADAPT_GAIN,-DELTA,+DELTA,DFLT_BIAS,STATUS
//      P730_CQM_GAIN_COMPARE_COL_WIDTH            //    5,       8,        10,     8,     8,        8,    10
//      P730_CQM_GAIN_COMPARE_COL_MASK             //    0,       0,         0,     0,     0,        0,     0
//      P730_CQM_GAIN_COMPARE_COL_TYPES            // *
//      P730_CQM_GAIN_COMPARE_TABLE_TYPE           // V
#define P730_CQM_SPEC                       16269  // *
//      P730_CQM_SPEC_COL_WIDTH                    // 10
//      P730_CQM_SPEC_COL_MASK                     // 0
//      P730_CQM_SPEC_COL_TYPES                    // *
//      P730_CQM_SPEC_TABLE_TYPE                   // S
#define P730_CQM_DEFAULT_BIAS               16270  // HEAD,DFTL_BIAS,STATUS
//      P730_CQM_DEFAULT_BIAS_COL_WIDTH            //    5,        8,    10
//      P730_CQM_DEFAULT_BIAS_COL_MASK             //    0,        0,     0
//      P730_CQM_DEFAULT_BIAS_COL_TYPES            // *
//      P730_CQM_DEFAULT_BIAS_TABLE_TYPE           // V
#define P730_PMSE_SPEC                      16271  // *
//      P730_PMSE_SPEC_COL_WIDTH                   // 10
//      P730_PMSE_SPEC_COL_MASK                    // 0
//      P730_PMSE_SPEC_COL_TYPES                   // *
//      P730_PMSE_SPEC_TABLE_TYPE                  // S
#define P730_PMSE_VALUES                    16272  // HEAD,LOW_VAL,HIGH_VAL,STATUS
//      P730_PMSE_VALUES_COL_WIDTH                 //    5,      8,       8,    10
//      P730_PMSE_VALUES_COL_MASK                  //    0,      0,       0,     0
//      P730_PMSE_VALUES_COL_TYPES                 // *
//      P730_PMSE_VALUES_TABLE_TYPE                // V
#define P730_PMSE_CQM_SPEC                  16273  // PMSE_SPEC,CQM_SPEC
//      P730_PMSE_CQM_SPEC_COL_WIDTH               //         8,       8
//      P730_PMSE_CQM_SPEC_COL_MASK                //         0,       0
//      P730_PMSE_CQM_SPEC_COL_TYPES               // *
//      P730_PMSE_CQM_SPEC_TABLE_TYPE              // V
#define P730_PMSE_CQM_VALUES                16274  // HEAD,LOW_PMSE,CQM_DFT,STATUS
//      P730_PMSE_CQM_VALUES_COL_WIDTH             //    5,       8,      8,    10
//      P730_PMSE_CQM_VALUES_COL_MASK              //    0,       0,      0,     0
//      P730_PMSE_CQM_VALUES_COL_TYPES             // *
//      P730_PMSE_CQM_VALUES_TABLE_TYPE            // V
#define P544_INQ_PAGE_COMPARE               16275  // PAGE,STATUS
//      P544_INQ_PAGE_COMPARE_COL_WIDTH            //    5,    10
//      P544_INQ_PAGE_COMPARE_COL_MASK             //    0,     0
//      P544_INQ_PAGE_COMPARE_COL_TYPES            // *
//      P544_INQ_PAGE_COMPARE_TABLE_TYPE           // S
#define P544_EXPECTED_DATA                  16276  // *
//      P544_EXPECTED_DATA_COL_WIDTH               // 2
//      P544_EXPECTED_DATA_COL_MASK                // 0
//      P544_EXPECTED_DATA_COL_TYPES               // *
//      P544_EXPECTED_DATA_TABLE_TYPE              // S
#define P544_RECEIVED_DATA                  16277  // *
//      P544_RECEIVED_DATA_COL_WIDTH               // 2
//      P544_RECEIVED_DATA_COL_MASK                // 0
//      P544_RECEIVED_DATA_COL_TYPES               // *
//      P544_RECEIVED_DATA_TABLE_TYPE              // S
#define P544_MODE_SENSE_RESPONSE            16278  // *
//      P544_MODE_SENSE_RESPONSE_COL_WIDTH         // 25
//      P544_MODE_SENSE_RESPONSE_COL_MASK          // 0
//      P544_MODE_SENSE_RESPONSE_COL_TYPES         // *
//      P544_MODE_SENSE_RESPONSE_TABLE_TYPE        // S
#define P544_MODE_SENSE_ERROR               16279  // PAGE_LENGTH
//      P544_MODE_SENSE_ERROR_COL_WIDTH            //          12
//      P544_MODE_SENSE_ERROR_COL_MASK             //           0
//      P544_MODE_SENSE_ERROR_COL_TYPES            // *
//      P544_MODE_SENSE_ERROR_TABLE_TYPE           // S
#define P544_SENSE_DATA                     16280  // S_DAT_2,S_DAT_12
//      P544_SENSE_DATA_COL_WIDTH                  //       8,       8
//      P544_SENSE_DATA_COL_MASK                   //       0,       0
//      P544_SENSE_DATA_COL_TYPES                  // *
//      P544_SENSE_DATA_TABLE_TYPE                 // S
#define P544_FRU_CODE                       16281  // FRU_CODE,ERROR_CODE
//      P544_FRU_CODE_COL_WIDTH                    //       10,        10
//      P544_FRU_CODE_COL_MASK                     //        0,         0
//      P544_FRU_CODE_COL_TYPES                    // *
//      P544_FRU_CODE_TABLE_TYPE                   // S
#define P542_IO_PARAMS_WWN                  16282  // USER_SUPPLIED_WWN
//      P542_IO_PARAMS_WWN_COL_WIDTH               //                19
//      P542_IO_PARAMS_WWN_COL_MASK                //                 0
//      P542_IO_PARAMS_WWN_COL_TYPES               // *
//      P542_IO_PARAMS_WWN_TABLE_TYPE              // S
#define P542_IO_FLASH_WWN                   16283  // WWN_READ_FROM_FLASH
//      P542_IO_FLASH_WWN_COL_WIDTH                //                  19
//      P542_IO_FLASH_WWN_COL_MASK                 //                   0
//      P542_IO_FLASH_WWN_COL_TYPES                // *
//      P542_IO_FLASH_WWN_TABLE_TYPE               // S
#define P542_IO_ETF_WWN                     16284  // WWN_READ_FROM_ETF
//      P542_IO_ETF_WWN_COL_WIDTH                  //                19
//      P542_IO_ETF_WWN_COL_MASK                   //                 0
//      P542_IO_ETF_WWN_COL_TYPES                  // *
//      P542_IO_ETF_WWN_TABLE_TYPE                 // S
#define P577_AUTHENTICATE                   16285  // AUTHENTICATE_VALUE
//      P577_AUTHENTICATE_COL_WIDTH                //                 16
//      P577_AUTHENTICATE_COL_MASK                 //                  0
//      P577_AUTHENTICATE_COL_TYPES                // *
//      P577_AUTHENTICATE_TABLE_TYPE               // S
#define P577_SET_TABLE                      16286  // SET_TABLE_UID
//      P577_SET_TABLE_COL_WIDTH                   //            16
//      P577_SET_TABLE_COL_MASK                    //             0
//      P577_SET_TABLE_COL_TYPES                   // *
//      P577_SET_TABLE_TABLE_TYPE                  // S
#define P577_GET_TABLE                      16287  // GET_TABLE_UID
//      P577_GET_TABLE_COL_WIDTH                   //            16
//      P577_GET_TABLE_COL_MASK                    //             0
//      P577_GET_TABLE_COL_TYPES                   // *
//      P577_GET_TABLE_TABLE_TYPE                  // S
#define P599_SENSE_DATA                     16288  // *
//      P599_SENSE_DATA_COL_WIDTH                  // 2
//      P599_SENSE_DATA_COL_MASK                   // 0
//      P599_SENSE_DATA_COL_TYPES                  // *
//      P599_SENSE_DATA_TABLE_TYPE                 // S
#define P599_READ_BUFFER_DATA               16289  // *
//      P599_READ_BUFFER_DATA_COL_WIDTH            // 2
//      P599_READ_BUFFER_DATA_COL_MASK             // 0
//      P599_READ_BUFFER_DATA_COL_TYPES            // *
//      P599_READ_BUFFER_DATA_TABLE_TYPE           // S
#define P610_NODE_MAP_TEST                  16290  // EXPECT_MAP_SIZE,ACTUAL_MAP_SIZE
//      P610_NODE_MAP_TEST_COL_WIDTH               //              15,             15
//      P610_NODE_MAP_TEST_COL_MASK                //               0,              0
//      P610_NODE_MAP_TEST_COL_TYPES               // *
//      P610_NODE_MAP_TEST_TABLE_TYPE              // S
#define P610_NODE_POSITION_MAP              16291  // *
//      P610_NODE_POSITION_MAP_COL_WIDTH           // 2
//      P610_NODE_POSITION_MAP_COL_MASK            // 0
//      P610_NODE_POSITION_MAP_COL_TYPES           // *
//      P610_NODE_POSITION_MAP_TABLE_TYPE          // S
#define P610_LARGE_LOOP_STD_INQ             16292  // NODE,VENDOR_ID,PRODUCT_ID,SCSI_REV,SERIAL_NUM
//      P610_LARGE_LOOP_STD_INQ_COL_WIDTH          //    5,       10,        18,      10,        10
//      P610_LARGE_LOOP_STD_INQ_COL_MASK           //    0,        0,         0,       0,         0
//      P610_LARGE_LOOP_STD_INQ_COL_TYPES          // *
//      P610_LARGE_LOOP_STD_INQ_TABLE_TYPE         // S
#define P602_UDS_STATUS_RETURNED            16293  // *
//      P602_UDS_STATUS_RETURNED_COL_WIDTH         // 2
//      P602_UDS_STATUS_RETURNED_COL_MASK          // 0
//      P602_UDS_STATUS_RETURNED_COL_TYPES         // *
//      P602_UDS_STATUS_RETURNED_TABLE_TYPE        // S
#define P549_SK_TIME_DELTA                  16294  // CUR_MIN_SK_TIME,PRV_MIN_SK_TIME,DELTA,CUR_AVE_SK_TIME,PRV_AVE_SK_TIME,DELTA,CUR_MAX_SK_TIME,PRV_MAX_SK_TIME,DELTA
//      P549_SK_TIME_DELTA_COL_WIDTH               //              15,             15,    5,             15,             15,    5,             15,             15,    5
//      P549_SK_TIME_DELTA_COL_MASK                //               0,              0,    0,              0,              0,    0,              0,              0,    0
//      P549_SK_TIME_DELTA_COL_TYPES               // *
//      P549_SK_TIME_DELTA_TABLE_TYPE              // S
#define P530_DFCT_CNT_DRV                   16295  // TOT_DFCT_CNT
//      P530_DFCT_CNT_DRV_COL_WIDTH                //           12
//      P530_DFCT_CNT_DRV_COL_MASK                 //            1
//      P530_DFCT_CNT_DRV_COL_TYPES                //            N
//      P530_DFCT_CNT_DRV_TABLE_TYPE               // S
#define P530_DFCT_CNT_HD                    16296  // HD_PHYS_PSN,HD_LGC_PSN,TOT_DFCT_CNT
//      P530_DFCT_CNT_HD_COL_WIDTH                 //          11,        10,          12
//      P530_DFCT_CNT_HD_COL_MASK                  //           1,         1,           1
//      P530_DFCT_CNT_HD_COL_TYPES                 //           N,         N,           N
//      P530_DFCT_CNT_HD_TABLE_TYPE                // V
#define P549_IO_SEEK                        16297  // SRVO_OFTRK,MIN_SEEK,AVG_SEEK,MAX_SEEK,MIN_HD_SWITCH,AVG_HD_SWITCH,MAX_HD_SWITCH,SEEK_MODE
//      P549_IO_SEEK_COL_WIDTH                     //         10,       8,       8,       8,           13,           13,           13,        9
//      P549_IO_SEEK_COL_MASK                      //          0,       0,       0,       0,            0,            0,            0,        0
//      P549_IO_SEEK_COL_TYPES                     // *
//      P549_IO_SEEK_TABLE_TYPE                    // S
#define P564_SMRT_HD_ERR                    16298  // HD_PHYS_PSN,HD_LGC_PSN,SEEK_CNT,SEEK_ERR,TA_ERP,TA_WUS,SRVO_UNSF,READ_ERRORS,G_LIST_ENTRIES,S_LIST_ENTRIES,ACFF_SINE_1X,ACFF_COSINE_1X,ACFF_SINE_2X,ACFF_COSINE_2X,SWD_DVGA,SWD_RVGA,SWD_FVGA,ON_CYL_LIMIT_1_CNT,ON_CYL_LIMIT_2_CNT,ON_CYL_LIMIT_3_CNT,BD_SAMPLE_CNT,NO_TMD_CNT,VISIBLE_READ_ERRORS,INITIAL_READ_ERRORS
//      P564_SMRT_HD_ERR_COL_WIDTH                 //          11,        10,       8,       8,     8,     8,        9,         11,            14,            14,          12,            14,          12,            14,       8,       8,       8,                18,                18,                18,           13,        10,                 19,                 19
//      P564_SMRT_HD_ERR_COL_MASK                  //           1,         1,       1,       1,     1,     1,        1,          1,             1,             1,           1,             1,           1,             1,       1,       1,       1,                 1,                 1,                 1,            1,         1,                  1,                  1
//      P564_SMRT_HD_ERR_COL_TYPES                 //           N,         N,       N,       N,     N,     N,        N,          N,             N,             N,           N,             N,           N,             N,       N,       N,       N,                 N,                 N,                 N,            N,         N,                  N,                  N
//      P564_SMRT_HD_ERR_TABLE_TYPE                // V
#define P564_SMRT_HD_FH                     16299  // HD_PHYS_PSN,HD_LGC_PSN,HF_OD,LF_OD,HF_ID,LF_ID
//      P564_SMRT_HD_FH_COL_WIDTH                  //          11,        10,    8,    8,    8,    8
//      P564_SMRT_HD_FH_COL_MASK                   //           1,         1,    1,    1,    1,    1
//      P564_SMRT_HD_FH_COL_TYPES                  //           N,         N,    N,    N,    N,    N
//      P564_SMRT_HD_FH_TABLE_TYPE                 // V
#define P621_FAILING_DATA                   16300  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,ERROR_CODE,FAILING_SPEC,FAILING_VALUE
//      P621_FAILING_DATA_COL_WIDTH                //          11,      8,        10,        10,          12,           13
//      P621_FAILING_DATA_COL_MASK                 //           1,      1,         1,         1,           1,            1
//      P621_FAILING_DATA_COL_TYPES                //           N,      N,         N,         N,           N,            N
//      P621_FAILING_DATA_TABLE_TYPE               // M

#define P000_DATA_DIFFERENCE                16301  // *
//      P000_DATA_DIFFERENCE_COL_WIDTH             // 2
//      P000_DATA_DIFFERENCE_COL_MASK              // 0
//      P000_DATA_DIFFERENCE_COL_TYPES             // *
//      P000_DATA_DIFFERENCE_TABLE_TYPE            // S

#define P575_DEVICE_DISC_DATA               16302  // DATA_LENGTH,REVISION,VENDOR_VER,LIFE_CYCLE_STATE,SUPPORTS,ENABLES
//      P575_DEVICE_DISC_DATA_COL_WIDTH            //          11,       8,        10,              16,      12,     13
//      P575_DEVICE_DISC_DATA_COL_MASK             //           0,       0,         0,               0,       0,      0
//      P575_DEVICE_DISC_DATA_COL_TYPES            // *
//      P575_DEVICE_DISC_DATA_TABLE_TYPE           // S
#define P57X_FRAME_DATA                     16303  // LINE_NUM,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P57X_FRAME_DATA_COL_WIDTH                  //        8,3,2,2,2,2,2,2,2,2,2, 2, 2, 2, 2, 2, 2
//      P57X_FRAME_DATA_COL_MASK                   //        0,0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P57X_FRAME_DATA_COL_TYPES                  // *
//      P57X_FRAME_DATA_TABLE_TYPE                 // S
#define P57X_HEADER_DATA                    16304  // COMPACKET_LEN,PACKET_LEN,SUBPACKET_LEN,TPER_SN,HOST_SN
//      P57X_HEADER_DATA_COL_WIDTH                 //            13,        10,           13,      7,      7
//      P57X_HEADER_DATA_COL_MASK                  //             0,         0,            0,      0,      0
//      P57X_HEADER_DATA_COL_TYPES                 // *
//      P57X_HEADER_DATA_TABLE_TYPE                // S
#define P575_TOKEN_DATA                     16305  // *
//      P575_TOKEN_DATA_COL_WIDTH                  // 40
//      P575_TOKEN_DATA_COL_MASK                   // 0
//      P575_TOKEN_DATA_COL_TYPES                  // *
//      P575_TOKEN_DATA_TABLE_TYPE                 // S
#define P622_CONTACT_DETECT                 16306  // HD_PHYS_PSN,MSRMNT_CNT,ITERATION,ZN_PARTITION,DATA_ZONE,TRK_NUM,HD_LGC_PSN,HTR_DAC_START,HTR_DAC_CONTACT,NUM_PARAMS,NUM_SEARCH,HTR_DAC_VALUE,PES_VALUE,PES_THR,FILTER_TYPE,HTR_DAC_RAP
//      P622_CONTACT_DETECT_COL_WIDTH              //          11,        10,        9,          12,        9,     12,        10,           13,             15,        10,        10,           13,       13,     13,         11,         11
//      P622_CONTACT_DETECT_COL_MASK               //           0,         0,        0,           0,        0,      0,         0,            0,              0,         0,         0,            0,        0,      0,          0,          0
//      P622_CONTACT_DETECT_COL_TYPES              // *
//      P622_CONTACT_DETECT_TABLE_TYPE             // M
#define P622_IO_FAST_DPES                   16307  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,MSRMNT_CNT,ITERATION,TRK_NUM,ZN_PARTITION,HTR_DAC_START,HTR_DAC_CONTACT,NUM_PARAMS,NUM_SEARCH,HTR_DAC_VALUE,PES_VALUE,PES_THR,FILTER_TYPE,HTR_DAC_RAP
//      P622_IO_FAST_DPES_COL_WIDTH                //          11,        9,        10,        10,        9,     12,          12,           13,             15,        10,        10,           13,       10,      9,         11,         11
//      P622_IO_FAST_DPES_COL_MASK                 //           1,        1,         1,         1,        1,      1,           1,            1,              1,         1,         1,            1,        1,      1,          1,          1
//      P622_IO_FAST_DPES_COL_TYPES                //           N,        N,         N,         N,        N,      N,           N,            N,              N,         N,         N,            N,        N,      N,          N,          N
//      P622_IO_FAST_DPES_TABLE_TYPE               // M
#define P550_ERROR_COUNT                    16308  // BUFFER_MISCOMPARE,OTHER_ERROR,TOTAL_ERROR
//      P550_ERROR_COUNT_COL_WIDTH                 //                17,         11,         11
//      P550_ERROR_COUNT_COL_MASK                  //                 0,          0,          0
//      P550_ERROR_COUNT_COL_TYPES                 // *
//      P550_ERROR_COUNT_TABLE_TYPE                // S
#define P504_LAST_RESPONSE_DATA             16309  // *
//      P504_LAST_RESPONSE_DATA_COL_WIDTH          // 2
//      P504_LAST_RESPONSE_DATA_COL_MASK           // 0
//      P504_LAST_RESPONSE_DATA_COL_TYPES          // *
//      P504_LAST_RESPONSE_DATA_TABLE_TYPE         // S
#define P000_FLASHED_LED_REPORT             16310  // IO_FLASH_LED_ADDR,IO_FLASH_LED_CODE
//      P000_FLASHED_LED_REPORT_COL_WIDTH          //                20,               20
//      P000_FLASHED_LED_REPORT_COL_MASK           //                 0,                0
//      P000_FLASHED_LED_REPORT_COL_TYPES          // *
//      P000_FLASHED_LED_REPORT_TABLE_TYPE         // S
#define P569_PLIST_EMPTY                    16311  // *
//      P569_PLIST_EMPTY_COL_WIDTH                 // 3
//      P569_PLIST_EMPTY_COL_MASK                  // 0
//      P569_PLIST_EMPTY_COL_TYPES                 // *
//      P569_PLIST_EMPTY_TABLE_TYPE                // S
#define P569_SYS_RZDT                       16312  // *
//      P569_SYS_RZDT_COL_WIDTH                    // 2
//      P569_SYS_RZDT_COL_MASK                     // 0
//      P569_SYS_RZDT_COL_TYPES                    // *
//      P569_SYS_RZDT_TABLE_TYPE                   // S
#define P569_SYS_DRV_INFO                   16313  // *
//      P569_SYS_DRV_INFO_COL_WIDTH                // 2
//      P569_SYS_DRV_INFO_COL_MASK                 // 0
//      P569_SYS_DRV_INFO_COL_TYPES                // *
//      P569_SYS_DRV_INFO_TABLE_TYPE               // S
#define P569_SYS_PERF_PARM                  16314  // *
//      P569_SYS_PERF_PARM_COL_WIDTH               // 2
//      P569_SYS_PERF_PARM_COL_MASK                // 0
//      P569_SYS_PERF_PARM_COL_TYPES               // *
//      P569_SYS_PERF_PARM_TABLE_TYPE              // S
#define P569_SYS_CAP                        16315  // *
//      P569_SYS_CAP_COL_WIDTH                     // 2
//      P569_SYS_CAP_COL_MASK                      // 0
//      P569_SYS_CAP_COL_TYPES                     // *
//      P569_SYS_CAP_TABLE_TYPE                    // S
#define P569_SYS_RAP                        16316  // *
//      P569_SYS_RAP_COL_WIDTH                     // 2
//      P569_SYS_RAP_COL_MASK                      // 0
//      P569_SYS_RAP_COL_TYPES                     // *
//      P569_SYS_RAP_TABLE_TYPE                    // S
#define P569_SYS_SLIST_BINARY               16317  // *
//      P569_SYS_SLIST_BINARY_COL_WIDTH            // 2
//      P569_SYS_SLIST_BINARY_COL_MASK             // 0
//      P569_SYS_SLIST_BINARY_COL_TYPES            // *
//      P569_SYS_SLIST_BINARY_TABLE_TYPE           // S
#define P569_SYS_TA_LIST_BINARY             16318  // *
//      P569_SYS_TA_LIST_BINARY_COL_WIDTH          // 2
//      P569_SYS_TA_LIST_BINARY_COL_MASK           // 0
//      P569_SYS_TA_LIST_BINARY_COL_TYPES          // *
//      P569_SYS_TA_LIST_BINARY_TABLE_TYPE         // S
#define P569_SYS_PLIST_BINARY               16319  // *
//      P569_SYS_PLIST_BINARY_COL_WIDTH            // 2
//      P569_SYS_PLIST_BINARY_COL_MASK             // 0
//      P569_SYS_PLIST_BINARY_COL_TYPES            // *
//      P569_SYS_PLIST_BINARY_TABLE_TYPE           // S
#define P569_DRV_INFO_FILE                  16320  // *
//      P569_DRV_INFO_FILE_COL_WIDTH               // 2
//      P569_DRV_INFO_FILE_COL_MASK                // 0
//      P569_DRV_INFO_FILE_COL_TYPES               // *
//      P569_DRV_INFO_FILE_TABLE_TYPE              // S
#define P569_SYS_PRIMARY_DFCT               16321  // *
//      P569_SYS_PRIMARY_DFCT_COL_WIDTH            // 2
//      P569_SYS_PRIMARY_DFCT_COL_MASK             // 0
//      P569_SYS_PRIMARY_DFCT_COL_TYPES            // *
//      P569_SYS_PRIMARY_DFCT_TABLE_TYPE           // S
#define P569_SYS_SAP                        16322  // *
//      P569_SYS_SAP_COL_WIDTH                     // 2
//      P569_SYS_SAP_COL_MASK                      // 0
//      P569_SYS_SAP_COL_TYPES                     // *
//      P569_SYS_SAP_TABLE_TYPE                    // S
#define P569_SYS_MANUFACT_INFO              16323  // *
//      P569_SYS_MANUFACT_INFO_COL_WIDTH           // 2
//      P569_SYS_MANUFACT_INFO_COL_MASK            // 0
//      P569_SYS_MANUFACT_INFO_COL_TYPES           // *
//      P569_SYS_MANUFACT_INFO_TABLE_TYPE          // S
#define P569_SYS_SLIST_DETAILED             16324  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,WEDGE
//      P569_SYS_SLIST_DETAILED_COL_WIDTH          //          11,        10,      7,    7
//      P569_SYS_SLIST_DETAILED_COL_MASK           //           0,         0,      0,    0
//      P569_SYS_SLIST_DETAILED_COL_TYPES          // *
//      P569_SYS_SLIST_DETAILED_TABLE_TYPE         // S
#define P569_PLIST_DETAILED                 16325  // FLAW_NUM,HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,POSITION,LENGTH,FLAW_TYPE
//      P569_PLIST_DETAILED_COL_WIDTH              //        8,         11,        10,      7,       8,     6,        9
//      P569_PLIST_DETAILED_COL_MASK               //        0,          0,         0,      0,       0,     0,        0
//      P569_PLIST_DETAILED_COL_TYPES              // *
//      P569_PLIST_DETAILED_TABLE_TYPE             // S
#define P569_SYS_SAP_DETAILED               16326  // ADDRESS,0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F
//      P569_SYS_SAP_DETAILED_COL_WIDTH            //       7,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4
//      P569_SYS_SAP_DETAILED_COL_MASK             //       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
//      P569_SYS_SAP_DETAILED_COL_TYPES            // *
//      P569_SYS_SAP_DETAILED_TABLE_TYPE           // S
#define P569_PRIMARY_DFCT_SUMMARY           16327  // TOTAL_DFCTS_DRIVE,WORST_HEAD,TOTAL_DFCTS_WORST_HEAD
//      P569_PRIMARY_DFCT_SUMMARY_COL_WIDTH        //                17,        10,                    22
//      P569_PRIMARY_DFCT_SUMMARY_COL_MASK         //                 0,         0,                     0
//      P569_PRIMARY_DFCT_SUMMARY_COL_TYPES        // *
//      P569_PRIMARY_DFCT_SUMMARY_TABLE_TYPE       // S
#define P569_SYS_TA_LIST_DETAILED           16328  // HD_PHYS_PSN,CYLINDER
//      P569_SYS_TA_LIST_DETAILED_COL_WIDTH        //          11,       8
//      P569_SYS_TA_LIST_DETAILED_COL_MASK         //           0,       0
//      P569_SYS_TA_LIST_DETAILED_COL_TYPES        // *
//      P569_SYS_TA_LIST_DETAILED_TABLE_TYPE       // S
#define P569_SYS_DRV_TOC                    16329  // *
//      P569_SYS_DRV_TOC_COL_WIDTH                 // 2
//      P569_SYS_DRV_TOC_COL_MASK                  // 0
//      P569_SYS_DRV_TOC_COL_TYPES                 // *
//      P569_SYS_DRV_TOC_TABLE_TYPE                // S
#define P569_DRV_CONFIG_TBL                 16330  // *
//      P569_DRV_CONFIG_TBL_COL_WIDTH              // 2
//      P569_DRV_CONFIG_TBL_COL_MASK               // 0
//      P569_DRV_CONFIG_TBL_COL_TYPES              // *
//      P569_DRV_CONFIG_TBL_TABLE_TYPE             // S
#define P569_TCC_TBL_BINARY                 16331  // *
//      P569_TCC_TBL_BINARY_COL_WIDTH              // 2
//      P569_TCC_TBL_BINARY_COL_MASK               // 0
//      P569_TCC_TBL_BINARY_COL_TYPES              // *
//      P569_TCC_TBL_BINARY_TABLE_TYPE             // S
#define P000_TEST_MESSAGE_REPORT            16332  // WARNING_MESSAGE_REPORT,HEAD
//      P000_TEST_MESSAGE_REPORT_COL_WIDTH         //                     25,  10
//      P000_TEST_MESSAGE_REPORT_COL_MASK          //                      0,   0
//      P000_TEST_MESSAGE_REPORT_COL_TYPES         // *
//      P000_TEST_MESSAGE_REPORT_TABLE_TYPE        // S
#define P552_DISP_LBA_HD_ZONE               16333  // MAX_LBA,MAX_PBA,MAX_HD,MAX_PBA_ZONE,MAX_LBA_ZONE
//      P552_DISP_LBA_HD_ZONE_COL_WIDTH            //      12,     12,    11,          12,          12
//      P552_DISP_LBA_HD_ZONE_COL_MASK             //       0,      0,     0,           0,           0
//      P552_DISP_LBA_HD_ZONE_COL_TYPES            // *
//      P552_DISP_LBA_HD_ZONE_TABLE_TYPE           // S
#define P695_VGA_CSM                        16334  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,ITRTN,VGA,CSM,ERROR_CODE
//      P695_VGA_CSM_COL_WIDTH                     //          11,      7,        10,    4,  3, 10,        10
//      P695_VGA_CSM_COL_MASK                      //           1,      1,         1,    1,  1,  1,         1
//      P695_VGA_CSM_COL_TYPES                     //           N,      N,         N,    N,  N,  N,         N
//      P695_VGA_CSM_TABLE_TYPE                    // M
#define P695_BIAS_CSM                       16335  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,ITRTN,RD_BIAS_DAC,CSM,ERROR_CODE
//      P695_BIAS_CSM_COL_WIDTH                    //          11,      7,        10,    4,         11, 10,        10
//      P695_BIAS_CSM_COL_MASK                     //           1,      1,         1,    1,          1,  1,         1
//      P695_BIAS_CSM_COL_TYPES                    //           N,      N,         N,    N,          N,  N,         N
//      P695_BIAS_CSM_TABLE_TYPE                   // M
#define P695_STRESS_CSM                     16336  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,ITRTN,RD_BIAS_DAC,CSM_POS_DC_ERASE,CSM_NEG_DC_ERASE,CSM_DELTA,CSM_DELTA_ERR_CODE,HD_STATUS
//      P695_STRESS_CSM_COL_WIDTH                  //          11,      8,        10,    4,         11,              16,              16,       10,                18,        9
//      P695_STRESS_CSM_COL_MASK                   //           1,      1,         1,    1,          1,               1,               1,        1,                 1,        1
//      P695_STRESS_CSM_COL_TYPES                  //           N,      N,         N,    N,          N,               N,               N,        N,                 N,        N
//      P695_STRESS_CSM_TABLE_TYPE                 // M

// deprecated 7/2/2008
#define P509_ERROR_RATE_DELTA               16337  // HD_PHYS_PSN,HD_LGC_PSN,BER10_PREVIOUS,BER10_CURRENT,BER10_DELTA,STATUS
//      P509_ERROR_RATE_DELTA_COL_WIDTH            //          11,        10,            14,           13,         11,     6
//      P509_ERROR_RATE_DELTA_COL_MASK             //           0,         0,             0,            0,          0,     0
//      P509_ERROR_RATE_DELTA_COL_TYPES            // *
//      P509_ERROR_RATE_DELTA_TABLE_TYPE           // V
#define P735_HD_RESISTANCE                  16338  // HD_PHYS_PSN,HD_LGC_PSN,MR_BIAS_CURRENT,MR_BIAS_VOLTAGE,MRE_RESISTANCE,PASS_FAIL_FLAG
//      P735_HD_RESISTANCE_COL_WIDTH               //          11,        10,             15,             15,            14,            14
//      P735_HD_RESISTANCE_COL_MASK                //           0,         0,              0,              0,             0,             0
//      P735_HD_RESISTANCE_COL_TYPES               // *
//      P735_HD_RESISTANCE_TABLE_TYPE              // V
#define P735_HD_RESISTANCE_DELTA            16339  // HD_PHYS_PSN,HD_LGC_PSN,MR_BIAS_CURRENT,MR_BIAS_VOLTAGE,ORIGINAL_MRE_RESISTANCE,FINAL_MRE_RESISTANCE,PASS_FAIL_FLAG,HD_RES_DELTA,PCT_HD_RES_DELTA
//      P735_HD_RESISTANCE_DELTA_COL_WIDTH         //          11,        10,             15,             15,                     23,                  20,            14,          12,              16
//      P735_HD_RESISTANCE_DELTA_COL_MASK          //           1,         1,              1,              1,                      1,                   1,             1,           1,               1
//      P735_HD_RESISTANCE_DELTA_COL_TYPES         //           N,         N,              N,              N,                      N,                   N,             V,           N,               N
//      P735_HD_RESISTANCE_DELTA_TABLE_TYPE        // V
#define P622_PES_DEBUG_DATA                 16340  // LINE,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,BA,BB,BC,BD,BE,BF
//      P622_PES_DEBUG_DATA_COL_WIDTH              //    4, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
//      P622_PES_DEBUG_DATA_COL_MASK               //    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//      P622_PES_DEBUG_DATA_COL_TYPES              // *
//      P622_PES_DEBUG_DATA_TABLE_TYPE             // V
#define P622_DEBUG_DATA                     16341  // *
//      P622_DEBUG_DATA_COL_WIDTH                  // 0
//      P622_DEBUG_DATA_COL_MASK                   // 0
//      P622_DEBUG_DATA_COL_TYPES                  // *
//      P622_DEBUG_DATA_TABLE_TYPE                 // S
#define P000_HD_CYL_ERR_INFO                16342  // TRK_INDEX,HEAD,CYLINDER,ERROR_CODE
//      P000_HD_CYL_ERR_INFO_COL_WIDTH             //        11,   8,      12,        10
//      P000_HD_CYL_ERR_INFO_COL_MASK              //         0,   0,       0,         0
//      P000_HD_CYL_ERR_INFO_COL_TYPES             // *
//      P000_HD_CYL_ERR_INFO_TABLE_TYPE            // S
#define P000_DEBUG_INFO                     16343  // INFO_0,INFO_1,INFO_2,INFO_3,INFO_4,INFO_5,INFO_6,INFO_7,INFO_8,INFO_9,INFO_10,INFO_11,INFO_12,INFO_13,INFO_14,INFO_15
//      P000_DEBUG_INFO_COL_WIDTH                  //     10,    10,    10,    10,    10,    10,    10,    10,    10,    10,     10,     10,     10,     10,     10,     10
//      P000_DEBUG_INFO_COL_MASK                   //      0,     0,     0,     0,     0,     0,     0,     0,     0,     0,      0,      0,      0,      0,      0,      0
//      P000_DEBUG_INFO_COL_TYPES                  // *
//      P000_DEBUG_INFO_TABLE_TYPE                 // S
#define P575_BUFF_DATA                      16344  // LINE,XLEN,B0,B1,B2,B3,B4,B5,B6,B7
//      P575_BUFF_DATA_COL_WIDTH                   //    4,   4, 2, 2, 2, 2, 2, 2, 2, 2
//      P575_BUFF_DATA_COL_MASK                    //    0,   0, 0, 0, 0, 0, 0, 0, 0, 0
//      P575_BUFF_DATA_COL_TYPES                   // *
//      P575_BUFF_DATA_TABLE_TYPE                  // V
#define P000_RW_ERROR_16                    16345  // KEY,CODE,QUAL,FRU,RTYS,BLOCK,CYL,HD,SEC,CMD_BYTE_0,CB_1,CB_2,CB_3,CB_4,CB_5,CB_6,CB_7,CB_8,CB_9,CB10,CB11,CB12,CB13,CB14,CB15
//      P000_RW_ERROR_16_COL_WIDTH                 //   3,   4,   4,  3,   4,    9,  8, 2,  5,        10,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4
//      P000_RW_ERROR_16_COL_MASK                  //   0,   0,   0,  0,   0,    0,  0, 0,  0,         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
//      P000_RW_ERROR_16_COL_TYPES                 // *
//      P000_RW_ERROR_16_TABLE_TYPE                // S
#define P621_BITS_RD_ATI_STE                16346  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,INITIAL_WRITE_CYLCE,ATI_WRITE_CYCLE,STE_WRITE_CYCLE
//      P621_BITS_RD_ATI_STE_COL_WIDTH             //          11,        10,       8,                 19,             15,             15
//      P621_BITS_RD_ATI_STE_COL_MASK              //           0,         0,       0,                  0,              0,              0
//      P621_BITS_RD_ATI_STE_COL_TYPES             // *
//      P621_BITS_RD_ATI_STE_TABLE_TYPE            // M
#define P621_ERROR_PER_HD_ATI_STE           16347  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,INITIAL_WRITE_CYLCE,ATI_WRITE_CYCLE,STE_WRITE_CYCLE
//      P621_ERROR_PER_HD_ATI_STE_COL_WIDTH        //          11,        10,       8,                 19,             15,             15
//      P621_ERROR_PER_HD_ATI_STE_COL_MASK         //           0,         0,       0,                  0,              0,              0
//      P621_ERROR_PER_HD_ATI_STE_COL_TYPES        // *
//      P621_ERROR_PER_HD_ATI_STE_TABLE_TYPE       // M
#define P621_BER_OLD                        16348  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,WRITE_CYLCE_BASE,WRITE_CYCLE_MAX
//      P621_BER_OLD_COL_WIDTH                     //          11,        10,       8,              16,             15
//      P621_BER_OLD_COL_MASK                      //           0,         0,       0,               0,              0
//      P621_BER_OLD_COL_TYPES                     // *
//      P621_BER_OLD_TABLE_TYPE                    // M
#define P621_BER_SWEEP                      16349  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,WRITE_CYCLE_1,WRITE_CYCLE_10,WRITE_CYCLE_100,WRITE_CYCLE_1_000,WRITE_CYCLE_10_000,WRITE_CYCLE_100_000,WRITE_CYCLE_1_000_000
//      P621_BER_SWEEP_COL_WIDTH                   //          11,        10,       8,           13,            14,             15,               17,                18,                 19,                   21
//      P621_BER_SWEEP_COL_MASK                    //           0,         0,       0,            0,             0,              0,                0,                 0,                  0,                    0
//      P621_BER_SWEEP_COL_TYPES                   // *
//      P621_BER_SWEEP_TABLE_TYPE                  // M
#define P621_BER_ATI_STE                    16350  // HD_PHYS_PSN,HD_LGC_PSN,CYLINDER,INITIAL_WRITE_CYLCE,ATI_WRITE_CYCLE,STE_WRITE_CYCLE
//      P621_BER_ATI_STE_COL_WIDTH                 //          11,        10,       8,                 19,             15,             15
//      P621_BER_ATI_STE_COL_MASK                  //           0,         0,       0,                  0,              0,              0
//      P621_BER_ATI_STE_COL_TYPES                 // *
//      P621_BER_ATI_STE_TABLE_TYPE                // M
#define P509_ERR_RATE_WITH_OFFSET           16351  // HEAD,OFFSET,START_LBA,DATA_ERROR1,DATA_ERR2,BITS_READ1,BITS_READ2,ERR1_RATE10,ERR2_RATE10,BER10_DELTA,H_ERR1_RATE,H_ERR2_RATE,S_ERR1_RATE,S_ERR2_RATE,ZONE
//      P509_ERR_RATE_WITH_OFFSET_COL_WIDTH        //    4,     6,       12,         12,       12,        12,        12,         12,         12,         12,         14,         12,         12,         12,   4
//      P509_ERR_RATE_WITH_OFFSET_COL_MASK         //    0,     0,        0,          0,        0,         0,         0,          0,          0,          0,          0,          0,          0,          0,   0
//      P509_ERR_RATE_WITH_OFFSET_COL_TYPES        // *
//      P509_ERR_RATE_WITH_OFFSET_TABLE_TYPE       // M
#define P000_SERVO_LOOP_CODE                16352  // SERVO_LOOP_CODE_ADDR,SERVO_LOOP_CODE
//      P000_SERVO_LOOP_CODE_COL_WIDTH             //                   20,             15
//      P000_SERVO_LOOP_CODE_COL_MASK              //                    0,              0
//      P000_SERVO_LOOP_CODE_COL_TYPES             // *
//      P000_SERVO_LOOP_CODE_TABLE_TYPE            // S
#define P000_CMD_ABORTED_REPORT             16353  // WRTCMD_ABORTED,RDCMD_ABORTED,VFYCMD_ABORTED,WRTVFYCMD_ABORTED,WRTSMCMD_ABORTED
//      P000_CMD_ABORTED_REPORT_COL_WIDTH          //             15,           15,            14,               17,              16
//      P000_CMD_ABORTED_REPORT_COL_MASK           //              0,            0,             0,                0,               0
//      P000_CMD_ABORTED_REPORT_COL_TYPES          // *
//      P000_CMD_ABORTED_REPORT_TABLE_TYPE         // S
#define P000_USER_ZONES_TESTED              16354  // FIRST_ZONE,LAST_ZONE
//      P000_USER_ZONES_TESTED_COL_WIDTH           //         10,        9
//      P000_USER_ZONES_TESTED_COL_MASK            //          0,        0
//      P000_USER_ZONES_TESTED_COL_TYPES           // *
//      P000_USER_ZONES_TESTED_TABLE_TYPE          // S
#define P552_DISP_HEAD_ZONE_CYL             16355  // HEAD,ZONE,ST_CYL,NUM_CYL,NUM_SEC,ACCUM_PBA,ACCUM_CYL,ST_SP,NUM_SP,SP_SZE,WD_SZE,GAPB,GAPA
//      P552_DISP_HEAD_ZONE_CYL_COL_WIDTH          //    4,   4,     7,      7,      7,       10,       10,    7,     7,     7,     7,   5,   5
//      P552_DISP_HEAD_ZONE_CYL_COL_MASK           //    0,   0,     0,      0,      0,        0,        0,    0,     0,     0,     0,   0,   0
//      P552_DISP_HEAD_ZONE_CYL_COL_TYPES          // *
//      P552_DISP_HEAD_ZONE_CYL_TABLE_TYPE         // S
#define P621_FAILING_DATA2                  16356  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,ITERATION,ERROR_CODE,FAILING_SPEC,FAILING_VALUE
//      P621_FAILING_DATA2_COL_WIDTH               //          11,      8,        10,        9,        10,          12,           13
//      P621_FAILING_DATA2_COL_MASK                //           0,      0,         0,        0,         0,           0,            0
//      P621_FAILING_DATA2_COL_TYPES               // *
//      P621_FAILING_DATA2_TABLE_TYPE              // S
#define P552_MAXCYL_TPIZ_PER_HD             16357  // HEAD,LAST_USR_TRK,START_SYS_TRK,LAST_SYS_TRK,MAX_DRIVE_CYL
//      P552_MAXCYL_TPIZ_PER_HD_COL_WIDTH          //    4,          18,           14,          14,           14
//      P552_MAXCYL_TPIZ_PER_HD_COL_MASK           //    0,           0,            0,           0,            0
//      P552_MAXCYL_TPIZ_PER_HD_COL_TYPES          // *
//      P552_MAXCYL_TPIZ_PER_HD_TABLE_TYPE         // S
#define P707_ADAPTIVE_VGA_GAIN              16358  // HD_PHYS_PSN,HD_LGC_PSN,PREVIOUS_ADPTV_VGA_GAIN,PRESENT_ADPTV_VGA_GAIN,DELTA_ADPTV_VGA_GAIN,HD_STATUS
//      P707_ADAPTIVE_VGA_GAIN_COL_WIDTH           //          11,        10,                     23,                    22,                  20,        9
//      P707_ADAPTIVE_VGA_GAIN_COL_MASK            //           1,         1,                      1,                     1,                   1,        1
//      P707_ADAPTIVE_VGA_GAIN_COL_TYPES           //           N,         N,                      N,                     N,                   N,        N
//      P707_ADAPTIVE_VGA_GAIN_TABLE_TYPE          // S
#define P529_DISPLAY_INSERT_LIST            16359  // CYLINDER,HEAD,POSITION,LENGTH,TRK_LENGTH
//      P529_DISPLAY_INSERT_LIST_COL_WIDTH         //       11,   5,      11,    11,        11
//      P529_DISPLAY_INSERT_LIST_COL_MASK          //        0,   0,       0,     0,         0
//      P529_DISPLAY_INSERT_LIST_COL_TYPES         // *
//      P529_DISPLAY_INSERT_LIST_TABLE_TYPE        // S
#define P625_ERROR_COUNT                    16360  // BYTES_PASSED,INTR_DET_ERRORS,TARG_DET_ERRORS,CUMULATIVE_ERRORS
//      P625_ERROR_COUNT_COL_WIDTH                 //           12,             15,             15,               17
//      P625_ERROR_COUNT_COL_MASK                  //            0,              0,              0,                0
//      P625_ERROR_COUNT_COL_TYPES                 // *
//      P625_ERROR_COUNT_TABLE_TYPE                // S
#define P000_INVALID_0311_CNT               16361  // COUNT
//      P000_INVALID_0311_CNT_COL_WIDTH            //     5
//      P000_INVALID_0311_CNT_COL_MASK             //     0
//      P000_INVALID_0311_CNT_COL_TYPES            // *
//      P000_INVALID_0311_CNT_TABLE_TYPE           // S
#define P000_SCSI_ERR_INFO                  16362  // KEY,CODE,QUAL,FRU,ALLOWED,OCCURED
//      P000_SCSI_ERR_INFO_COL_WIDTH               //   3,   4,   4,  3,      7,      7
//      P000_SCSI_ERR_INFO_COL_MASK                //   0,   0,   0,  0,      0,      0
//      P000_SCSI_ERR_INFO_COL_TYPES               // *
//      P000_SCSI_ERR_INFO_TABLE_TYPE              // S
#define P621_BER                            16363  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,INITIAL_BER10,FINAL_BER10,DELTA_BER10,OFFSET_TRK_PSN
//      P621_BER_COL_WIDTH                         //          12,      8,        12,           15,         15,         15,            15
//      P621_BER_COL_MASK                          //           1,      1,         1,            1,          1,          1,             1
//      P621_BER_COL_TYPES                         //           N,      N,         N,            N,          N,          N,             N
//      P621_BER_TABLE_TYPE                        // S
#define P000_NORMINAL_SYS_TRK               16364  // FIRST_SYS_TRK,NUM_SYS_TRK_PER_HEAD,NUM_SPARE_SYS_TRK_PER_HEAD
//      P000_NORMINAL_SYS_TRK_COL_WIDTH            //            14,                  21,                        27
//      P000_NORMINAL_SYS_TRK_COL_MASK             //             0,                   0,                         0
//      P000_NORMINAL_SYS_TRK_COL_TYPES            // *
//      P000_NORMINAL_SYS_TRK_TABLE_TYPE           // S
#define P552_DEPENDENT_ZONE_GROUP           16365  // HEAD,ZONE,START_LBA,START_PBA,SECT_PER_MZONE,CUM_SLIP,MZONE_IX,ZTAB_IX,MZ_SKEW,START_TRK
//      P552_DEPENDENT_ZONE_GROUP_COL_WIDTH        //    4,   4,       12,       12,            15,       8,       9,      8,      8,       10
//      P552_DEPENDENT_ZONE_GROUP_COL_MASK         //    0,   0,        0,        0,             0,       0,       0,      0,      0,        0
//      P552_DEPENDENT_ZONE_GROUP_COL_TYPES        // *
//      P552_DEPENDENT_ZONE_GROUP_TABLE_TYPE       // S
#define P000_DRIVE_CAPACITY_COMP            16366  // DITS_CMD_CAP,SCSI_CMD_CAP,MS_CMD_CAP,RAP_FILE_CAP,RAP_FILE_ZONE,RAP_FILE_HD_ENTRY
//      P000_DRIVE_CAPACITY_COMP_COL_WIDTH         //           14,          13,        11,          13,           14,               18
//      P000_DRIVE_CAPACITY_COMP_COL_MASK          //            0,           0,         0,           0,            0,                0
//      P000_DRIVE_CAPACITY_COMP_COL_TYPES         // *
//      P000_DRIVE_CAPACITY_COMP_TABLE_TYPE        // S
#define P544_RPT_SENSE_DATA                 16367  // SENSE_KEY,SENSE_CODE
//      P544_RPT_SENSE_DATA_COL_WIDTH              //         8,         8
//      P544_RPT_SENSE_DATA_COL_MASK               //         0,         0
//      P544_RPT_SENSE_DATA_COL_TYPES              // *
//      P544_RPT_SENSE_DATA_TABLE_TYPE             // S
#define P505_TEST_TIMER                     16368  // TEST_TIME
//      P505_TEST_TIMER_COL_WIDTH                  //        10
//      P505_TEST_TIMER_COL_MASK                   //         1
//      P505_TEST_TIMER_COL_TYPES                  //         N
//      P505_TEST_TIMER_TABLE_TYPE                 // S
#define P598_ADJ_ZONE_XFR_RATE              16369  // ZONE,XFR_RATE_DELTA_PREV_ZONE,XFR_RATE_DELTA_NEXT_ZONE,STATUS
//      P598_ADJ_ZONE_XFR_RATE_COL_WIDTH           //    4,                      24,                      24,     6
//      P598_ADJ_ZONE_XFR_RATE_COL_MASK            //    0,                       0,                       0,     0
//      P598_ADJ_ZONE_XFR_RATE_COL_TYPES           // *
//      P598_ADJ_ZONE_XFR_RATE_TABLE_TYPE          // S
#define P510_MSEC_PER_CMD                   16370  // MS_PER_CMD,MS_PER_CMD_SPEC,LBA
//      P510_MSEC_PER_CMD_COL_WIDTH                //         10,             15, 15
//      P510_MSEC_PER_CMD_COL_MASK                 //          0,              0,  0
//      P510_MSEC_PER_CMD_COL_TYPES                // *
//      P510_MSEC_PER_CMD_TABLE_TYPE               // S
#define P510_TIME_PER_CMDS                  16371  // MIN_TIME_MS,MAX_TIME_MS,TOTAL_MS_PER_TOTAL_CMD,TOTAL_MS_PER_TOTAL_CMD_SPEC,TOTAL_CMDS_MINUTES,TOTAL_CMDS_MINUTES_SPEC,TOTAL_CMDS_ISSUED,STATUS
//      P510_TIME_PER_CMDS_COL_WIDTH               //          11,         11,                    22,                         27,                18,                     23,               17,     6
//      P510_TIME_PER_CMDS_COL_MASK                //           1,          1,                     1,                          1,                 1,                      1,                1,     1
//      P510_TIME_PER_CMDS_COL_TYPES               //           N,          N,                     N,                          N,                 N,                      N,                N,     V
//      P510_TIME_PER_CMDS_TABLE_TYPE              // S
#define P598_DISP_SKEW_PARMETER             16372  // HD_SKEW,CYL_SKEW,SERP_SKEW,HD_SKEW_TIME,CYL_SKEW_TIME,SERP_SKEW_TIME,WEDGE,REV_TIME,RPM
//      P598_DISP_SKEW_PARMETER_COL_WIDTH          //       8,       8,        9,          14,           14,            14,    5,       8,  5
//      P598_DISP_SKEW_PARMETER_COL_MASK           //       0,       0,        0,           0,            0,             0,    0,       0,  0
//      P598_DISP_SKEW_PARMETER_COL_TYPES          // *
//      P598_DISP_SKEW_PARMETER_TABLE_TYPE         // S
#define P504_DISP_RANGE_CHS                 16373  // START_BLOCK_NUMBER,START_CYLINDER,START_HEAD,START_SECTOR,END_BLOCK_NUMBER,END_CYLINDER,END_HEAD,END_SECTOR
//      P504_DISP_RANGE_CHS_COL_WIDTH              //                 18,            14,        10,          12,              16,          12,       8,        10
//      P504_DISP_RANGE_CHS_COL_MASK               //                  0,             0,         0,           0,               0,           0,       0,         0
//      P504_DISP_RANGE_CHS_COL_TYPES              // *
//      P504_DISP_RANGE_CHS_TABLE_TYPE             // S
#define P627_DEFECT_SUMMARY                 16374  // DEFECT_TYPE,HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,DEFECT_CNT,FAIL_CODE
//      P627_DEFECT_SUMMARY_COL_WIDTH              //          11,         11,        9,        10,        10,        9
//      P627_DEFECT_SUMMARY_COL_MASK               //           1,          1,        1,         1,         1,        1
//      P627_DEFECT_SUMMARY_COL_TYPES              //           V,          N,        N,         N,         N,        N
//      P627_DEFECT_SUMMARY_TABLE_TYPE             // S
#define P575_RANDOM_STRING                  16375  // 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F
//      P575_RANDOM_STRING_COL_WIDTH               // 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
//      P575_RANDOM_STRING_COL_MASK                // 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//      P575_RANDOM_STRING_COL_TYPES               // *
//      P575_RANDOM_STRING_TABLE_TYPE              // S
#define P628_MISC_INFO                      16376  // USAGE_MODE,TARG_DRV_TYPE,PERFORM_RST,MAX_HEAD,MAX_NUM_HEAD_ENTRIES,MAJOR_REV,MINOR_REV,ITERATIVE_CHANNEL_DRIVE
//      P628_MISC_INFO_COL_WIDTH                   //         11,           13,         11,       8,                  20,        9,        9,                     23
//      P628_MISC_INFO_COL_MASK                    //          0,            0,          0,       0,                   0,        0,        0,                      0
//      P628_MISC_INFO_COL_TYPES                   // *
//      P628_MISC_INFO_TABLE_TYPE                  // S
#define P628_BLOCK_LENGTH                   16377  // MAX_LBA,BLOCK_LENGTH,SAVED_BLOCK_LENGTH,BLOCK_LENGTH_INIT
//      P628_BLOCK_LENGTH_COL_WIDTH                //      10,          12,                18,               17
//      P628_BLOCK_LENGTH_COL_MASK                 //       0,           0,                 0,                0
//      P628_BLOCK_LENGTH_COL_TYPES                // *
//      P628_BLOCK_LENGTH_TABLE_TYPE               // S
#define P628_FRAME_SIZES                    16378  // ZONE_GROUP_FRAME_BYTE_CNT,ZONE_FRAME_BYTE_CNT,NUM_ZONE_FRAMES,MAX_NUM_ZONE_FRAMES,NUM_SYSTEM_ZONE_FRAMES
//      P628_FRAME_SIZES_COL_WIDTH                 //                        25,                 19,             15,                 19,                    23
//      P628_FRAME_SIZES_COL_MASK                  //                         0,                  0,              0,                  0,                     0
//      P628_FRAME_SIZES_COL_TYPES                 // *
//      P628_FRAME_SIZES_TABLE_TYPE                // S
#define P628_ZONE_BEG_ODD_SERP              16379  // *
//      P628_ZONE_BEG_ODD_SERP_COL_WIDTH           // 4
//      P628_ZONE_BEG_ODD_SERP_COL_MASK            // 0
//      P628_ZONE_BEG_ODD_SERP_COL_TYPES           // *
//      P628_ZONE_BEG_ODD_SERP_TABLE_TYPE          // S
#define P628_INFO_PER_HEAD                  16380  // HEAD,MAX_CYL,SERPENT_SIZE,DEPENDENT_START_SYS_TRACK,NUM_WHOLE_SERPENT_LAST_ZONE
//      P628_INFO_PER_HEAD_COL_WIDTH               //    4,      7,          12,                       25,                         28
//      P628_INFO_PER_HEAD_COL_MASK                //    0,      0,           0,                        0,                          0
//      P628_INFO_PER_HEAD_COL_TYPES               // *
//      P628_INFO_PER_HEAD_TABLE_TYPE              // S
#define P628_DRIVE_INFO                     16381  // GAP_AFTER_SERVO_FIELD,NUM_DERATED_HEADS,NO_HEAD_GROUPS,BUF_VALIDATION_DELAY,BEG_RETRY_CNT_RANGE,END_RETRY_CNT_RANGE,NOMINAL_SERPENT_SIZE,NOMINAL_FIRST_SYS_TRACK
//      P628_DRIVE_INFO_COL_WIDTH                  //                    21,               17,            14,                  20,                 19,                 19,                  20,                     23
//      P628_DRIVE_INFO_COL_MASK                   //                     0,                0,             0,                   0,                  0,                  0,                   0,                      0
//      P628_DRIVE_INFO_COL_TYPES                  // *
//      P628_DRIVE_INFO_TABLE_TYPE                 // S
#define P628_DERATED_HD_MAP                 16382  // DERATED_HD_MAP
//      P628_DERATED_HD_MAP_COL_WIDTH              //             14
//      P628_DERATED_HD_MAP_COL_MASK               //              0
//      P628_DERATED_HD_MAP_COL_TYPES              // *
//      P628_DERATED_HD_MAP_TABLE_TYPE             // S
#define P628_ZONE_CYL                       16383  // ZONE,HEAD,BEG_CYL,END_CYL,NUMBER_CYL,ACCUM_CYL
//      P628_ZONE_CYL_COL_WIDTH                    //    4,   4,      7,      7,        10,        9
//      P628_ZONE_CYL_COL_MASK                     //    0,   0,      0,      0,         0,        0
//      P628_ZONE_CYL_COL_TYPES                    // *
//      P628_ZONE_CYL_TABLE_TYPE                   // S
#define P628_SECTORS                        16384  // ZONE,HEAD,SECTORS,SPARE_SECTORS,SPARE_TRACKS,START_TRACKS
//      P628_SECTORS_COL_WIDTH                     //    4,   4,      7,           13,          12,          12
//      P628_SECTORS_COL_MASK                      //    0,   0,      0,            0,           0,           0
//      P628_SECTORS_COL_TYPES                     // *
//      P628_SECTORS_TABLE_TYPE                    // S
#define P628_ZTABLE_MISC                    16385  // ZONE,HEAD,CSLIP,DATA_WEDGE_SIZE,NUM_OPER_HEADS,M_COUNTER,N_COUNTER,GAP_BEFORE_SERVO,GAP_AFTER_SERVO
//      P628_ZTABLE_MISC_COL_WIDTH                 //    4,   4,    5,             16,            14,        9,        9,              16,             15
//      P628_ZTABLE_MISC_COL_MASK                  //    0,   0,    0,              0,             0,        0,        0,               0,              0
//      P628_ZTABLE_MISC_COL_TYPES                 // *
//      P628_ZTABLE_MISC_TABLE_TYPE                // S
#define P628_ZTABLE_SERPENT                 16386  // ZONE,HEAD,START_SERPENT,END_SERPENT,NUM_SERPENT,NUM_CYL_LAST_SERPENT,NUM_CYL_SERPENT,SECTOR_PER_SERPENT,LAST_SERPENT_INDEX
//      P628_ZTABLE_SERPENT_COL_WIDTH              //    4,   4,           13,         11,         11,                  20,             15,                18,                18
//      P628_ZTABLE_SERPENT_COL_MASK               //    0,   0,            0,          0,          0,                   0,              0,                 0,                 0
//      P628_ZTABLE_SERPENT_COL_TYPES              // *
//      P628_ZTABLE_SERPENT_TABLE_TYPE             // S
#define P628_ZTABLE_INFO                    16387  // ZONE_GROUP,START_MINIZONE_INDEX,CUM_SKEW_PER_MINIZONE,ZONE_PBA,ZONE_LBA
//      P628_ZTABLE_INFO_COL_WIDTH                 //         10,                  20,                   21,      12,      12
//      P628_ZTABLE_INFO_COL_MASK                  //          0,                   0,                    0,       0,       0
//      P628_ZTABLE_INFO_COL_TYPES                 // *
//      P628_ZTABLE_INFO_TABLE_TYPE                // S
#define P530_SLIP_SCTR_CNT                  16388  // DRV_SLIP_SCTR_CNT,SLIP_SCTR_PCT,MAX_SCTR_SPARES
//      P530_SLIP_SCTR_CNT_COL_WIDTH               //                20,           15,             15
//      P530_SLIP_SCTR_CNT_COL_MASK                //                 1,            1,              1
//      P530_SLIP_SCTR_CNT_COL_TYPES               //                 N,            N,              N
//      P530_SLIP_SCTR_CNT_TABLE_TYPE              // S
#define P530_SPARE_SYMBL_SECT               16389  // COUNT,CYLINDER,HEAD,POSITION,LENGTH,SLIP_SECTOR,TOTAL_SLIP
//      P530_SPARE_SYMBL_SECT_COL_WIDTH            //     5,       8,   5,      11,    11,         12,        12
//      P530_SPARE_SYMBL_SECT_COL_MASK             //     0,       0,   0,       0,     0,          0,         0
//      P530_SPARE_SYMBL_SECT_COL_TYPES            // *
//      P530_SPARE_SYMBL_SECT_TABLE_TYPE           // S
#define P530_SPARE_SECTORS_USED             16390  // COUNT,CYLINDER,HEAD,SLIP_SECTOR,TOTAL_SLIP
//      P530_SPARE_SECTORS_USED_COL_WIDTH          //     5,       8,   5,         12,        12
//      P530_SPARE_SECTORS_USED_COL_MASK           //     0,       0,   0,          0,         0
//      P530_SPARE_SECTORS_USED_COL_TYPES          // *
//      P530_SPARE_SECTORS_USED_TABLE_TYPE         // S
#define P644_MIF_DATA_HEADER                16391  // MIF_DRIVE_SN,WWN,FINAL_ASSY_DATE,DEVICE_CNTRL_FW_REV,MIF_REV,PIC_FW_REV,CAP_FW_REV,FLASH_CNTLR1_FW_REV,FLASH_CNTLR2_FW_REV
//      P644_MIF_DATA_HEADER_COL_WIDTH             //           12, 18,             16,                 19,     10,        10,        10,                 19,                 19
//      P644_MIF_DATA_HEADER_COL_MASK              //            1,  1,              1,                  1,      1,         1,         1,                  1,                  1
//      P644_MIF_DATA_HEADER_COL_TYPES             //            V,  V,              V,                  V,      V,         V,         V,                  V,                  V
//      P644_MIF_DATA_HEADER_TABLE_TYPE            // S
#define P644_PCBA_MIF_DATA                  16392  // PCBA_NUM,PCBA_SERIAL_NUM,PCBA_REV,PCBA_PART_NUM,DATE_CODE,TEST_DATE_CODE
//      P644_PCBA_MIF_DATA_COL_WIDTH               //        8,             18,      18,           18,       18,            18
//      P644_PCBA_MIF_DATA_COL_MASK                //        1,              1,       1,            1,        1,             1
//      P644_PCBA_MIF_DATA_COL_TYPES               //        N,              V,       V,            V,        N,             N
//      P644_PCBA_MIF_DATA_TABLE_TYPE              // S
#define P529_GLIST_DEFECTS                  16393  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,DFCT_PSN_SFI,DFCT_LGTH_SYMBOLS
//      P529_GLIST_DEFECTS_COL_WIDTH               //          12,        12,     12,          12,               18
//      P529_GLIST_DEFECTS_COL_MASK                //           1,         1,      1,           1,                1
//      P529_GLIST_DEFECTS_COL_TYPES               //           N,         N,      N,           N,                N
//      P529_GLIST_DEFECTS_TABLE_TYPE              // S
#define P529_ASFT                           16394  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,SRVO_WEDGE
//      P529_ASFT_COL_WIDTH                        //          12,        12,     12,        12
//      P529_ASFT_COL_MASK                         //           1,         1,      1,         1
//      P529_ASFT_COL_TYPES                        //           N,         N,      N,         N
//      P529_ASFT_TABLE_TYPE                       // S
#define P629_SQZ_SCTR_ERR_RATE              16395  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,TRK_SQZ_SRVO_CNTS,NUM_OD_SQZ_WRT,NUM_ID_SQZ_WRT,TRK_BER10_AVG,TRK_BER10_SIGMA,SCTR_BER10_SIGMA,BER10_WRT_WRT_SIGMA,WORST_SCTR_NUM,WORST_SCTR_BER10,BEST_SCTR_NUM,BEST_SCTR_BER10
//      P629_SQZ_SCTR_ERR_RATE_COL_WIDTH           //          11,        9,      7,        10,               16,            14,            14,           13,             15,              16,                 19,            14,              16,           13,             15
//      P629_SQZ_SCTR_ERR_RATE_COL_MASK            //           0,        0,      0,         0,                0,             0,             0,            0,              0,               0,                  0,             0,               0,            0,              0
//      P629_SQZ_SCTR_ERR_RATE_COL_TYPES           // *
//      P629_SQZ_SCTR_ERR_RATE_TABLE_TYPE          // S
#define P630_SFR_ZERO_TMR_RATE              16396  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,SQUEEZE_SRVO_CNTS,NUM_WRITES,OVERLAP_PCT,SECTORS_AVAIL,SECTORS_READ,RECOVERED_ERRS,UNRECOVERED_ERRS
//      P630_SFR_ZERO_TMR_RATE_COL_WIDTH           //          11,        9,      7,        10,               17,        10,         11,           13,          12,            14,              16
//      P630_SFR_ZERO_TMR_RATE_COL_MASK            //           1,        1,      1,         1,                1,         1,          1,            1,           1,             1,               1
//      P630_SFR_ZERO_TMR_RATE_COL_TYPES           //           N,        N,      N,         N,                N,         N,          N,            N,           N,             N,               N
//      P630_SFR_ZERO_TMR_RATE_TABLE_TYPE          // S
#define P000_DEFECT_DUMP_TIME               16397  // COMPLETION_TIME_SECS,STATUS
//      P000_DEFECT_DUMP_TIME_COL_WIDTH            //                   20,     6
//      P000_DEFECT_DUMP_TIME_COL_MASK             //                    0,     0
//      P000_DEFECT_DUMP_TIME_COL_TYPES            // *
//      P000_DEFECT_DUMP_TIME_TABLE_TYPE           // S
#define P529_SSD_GLIST_DEFECTS              16398  // MEDIA_ID,CHANNEL_NUM,DIE_NUM,BLOCK_NUM,DEFECT_INFO,PLANE_NUM
//      P529_SSD_GLIST_DEFECTS_COL_WIDTH           //        8,         11,      7,        9,         11,        9
//      P529_SSD_GLIST_DEFECTS_COL_MASK            //        1,          1,      1,        1,          0,        1
//      P529_SSD_GLIST_DEFECTS_COL_TYPES           //        N,          N,      N,        N,                    N
//      P529_SSD_GLIST_DEFECTS_TABLE_TYPE          // S
#define P530_SSD_PLIST_DEFECTS              16399  // MEDIA_ID,CHANNEL_NUM,DIE_NUM,BLOCK_NUM,DEFECT_INFO,PLANE_NUM
//      P530_SSD_PLIST_DEFECTS_COL_WIDTH           //        8,         11,      7,        9,         11,        9
//      P530_SSD_PLIST_DEFECTS_COL_MASK            //        1,          1,      1,        1,          0,        1
//      P530_SSD_PLIST_DEFECTS_COL_TYPES           //        N,          N,      N,        N,                    N
//      P530_SSD_PLIST_DEFECTS_TABLE_TYPE          // S
#define P000_RW_ERROR_16_SSD                16400  // KEY,CODE,QUAL,FRU,RTYS,BLOCK,CHANNEL,DIE,BLOCK,PAGE,OFFSET,CMD_BYTE_0,CB_1,CB_2,CB_3,CB_4,CB_5,CB_6,CB_7,CB_8,CB_9,CB10,CB11,CB12,CB13,CB14,CB15,SPAN,MU_STATE,GCU_STATE
//      P000_RW_ERROR_16_SSD_COL_WIDTH             //   3,   4,   4,  3,   4,    9,      8,  8,    8,   8,     8,        10,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,       8,        9
//      P000_RW_ERROR_16_SSD_COL_MASK              //   0,   0,   0,  0,   0,    0,      0,  0,    0,   0,     0,         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,       0,        0
//      P000_RW_ERROR_16_SSD_COL_TYPES             // *
//      P000_RW_ERROR_16_SSD_TABLE_TYPE            // S
#define P000_RW_ERROR_SSD                   16401  // KEY,CODE_0,CD1,FRU,RTYS,BLOCK,CHANNEL,DIE,BLOCK,PAGE,OFFSET,COMMAND_0,C1,C2,C3,C4,C5,C6,C7,C8,C9,SPAN,MU_STATE,GCU_STATE
//      P000_RW_ERROR_SSD_COL_WIDTH                //   3,     6,  3,  3,   4,   10,      8,  8,    8,   8,     8,        9, 2, 2, 2, 2, 2, 2, 2, 2, 2,   4,       8,        9
//      P000_RW_ERROR_SSD_COL_MASK                 //   0,     0,  0,  0,   0,    0,      0,  0,    0,   0,     0,        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0,       0,        0
//      P000_RW_ERROR_SSD_COL_TYPES                // *
//      P000_RW_ERROR_SSD_TABLE_TYPE               // S
#define P644_POLYCAP_CONTROLLER             16402  // COMP_NUM,FW_REV,CAPACITANCE,ESR,REQUIRED_VOLTAGE,LEAKAGE
//      P644_POLYCAP_CONTROLLER_COL_WIDTH          //        8,     8,         11,  9,              14,      7
//      P644_POLYCAP_CONTROLLER_COL_MASK           //        1,     1,          1,  1,               1,      1
//      P644_POLYCAP_CONTROLLER_COL_TYPES          //        N,     V,          N,  N,               N,      N
//      P644_POLYCAP_CONTROLLER_TABLE_TYPE         // S
#define P644_POLYCAP_MIF_DATA               16403  // PCBA_NUM,COMP_TYPE,COMP_NUM,VENDOR,COMP_PART_NUM,COMP_LOT_CODE,CAPACITANCE,ESR
//      P644_POLYCAP_MIF_DATA_COL_WIDTH            //        8,        9,       8,     6,           13,           13,         11,  3
//      P644_POLYCAP_MIF_DATA_COL_MASK             //        0,        0,       0,     0,            0,            0,          0,  0
//      P644_POLYCAP_MIF_DATA_COL_TYPES            // *
//      P644_POLYCAP_MIF_DATA_TABLE_TYPE           // S
#define P644_FLASH_UNIQUE_ID                16404  // COMP_NUM,UNIQUE_ID
//      P644_FLASH_UNIQUE_ID_COL_WIDTH             //        8,        9
//      P644_FLASH_UNIQUE_ID_COL_MASK              //        1,        1
//      P644_FLASH_UNIQUE_ID_COL_TYPES             //        N,        V
//      P644_FLASH_UNIQUE_ID_TABLE_TYPE            // S
#define P644_DRIVE_PARAMETERS               16405  // ACTUAL_TEMPERATURE,TEMP_SENSOR_VALUE
//      P644_DRIVE_PARAMETERS_COL_WIDTH            //                 18,               17
//      P644_DRIVE_PARAMETERS_COL_MASK             //                  1,                1
//      P644_DRIVE_PARAMETERS_COL_TYPES            //                  N,                V
//      P644_DRIVE_PARAMETERS_TABLE_TYPE           // S
#define P549_SEEK_COUNT                     16406  // SEEK_COUNT
//      P549_SEEK_COUNT_COL_WIDTH                  //         10
//      P549_SEEK_COUNT_COL_MASK                   //          0
//      P549_SEEK_COUNT_COL_TYPES                  // *
//      P549_SEEK_COUNT_TABLE_TYPE                 // S
#define P644_SSD_MIF_DATA                   16407  // PCBA_NUM,COMP_TYPE,COMP_NUM,VENDOR,COMP_PART_NUM,COMP_REV,COMP_LOT_CODE
//      P644_SSD_MIF_DATA_COL_WIDTH                //        8,       14,       8,    18,           18,      18,           18
//      P644_SSD_MIF_DATA_COL_MASK                 //        0,        0,       0,     0,            0,       0,            0
//      P644_SSD_MIF_DATA_COL_TYPES                // *
//      P644_SSD_MIF_DATA_TABLE_TYPE               // S
#define P504_32BIT_CTRCHIP_REG              16408  // BK,ADR,_______0,_______1,_______2,_______3,_______4,_______5,_______6,_______7
//      P504_32BIT_CTRCHIP_REG_COL_WIDTH           //  2,  3,       8,       8,       8,       8,       8,       8,       8,       8
//      P504_32BIT_CTRCHIP_REG_COL_MASK            //  0,  0,       0,       0,       0,       0,       0,       0,       0,       0
//      P504_32BIT_CTRCHIP_REG_COL_TYPES           // *
//      P504_32BIT_CTRCHIP_REG_TABLE_TYPE          // S
#define P630_POLYNOMIAL_COEF                16409  // HD_PHYS_PSN,DATA_ZONE,TRK_NUM,HD_LGC_PSN,COEF_0,COEF_1,COEF_2,STD_DEV,RECOVERED_ERRS,UNRECOVERED_ERRS,FUNCTION_COEF,CONSTANT_OCLIM_PCT
//      P630_POLYNOMIAL_COEF_COL_WIDTH             //          11,        9,      7,        10,    10,    10,    10,      7,            14,              16,           13,                18
//      P630_POLYNOMIAL_COEF_COL_MASK              //           1,        1,      1,         1,     1,     1,     1,      1,             1,               1,            1,                 1
//      P630_POLYNOMIAL_COEF_COL_TYPES             //           N,        N,      N,         N,     N,     N,     N,      N,             N,               N,            N,                 N
//      P630_POLYNOMIAL_COEF_TABLE_TYPE            // S
#define P644_DIAG_ID_FLASH                  16410  // FLASH_PAGE_SIZE,MFG_ID,DIE_PER_CE,BLOCKS_PER_DIE,PAGES_PER_BLOCK,RAW_CAPACITY_SECTORS,RAW_CAPACITY_BYTES
//      P644_DIAG_ID_FLASH_COL_WIDTH               //              16,    12,        10,            15,             16,                  20,                18
//      P644_DIAG_ID_FLASH_COL_MASK                //               1,     1,         1,             1,              1,                   1,                 1
//      P644_DIAG_ID_FLASH_COL_TYPES               //               V,     V,         N,             N,              N,                   N,                 N
//      P644_DIAG_ID_FLASH_TABLE_TYPE              // S
#define P551_FAILED_INDEX                   16411  // FAILED_INDEX,LOOP_COUNT
//      P551_FAILED_INDEX_COL_WIDTH                //           12,        10
//      P551_FAILED_INDEX_COL_MASK                 //            0,         0
//      P551_FAILED_INDEX_COL_TYPES                // *
//      P551_FAILED_INDEX_TABLE_TYPE               // S
#define P000_DISP_P_CODE                    16412  // PARAMETER_CODE,DATA
//      P000_DISP_P_CODE_COL_WIDTH                 //             15,  20
//      P000_DISP_P_CODE_COL_MASK                  //              0,   0
//      P000_DISP_P_CODE_COL_TYPES                 // *
//      P000_DISP_P_CODE_TABLE_TYPE                // S
#define P000_REPORT_P_CODE                  16413  // PARAMETER_CODE,DATA_RECEIVED,DATA_SPEC,STATUS
//      P000_REPORT_P_CODE_COL_WIDTH               //             30,           15,       12,    10
//      P000_REPORT_P_CODE_COL_MASK                //              0,            0,        0,     0
//      P000_REPORT_P_CODE_COL_TYPES               // *
//      P000_REPORT_P_CODE_TABLE_TYPE              // S
#define P1501_MIS_COMPARE_DATA              16414  // *
//      P1501_MIS_COMPARE_DATA_COL_WIDTH           // 2
//      P1501_MIS_COMPARE_DATA_COL_MASK            // 0
//      P1501_MIS_COMPARE_DATA_COL_TYPES           // *
//      P1501_MIS_COMPARE_DATA_TABLE_TYPE          // S
#define P000_MODE_PAGE_DATA                 16415  // *
//      P000_MODE_PAGE_DATA_COL_WIDTH              // 2
//      P000_MODE_PAGE_DATA_COL_MASK               // 0
//      P000_MODE_PAGE_DATA_COL_TYPES              // *
//      P000_MODE_PAGE_DATA_TABLE_TYPE             // S
#define P000_MODE_SENSE_HEADER              16416  // *
//      P000_MODE_SENSE_HEADER_COL_WIDTH           // 2
//      P000_MODE_SENSE_HEADER_COL_MASK            // 0
//      P000_MODE_SENSE_HEADER_COL_TYPES           // *
//      P000_MODE_SENSE_HEADER_TABLE_TYPE          // S
#define P000_T172_ZONE_TBL_CMP              16417  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ZN_START_CYL,TRK_NUM,PBA_TRACK,WEDGE_TO_WEDGE,MZ_IX,NUM_SP,SP_SZE,GAP_BEF_SVO,GAP_AFT_SVO,ACC_PBA
//      P000_T172_ZONE_TBL_CMP_COL_WIDTH           //          11,        9,        10,          12,      7,        9,            15,    6,     6,     6,         11,         11,     12
//      P000_T172_ZONE_TBL_CMP_COL_MASK            //           0,        0,         0,           0,      0,        0,             0,    0,     0,     0,          0,          0,      0
//      P000_T172_ZONE_TBL_CMP_COL_TYPES           // *
//      P000_T172_ZONE_TBL_CMP_TABLE_TYPE          // S
#define P529_SSD_MLIST_DEFECTS              16418  // MEDIA_ID,CHANNEL_NUM,DIE_NUM,BLOCK_NUM,DEFECT_INFO,PLANE_NUM
//      P529_SSD_MLIST_DEFECTS_COL_WIDTH           //        8,         11,      7,        9,         11,        9
//      P529_SSD_MLIST_DEFECTS_COL_MASK            //        1,          1,      1,        1,          0,        1
//      P529_SSD_MLIST_DEFECTS_COL_TYPES           //        N,          N,      N,        N,                    N
//      P529_SSD_MLIST_DEFECTS_TABLE_TYPE          // S
#define P529_SSD_DEFECTS_PER_DIE            16419  // MEDIA_ID,DIE_0,DIE_1,DIE_2,DIE_3,DIE_4,DIE_5,DIE_6,DIE_7
//      P529_SSD_DEFECTS_PER_DIE_COL_WIDTH         //        8,    5,    5,    5,    5,    5,    5,    5,    5
//      P529_SSD_DEFECTS_PER_DIE_COL_MASK          //        0,    0,    0,    0,    0,    0,    0,    0,    0
//      P529_SSD_DEFECTS_PER_DIE_COL_TYPES         // *
//      P529_SSD_DEFECTS_PER_DIE_TABLE_TYPE        // S
#define P708_DRIVE_TEMP_HUMIDITY            16420  // INITIAL_TEMPERATURE,CURRENT_TEMPERATURE,MIX_RATIO_FLOAT,MEASURED_HUMIDITY,CALC_HUMIDITY,SERVO_CURRENT_TEMPERATURE,SERVO_HUMIDITY,PRESSURE,TIMESTAMP
//      P708_DRIVE_TEMP_HUMIDITY_COL_WIDTH         //                  19,                 19,             15,               17,           13,                       25,            14,       8,       21
//      P708_DRIVE_TEMP_HUMIDITY_COL_MASK          //                   1,                  1,              1,                1,            1,                        1,             1,       1,        1
//      P708_DRIVE_TEMP_HUMIDITY_COL_TYPES         //                   N,                  N,              N,                N,            N,                        N,             N,       N,        V
//      P708_DRIVE_TEMP_HUMIDITY_TABLE_TYPE        // S
#define P630_SENSE_ERROR_DATA               16421  // HD_PHYS_PSN,CYLINDER,SENSE_BYTE_2,SENSE_BYTE_12,SENSE_BYTE_13,SENSE_BYTE_14,SENSE_BYTE_15,SENSE_BYTE_16,SENSE_BYTE_17
//      P630_SENSE_ERROR_DATA_COL_WIDTH            //          11,       8,          12,           12,           12,           12,           12,           12,           12
//      P630_SENSE_ERROR_DATA_COL_MASK             //           0,       0,           0,            0,            0,            0,            0,            0,            0
//      P630_SENSE_ERROR_DATA_COL_TYPES            // *
//      P630_SENSE_ERROR_DATA_TABLE_TYPE           // S
#define P630_READ_ERR_SENSE_DATA            16422  // HD_PHYS_PSN,ZONE,CYLINDER,LBA,SQUEEZE,OVERLAP_PERCENT,NUMBER_WRITES,NUMBER_READS,SENSE_BYTE_2,SENSE_BYTE_8,SENSE_BYTE_9,SENSE_BYTE_10,SENSE_BYTE_11,SENSE_BYTE_12,SENSE_BYTE_13,SENSE_BYTE_14,SENSE_BYTE_15,SENSE_BYTE_16,SENSE_BYTE_17,FAILING_LBA
//      P630_READ_ERR_SENSE_DATA_COL_WIDTH         //          11,   4,       8,  5,      7,             15,           13,          12,          12,          12,          12,           13,           13,           13,           13,           13,           13,           13,           13,         11
//      P630_READ_ERR_SENSE_DATA_COL_MASK          //           0,   0,       0,  0,      0,              0,            0,           0,           0,           0,           0,            0,            0,            0,            0,            0,            0,            0,            0,          0
//      P630_READ_ERR_SENSE_DATA_COL_TYPES         // *
//      P630_READ_ERR_SENSE_DATA_TABLE_TYPE        // S
#define P598_ADJ_ZN_XFR_DLTA_PRCT           16423  // ZONE,ADJACENT_ZONE,XFR_RATE_PERCENT_DELTA,XRF_RATE_PERCENT_STATUS
//      P598_ADJ_ZN_XFR_DLTA_PRCT_COL_WIDTH        //    4,           13,                    22,                     23
//      P598_ADJ_ZN_XFR_DLTA_PRCT_COL_MASK         //    0,            0,                     0,                      0
//      P598_ADJ_ZN_XFR_DLTA_PRCT_COL_TYPES        // *
//      P598_ADJ_ZN_XFR_DLTA_PRCT_TABLE_TYPE       // S
#define P647_MERT_LOG_DESCRIPTOR            16424  // MEDIA_ID,SYS_AREA,ENTRY_COUNT,PE_CYCLES_SYSTEM_NUM,PE_CYCLES_USER_NUM
//      P647_MERT_LOG_DESCRIPTOR_COL_WIDTH         //        8,       8,         11,                  20,                18
//      P647_MERT_LOG_DESCRIPTOR_COL_MASK          //        1,       1,          1,                   1,                 1
//      P647_MERT_LOG_DESCRIPTOR_COL_TYPES         //        N,       N,          N,                   N,                 N
//      P647_MERT_LOG_DESCRIPTOR_TABLE_TYPE        // S
#define P647_MERT_LOG_ENTRIES               16425  // MEDIA_ID,RECORD_NUMBER,BLOCK,CHANNEL_NUM,DIE_NUM,SYS_AREA,PAGE_NUM,TLEVEL_REQD,REPEAT_LOOP_CTR,PROGRAM_LOOP_CTR,READ_LOOP_CTR,ERROR_CODE,PE_CYCLE_CNT,BIT_ERROR_CNT
//      P647_MERT_LOG_ENTRIES_COL_WIDTH            //        8,           13,    5,         11,      7,       8,       4,         11,             15,              16,           13,        10,          12,           13
//      P647_MERT_LOG_ENTRIES_COL_MASK             //        1,            1,    1,          1,      1,       1,       1,          1,              1,               1,            1,         1,           1,            1
//      P647_MERT_LOG_ENTRIES_COL_TYPES            //        N,            N,    N,          N,      N,       N,       N,          N,              N,               N,            N,         N,           N,            N
//      P647_MERT_LOG_ENTRIES_TABLE_TYPE           // S
#define P535_PRINT_BUF_ADDRESS              16426  // BUFFER_TYPE,START_ADDRESS,LIMIT_ADDRESS,BUFFER_SIZE
//      P535_PRINT_BUF_ADDRESS_COL_WIDTH           //          12,           14,           14,         12
//      P535_PRINT_BUF_ADDRESS_COL_MASK            //           0,            0,            0,          0
//      P535_PRINT_BUF_ADDRESS_COL_TYPES           // *
//      P535_PRINT_BUF_ADDRESS_TABLE_TYPE          // S
#define P564_SMART_ANALYSIS                 16427  // *
//      P564_SMART_ANALYSIS_COL_WIDTH              // 5
//      P564_SMART_ANALYSIS_COL_MASK               // 0
//      P564_SMART_ANALYSIS_COL_TYPES              // *
//      P564_SMART_ANALYSIS_TABLE_TYPE             // S
#define P519_HYBRID_INQUIRY                 16428  // NUM_OF_DIE,PAGE_PER_BLK,BLOCK_PER_DIE,PAGE_SIZE,FLASH_ID,HYBRID_STATE
//      P519_HYBRID_INQUIRY_COL_WIDTH              //         12,          12,           14,       10,      16,          14
//      P519_HYBRID_INQUIRY_COL_MASK               //          0,           0,            0,        0,       0,           0
//      P519_HYBRID_INQUIRY_COL_TYPES              // *
//      P519_HYBRID_INQUIRY_TABLE_TYPE             // S

#define P519_HB_DEFECT_SCAN                 16429  // TOTAL_DEFECT,DIE_0_DEFECT,DIE_1_DEFECT,DIE_2_DEFECT,DIE_3_DEFECT,DIE_4_DEFECT,DIE_5_DEFECT,DIE_6_DEFECT,DIE_7_DEFECT
//      P519_HB_DEFECT_SCAN_COL_WIDTH              //           12,          14,          14,          14,          14,          14,          14,          14,          14
//      P519_HB_DEFECT_SCAN_COL_MASK               //            0,           0,           0,           0,           0,           0,           0,           0,           0
//      P519_HB_DEFECT_SCAN_COL_TYPES              // *
//      P519_HB_DEFECT_SCAN_TABLE_TYPE             // S
#define P647_MERT_LOG_SUMMARY               16430  // MEDIA_ID,NUM_ENTRIES,ERROR_CODE,ERROR_DESCRIPTION,CHANNEL_NUM,DIE_0,DIE_1,DIE_2,DIE_3,DIE_4,DIE_5,DIE_6,DIE_7,EXCEEDED_TLEVEL_SPEC
//      P647_MERT_LOG_SUMMARY_COL_WIDTH            //        8,         11,        10,               17,         11,    7,    7,    7,    7,    7,    7,    7,    7,                  20
//      P647_MERT_LOG_SUMMARY_COL_MASK             //        0,          0,         0,                0,          0,    0,    0,    0,    0,    0,    0,    0,    0,                   0
//      P647_MERT_LOG_SUMMARY_COL_TYPES            // *
//      P647_MERT_LOG_SUMMARY_TABLE_TYPE           // S
#define P647_EXCEED_SPEC_SUMMARY            16431  // MEDIA_ID,CHANNEL_NUM,DIE_0,DIE_1,DIE_2,DIE_3,DIE_4,DIE_5,DIE_6,DIE_7
//      P647_EXCEED_SPEC_SUMMARY_COL_WIDTH         //        8,         11,    7,    7,    7,    7,    7,    7,    7,    7
//      P647_EXCEED_SPEC_SUMMARY_COL_MASK          //        0,          0,    0,    0,    0,    0,    0,    0,    0,    0
//      P647_EXCEED_SPEC_SUMMARY_COL_TYPES         // *
//      P647_EXCEED_SPEC_SUMMARY_TABLE_TYPE        // S
#define P575_BAND_VALUES_SUMMARY            16432  // BAND_NO,_RANGE_START,RANGE_LENGTH,RLE,WLE,_RL,_WL,LOR
//      P575_BAND_VALUES_SUMMARY_COL_WIDTH         //       7,          12,          12,  3,  3,  3,  3,  3
//      P575_BAND_VALUES_SUMMARY_COL_MASK          //       0,           0,           0,  0,  0,  0,  0,  0
//      P575_BAND_VALUES_SUMMARY_COL_TYPES         // *
//      P575_BAND_VALUES_SUMMARY_TABLE_TYPE        // S
#define P575_PORT_VALUES_SUMMARY            16433  // PORT_LOCKED,LOCKONRESET
//      P575_PORT_VALUES_SUMMARY_COL_WIDTH         //          11,         11
//      P575_PORT_VALUES_SUMMARY_COL_MASK          //           0,          0
//      P575_PORT_VALUES_SUMMARY_COL_TYPES         // *
//      P575_PORT_VALUES_SUMMARY_TABLE_TYPE        // S
#define P519_ERRCOUNT_PER_DIE               16434  // DIE_NUMBER,ERROR_COUNT,ERR_PER_DIE_LIMIT
//      P519_ERRCOUNT_PER_DIE_COL_WIDTH            //         11,         11,               17
//      P519_ERRCOUNT_PER_DIE_COL_MASK             //          0,          0,                0
//      P519_ERRCOUNT_PER_DIE_COL_TYPES            // *
//      P519_ERRCOUNT_PER_DIE_TABLE_TYPE           // S
#define P519_FLASH_ERR_TOTAL                16435  // FLASH_ID,TOTAL_FLASH_ERR,ERR_PER_FLASH_LIMIT
//      P519_FLASH_ERR_TOTAL_COL_WIDTH             //       12,             15,                 19
//      P519_FLASH_ERR_TOTAL_COL_MASK              //        0,              0,                  0
//      P519_FLASH_ERR_TOTAL_COL_TYPES             // *
//      P519_FLASH_ERR_TOTAL_TABLE_TYPE            // S
#define P649_SFILL_ADDED                    16436  // CYLINDER,HEAD,POSITION,LENGTH
//      P649_SFILL_ADDED_COL_WIDTH                 //        8,   4,       8,     6
//      P649_SFILL_ADDED_COL_MASK                  //        0,   0,       0,     0
//      P649_SFILL_ADDED_COL_TYPES                 // *
//      P649_SFILL_ADDED_TABLE_TYPE                // S
#define P649_SFILL_HEADSUMMARY              16437  // HEAD,NUMOFSPIRALS,DEFECTSADDED,MAXSCRATCHDEFECTS
//      P649_SFILL_HEADSUMMARY_COL_WIDTH           //    4,          12,          12,               17
//      P649_SFILL_HEADSUMMARY_COL_MASK            //    0,           0,           0,                0
//      P649_SFILL_HEADSUMMARY_COL_TYPES           // *
//      P649_SFILL_HEADSUMMARY_TABLE_TYPE          // S
#define P515_PLIST_DETAILED                 16438  // FLAW_NUM,HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,POSITION,LENGTH,FLAW_TYPE
//      P515_PLIST_DETAILED_COL_WIDTH              //        8,         11,        10,      7,       8,     6,        9
//      P515_PLIST_DETAILED_COL_MASK               //        0,          0,         0,      0,       0,     0,        0
//      P515_PLIST_DETAILED_COL_TYPES              // *
//      P515_PLIST_DETAILED_TABLE_TYPE             // S
#define P519_VALID_KEY_RETURNED             16439  // DIE_NUMBER,RETURNED_VALID_KEY
//      P519_VALID_KEY_RETURNED_COL_WIDTH          //         10,                20
//      P519_VALID_KEY_RETURNED_COL_MASK           //          0,                 0
//      P519_VALID_KEY_RETURNED_COL_TYPES          // *
//      P519_VALID_KEY_RETURNED_TABLE_TYPE         // S
#define P519_VALID_KEY_COMPARE              16440  // DIE_NUMBER,EXPECTED_VALID_KEY,RECEIVED_VALID_KEY
//      P519_VALID_KEY_COMPARE_COL_WIDTH           //         10,                20,                20
//      P519_VALID_KEY_COMPARE_COL_MASK            //          0,                 0,                 0
//      P519_VALID_KEY_COMPARE_COL_TYPES           // *
//      P519_VALID_KEY_COMPARE_TABLE_TYPE          // S
#define P529_SSD_PER_DIE_DEFECTS            16441  // MEDIA_ID,CHANNEL,DIE_0,DIE_1,DIE_2,DIE_3,DIE_4,DIE_5,DIE_6,DIE_7
//      P529_SSD_PER_DIE_DEFECTS_COL_WIDTH         //        8,      8,    5,    5,    5,    5,    5,    5,    5,    5
//      P529_SSD_PER_DIE_DEFECTS_COL_MASK          //        0,      0,    0,    0,    0,    0,    0,    0,    0,    0
//      P529_SSD_PER_DIE_DEFECTS_COL_TYPES         // *
//      P529_SSD_PER_DIE_DEFECTS_TABLE_TYPE        // S
#define P564_MRE_ANALYSIS                   16442  // OOS_MRE_FRAME_NUM,OOS_MRE_FRAME_TIMESTAMP,OOS_MRE_FRAME_VALUE,OOS_DELTA_PREV_MRE,OOS_DELTA_CURR_MRE,HD_PHYS_PSN
//      P564_MRE_ANALYSIS_COL_WIDTH                //                17,                     23,                 19,                18,                18,         11
//      P564_MRE_ANALYSIS_COL_MASK                 //                 1,                      1,                  1,                 1,                 1,          1
//      P564_MRE_ANALYSIS_COL_TYPES                //                 N,                      V,                  N,                 N,                 N,          N
//      P564_MRE_ANALYSIS_TABLE_TYPE               // S
#define P564_TIME_INTERVAL_INFO             16443  // TIME_INTERVAL_FRAME_NUM,TIME_INTERVAL_TIMESTAMP
//      P564_TIME_INTERVAL_INFO_COL_WIDTH          //                      23,                     23
//      P564_TIME_INTERVAL_INFO_COL_MASK           //                       0,                      0
//      P564_TIME_INTERVAL_INFO_COL_TYPES          // *
//      P564_TIME_INTERVAL_INFO_TABLE_TYPE         // S
#define P552_TRK_PER_HD_DB_INFO             16444  // HEAD,STR_SYS_LBA,MAX_USR_TRK,LAST_USR_TRK,START_SYS_TRK,LAST_SYS_TRK,MAX_DRIVE_CYL
//      P552_TRK_PER_HD_DB_INFO_COL_WIDTH          //    4,         18,         14,          14,           14,          14,           14
//      P552_TRK_PER_HD_DB_INFO_COL_MASK           //    0,          0,          0,           0,            0,           0,            0
//      P552_TRK_PER_HD_DB_INFO_COL_TYPES          // *
//      P552_TRK_PER_HD_DB_INFO_TABLE_TYPE         // S
#define P552_USR_AND_SYS_TRK_INFO           16445  // HEAD,MAX_USR_TRK,DRV_LAST_USR_TRK,START_SYS_TRK,LAST_SYS_TRK,MAX_DRIVE_CYL
//      P552_USR_AND_SYS_TRK_INFO_COL_WIDTH        //    4,         13,              18,           15,          14,           15
//      P552_USR_AND_SYS_TRK_INFO_COL_MASK         //    0,          0,               0,            0,           0,            0
//      P552_USR_AND_SYS_TRK_INFO_COL_TYPES        // *
//      P552_USR_AND_SYS_TRK_INFO_TABLE_TYPE       // S
#define P552_DISPLAY_MORE_INFO              16446  // PROD_ID,READ_CHANNEL,SEC_SIZE,RAP_KEY,LBA_SUPPORT,MC_SUPPORT,NVC_SUPPORT,HYBRID_SUPPORT
//      P552_DISPLAY_MORE_INFO_COL_WIDTH           //       9,          14,      10,      9,         13,        12,         13,            16
//      P552_DISPLAY_MORE_INFO_COL_MASK            //       0,           0,       0,      0,          0,         0,          0,             0
//      P552_DISPLAY_MORE_INFO_COL_TYPES           // *
//      P552_DISPLAY_MORE_INFO_TABLE_TYPE          // S
#define P529_SSD_MLIST_DFCT_SUMRY           16447  // MEDIA_ID,CHANNEL_NUM,DIE_0_CNT,DIE_1_CNT,DIE_2_CNT,DIE_3_CNT,DIE_4_CNT,DIE_5_CNT,DIE_6_CNT,DIE_7_CNT,DIE_8_CNT,DIE_9_CNT,DIE_10_CNT,DIE_11_CNT,DIE_12_CNT,DIE_13_CNT,DIE_14_CNT,DIE_15_CNT
//      P529_SSD_MLIST_DFCT_SUMRY_COL_WIDTH        //        8,         11,        9,        9,        9,        9,        9,        9,        9,        9,        9,        9,        10,        10,        10,        10,        10,        10
//      P529_SSD_MLIST_DFCT_SUMRY_COL_MASK         //        1,          1,        1,        1,        1,        1,        1,        1,        1,        1,        1,        1,         1,         1,         1,         1,         1,         1
//      P529_SSD_MLIST_DFCT_SUMRY_COL_TYPES        //        N,          N,        N,        N,        N,        N,        N,        N,        N,        N,        N,        N,         N,         N,         N,         N,         N,         N
//      P529_SSD_MLIST_DFCT_SUMRY_TABLE_TYPE       // S
#define P529_SSD_GLIST_DF_SUMMARY           16448  // MEDIA_ID,CHANNEL,DIE_0,DIE_1,DIE_2,DIE_3,DIE_4,DIE_5,DIE_6,DIE_7,DIE_8,DIE_9,DIE_10,DIE_11,DIE_12,DIE_13,DIE_14,DIE_15
//      P529_SSD_GLIST_DF_SUMMARY_COL_WIDTH        //        8,      8,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,     6,     6,     6,     6,     6,     6
//      P529_SSD_GLIST_DF_SUMMARY_COL_MASK         //        0,      0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,     0,     0,     0
//      P529_SSD_GLIST_DF_SUMMARY_COL_TYPES        // *
//      P529_SSD_GLIST_DF_SUMMARY_TABLE_TYPE       // S
#define P749_SSD_MLIST_DEFECTS              16449  // MEDIA_ID,CHANNEL_NUM,DIE_NUM,BLOCK_NUM,DEFECT_INFO,FLAW_TYPE
//      P749_SSD_MLIST_DEFECTS_COL_WIDTH           //        8,         11,      7,        9,         11,        9
//      P749_SSD_MLIST_DEFECTS_COL_MASK            //        0,          0,      0,        0,          0,        0
//      P749_SSD_MLIST_DEFECTS_COL_TYPES           // *
//      P749_SSD_MLIST_DEFECTS_TABLE_TYPE          // S
#define P749_SSD_MLIST_DF_SUMMARY           16450  // MEDIA_ID,CHANNEL,DIE_0,DIE_1,DIE_2,DIE_3,DIE_4,DIE_5,DIE_6,DIE_7
//      P749_SSD_MLIST_DF_SUMMARY_COL_WIDTH        //        8,      8,    5,    5,    5,    5,    5,    5,    5,    5
//      P749_SSD_MLIST_DF_SUMMARY_COL_MASK         //        0,      0,    0,    0,    0,    0,    0,    0,    0,    0
//      P749_SSD_MLIST_DF_SUMMARY_COL_TYPES        // *
//      P749_SSD_MLIST_DF_SUMMARY_TABLE_TYPE       // S
#define P530_TOTAL_ENTRY_SUMMARY            16451  // DEFECT_ENTRY_ALLOWED,DEFECT_ENTRY_AVAILABLE,DEFECT_ENTRYS_SIZE,TOTAL_ENTRY_UNUSED,TOTAL_ENTRY_USED
//      P530_TOTAL_ENTRY_SUMMARY_COL_WIDTH         //                   20,                    20,                20,                20,              15
//      P530_TOTAL_ENTRY_SUMMARY_COL_MASK          //                    0,                     0,                 0,                 0,               0
//      P530_TOTAL_ENTRY_SUMMARY_COL_TYPES         // *
//      P530_TOTAL_ENTRY_SUMMARY_TABLE_TYPE        // S
#define P530_SLIP_SCTR_CNT2                 16452  // DRV_SLIP_SCTR_CNT,AVAIL_SPARES,MAX_SCTR_SPARES,MAX_SCTR_SPARES_PCT,MAX_LBA_IN_LIST
//      P530_SLIP_SCTR_CNT2_COL_WIDTH              //                17,          12,             15,                 19,             15
//      P530_SLIP_SCTR_CNT2_COL_MASK               //                 1,           1,              1,                  1,              1
//      P530_SLIP_SCTR_CNT2_COL_TYPES              //                 N,           N,              N,                  N,              N
//      P530_SLIP_SCTR_CNT2_TABLE_TYPE             // S
#define P530_DDT_ENTRIES_PCT                16453  // ENTRY_UNUSED,ENTRY_USED,ENTRY_USED_PCT
//      P530_DDT_ENTRIES_PCT_COL_WIDTH             //           12,        12,            15
//      P530_DDT_ENTRIES_PCT_COL_MASK              //            0,         0,             0
//      P530_DDT_ENTRIES_PCT_COL_TYPES             // *
//      P530_DDT_ENTRIES_PCT_TABLE_TYPE            // S
#define P530_PLIST_SPARE_DETAILED           16454  // FLAW_NUM,HD_NUM,TRACK_NUM,POSITION,LENGTH,NUM_SLIP,ACCU_SLIP
//      P530_PLIST_SPARE_DETAILED_COL_WIDTH        //        8,     8,       10,      10,    10,       8,       10
//      P530_PLIST_SPARE_DETAILED_COL_MASK         //        0,     0,        0,       0,     0,       0,        0
//      P530_PLIST_SPARE_DETAILED_COL_TYPES        // *
//      P530_PLIST_SPARE_DETAILED_TABLE_TYPE       // S
#define P530_SLIST_SPARE_DETAILED           16455  // FLAW_NUM,HD_NUM,TRACK_NUM,FLAW_WEDGE,NUM_SLIP,ACCU_SLIP
//      P530_SLIST_SPARE_DETAILED_COL_WIDTH        //        8,     8,       10,        10,       8,       10
//      P530_SLIST_SPARE_DETAILED_COL_MASK         //        0,     0,        0,         0,       0,        0
//      P530_SLIST_SPARE_DETAILED_COL_TYPES        // *
//      P530_SLIST_SPARE_DETAILED_TABLE_TYPE       // S
#define P000_SKIPTRACK_RAW_LIST             16456  // COUNT,TRACK_NUM,HEAD,PBA_TRACK
//      P000_SKIPTRACK_RAW_LIST_COL_WIDTH          //     8,       10,   5,       10
//      P000_SKIPTRACK_RAW_LIST_COL_MASK           //     0,        0,   0,        0
//      P000_SKIPTRACK_RAW_LIST_COL_TYPES          // *
//      P000_SKIPTRACK_RAW_LIST_TABLE_TYPE         // S
#define P000_SKIPTRK_SORTED_LIST            16457  // COUNT,TRACK_NUM,HEAD,SLIP_SECTOR,TOTAL_SLIP
//      P000_SKIPTRK_SORTED_LIST_COL_WIDTH         //     5,       10,   5,         12,        12
//      P000_SKIPTRK_SORTED_LIST_COL_MASK          //     0,        0,   0,          0,         0
//      P000_SKIPTRK_SORTED_LIST_COL_TYPES         // *
//      P000_SKIPTRK_SORTED_LIST_TABLE_TYPE        // S
#define P530_FILL_PDF_LIST                  16458  // COUNT,CYLINDER,HEAD,POSITION,LENGTH
//      P530_FILL_PDF_LIST_COL_WIDTH               //     8,       8,   4,       8,     8
//      P530_FILL_PDF_LIST_COL_MASK                //     0,       0,   0,       0,     0
//      P530_FILL_PDF_LIST_COL_TYPES               // *
//      P530_FILL_PDF_LIST_TABLE_TYPE              // S
#define P1647_MERT4_LOG_DESCRIPTR           16459  // ENTRY_COUNT,MAJOR_REV,MINOR_REV
//      P1647_MERT4_LOG_DESCRIPTR_COL_WIDTH        //          11,        9,        9
//      P1647_MERT4_LOG_DESCRIPTR_COL_MASK         //           0,        0,        0
//      P1647_MERT4_LOG_DESCRIPTR_COL_TYPES        // *
//      P1647_MERT4_LOG_DESCRIPTR_TABLE_TYPE       // S
#define P1647_MERT4_LOG_ENTRIES             16460  // RECORD_NUMBER,BLOCK,CHANNEL_NUM,DIE_NUM,PAGE_NUM,ERROR_TYPE,DFB_OP_INDEX,LOOP_COUNTER,PE_CYCLE_CNT,STATUS
//      P1647_MERT4_LOG_ENTRIES_COL_WIDTH          //            13,    5,         11,      7,       8,        10,          12,          12,          12,    10
//      P1647_MERT4_LOG_ENTRIES_COL_MASK           //             1,    1,          1,      1,       1,         1,           1,           1,           1,     1
//      P1647_MERT4_LOG_ENTRIES_COL_TYPES          //             N,    N,          N,      N,       N,         V,           N,           N,           N,     V
//      P1647_MERT4_LOG_ENTRIES_TABLE_TYPE         // S
#define P1647_MERT4_LOG_SUMMARY             16461  // NUM_ENTRIES,ERROR_TYPE,ERROR_DESCRIPTION,CHANNEL_NUM,DIE_0_ERR_CNT,DIE_1_ERR_CNT,DIE_2_ERR_CNT,DIE_3_ERR_CNT,DIE_4_ERR_CNT,DIE_5_ERR_CNT,DIE_6_ERR_CNT,DIE_7_ERR_CNT,DIE_8_ERR_CNT,DIE_9_ERR_CNT,DIE_10_ERR_CNT,DIE_11_ERR_CNT,DIE_12_ERR_CNT,DIE_13_ERR_CNT,DIE_14_ERR_CNT,DIE_15_ERR_CNT
//      P1647_MERT4_LOG_SUMMARY_COL_WIDTH          //          11,        10,               17,         11,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,            14,            14,            14,            14,            14,            14
//      P1647_MERT4_LOG_SUMMARY_COL_MASK           //           1,         1,                1,          1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,             1,             1,             1,             1,             1,             1
//      P1647_MERT4_LOG_SUMMARY_COL_TYPES          //           N,         V,                V,          N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,             N,             N,             N,             N,             N,             N
//      P1647_MERT4_LOG_SUMMARY_TABLE_TYPE         // S
#define P000_LBACOUNT_ELAPSE_TIME           16462  // COUNT,ELAPSE_TIME
//      P000_LBACOUNT_ELAPSE_TIME_COL_WIDTH        //    16,         16
//      P000_LBACOUNT_ELAPSE_TIME_COL_MASK         //     0,          0
//      P000_LBACOUNT_ELAPSE_TIME_COL_TYPES        // *
//      P000_LBACOUNT_ELAPSE_TIME_TABLE_TYPE       // S
#define P510_DBG_ERROR_RATE                 16463  // HD_PHYS_PSN,HD_LGC_PSN,LBA_PER_HD,LBA_ACCUM,BITS_READ,ERROR_RATE,ERROR_RATE10,HARD_ERROR_RATE,SOFT_ERROR_RATE
//      P510_DBG_ERROR_RATE_COL_WIDTH              //          11,        10,        12,       11,       12,        15,          12,             15,             15
//      P510_DBG_ERROR_RATE_COL_MASK               //           0,         0,         0,        0,        0,         0,           0,              0,              0
//      P510_DBG_ERROR_RATE_COL_TYPES              // *
//      P510_DBG_ERROR_RATE_TABLE_TYPE             // S
#define P000_ACCUM_LBA_PER_HEAD             16464  // HEAD,ACCUM_LBA
//      P000_ACCUM_LBA_PER_HEAD_COL_WIDTH          //   10,       15
//      P000_ACCUM_LBA_PER_HEAD_COL_MASK           //    0,        0
//      P000_ACCUM_LBA_PER_HEAD_COL_TYPES          // *
//      P000_ACCUM_LBA_PER_HEAD_TABLE_TYPE         // S
#define P000_ACCUM_LBA_PER_XFER             16465  // HEAD,LBA_PER_HEAD,ACCUM_XFER,ACCUM_LBA
//      P000_ACCUM_LBA_PER_XFER_COL_WIDTH          //    5,          15,        15,       15
//      P000_ACCUM_LBA_PER_XFER_COL_MASK           //    0,           0,         0,        0
//      P000_ACCUM_LBA_PER_XFER_COL_TYPES          // *
//      P000_ACCUM_LBA_PER_XFER_TABLE_TYPE         // S
#define P000_DISP_LBA_TO_WEDGE              16466  // BLOCK_NUMBER,CYLINDER,HEAD,WEDGE
//      P000_DISP_LBA_TO_WEDGE_COL_WIDTH           //           12,      11,   4,   10
//      P000_DISP_LBA_TO_WEDGE_COL_MASK            //            0,       0,   0,    0
//      P000_DISP_LBA_TO_WEDGE_COL_TYPES           // *
//      P000_DISP_LBA_TO_WEDGE_TABLE_TYPE          // S
#define P000_BANDOM_INFO                    16467  // MAX_DRIVE_LBA,NUM_OF_BANDS,BAND_SIZE,BAND_SIZE_USED,MAX_BLKS_PER_XFR,BANDOM_KEY,CLEANUP_FLAG
//      P000_BANDOM_INFO_COL_WIDTH                 //            13,          12,        9,            14,              16,        10,          12
//      P000_BANDOM_INFO_COL_MASK                  //             0,           0,        0,             0,               0,         0,           0
//      P000_BANDOM_INFO_COL_TYPES                 // *
//      P000_BANDOM_INFO_TABLE_TYPE                // S
#define P539_RW_ERROR_DB                    16468  // KEY,CODE,QUAL,FRU,RTYS,BLOCK,CYL,TEST_LBA,TEST_CYL,HD,SEC,CMD_BYTE_0,CB_1,CB_2,CB_3,CB_4,CB_5,CB_6,CB_7,CB_8,CB_9,CB10,CB11,CB12,CB13,CB14,CB15
//      P539_RW_ERROR_DB_COL_WIDTH                 //   3,   4,   4,  3,   4,    9,  8,       9,       8, 2,  5,        10,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4
//      P539_RW_ERROR_DB_COL_MASK                  //   0,   0,   0,  0,   0,    0,  0,       0,       0, 0,  0,         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
//      P539_RW_ERROR_DB_COL_TYPES                 // *
//      P539_RW_ERROR_DB_TABLE_TYPE                // S
#define P539_RW_TRK_ERROR                   16469  // KEY,CODE,QUAL,FRU,RTYS,BLOCK,ERR_CYL,WDGE,HD,SEC,CMD_BYTE_0,CB_1,CB_2,CB_3,CB_4,CB_5,CB_6,CB_7,CB_8,CB_9,CB10,CB11,CB12,CB13,CB14,CB15
//      P539_RW_TRK_ERROR_COL_WIDTH                //   3,   4,   4,  3,   4,    9,      8,   4, 2,  4,        10,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4
//      P539_RW_TRK_ERROR_COL_MASK                 //   0,   0,   0,  0,   0,    0,      0,   0, 0,  0,         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
//      P539_RW_TRK_ERROR_COL_TYPES                // *
//      P539_RW_TRK_ERROR_TABLE_TYPE               // S
#define P539_RW_TRK_ERR_DBG                 16470  // KEY,CODE,QUAL,FRU,N_SEC,STR_LBA,END_LBA,BLOCK,SP_SZ,SRT_CYL,STP_CYL,TST_CYL,ERR_CYL,TST_HD,HD
//      P539_RW_TRK_ERR_DBG_COL_WIDTH              //   3,   4,   4,  3,    6,     10,     10,   10,    5,      8,      8,      8,      8,     6, 2
//      P539_RW_TRK_ERR_DBG_COL_MASK               //   0,   0,   0,  0,    0,      0,      0,    0,    0,      0,      0,      0,      0,     0, 0
//      P539_RW_TRK_ERR_DBG_COL_TYPES              // *
//      P539_RW_TRK_ERR_DBG_TABLE_TYPE             // S
#define P000_RW_ERROR_TRK                   16471  // KEY,CODE,QUAL,FRU,RTYS,BLOCK,ERR_CYL,WDGE,HD,SEC,CMD_BYTE_0,CB_1,CB_2,CB_3,CB_4,CB_5,CB_6,CB_7,CB_8,CB_9
//      P000_RW_ERROR_TRK_COL_WIDTH                //   3,   4,   4,  3,   4,    9,      8,   4, 2,  4,        10,   4,   4,   4,   4,   4,   4,   4,   4,   4
//      P000_RW_ERROR_TRK_COL_MASK                 //   0,   0,   0,  0,   0,    0,      0,   0, 0,  0,         0,   0,   0,   0,   0,   0,   0,   0,   0,   0
//      P000_RW_ERROR_TRK_COL_TYPES                // *
//      P000_RW_ERROR_TRK_TABLE_TYPE               // S
#define P531_HEADER_INFO                    16472  // STARTING_SECTOR,SIZE_IN_SECTORS,FILE_LENGTH,STATUS,FILE_NAME,INDEX
//      P531_HEADER_INFO_COL_WIDTH                 //              15,             15,         11,     6,       12,    7
//      P531_HEADER_INFO_COL_MASK                  //               0,              0,          0,     0,        0,    0
//      P531_HEADER_INFO_COL_TYPES                 // *
//      P531_HEADER_INFO_TABLE_TYPE                // S
#define P531_HEADER                         16473  // VERSION,KEY_NAME,ENTRIES,NUM_SECTORS
//      P531_HEADER_COL_WIDTH                      //       7,       8,      7,         11
//      P531_HEADER_COL_MASK                       //       0,       0,      0,          0
//      P531_HEADER_COL_TYPES                      // *
//      P531_HEADER_TABLE_TYPE                     // S
#define P000_HEAD_STATUS_TABLE              16474  // HD_PHYS_PSN,HD_LGC_PSN,STATUS_CODE
//      P000_HEAD_STATUS_TABLE_COL_WIDTH           //          11,        10,         11
//      P000_HEAD_STATUS_TABLE_COL_MASK            //           0,         0,          0
//      P000_HEAD_STATUS_TABLE_COL_TYPES           // *
//      P000_HEAD_STATUS_TABLE_TABLE_TYPE          // S
#define P000_DEPENDENT_ZONE_GROUP           16475  // HEAD,ZONE,START_LBA,START_PBA,SECT_PER_MZONE,CUM_SLIP,MZONE_IX,NUM_MNZ,ZTAB_IX,MZ_SKEW,START_TRK
//      P000_DEPENDENT_ZONE_GROUP_COL_WIDTH        //    4,   4,       12,       12,            15,       8,       9,      8,      8,      8,       10
//      P000_DEPENDENT_ZONE_GROUP_COL_MASK         //    0,   0,        0,        0,             0,       0,       0,      0,      0,      0,        0
//      P000_DEPENDENT_ZONE_GROUP_COL_TYPES        // *
//      P000_DEPENDENT_ZONE_GROUP_TABLE_TYPE       // S
#define P000_DISP_HEAD_ZONE_CYL             16476  // HEAD,ZONE,ST_CYL,NUM_CYL,NUM_TRK,NUM_SEC,ACCUM_PBA,ACCUM_CYL,ST_SP,NUM_SP,NUM_MNZ,SP_SZE,WD_SZE,GAPB,GAPA
//      P000_DISP_HEAD_ZONE_CYL_COL_WIDTH          //    4,   4,     7,      7,      7,      7,       10,       10,    7,     7,      7,     7,     7,   5,   5
//      P000_DISP_HEAD_ZONE_CYL_COL_MASK           //    0,   0,     0,      0,      0,      0,        0,        0,    0,     0,      0,     0,     0,   0,   0
//      P000_DISP_HEAD_ZONE_CYL_COL_TYPES          // *
//      P000_DISP_HEAD_ZONE_CYL_TABLE_TYPE         // S
#define P000_RAP_CAPACITY_FRAME             16477  // FRAME,SECT_SIZE,MAX_LBA
//      P000_RAP_CAPACITY_FRAME_COL_WIDTH          //     5,        9,     15
//      P000_RAP_CAPACITY_FRAME_COL_MASK           //     0,        0,      0
//      P000_RAP_CAPACITY_FRAME_COL_TYPES          // *
//      P000_RAP_CAPACITY_FRAME_TABLE_TYPE         // S
#define P530_SLIP_AMOUNT_FORMULA            16478  // COUNT,SWD_PER_TRK,SYM_PER_WDG,SYM_PER_TRK,PBA_PER_TRK,SYM_PER_SEC,DF_LEN_SF_DEALLOC,SLIP_AMOUNT,RND_AMOUNT
//      P530_SLIP_AMOUNT_FORMULA_COL_WIDTH         //     6,         11,         11,         11,         11,         11,               17,         10,        10
//      P530_SLIP_AMOUNT_FORMULA_COL_MASK          //     0,          0,          0,          0,          0,          0,                0,          0,         0
//      P530_SLIP_AMOUNT_FORMULA_COL_TYPES         // *
//      P530_SLIP_AMOUNT_FORMULA_TABLE_TYPE        // S
#define P535_INITR_INTERFACE_CHIP           16479  // CONTROLLER_NAME,REV,CHIP_VERSION
//      P535_INITR_INTERFACE_CHIP_COL_WIDTH        //              15,  6,          20
//      P535_INITR_INTERFACE_CHIP_COL_MASK         //               0,  0,           0
//      P535_INITR_INTERFACE_CHIP_COL_TYPES        // *
//      P535_INITR_INTERFACE_CHIP_TABLE_TYPE       // S
#define P000_DUPLICATE_SKIPTRK              16480  // COUNT,CYLINDER,HEAD,TOTAL_SLIP
//      P000_DUPLICATE_SKIPTRK_COL_WIDTH           //     5,       8,   5,        12
//      P000_DUPLICATE_SKIPTRK_COL_MASK            //     0,       0,   0,         0
//      P000_DUPLICATE_SKIPTRK_COL_TYPES           // *
//      P000_DUPLICATE_SKIPTRK_TABLE_TYPE          // S
#define P000_NEW_DEFECT_TYPE                16481  // DEF_CYL,DEF_HD,DEF_SEC,START_CYL,START_HD,START_SEC,END_CYL,END_HD,END_SEC,P_CYL,P_HD,P_SEC,TYPE
//      P000_NEW_DEFECT_TYPE_COL_WIDTH             //      10,     6,      7,       10,       8,        9,     10,     6,      7,   10,   4,    5,   4
//      P000_NEW_DEFECT_TYPE_COL_MASK              //       0,     0,      0,        0,       0,        0,      0,     0,      0,    0,   0,    0,   0
//      P000_NEW_DEFECT_TYPE_COL_TYPES             // *
//      P000_NEW_DEFECT_TYPE_TABLE_TYPE            // S
#define P631_READ_ERR_SENSE_DATA            16482  // Head,Zone,Cyl,WClr,failedLBA,SENSE_BYTE_1,SENSE_BYTE_2,SENSE_BYTE_3,SENSE_BYTE_4,SENSE_BYTE_8,SENSE_BYTE_9,SENSE_BYTE_10,SENSE_BYTE_11,SENSE_BYTE_12,SENSE_BYTE_13,SENSE_BYTE_14,SENSE_BYTE_15,SENSE_BYTE_16,SENSE_BYTE_17,RetryInfo,RetryCnt1,RetryCnt2
//      P631_READ_ERR_SENSE_DATA_COL_WIDTH         //    4,   4,  3,   4,       10,          12,          12,          12,          12,          12,          12,           13,           13,           13,           13,           13,           13,           13,           13,        9,        9,        9
//      P631_READ_ERR_SENSE_DATA_COL_MASK          //    0,   0,  0,   0,        0,           0,           0,           0,           0,           0,           0,            0,            0,            0,            0,            0,            0,            0,            0,        0,        0,        0
//      P631_READ_ERR_SENSE_DATA_COL_TYPES         // *
//      P631_READ_ERR_SENSE_DATA_TABLE_TYPE        // S
#define P631_SFR_FLY_HEIGHT_DATA            16483  // Head,Zone,SFR_Target,WClr_Calc
//      P631_SFR_FLY_HEIGHT_DATA_COL_WIDTH         //    4,   4,        10,       10
//      P631_SFR_FLY_HEIGHT_DATA_COL_MASK          //    0,   0,         0,        0
//      P631_SFR_FLY_HEIGHT_DATA_COL_TYPES         // *
//      P631_SFR_FLY_HEIGHT_DATA_TABLE_TYPE        // S
#define P631_WCLR_DATA                      16484  // Head,Zone,WClr,SFR,WriteN,ReadN,NLBAsRead,NUERsTotal,NLBAsRecovered
//      P631_WCLR_DATA_COL_WIDTH                   //    4,   4,   4, 10,     6,    4,        9,        10,            14
//      P631_WCLR_DATA_COL_MASK                    //    0,   0,   0,  0,     0,    0,        0,         0,             0
//      P631_WCLR_DATA_COL_TYPES                   // *
//      P631_WCLR_DATA_TABLE_TYPE                  // S
#define P510_SINGLE_WRAP_REPORT             16485  // START_LBA,TOT_BLK_TO_XFER,BLKS_XFERED,END_LBA,NUM_WRAP
//      P510_SINGLE_WRAP_REPORT_COL_WIDTH          //        12,             15,         12,      9,       8
//      P510_SINGLE_WRAP_REPORT_COL_MASK           //         0,              0,          0,      0,       0
//      P510_SINGLE_WRAP_REPORT_COL_TYPES          // *
//      P510_SINGLE_WRAP_REPORT_TABLE_TYPE         // S
#define P510_DBG_TRANSFERRED                16486  // KEY,CODE,QUAL,FRU,RTYS,BLOCK,STRT_LBA,END_LBA,BLK_CNT,CYL,HD,SECT,CMD_BYTE_0,CB_1,CB_2,CB_3,CB_4,CB_5,CB_6,CB_7,CB_8,CB_9,CB10,CB11,CB12,CB13
//      P510_DBG_TRANSFERRED_COL_WIDTH             //   3,   4,   4,  3,   4,    9,       9,      9,      8,  8, 2,   5,        10,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4
//      P510_DBG_TRANSFERRED_COL_MASK              //   0,   0,   0,  0,   0,    0,       0,      0,      0,  0, 0,   0,         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
//      P510_DBG_TRANSFERRED_COL_TYPES             // *
//      P510_DBG_TRANSFERRED_TABLE_TYPE            // S
#define P510_SINGLE_XFER_REPORT             16487  // START_LBA,BLK_CNT,END_LBA,BLKS_XFERED,NUM_XFER,TOT_XFER,NUM_WRAP
//      P510_SINGLE_XFER_REPORT_COL_WIDTH          //        12,      8,     12,         12,       8,       8,       8
//      P510_SINGLE_XFER_REPORT_COL_MASK           //         0,      0,      0,          0,       0,       0,       0
//      P510_SINGLE_XFER_REPORT_COL_TYPES          // *
//      P510_SINGLE_XFER_REPORT_TABLE_TYPE         // S
#define P510_INITIAL_REPORT                 16488  // START_LBA,TOT_BLK_TO_XFER,BLKS_XFERED,END_LBA,NUM_WRAP
//      P510_INITIAL_REPORT_COL_WIDTH              //        12,             15,         12,      9,       8
//      P510_INITIAL_REPORT_COL_MASK               //         0,              0,          0,      0,       0
//      P510_INITIAL_REPORT_COL_TYPES              // *
//      P510_INITIAL_REPORT_TABLE_TYPE             // S
#define P510_FINAL_REPORT                   16489  // START_LBA,TOT_BLK_TO_XFER,BLKS_XFERED,END_LBA,NUM_WRAP
//      P510_FINAL_REPORT_COL_WIDTH                //        12,             15,         12,      9,       8
//      P510_FINAL_REPORT_COL_MASK                 //         0,              0,          0,      0,       0
//      P510_FINAL_REPORT_COL_TYPES                // *
//      P510_FINAL_REPORT_TABLE_TYPE               // S
#define P1647_MERT4_LOG_ENTRIES_2           16490  // RECORD_NUMBER,CHANNEL_NUM,DIE_NUM,PAGE_NUM,ERROR_TYPE,DFB_OP_INDEX,LOOP_COUNTER,PE_CYCLE_CNT,DRAM_LOG_TYPE,DRAM_LOG,BLOCK_PLANE_0,BLOCK_PLANE_1,BLOCK_PLANE_2,BLOCK_PLANE_3
//      P1647_MERT4_LOG_ENTRIES_2_COL_WIDTH        //            13,         11,      7,       8,        10,          12,          12,          12,           16,       8,           13,           13,           13,           13
//      P1647_MERT4_LOG_ENTRIES_2_COL_MASK         //             1,          1,      1,       1,         1,           1,           1,           1,            1,       1,            1,            1,            1,            1
//      P1647_MERT4_LOG_ENTRIES_2_COL_TYPES        //             N,          N,      N,       N,         V,           N,           N,           N,            V,       V,            N,            N,            N,            N
//      P1647_MERT4_LOG_ENTRIES_2_TABLE_TYPE       // S
#define P000_ZONE_INFO_DEBUG                16491  // HD,ZN,STR_LBA,STR_PBA,PBA_P_MZ,BEG_CYL,STR_TRK,NUM_CYL,NUM_TRK,ACC_CYL,PBA_P_TRK,ACC_PBA,ST_SP,MZ_IX,NUM_SP,NUM_MZ,S_ZN,SP_SZE,WD_SZE,GAPB,GAPA
//      P000_ZONE_INFO_DEBUG_COL_WIDTH             //  3, 3,     10,     10,       8,      8,      8,      8,      8,      9,        9,     10,    5,    5,     6,     6,   4,     6,     6,   4,   4
//      P000_ZONE_INFO_DEBUG_COL_MASK              //  0, 0,      0,      0,       0,      0,      0,      0,      0,      0,        0,      0,    0,    0,     0,     0,   0,     0,     0,   0,   0
//      P000_ZONE_INFO_DEBUG_COL_TYPES             // *
//      P000_ZONE_INFO_DEBUG_TABLE_TYPE            // S
#define P552_RAP_ZG_CONF_FILE_HDR           16492  // NOM_STR_TRK,NOM_SYS_TRK_PER_HD,NOM_NUM_SYS_SERP,NOM_SERP_SIZE,SPARE_SYS_TRK_PER_HD,ACT_SERP_PER_ZN,MC_ZN,MC_NUM_SERP,MC_OD_GBAND,MC_ID_GBAND
//      P552_RAP_ZG_CONF_FILE_HDR_COL_WIDTH        //          12,                18,              17,           14,                  22,             16,    6,         12,         12,         12
//      P552_RAP_ZG_CONF_FILE_HDR_COL_MASK         //           0,                 0,               0,            0,                   0,              0,    0,          0,          0,          0
//      P552_RAP_ZG_CONF_FILE_HDR_COL_TYPES        // *
//      P552_RAP_ZG_CONF_FILE_HDR_TABLE_TYPE       // S
#define P552_DEPENDENT_USER_ZN              16493  // HEAD,ZONE,START_LBA,START_PBA,SECT_PER_MZONE,CUM_SLIP,MZONE_IX,NUM_MINI_ZN,ZTAB_IX,MZ_SKEW,START_TRK,NUM_TRKS,SUPER_ZN_IX
//      P552_DEPENDENT_USER_ZN_COL_WIDTH           //    4,   4,       12,       12,            15,       8,       9,         12,      8,      8,       10,       9,         11
//      P552_DEPENDENT_USER_ZN_COL_MASK            //    0,   0,        0,        0,             0,       0,       0,          0,      0,      0,        0,       0,          0
//      P552_DEPENDENT_USER_ZN_COL_TYPES           // *
//      P552_DEPENDENT_USER_ZN_TABLE_TYPE          // S
#define P552_DISP_ZN_CONFIG_FILE            16494  // HEAD,ZONE,ST_TRK,NUM_TRKS,PBA_PER_TRK,ST_SP,NUM_SP,SP_SZE,WD_SZE,GAPB,GAPA
//      P552_DISP_ZN_CONFIG_FILE_COL_WIDTH         //    4,   4,     7,       9,         12,    7,     7,     7,     7,   5,   5
//      P552_DISP_ZN_CONFIG_FILE_COL_MASK          //    0,   0,     0,       0,          0,    0,     0,     0,     0,   0,   0
//      P552_DISP_ZN_CONFIG_FILE_COL_TYPES         // *
//      P552_DISP_ZN_CONFIG_FILE_TABLE_TYPE        // S
#define P000_TOTAL_PBA                      16495  // HEAD,ZONE,NUM_TRKS,PBA_PER_TRK,PBA_PER_ZN,TOTAL_PBA
//      P000_TOTAL_PBA_COL_WIDTH                   //    4,   4,       8,         12,        11,       10
//      P000_TOTAL_PBA_COL_MASK                    //    0,   0,       0,          0,         0,        0
//      P000_TOTAL_PBA_COL_TYPES                   // *
//      P000_TOTAL_PBA_TABLE_TYPE                  // S
#define P000_TOTAL_TRACKS                   16496  // HEAD,ZONE,TRK_PER_ZN,TOTAL_TRKS
//      P000_TOTAL_TRACKS_COL_WIDTH                //    4,   4,        11,        10
//      P000_TOTAL_TRACKS_COL_MASK                 //    0,   0,         0,         0
//      P000_TOTAL_TRACKS_COL_TYPES                // *
//      P000_TOTAL_TRACKS_TABLE_TYPE               // S
#define P644_SSD_NOR_DFCTS_XFER             16497  // MEDIA_ID,CHANNEL_NUM,DIE_NUM,BLOCK_NUM,DEFECT_INFO
//      P644_SSD_NOR_DFCTS_XFER_COL_WIDTH          //        8,         11,      7,        9,         11
//      P644_SSD_NOR_DFCTS_XFER_COL_MASK           //        1,          1,      1,        1,          0
//      P644_SSD_NOR_DFCTS_XFER_COL_TYPES          //        N,          N,      N,        N
//      P644_SSD_NOR_DFCTS_XFER_TABLE_TYPE         // S
#define P644_SSD_CAT_DFCT_PER_DIE           16498  // MEDIA_ID,DIE_0,DIE_1,DIE_2,DIE_3,DIE_4,DIE_5,DIE_6,DIE_7,DIE_8,DIE_9,DIE_10,DIE_11,DIE_12,DIE_13,DIE_14,DIE_15
//      P644_SSD_CAT_DFCT_PER_DIE_COL_WIDTH        //        8,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,     6,     6,     6,     6,     6,     6
//      P644_SSD_CAT_DFCT_PER_DIE_COL_MASK         //        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,     0,     0,     0
//      P644_SSD_CAT_DFCT_PER_DIE_COL_TYPES        // *
//      P644_SSD_CAT_DFCT_PER_DIE_TABLE_TYPE       // S
#define P644_SSD_TOT_DFCT_PER_DIE           16499  // MEDIA_ID,DIE_0,DIE_1,DIE_2,DIE_3,DIE_4,DIE_5,DIE_6,DIE_7,DIE_8,DIE_9,DIE_10,DIE_11,DIE_12,DIE_13,DIE_14,DIE_15
//      P644_SSD_TOT_DFCT_PER_DIE_COL_WIDTH        //        8,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,     6,     6,     6,     6,     6,     6
//      P644_SSD_TOT_DFCT_PER_DIE_COL_MASK         //        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,     0,     0,     0
//      P644_SSD_TOT_DFCT_PER_DIE_COL_TYPES        // *
//      P644_SSD_TOT_DFCT_PER_DIE_TABLE_TYPE       // S
#define P749_SSD_SF_PAD_DEFECTS             16500  // MEDIA_ID,CHANNEL_NUM,DIE_NUM,BLOCK_NUM,GLIST_ADD,FLAW_TYPE
//      P749_SSD_SF_PAD_DEFECTS_COL_WIDTH          //        8,         11,      7,        9,        9,        9
//      P749_SSD_SF_PAD_DEFECTS_COL_MASK           //        1,          1,      1,        1,        1,        1
//      P749_SSD_SF_PAD_DEFECTS_COL_TYPES          //        N,          N,      N,        N,        V,        V
//      P749_SSD_SF_PAD_DEFECTS_TABLE_TYPE         // S
#define P529_SSD_MLIST_DFCT_PLANE           16501  // CHANNEL_NUM,DIE_NUM,PLANE_0_CNT,PLANE_1_CNT,PLANE_2_CNT,PLANE_3_CNT
//      P529_SSD_MLIST_DFCT_PLANE_COL_WIDTH        //          11,      7,         11,         11,         11,         11
//      P529_SSD_MLIST_DFCT_PLANE_COL_MASK         //           1,      1,          1,          1,          1,          1
//      P529_SSD_MLIST_DFCT_PLANE_COL_TYPES        //           N,      N,          N,          N,          N,          N
//      P529_SSD_MLIST_DFCT_PLANE_TABLE_TYPE       // S
#define P529_SSD_TOTAL_DFCT_PLANE           16502  // CHANNEL_NUM,DIE_NUM,PLANE_0_CNT,PLANE_1_CNT,PLANE_2_CNT,PLANE_3_CNT
//      P529_SSD_TOTAL_DFCT_PLANE_COL_WIDTH        //          11,      7,         11,         11,         11,         11
//      P529_SSD_TOTAL_DFCT_PLANE_COL_MASK         //           1,      1,          1,          1,          1,          1
//      P529_SSD_TOTAL_DFCT_PLANE_COL_TYPES        //           N,      N,          N,          N,          N,          N
//      P529_SSD_TOTAL_DFCT_PLANE_TABLE_TYPE       // S
#define P1647_MERT4_RD_VBOSE                16503  // RECORD_NUMBER,CHANNEL_NUM,DIE_NUM,BLOCK_NUM,PAGE_NUM,ERROR_TYPE,DFB_OP_INDEX,LOOP_COUNTER,PE_CYCLE_CNT,RD_VERBOSE_BER
//      P1647_MERT4_RD_VBOSE_COL_WIDTH             //            13,         11,      7,        9,       8,        10,          12,          12,          12,            14
//      P1647_MERT4_RD_VBOSE_COL_MASK              //             0,          0,      0,        0,       0,         0,           0,           0,           0,             0
//      P1647_MERT4_RD_VBOSE_COL_TYPES             // *
//      P1647_MERT4_RD_VBOSE_TABLE_TYPE            // S
#define P552_USR_ZONE_TABLE                 16504  // HEAD,ZONE,START_LBA,START_PBA,START_TRK,START_MZN,NUM_MZN,SERPENT_SIZE,TRK_PER_ZN,PBA_PER_ZN,ACC_PBA
//      P552_USR_ZONE_TABLE_COL_WIDTH              //    4,   4,       12,       12,       10,        9,      9,          15,        10,        11,     11
//      P552_USR_ZONE_TABLE_COL_MASK               //    0,   0,        0,        0,        0,        0,      0,           0,         0,         0,      0
//      P552_USR_ZONE_TABLE_COL_TYPES              // *
//      P552_USR_ZONE_TABLE_TABLE_TYPE             // S
#define P552_DISP_LBA_HD_SVZONE             16505  // MAX_LBA,MAX_PBA,MAX_HD,MAX_ZG,MAX_ZF,MAX_SZG,ACT_SZG,OVERLAP_SZG,MAX_SVZ,ACT_SVZ,OVERLAP_SVZ,MAX_LBA_ZONE
//      P552_DISP_LBA_HD_SVZONE_COL_WIDTH          //      10,     10,     7,     7,     7,      8,      8,         12,      8,      8,         12,          13
//      P552_DISP_LBA_HD_SVZONE_COL_MASK           //       0,      0,     0,     0,     0,      0,      0,          0,      0,      0,          0,           0
//      P552_DISP_LBA_HD_SVZONE_COL_TYPES          // *
//      P552_DISP_LBA_HD_SVZONE_TABLE_TYPE         // S
#define P000_SZONE_INFO_DEBUG               16506  // HEAD,ZONE,BEGIN_CYL,START_TRK,NUM_CYL,NUM_TRK,ACCUM_CYL,PBA_PER_TRK,ZN_PBA_AVG,PBA_PER_ZN,ACC_PBA_AVG,ACCUM_PBA,SZG_IX,NUM_SZG,BEG_SP,SP_IX,NUM_SP,NUM_MNZ,SP_SZE,WD_SZE,GAPB,GAPA
//      P000_SZONE_INFO_DEBUG_COL_WIDTH            //    5,   4,       10,       10,     10,     10,       10,         12,        10,        10,         11,       10,     6,      7,     8,    5,     6,      7,     6,     6,   4,   4
//      P000_SZONE_INFO_DEBUG_COL_MASK             //    0,   0,        0,        0,      0,      0,        0,          0,         0,         0,          0,        0,     0,      0,     0,    0,     0,      0,     0,     0,   0,   0
//      P000_SZONE_INFO_DEBUG_COL_TYPES            // *
//      P000_SZONE_INFO_DEBUG_TABLE_TYPE           // S
#define P552_RAP_SVZ_CONFIG_TABLE           16507  // HEAD,SV_ZONE,SVZ_GATE_WIDTH,NUM_SVZ_SP,SVZ_OFFSET
//      P552_RAP_SVZ_CONFIG_TABLE_COL_WIDTH        //    4,      7,            15,        10,        10
//      P552_RAP_SVZ_CONFIG_TABLE_COL_MASK         //    0,      0,             0,         0,         0
//      P552_RAP_SVZ_CONFIG_TABLE_COL_TYPES        // *
//      P552_RAP_SVZ_CONFIG_TABLE_TABLE_TYPE       // S
#define P552_SVZONE_GROUP                   16508  // SZ_GROUP,START_PBA,PBA_PER_MZ,ST_MZN_IX,NUM_MZN,PBA_PER_SZG,TOTAL_SECTORS
//      P552_SVZONE_GROUP_COL_WIDTH                //        8,       10,        12,       10,      8,         12,           14
//      P552_SVZONE_GROUP_COL_MASK                 //        0,        0,         0,        0,      0,          0,            0
//      P552_SVZONE_GROUP_COL_TYPES                // *
//      P552_SVZONE_GROUP_TABLE_TYPE               // S
#define P552_SV0_ZONE_FRAMES                16509  // S_ZONE,PBA_PER_TRK,WEDGE_SZ,NUM_MINI_SERPENT
//      P552_SV0_ZONE_FRAMES_COL_WIDTH             //      6,          8,      12,              17
//      P552_SV0_ZONE_FRAMES_COL_MASK              //      0,          0,       0,               0
//      P552_SV0_ZONE_FRAMES_COL_TYPES             // *
//      P552_SV0_ZONE_FRAMES_TABLE_TYPE            // S
#define P552_GET_DRIVE_INFO                 16510  // SERIAL_NUM,MODEL_NUM,CFW_REV,SERVO_REV,PROD_ID,CTRL_NAME,CHIP_VER,REG_VALUE,RD_CHANNEL,RD_CHANNEL_VER
//      P552_GET_DRIVE_INFO_COL_WIDTH              //         11,       10,      8,       10,      8,       13,       9,       13,        13,            14
//      P552_GET_DRIVE_INFO_COL_MASK               //          0,        0,      0,        0,      0,        0,       0,        0,         0,             0
//      P552_GET_DRIVE_INFO_COL_TYPES              // *
//      P552_GET_DRIVE_INFO_TABLE_TYPE             // S
#define P552_GET_EXTRA_INFO                 16511  // SENSE_MODE,SEC_SIZE,RAP_KEY,LBA_SUPPORT,MC_SUPPORT,NVC_SUPPORT,HYBRID_SUPPORT,PI_FORMAT,5XXE
//      P552_GET_EXTRA_INFO_COL_WIDTH              //         12,       9,      8,         12,        11,         12,            15,       10,   5
//      P552_GET_EXTRA_INFO_COL_MASK               //          0,       0,      0,          0,         0,          0,             0,        0,   0
//      P552_GET_EXTRA_INFO_COL_TYPES              // *
//      P552_GET_EXTRA_INFO_TABLE_TYPE             // S
#define P529_SSD_TOTAL_DFCT_SUMRY           16512  // MEDIA_ID,CHANNEL_NUM,DIE_0_CNT,DIE_1_CNT,DIE_2_CNT,DIE_3_CNT,DIE_4_CNT,DIE_5_CNT,DIE_6_CNT,DIE_7_CNT,DIE_8_CNT,DIE_9_CNT,DIE_10_CNT,DIE_11_CNT,DIE_12_CNT,DIE_13_CNT,DIE_14_CNT,DIE_15_CNT,TOTAL_DFCT_CHANNEL
//      P529_SSD_TOTAL_DFCT_SUMRY_COL_WIDTH        //        8,         11,        9,        9,        9,        9,        9,        9,        9,        9,        9,        9,        10,        10,        10,        10,        10,        10,                18
//      P529_SSD_TOTAL_DFCT_SUMRY_COL_MASK         //        1,          1,        1,        1,        1,        1,        1,        1,        1,        1,        1,        1,         1,         1,         1,         1,         1,         1,                 1
//      P529_SSD_TOTAL_DFCT_SUMRY_COL_TYPES        //        N,          N,        N,        N,        N,        N,        N,        N,        N,        N,        N,        N,         N,         N,         N,         N,         N,         N,                 N
//      P529_SSD_TOTAL_DFCT_SUMRY_TABLE_TYPE       // S
#define P552_DISP_RAP_FILE                  16513  // LINE,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
//      P552_DISP_RAP_FILE_COL_WIDTH               //    6,6,2,2,2,2,2,2,2,2,2, 2, 2, 2, 2, 2, 2
//      P552_DISP_RAP_FILE_COL_MASK                //    0,0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0
//      P552_DISP_RAP_FILE_COL_TYPES               // *
//      P552_DISP_RAP_FILE_TABLE_TYPE              // V
#define P552_PUB_DEPENDENT_USR_ZN           16514  // HD,ZN,STR_LBA,STR_PBA,BEG_CYL,STR_TRK,NUM_CYL,NUM_TRK,ACC_CYL,ST_SP,MZ_IX,NUM_SP,NUM_MZ,SP_SZE,WD_SZE,GAPB,GAPA,SG_IX,NUM_SG,ACC_SG,SZ_IX,NUM_SZ,ACC_SZ,PBA_P_TR,DRV_PBA,SG_PBA,ACC_SG_PBA,SZ_PBA,ACC_SZ_PBA
//      P552_PUB_DEPENDENT_USR_ZN_COL_WIDTH        //  3, 3,      9,      9,      7,      7,      7,      7,      8,    5,    5,     6,     6,     6,     6,   4,   4,    5,     6,     6,    5,     6,     6,       8,     12,     7,        10,     7,        10
//      P552_PUB_DEPENDENT_USR_ZN_COL_MASK         //  0, 0,      0,      0,      0,      0,      0,      0,      0,    0,    0,     0,     0,     0,     0,   0,   0,    0,     0,     0,    0,     0,     0,       0,      0,     0,         0,     0,         0
//      P552_PUB_DEPENDENT_USR_ZN_COL_TYPES        // *
//      P552_PUB_DEPENDENT_USR_ZN_TABLE_TYPE       // S
#define P552_SERVO_ZONE_TRACK               16515  // HEAD,ZONE,SV_TRK0,SV_TRK1,SV_TRK2,SV_TRK3,SV_TRK4
//      P552_SERVO_ZONE_TRACK_COL_WIDTH            //    4,   4,     10,     10,     10,     10,     10
//      P552_SERVO_ZONE_TRACK_COL_MASK             //    0,   0,      0,      0,      0,      0,      0
//      P552_SERVO_ZONE_TRACK_COL_TYPES            // *
//      P552_SERVO_ZONE_TRACK_TABLE_TYPE           // S
#define P552_PUB_DEP_ZN_TST                 16516  // HEAD,ZONE,START_PBA,START_TRK,NUM_TRK,ST_SZG_IX,NUM_SZG,ACCU_SZG,ST_SZF_IX,NUM_SZF,SEC_PER_TRK,SEC_PER_ZG,SEC_FR_SZ
//      P552_PUB_DEP_ZN_TST_COL_WIDTH              //    4,   4,       12,       10,     10,       10,      8,      10,       10,      8,         12,        12,       12
//      P552_PUB_DEP_ZN_TST_COL_MASK               //    0,   0,        0,        0,      0,        0,      0,       0,        0,      0,          0,         0,        0
//      P552_PUB_DEP_ZN_TST_COL_TYPES              // *
//      P552_PUB_DEP_ZN_TST_TABLE_TYPE             // S
#define P552_SVO_ZN_NUM_TRACK               16517  // SV_ZN,SV_TRK0,SV_TRK1,SV_TRK2,SV_TRK3,SV_TRK4
//      P552_SVO_ZN_NUM_TRACK_COL_WIDTH            //     5,     10,     10,     10,     10,     10
//      P552_SVO_ZN_NUM_TRACK_COL_MASK             //     0,      0,      0,      0,      0,      0
//      P552_SVO_ZN_NUM_TRACK_COL_TYPES            // *
//      P552_SVO_ZN_NUM_TRACK_TABLE_TYPE           // S
#define P552_SERVO_ZONE_DEBUG               16518  // HEAD,SZONE,TRK_0,SEC_PER_TRK_0,TRK_1,SEC_PER_TRK_1,TRK_2,SEC_PER_TRK_2,TRK_3,SEC_PER_TRK_3,TRK_4,SEC_PER_TRK_4,TOTALTRACKS,TOTALSECTORS
//      P552_SERVO_ZONE_DEBUG_COL_WIDTH            //    4,    5,    5,           13,    5,           13,    5,           13,    5,           13,    5,           13,         12,          13
//      P552_SERVO_ZONE_DEBUG_COL_MASK             //    0,    0,    0,            0,    0,            0,    0,            0,    0,            0,    0,            0,          0,           0
//      P552_SERVO_ZONE_DEBUG_COL_TYPES            // *
//      P552_SERVO_ZONE_DEBUG_TABLE_TYPE           // S
#define P552_RAP_SVZ_CONF_TABLE             16519  // HD,SZ0_GT,SZ0_SERP,SZ1_GT,SZ1_SERP,SZ2_GT,SZ2_SERP,SZ3_GT,SZ3_SERP,SZ4_GT,SZ4_SERP,SZ5_GT,SZ5_SERP,SZ6_GT,SZ6_SERP
//      P552_RAP_SVZ_CONF_TABLE_COL_WIDTH          //  2,     7,       9,     7,       9,     7,       9,     7,       9,     7,       9,     7,       9,     7,       9
//      P552_RAP_SVZ_CONF_TABLE_COL_MASK           //  0,     0,       0,     0,       0,     0,       0,     0,       0,     0,       0,     0,       0,     0,       0
//      P552_RAP_SVZ_CONF_TABLE_COL_TYPES          // *
//      P552_RAP_SVZ_CONF_TABLE_TABLE_TYPE         // S
#define P602_SM2_DATA_RETURNED              16520  // *
//      P602_SM2_DATA_RETURNED_COL_WIDTH           // 2
//      P602_SM2_DATA_RETURNED_COL_MASK            // 0
//      P602_SM2_DATA_RETURNED_COL_TYPES           // *
//      P602_SM2_DATA_RETURNED_TABLE_TYPE          // S
#define P552_DATA_ZGR_WITH_SZONE            16521  // HEAD,DZONE,SZ1_TRK,SZ1_SEC,SZ1_WDG,SZ2_TRK,SZ2_SEC,SZ2_WDG,SZ3_TRK,SZ3_SEC,SZ3_WDG,SZ4_TRK,SZ4_SEC,SZ4_WDG,SZ5_TRK,SZ5_SEC,SZ5_WDG,SZ6_TRK,SZ6_SEC,SZ6_WDG,SZ7_TRK,SZ7_SEC,SZ7_WDG,ZN_TRKS,ZN_SECTS
//      P552_DATA_ZGR_WITH_SZONE_COL_WIDTH         //    4,    5,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,       8
//      P552_DATA_ZGR_WITH_SZONE_COL_MASK          //    0,    0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,      0,       0
//      P552_DATA_ZGR_WITH_SZONE_COL_TYPES         // *
//      P552_DATA_ZGR_WITH_SZONE_TABLE_TYPE        // S
#define P564_SMRT_HD_PZT                    16522  // HD_PHYS_PSN,HD_LGC_PSN,PZT_CAL_VAL_MIN,PZT_CAL_VAL_MAX,PZT_CAL_VAL_AVG,PZT_CAL_VAL_STDEV,PZT_MAX_VAR,PZT_RECOVERY_CNT
//      P564_SMRT_HD_PZT_COL_WIDTH                 //          11,        10,             15,             15,             15,               17,         11,              16
//      P564_SMRT_HD_PZT_COL_MASK                  //           1,         1,              1,              1,              1,                1,          1,               1
//      P564_SMRT_HD_PZT_COL_TYPES                 //           N,         N,              N,              N,              N,                N,          N,               N
//      P564_SMRT_HD_PZT_TABLE_TYPE                // S
#define P000_T172_SV_ZN_TBL_CMP             16523  // HD_PHYS_PSN,DATA_ZONE,SZ_INDEX,ZN_START_CYL,TRK_NUM,PBA_TRACK,WEDGE_TO_WEDGE,MZ_IX,NUM_SP,SP_SZE,GAP_BEF_SVO,GAP_AFT_SVO,ACC_PBA
//      P000_T172_SV_ZN_TBL_CMP_COL_WIDTH          //          11,        9,       8,          12,      7,        9,            15,    6,     6,     6,         11,         11,     12
//      P000_T172_SV_ZN_TBL_CMP_COL_MASK           //           0,        0,       0,           0,      0,        0,             0,    0,     0,     0,          0,          0,      0
//      P000_T172_SV_ZN_TBL_CMP_COL_TYPES          // *
//      P000_T172_SV_ZN_TBL_CMP_TABLE_TYPE         // S
#define P552_SVZONE_INFO                    16524  // HD_PHYS_PSN,DATA_ZONE,SVO_ZONE,SZ_INDEX,ZN_START_CYL,TRK_NUM,PBA_TRACK,WEDGE_TO_WEDGE,MZ_IX,NUM_SP,SP_SZE,GAP_BEF_SVO,GAP_AFT_SVO,ACC_PBA
//      P552_SVZONE_INFO_COL_WIDTH                 //          11,        9,       8,       8,          12,      7,        9,            15,    6,     6,     6,         11,         11,     12
//      P552_SVZONE_INFO_COL_MASK                  //           0,        0,       0,       0,           0,      0,        0,             0,    0,     0,     0,          0,          0,      0
//      P552_SVZONE_INFO_COL_TYPES                 // *
//      P552_SVZONE_INFO_TABLE_TYPE                // S
#define P598_SZG_DBG                        16525  // DATA_ZONE,SZG_IX,SERP_BLK,TOT_SERP
//      P598_SZG_DBG_COL_WIDTH                     //         9,     7,       9,       9
//      P598_SZG_DBG_COL_MASK                      //         0,     0,       0,       0
//      P598_SZG_DBG_COL_TYPES                     // *
//      P598_SZG_DBG_TABLE_TYPE                    // S
#define P598_SVZ_DBG                        16526  // DATA_ZONE,HD_PHYS_PSN,SVO_IX,SECT_PER_TRK,SERP_SZE,SERP_BLK
//      P598_SVZ_DBG_COL_WIDTH                     //         9,         11,     6,          11,       9,       9
//      P598_SVZ_DBG_COL_MASK                      //         0,          0,     0,           0,       0,       0
//      P598_SVZ_DBG_COL_TYPES                     // *
//      P598_SVZ_DBG_TABLE_TYPE                    // S
#define P552_SZG_INFO                       16527  // HEAD,DATA_ZONE,NUM_SZG,SZG_IX,START_TRK,NUM_TRK,PBA_PER_TRK,START_SERP,NUM_SERP
//      P552_SZG_INFO_COL_WIDTH                    //    5,        9,      6,     6,       10,      8,         12,        11,       9
//      P552_SZG_INFO_COL_MASK                     //    0,        0,      0,     0,        0,      0,          0,         0,       0
//      P552_SZG_INFO_COL_TYPES                    // *
//      P552_SZG_INFO_TABLE_TYPE                   // S
#define P552_SZGROUP_INFO                   16528  // HEAD,DATA_ZONE,SVO_ZONE,SVZ_IX,SZG_IX,START_CYL,TRK_NUM,PBA_TRACK,WEDGE_TO_WEDGE,SVZ_SP_IX,SVZ_SP,SZG_SP_IX,SZG_SP,SP_SZE,SV_GAP_BEF,SV_GAP_AFT,ACC_PBA
//      P552_SZGROUP_INFO_COL_WIDTH                //    4,        9,       8,     6,     6,        9,      7,        9,            14,        9,     6,        9,     6,     6,        10,        10,     10
//      P552_SZGROUP_INFO_COL_MASK                 //    0,        0,       0,     0,     0,        0,      0,        0,             0,        0,     0,        0,     0,     0,         0,         0,      0
//      P552_SZGROUP_INFO_COL_TYPES                // *
//      P552_SZGROUP_INFO_TABLE_TYPE               // S
#define P552_DEBUG_PUB_DEP_USR_ZN           16529  // HD,ZN,STR_LBA,STR_PBA,BEG_CYL,STR_TRK,NUM_CYL,NUM_TRK,TOT_TRK,ACC_CYL,ST_SP,MZ_IX,NUM_SP,NUM_MZ,TOT_MZ,SP_SZE,WD_SZE,GAPB,GAPA,SZ_IX,NUM_SG,ACC_SG,SZ_IX,NUM_SZ,ACC_SZ,PBA_P_TRK,DRV_SG,SG_PBA,ACC_SG_PBA,SZ_PBA,ACC_SZ_PBA
//      P552_DEBUG_PUB_DEP_USR_ZN_COL_WIDTH        //  3, 3,      9,      9,      7,      7,      7,      7,      7,      8,    5,    5,     6,     6,     6,     6,     6,   4,   4,    5,     6,     6,    5,     7,     6,        9,     8,     7,        10,     7,        10
//      P552_DEBUG_PUB_DEP_USR_ZN_COL_MASK         //  0, 0,      0,      0,      0,      0,      0,      0,      0,      0,    0,    0,     0,     0,     0,     0,     0,   0,   0,    0,     0,     0,    0,     0,     0,        0,     0,     0,         0,     0,         0
//      P552_DEBUG_PUB_DEP_USR_ZN_COL_TYPES        // *
//      P552_DEBUG_PUB_DEP_USR_ZN_TABLE_TYPE       // S
#define P1647_MERT4_PAGE_QUAD_SUM           16530  // PAGE_NUM,ERROR_TYPE,TOTAL_BIE_BY_PAGE,ERR_TYPE_CNT_BY_PAGE
//      P1647_MERT4_PAGE_QUAD_SUM_COL_WIDTH        //        8,        10,               17,                  20
//      P1647_MERT4_PAGE_QUAD_SUM_COL_MASK         //        1,         1,                1,                   1
//      P1647_MERT4_PAGE_QUAD_SUM_COL_TYPES        //        N,         N,                N,                   N
//      P1647_MERT4_PAGE_QUAD_SUM_TABLE_TYPE       // S
#define P1647_MERT4_DRAM_SUMMARY            16531  // DRAM_READ_LOG_CNT,DRAM_LOG_QUAD_CNT
//      P1647_MERT4_DRAM_SUMMARY_COL_WIDTH         //                17,               17
//      P1647_MERT4_DRAM_SUMMARY_COL_MASK          //                 0,                0
//      P1647_MERT4_DRAM_SUMMARY_COL_TYPES         // *
//      P1647_MERT4_DRAM_SUMMARY_TABLE_TYPE        // S
#define P530_DST_DDT_REPORT                 16532  // UNUSED_DST_ENTRY,DST_ENTRY_ALLOWED,DST_ENTRY_SIZE,UNUSED_DDT_ENTRY,DDT_ENTRY_ALLOWED,DDT_ENTRY_SIZE
//      P530_DST_DDT_REPORT_COL_WIDTH              //               16,               17,            14,              16,               17,            14
//      P530_DST_DDT_REPORT_COL_MASK               //                0,                0,             0,               0,                0,             0
//      P530_DST_DDT_REPORT_COL_TYPES              // *
//      P530_DST_DDT_REPORT_TABLE_TYPE             // S
#define P530_DST_DDT_AVAILABLE              16533  // DST_AVAILABLE,DDT_AVAILABLE
//      P530_DST_DDT_AVAILABLE_COL_WIDTH           //            15,           15
//      P530_DST_DDT_AVAILABLE_COL_MASK            //             0,            0
//      P530_DST_DDT_AVAILABLE_COL_TYPES           // *
//      P530_DST_DDT_AVAILABLE_TABLE_TYPE          // S
#define P530_UNUSED_ENTRIES                 16534  // USED_DST_ENTRIES,USED_DDT_ENTRIES
//      P530_UNUSED_ENTRIES_COL_WIDTH              //               17,              17
//      P530_UNUSED_ENTRIES_COL_MASK               //                0,               0
//      P530_UNUSED_ENTRIES_COL_TYPES              // *
//      P530_UNUSED_ENTRIES_TABLE_TYPE             // S
#define P618_READ_ERROR_ENTRIES             16535  // HEAD,ZONE,CYLINDER,HEAD_SCAN_CNT,ERROR_TYPE
//      P618_READ_ERROR_ENTRIES_COL_WIDTH          //    4,   4,       8,           13,        10
//      P618_READ_ERROR_ENTRIES_COL_MASK           //    0,   0,       0,            0,         0
//      P618_READ_ERROR_ENTRIES_COL_TYPES          // *
//      P618_READ_ERROR_ENTRIES_TABLE_TYPE         // S
#define P618_ZONE_ERR_SUMMARY               16536  // HEAD,ZONE,TOTAL_BLOCKS_READ,INIT_BLKS_IN_ERR,BLK_ERR_RATE,HIDDEN_ERRORS,VISIBLE_ERRORS,NON_RECOV_ERRORS,NUM_BLKS_REPEATED_ERRS,SURFACE_READ
//      P618_ZONE_ERR_SUMMARY_COL_WIDTH            //    4,   4,               17,              16,          12,           12,            14,              16,                    22,          12
//      P618_ZONE_ERR_SUMMARY_COL_MASK             //    0,   0,                0,               0,           0,            0,             0,               0,                     0,           0
//      P618_ZONE_ERR_SUMMARY_COL_TYPES            // *
//      P618_ZONE_ERR_SUMMARY_TABLE_TYPE           // S
#define P618_ERR_SUMMARY                    16537  // HEAD,TOTAL_BLOCKS_READ,INIT_BLKS_IN_ERR,BLK_ERR_RATE,HIDDEN_ERRORS,VISIBLE_ERRORS,NON_RECOV_ERRORS,NUM_BLKS_REPEATED_ERRS,SURFACE_SCANS_COMPLETED
//      P618_ERR_SUMMARY_COL_WIDTH                 //    4,               17,              16,          12,           12,            14,              16,                    22,                     23
//      P618_ERR_SUMMARY_COL_MASK                  //    0,                0,               0,           0,            0,             0,               0,                     0,                      0
//      P618_ERR_SUMMARY_COL_TYPES                 // *
//      P618_ERR_SUMMARY_TABLE_TYPE                // S
#define P618_HD_ZONE_ERR_SUMMARY            16538  // HEAD,ZONE,TOTAL_BLOCKS_READ,INIT_BLKS_IN_ERR,BLK_ERR_RATE,HIDDEN_ERRORS,VISIBLE_ERRORS,NON_RECOV_ERRORS,FW_RESP_ISSUE,NUM_BLKS_REPEATED_ERRS,SURFACE_READ
//      P618_HD_ZONE_ERR_SUMMARY_COL_WIDTH         //    4,   4,               17,              16,          12,           12,            14,              16,           13,                    22,          12
//      P618_HD_ZONE_ERR_SUMMARY_COL_MASK          //    0,   0,                0,               0,           0,            0,             0,               0,            0,                     0,           0
//      P618_HD_ZONE_ERR_SUMMARY_COL_TYPES         // *
//      P618_HD_ZONE_ERR_SUMMARY_TABLE_TYPE        // S
#define P618_HD_ERR_SUMMARY                 16539  // HEAD,TOTAL_BLOCKS_READ,INIT_BLKS_IN_ERR,BLK_ERR_RATE,HIDDEN_ERRORS,VISIBLE_ERRORS,NON_RECOV_ERRORS,FW_RESP_ISSUE,NUM_BLKS_REPEATED_ERRS,SURFACE_SCANS_COMPLETED,ID_RAW_ERR_RATE,MD_RAW_ERR_RATE,OD_RAW_ERR_RATE,READER_RESISTANCE,HEAD_STATUS,FAIL_TYPE,TIME_TO_FAILRUE,HD_LOOP_TIME,TOTAL_TIME,LOOP_END_DATE_TIME
//      P618_HD_ERR_SUMMARY_COL_WIDTH              //    4,               17,              16,          12,           12,            14,              16,           13,                    22,                     23,             15,             15,             15,               17,         11,        9,             15,          12,        10,                18
//      P618_HD_ERR_SUMMARY_COL_MASK               //    0,                0,               0,           0,            0,             0,               0,            0,                     0,                      0,              0,              0,              0,                0,          0,        0,              0,           0,         0,                 0
//      P618_HD_ERR_SUMMARY_COL_TYPES              // *
//      P618_HD_ERR_SUMMARY_TABLE_TYPE             // S
#define P000_NUMBER_FAILURES                16540  // FAILURE_COUNT
//      P000_NUMBER_FAILURES_COL_WIDTH             //            14
//      P000_NUMBER_FAILURES_COL_MASK              //             0
//      P000_NUMBER_FAILURES_COL_TYPES             // *
//      P000_NUMBER_FAILURES_TABLE_TYPE            // S
#define P634_BGMS                           16541  // SCAN_PROGRESS,LBAS_COVERED,BGMS_STATUS,SCANS_COMPLETED
//      P634_BGMS_COL_WIDTH                        //            13,          12,         11,             15
//      P634_BGMS_COL_MASK                         //             0,           0,          0,              0
//      P634_BGMS_COL_TYPES                        // *
//      P634_BGMS_TABLE_TYPE                       // S
#define P634_BGMS_ERRORS                    16542  // BLOCK_NUMBER,CYLINDER,HEAD,SECTOR,REASSIGN_STATUS,KEY,CODE,QUAL,FRU
//      P634_BGMS_ERRORS_COL_WIDTH                 //           12,       8,   4,     6,             15,  3,   4,   4,  3
//      P634_BGMS_ERRORS_COL_MASK                  //            0,       0,   0,     0,              0,  0,   0,   0,  0
//      P634_BGMS_ERRORS_COL_TYPES                 // *
//      P634_BGMS_ERRORS_TABLE_TYPE                // S
#define P564_RV_ABS_MEAN                    16543  // RV_ABS_MEAN,MAX_RV_ABS_MEAN
//      P564_RV_ABS_MEAN_COL_WIDTH                 //          11,             15
//      P564_RV_ABS_MEAN_COL_MASK                  //           0,              0
//      P564_RV_ABS_MEAN_COL_TYPES                 // *
//      P564_RV_ABS_MEAN_TABLE_TYPE                // S
#define P598_CYL_SKEW_ADJ                   16544  // HEAD,CYL_SKEW_ADJ_VALUE,CYL_SKEW_ADJ_TIME
//      P598_CYL_SKEW_ADJ_COL_WIDTH                //    4,                19,               19
//      P598_CYL_SKEW_ADJ_COL_MASK                 //    0,                 0,                0
//      P598_CYL_SKEW_ADJ_COL_TYPES                // *
//      P598_CYL_SKEW_ADJ_TABLE_TYPE               // S
#define P598_ZN_PARAM_SKEW_TIME             16545  // HEAD,CYL_SKEW_ADJ_VALUE,CYL_SKEW_ADJ_TIME,SERPENT_SIZE,HEAD_SKW_TIME,CYL_SKW_TIME,CYL_ADJ_SKW_AVG,CYL_SKW_ADJ_TIME,MN_ZN_SKW_TIME,REV_TIME,TOT_TIME,CAL_TIME
//      P598_ZN_PARAM_SKEW_TIME_COL_WIDTH          //    4,                19,               19,          12,           13,          12,             16,              16,            14,      16,      10,      10
//      P598_ZN_PARAM_SKEW_TIME_COL_MASK           //    0,                 0,                0,           0,            0,           0,              0,               0,             0,       0,       0,       0
//      P598_ZN_PARAM_SKEW_TIME_COL_TYPES          // *
//      P598_ZN_PARAM_SKEW_TIME_TABLE_TYPE         // S
#define P598_RATIO_DISPLAY                  16546  // UPPER_VALUE,LOWER_VALUE,SCALING_VALUE,NON_SCAL_VALUE
//      P598_RATIO_DISPLAY_COL_WIDTH               //          12,         12,           14,            14
//      P598_RATIO_DISPLAY_COL_MASK                //           0,          0,            0,             0
//      P598_RATIO_DISPLAY_COL_TYPES               // *
//      P598_RATIO_DISPLAY_TABLE_TYPE              // S
#define P598_CYL_SKEW_TIME                  16547  // HEAD,CYL_SKEW_ADJ_TIME,CYL_SKEW_NON_ADJ_TIME
//      P598_CYL_SKEW_TIME_COL_WIDTH               //    4,               18,                   21
//      P598_CYL_SKEW_TIME_COL_MASK                //    0,                0,                    0
//      P598_CYL_SKEW_TIME_COL_TYPES               // *
//      P598_CYL_SKEW_TIME_TABLE_TYPE              // S
#define P663_HD_ZN_ERR_SUMMARY              16548  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BLKS_READ_CNT,BLKS_IN_ERR_CNT,BLK_ERR_RATE_10,HIDDEN_ERR_CNT,VISIBLE_ERR_CNT,NON_RCVRBL_ERR_CNT,FW_ISSUE_CNT,BLKS_REPEATED_ERRS_CNT,SURFACE_READ
//      P663_HD_ZN_ERR_SUMMARY_COL_WIDTH           //          11,        9,        10,           13,             15,             15,            14,             15,                18,          12,                    22,          12
//      P663_HD_ZN_ERR_SUMMARY_COL_MASK            //           1,        1,         1,            1,              1,              1,             1,              1,                 1,           1,                     1,           1
//      P663_HD_ZN_ERR_SUMMARY_COL_TYPES           //           N,        N,         N,            N,              N,              N,             N,              N,                 N,           N,                     N,           V
//      P663_HD_ZN_ERR_SUMMARY_TABLE_TYPE          // S
#define P663_HD_ERR_SUMMARY                 16549  // HD_PHYS_PSN,HD_LGC_PSN,BLKS_READ_CNT,BLKS_IN_ERR_CNT,BLK_ERR_RATE_10,HIDDEN_ERR_CNT,VISIBLE_ERR_CNT,NON_RCVRBL_ERR_CNT,FW_ISSUE_CNT,BLKS_REPEATED_ERRS_CNT,SURF_SCANS_COMPLETE_CNT,ID_RAW_BER,MD_RAW_BER,OD_RAW_BER,READER_RESISTANCE,HEAD_STATUS,FAIL_TYPE,TIME_TO_FAILURE,HD_LOOP_TIME,TOTAL_TIME,LOOP_END_DATE_TIME
//      P663_HD_ERR_SUMMARY_COL_WIDTH              //          11,        10,           13,             15,             15,            14,             15,                18,          12,                    22,                     23,        10,        10,        10,               17,         11,        9,             15,          12,        10,                18
//      P663_HD_ERR_SUMMARY_COL_MASK               //           1,         1,            1,              1,              1,             1,              1,                 1,           1,                     1,                      1,         1,         1,         1,                1,          1,        1,              1,           1,         1,                 1
//      P663_HD_ERR_SUMMARY_COL_TYPES              //           N,         N,            N,              N,              N,             N,              N,                 N,           N,                     N,                      V,         N,         N,         N,                N,          V,        V,              N,           N,         N,                 V
//      P663_HD_ERR_SUMMARY_TABLE_TYPE             // S
#define P663_ERR_SUMMARY                    16550  // HD_PHYS_PSN,HD_LGC_PSN,BLKS_READ_CNT,BLKS_IN_ERR_CNT,BLK_ERR_RATE_10,HIDDEN_ERR_CNT,VISIBLE_ERR_CNT,NON_RCVRBL_ERR_CNT,BLKS_REPEATED_ERRS_CNT,SURFACE_READ
//      P663_ERR_SUMMARY_COL_WIDTH                 //          11,        10,           13,             15,             15,            14,             15,                18,                    22,          12
//      P663_ERR_SUMMARY_COL_MASK                  //           0,         0,            0,              0,              0,             0,              0,                 0,                     0,           0
//      P663_ERR_SUMMARY_COL_TYPES                 // *
//      P663_ERR_SUMMARY_TABLE_TYPE                // S
#define P663_HD_ZONE_ERR                    16551  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BLKS_READ_CNT,BLKS_IN_ERR_CNT,BLK_ERR_RATE_10,HIDDEN_ERR_CNT,VISIBLE_ERR_CNT,NON_RCVRBL_ERR_CNT,FW_ISSUE_CNT,BLKS_REPEATED_ERRS_CNT,SURFACE_READ
//      P663_HD_ZONE_ERR_COL_WIDTH                 //          11,        9,        10,           13,             15,             15,            14,             15,                18,          12,                    22,          12
//      P663_HD_ZONE_ERR_COL_MASK                  //           0,        0,         0,            0,              0,              0,             0,              0,                 0,           0,                     0,           0
//      P663_HD_ZONE_ERR_COL_TYPES                 // *
//      P663_HD_ZONE_ERR_TABLE_TYPE                // S
#define P663_HD_ERR                         16552  // HD_PHYS_PSN,HD_LGC_PSN,BLKS_READ_CNT,BLKS_IN_ERR_CNT,BLK_ERR_RATE_10,HIDDEN_ERR_CNT,VISIBLE_ERR_CNT,NON_RCVRBL_ERR_CNT,FW_ISSUE_CNT,BLKS_REPEATED_ERRS_CNT,SURF_SCANS_COMPLETE_CNT,ID_RAW_BER,MD_RAW_BER,OD_RAW_BER,READER_RESISTANCE,HEAD_STATUS,FAIL_TYPE,TIME_TO_FAILURE,HD_LOOP_TIME,TOTAL_TIME,LOOP_END_DATE_TIME
//      P663_HD_ERR_COL_WIDTH                      //          11,        10,           13,             15,             15,            14,             15,                18,          12,                    22,                     23,        10,        10,        10,               17,         11,        9,             15,          12,        10,                18
//      P663_HD_ERR_COL_MASK                       //           0,         0,            0,              0,              0,             0,              0,                 0,           0,                     0,                      0,         0,         0,         0,                0,          0,        0,              0,           0,         0,                 0
//      P663_HD_ERR_COL_TYPES                      // *
//      P663_HD_ERR_TABLE_TYPE                     // S
#define P644_SSD_CAT_DFCT_PER_CH            16553  // MEDIA_ID,DIE_NUM,CH_0,CH_1,CH_2,CH_3,CH_4,CH_5,CH_6,CH_7,CH_8,CH_9,CH_10,CH_11,CH_12,CH_13,CH_14,CH_15,CH_16,CH_17,CH_18,CH_19
//      P644_SSD_CAT_DFCT_PER_CH_COL_WIDTH         //        8,      7,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5
//      P644_SSD_CAT_DFCT_PER_CH_COL_MASK          //        0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
//      P644_SSD_CAT_DFCT_PER_CH_COL_TYPES         // *
//      P644_SSD_CAT_DFCT_PER_CH_TABLE_TYPE        // S
#define P644_SSD_TOT_DFCT_PER_CH            16554  // MEDIA_ID,DIE_NUM,CH_0,CH_1,CH_2,CH_3,CH_4,CH_5,CH_6,CH_7,CH_8,CH_9,CH_10,CH_11,CH_12,CH_13,CH_14,CH_15,CH_16,CH_17,CH_18,CH_19
//      P644_SSD_TOT_DFCT_PER_CH_COL_WIDTH         //        8,      7,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5
//      P644_SSD_TOT_DFCT_PER_CH_COL_MASK          //        0,      0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
//      P644_SSD_TOT_DFCT_PER_CH_COL_TYPES         // *
//      P644_SSD_TOT_DFCT_PER_CH_TABLE_TYPE        // S
#define P529_SSD_CH_DIE_DFCT_SUM            16555  // MEDIA_ID,DIE_NUM,TOT_DIE_DEFECTS,CH_0_CNT,CH_1_CNT,CH_2_CNT,CH_3_CNT,CH_4_CNT,CH_5_CNT,CH_6_CNT,CH_7_CNT,CH_8_CNT,CH_9_CNT,CH_10_CNT,CH_11_CNT,CH_12_CNT,CH_13_CNT,CH_14_CNT,CH_15_CNT,CH_16_CNT,CH_17_CNT,CH_18_CNT,CH_19_CNT
//      P529_SSD_CH_DIE_DFCT_SUM_COL_WIDTH         //        8,      7,             15,       8,       8,       8,       8,       8,       8,       8,       8,       8,       8,        9,        9,        9,        9,        9,        9,        9,        9,        9,        9
//      P529_SSD_CH_DIE_DFCT_SUM_COL_MASK          //        1,      1,              1,       1,       1,       1,       1,       1,       1,       1,       1,       1,       1,        1,        1,        1,        1,        1,        1,        1,        1,        1,        1
//      P529_SSD_CH_DIE_DFCT_SUM_COL_TYPES         //        N,      N,              N,       N,       N,       N,       N,       N,       N,       N,       N,       N,       N,        N,        N,        N,        N,        N,        N,        N,        N,        N,        N
//      P529_SSD_CH_DIE_DFCT_SUM_TABLE_TYPE        // S
#define P529_SSD_MLIST_SUM                  16556  // MEDIA_ID,DIE_NUM,CH_0_CNT,CH_1_CNT,CH_2_CNT,CH_3_CNT,CH_4_CNT,CH_5_CNT,CH_6_CNT,CH_7_CNT,CH_8_CNT,CH_9_CNT,CH_10_CNT,CH_11_CNT,CH_12_CNT,CH_13_CNT,CH_14_CNT,CH_15_CNT,CH_16_CNT,CH_17_CNT,CH_18_CNT,CH_19_CNT
//      P529_SSD_MLIST_SUM_COL_WIDTH               //        8,      7,       8,       8,       8,       8,       8,       8,       8,       8,       8,       8,        9,        9,        9,        9,        9,        9,        9,        9,        9,        9
//      P529_SSD_MLIST_SUM_COL_MASK                //        1,      1,       1,       1,       1,       1,       1,       1,       1,       1,       1,       1,        1,        1,        1,        1,        1,        1,        1,        1,        1,        1
//      P529_SSD_MLIST_SUM_COL_TYPES               //        N,      N,       N,       N,       N,       N,       N,       N,       N,       N,       N,       N,        N,        N,        N,        N,        N,        N,        N,        N,        N,        N
//      P529_SSD_MLIST_SUM_TABLE_TYPE              // S
#define P529_SSD_GLIST_DF_SUM               16557  // MEDIA_ID,DIE_NUM,CH_0_CNT,CH_1_CNT,CH_2_CNT,CH_3_CNT,CH_4_CNT,CH_5_CNT,CH_6_CNT,CH_7_CNT,CH_8_CNT,CH_9_CNT,CH_10_CNT,CH_11_CNT,CH_12_CNT,CH_13_CNT,CH_14_CNT,CH_15_CNT,CH_16_CNT,CH_17_CNT,CH_18_CNT,CH_19_CNT
//      P529_SSD_GLIST_DF_SUM_COL_WIDTH            //        8,      7,       8,       8,       8,       8,       8,       8,       8,       8,       8,       8,        9,        9,        9,        9,        9,        9,        9,        9,        9,        9
//      P529_SSD_GLIST_DF_SUM_COL_MASK             //        0,      0,       0,       0,       0,       0,       0,       0,       0,       0,       0,       0,        0,        0,        0,        0,        0,        0,        0,        0,        0,        0
//      P529_SSD_GLIST_DF_SUM_COL_TYPES            // *
//      P529_SSD_GLIST_DF_SUM_TABLE_TYPE           // S
#define P663_READ_ERROR_ENTRIES             16558  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,CYLINDER,HEAD_SCAN_CNT,ERROR_TYPE
//      P663_READ_ERROR_ENTRIES_COL_WIDTH          //          11,        10,   4,       8,           13,        10
//      P663_READ_ERROR_ENTRIES_COL_MASK           //           0,         0,   0,       0,            0,         0
//      P663_READ_ERROR_ENTRIES_COL_TYPES          // *
//      P663_READ_ERROR_ENTRIES_TABLE_TYPE         // S
#define P663_HD_ZN_ERR_SUM                  16559  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BLKS_READ_CNT,BLKS_IN_ERR_CNT,BLK_ERR_RATE_10,HIDDEN_ERR_CNT,VISIBLE_ERR_CNT,NON_RCVRBL_ERR_CNT,FW_ISSUE_CNT,BLKS_REPEATED_ERRS_CNT,SURFACE_READ
//      P663_HD_ZN_ERR_SUM_COL_WIDTH               //          11,        9,        10,           13,             15,             15,            14,             15,                18,          12,                    22,          12
//      P663_HD_ZN_ERR_SUM_COL_MASK                //           0,        0,         0,            0,              0,              0,             0,              0,                 0,           0,                     0,           0
//      P663_HD_ZN_ERR_SUM_COL_TYPES               // *
//      P663_HD_ZN_ERR_SUM_TABLE_TYPE              // S
#define P_ERROR_RATE_RBIT_OTF               16560  // HD_PHYS_PSN,DATA_ZONE,RBIT_OTF
//      P_ERROR_RATE_RBIT_OTF_COL_WIDTH            //          11,        9,       8
//      P_ERROR_RATE_RBIT_OTF_COL_MASK             //           0,        0,       0
//      P_ERROR_RATE_RBIT_OTF_COL_TYPES            // *
//      P_ERROR_RATE_RBIT_OTF_TABLE_TYPE           // S
#define P530_DST_RST_COMPARE                16561  // C3_PAGE_PRIMARY_DST_ENTRIES,AVAIL_DST_ENTRIES,CURRENT_RST,CURRENT_NON_RST,C3_PAGE_RST_ALLOWED,AVAIL_RST_ENTRIES
//      P530_DST_RST_COMPARE_COL_WIDTH             //                          28,               18,         12,             16,                 20,               18
//      P530_DST_RST_COMPARE_COL_MASK              //                           0,                0,          0,              0,                  0,                0
//      P530_DST_RST_COMPARE_COL_TYPES             // *
//      P530_DST_RST_COMPARE_TABLE_TYPE            // S
#define P530_DST_RST_REPORT                 16562  // MAX_RESIDENT_DST,CUR_RESIDENT_DST,MAX_REALLOCATE_ALLOWED,CUR_REALLOCATE_ALLOWED,AVAIL_RESIDENT_DST
//      P530_DST_RST_REPORT_COL_WIDTH              //               17,              17,                    23,                    23,                19
//      P530_DST_RST_REPORT_COL_MASK               //                0,               0,                     0,                     0,                 0
//      P530_DST_RST_REPORT_COL_TYPES              // *
//      P530_DST_RST_REPORT_TABLE_TYPE             // S
#define P1647_MERT_LOG_ENTRIES              16563  // RECORD_NUMBER,CHANNEL_NUM,DIE_NUM,PAGE_NUM,ERROR_TYPE,DFB_OP_INDEX,LOOP_COUNTER,PE_CYCLE_CNT,DRAM_LOG_TYPE,DRAM_LOG,BLOCK_PLANE_0,BLOCK_PLANE_1,BLOCK_PLANE_2,BLOCK_PLANE_3
//      P1647_MERT_LOG_ENTRIES_COL_WIDTH           //            13,         11,      7,       8,        10,          12,          12,          12,           16,       8,           13,           13,           13,           13
//      P1647_MERT_LOG_ENTRIES_COL_MASK            //             1,          1,      1,       1,         1,           1,           1,           1,            1,       1,            1,            1,            1,            1
//      P1647_MERT_LOG_ENTRIES_COL_TYPES           //             N,          N,      N,       N,         V,           N,           N,           N,            V,       V,            N,            N,            N,            N
//      P1647_MERT_LOG_ENTRIES_TABLE_TYPE          // S
#define P1647_MERT_PAGE_SUM                 16564  // PAGE_NUM,ERROR_TYPE,TOTAL_BIE_BY_PAGE,ERR_TYPE_CNT_BY_PAGE
//      P1647_MERT_PAGE_SUM_COL_WIDTH              //        8,        10,               17,                  20
//      P1647_MERT_PAGE_SUM_COL_MASK               //        1,         1,                1,                   1
//      P1647_MERT_PAGE_SUM_COL_TYPES              //        N,         N,                N,                   N
//      P1647_MERT_PAGE_SUM_TABLE_TYPE             // S
#define P1647_MERT_LOG_DESCRIPTOR           16565  // ENTRY_COUNT,MAJOR_REV,MINOR_REV
//      P1647_MERT_LOG_DESCRIPTOR_COL_WIDTH        //          11,        9,        9
//      P1647_MERT_LOG_DESCRIPTOR_COL_MASK         //           0,        0,        0
//      P1647_MERT_LOG_DESCRIPTOR_COL_TYPES        // *
//      P1647_MERT_LOG_DESCRIPTOR_TABLE_TYPE       // S
#define P1647_MERT_DRAM_SUMMARY             16566  // DRAM_READ_LOG_CNT,DRAM_LOG_MULT_CNT
//      P1647_MERT_DRAM_SUMMARY_COL_WIDTH          //                17,               17
//      P1647_MERT_DRAM_SUMMARY_COL_MASK           //                 0,                0
//      P1647_MERT_DRAM_SUMMARY_COL_TYPES          // *
//      P1647_MERT_DRAM_SUMMARY_TABLE_TYPE         // S
#define P1647_MERT_LOG_SUMMARY              16567  // NUM_ENTRIES,ERROR_TYPE,ERROR_DESCRIPTION,DIE_NUM,CH_0_CNT,CH_1_CNT,CH_2_CNT,CH_3_CNT,CH_4_CNT,CH_5_CNT,CH_6_CNT,CH_7_CNT,CH_8_CNT,CH_9_CNT,CH_10_CNT,CH_11_CNT,CH_12_CNT,CH_13_CNT,CH_14_CNT,CH_15_CNT,CH_16_CNT,CH_17_CNT,CH_18_CNT,CH_19_CNT
//      P1647_MERT_LOG_SUMMARY_COL_WIDTH           //          11,        10,               17,      7,       8,       8,       8,       8,       8,       8,       8,       8,       8,       8,        9,        9,        9,        9,        9,        9,        9,        9,        9,        9
//      P1647_MERT_LOG_SUMMARY_COL_MASK            //           1,         1,                1,      1,       1,       1,       1,       1,       1,       1,       1,       1,       1,       1,        1,        1,        1,        1,        1,        1,        1,        1,        1,        1
//      P1647_MERT_LOG_SUMMARY_COL_TYPES           //           N,         V,                V,      N,       N,       N,       N,       N,       N,       N,       N,       N,       N,       N,        N,        N,        N,        N,        N,        N,        N,        N,        N,        N
//      P1647_MERT_LOG_SUMMARY_TABLE_TYPE          // S
#define P1647_MERT_RD_VBOSE                 16568  // RECORD_NUMBER,CHANNEL_NUM,DIE_NUM,BLOCK_NUM,PAGE_NUM,ERROR_TYPE,DFB_OP_INDEX,LOOP_COUNTER,PE_CYCLE_CNT,RD_VERBOSE_BER
//      P1647_MERT_RD_VBOSE_COL_WIDTH              //            13,         11,      7,        9,       8,        10,          12,          12,          12,            14
//      P1647_MERT_RD_VBOSE_COL_MASK               //             1,          1,      1,        1,       1,         1,           1,           1,           1,             1
//      P1647_MERT_RD_VBOSE_COL_TYPES              //             N,          N,      N,        N,       N,         V,           N,           N,           N,             N
//      P1647_MERT_RD_VBOSE_TABLE_TYPE             // S
#define P552_CMCZONE_INFO                   16569  // HEAD,MC_ZONE,START_TRK,TRK_NUM,PBA_TRACK,NUM_SP,SP_SIZE
//      P552_CMCZONE_INFO_COL_WIDTH                //    4,      7,       12,      7,        9,     6,      6
//      P552_CMCZONE_INFO_COL_MASK                 //    0,      0,        0,      0,        0,     0,      0
//      P552_CMCZONE_INFO_COL_TYPES                // *
//      P552_CMCZONE_INFO_TABLE_TYPE               // S
#define P521_LOG_PARAM_REPORT               16570  // PARAMETER_CODE,PARAMETER_CONTROL,PARAMETER_VALUE,MIN,MAX,STATUS,DESCRIPTION
//      P521_LOG_PARAM_REPORT_COL_WIDTH            //             15,               18,             17,  8, 12,     8,         26
//      P521_LOG_PARAM_REPORT_COL_MASK             //              0,                0,              0,  0,  0,     0,          0
//      P521_LOG_PARAM_REPORT_COL_TYPES            // *
//      P521_LOG_PARAM_REPORT_TABLE_TYPE           // S
#define P521_PARAM_CODE_INFO                16571  // COUNT,PARAM_CODE,SIZE,NUMERIC_DATA,STRING_DATA
//      P521_PARAM_CODE_INFO_COL_WIDTH             //     5,        11,   5,          13,         13
//      P521_PARAM_CODE_INFO_COL_MASK              //     0,         0,   0,           0,          0
//      P521_PARAM_CODE_INFO_COL_TYPES             // *
//      P521_PARAM_CODE_INFO_TABLE_TYPE            // S
#define P564_SMRT_ADDR_VALUE                16572  // FRAME_NUMBER,ADDRESS_HEX,RETURNED_DATA_HEX,RETURNED_DATA_DEC,DATA_PROCESSING_TYPE
//      P564_SMRT_ADDR_VALUE_COL_WIDTH             //           12,         11,               17,               17,                  20
//      P564_SMRT_ADDR_VALUE_COL_MASK              //            0,          0,                0,                0,                   0
//      P564_SMRT_ADDR_VALUE_COL_TYPES             // *
//      P564_SMRT_ADDR_VALUE_TABLE_TYPE            // S
#define P503_BGMS_CNTS                      16573  // HD_PHYS_PSN,HD_LGC_PSN,BGMS_CNT
//      P503_BGMS_CNTS_COL_WIDTH                   //          11,        10,       8
//      P503_BGMS_CNTS_COL_MASK                    //           1,         1,       1
//      P503_BGMS_CNTS_COL_TYPES                   //           N,         N,       N
//      P503_BGMS_CNTS_TABLE_TYPE                  // S
#define P503_BGMS_ERRORS                    16574  // HD_PHYS_PSN,HD_LGC_PSN,RCVRBL_ERR_CNT,NON_RCVRBL_ERR_CNT
//      P503_BGMS_ERRORS_COL_WIDTH                 //          11,        10,            14,                18
//      P503_BGMS_ERRORS_COL_MASK                  //           1,         1,             1,                 1
//      P503_BGMS_ERRORS_COL_TYPES                 //           N,         N,             N,                 N
//      P503_BGMS_ERRORS_TABLE_TYPE                // S
#define P564_USER_SMART_REPORT              16575  // *
//      P564_USER_SMART_REPORT_COL_WIDTH           // 2
//      P564_USER_SMART_REPORT_COL_MASK            // 0
//      P564_USER_SMART_REPORT_COL_TYPES           // *
//      P564_USER_SMART_REPORT_TABLE_TYPE          // S
#define P737_RPM_CONTROL_DISPLAY            16576  // CURRENT_RPM_START,CURRENT_RPM_END,DESTINATION_RPM,STEP_RPM,PASS_FAIL_FLAG
//      P737_RPM_CONTROL_DISPLAY_COL_WIDTH         //                17,             15,             15,       8,            14
//      P737_RPM_CONTROL_DISPLAY_COL_MASK          //                 0,              0,              0,       0,             0
//      P737_RPM_CONTROL_DISPLAY_COL_TYPES         // *
//      P737_RPM_CONTROL_DISPLAY_TABLE_TYPE        // S
#define P530_SPARED_PBA_INFO                16577  // TOTAL_PBA,TOTAL_LBA,TOTAL_TRKS,TOTAL_PARY,MAX_PBA_AVAIL,SPARED_AVAIL,TOTAL_DEFECTS,MAX_SPARED_LEFT
//      P530_SPARED_PBA_INFO_COL_WIDTH             //        10,       10,        10,        10,           14,          14,           14,             15
//      P530_SPARED_PBA_INFO_COL_MASK              //         0,        0,         0,         0,            0,           0,            0,              0
//      P530_SPARED_PBA_INFO_COL_TYPES             // *
//      P530_SPARED_PBA_INFO_TABLE_TYPE            // S
#define P530_MAX_TRK_INFO                   16578  // HEAD,MAX_ZTBL_TRKS,LAST_USR_TRKS,MAX_DITS_TRKS,SUPER_PARITY_TRKS,ACC_PARITY_TRKS
//      P530_MAX_TRK_INFO_COL_WIDTH                //    4,           14,           14,           14,               18,             15
//      P530_MAX_TRK_INFO_COL_MASK                 //    0,            0,            0,            0,                0,              0
//      P530_MAX_TRK_INFO_COL_TYPES                // *
//      P530_MAX_TRK_INFO_TABLE_TYPE               // S
#define P552_ZONE_FORMAT_BUDGET             16579  // TABLE_INDEX,ZONE,HEAD,GAP_BEF_SVO,GAP_AFT_SVO
//      P552_ZONE_FORMAT_BUDGET_COL_WIDTH          //          12,   4,   4,         11,         11
//      P552_ZONE_FORMAT_BUDGET_COL_MASK           //           0,   0,   0,          0,          0
//      P552_ZONE_FORMAT_BUDGET_COL_TYPES          // *
//      P552_ZONE_FORMAT_BUDGET_TABLE_TYPE         // S
#define P552_DMCZONE_INFO                   16580  // HEAD,DMC_ZONE,USER_ZONE,START_TRK,NUM_TRKS,PBA_PER_TRK,MINI_SERP,MINI_SERP_SIZE
//      P552_DMCZONE_INFO_COL_WIDTH                //    4,       8,       10,       10,      10,         12,       10,            15
//      P552_DMCZONE_INFO_COL_MASK                 //    0,       0,        0,        0,       0,          0,        0,             0
//      P552_DMCZONE_INFO_COL_TYPES                // *
//      P552_DMCZONE_INFO_TABLE_TYPE               // S
#define P552_RAP_SVZ_INFO                   16581  // HEAD,DTA_ZN,NUM_SVO_ZN,RAP_ZN,SVO_GT,SVO_SERP,SERP_OFFSET
//      P552_RAP_SVZ_INFO_COL_WIDTH                //    4,     8,        10,     8,     8,       9,         11
//      P552_RAP_SVZ_INFO_COL_MASK                 //    0,     0,         0,     0,     0,       0,          0
//      P552_RAP_SVZ_INFO_COL_TYPES                // *
//      P552_RAP_SVZ_INFO_TABLE_TYPE               // S
#define P1647_MERT_PE_TEMPERATURE           16582  // RW_MODE,PE_CYCLE_CNT,TEMPERATURE
//      P1647_MERT_PE_TEMPERATURE_COL_WIDTH        //       7,          12,         11
//      P1647_MERT_PE_TEMPERATURE_COL_MASK         //       1,           1,          1
//      P1647_MERT_PE_TEMPERATURE_COL_TYPES        //       V,           N,          N
//      P1647_MERT_PE_TEMPERATURE_TABLE_TYPE       // S
#define P718_SENSOR_FRAME_DATA              16583  // SUPER_FRAME_ID,WRAP_CYCLE_CNT,SUPER_FRAME_NDX,FRAME_NDX_CNT,HD_PHYS_PSN,HD_LGC_PSN,USER_SUPER_ZN,USER_ZN,CYL,DETCR_BSLN_NOISE_DAC,TEMPERATURE,REL_HUMIDITY,HUMIDITY,PRESSURE,MIX_RATIO,TIME_STAMP
//      P718_SENSOR_FRAME_DATA_COL_WIDTH           //             14,            14,             15,           12,         11,        10,           13,      7,  3,                  20,         11,          12,       8,       8,        9,        10
//      P718_SENSOR_FRAME_DATA_COL_MASK            //              1,             1,              1,            1,          1,         1,            1,      1,  1,                   1,          1,           1,       1,       1,        1,         1
//      P718_SENSOR_FRAME_DATA_COL_TYPES           //              N,             N,              N,            N,          N,         N,            N,      N,  N,                   N,          N,           N,       N,       N,        N,         N
//      P718_SENSOR_FRAME_DATA_TABLE_TYPE          // S
#define P530_SPARED_INFO                    16584  // MAX_PBA,TOTAL_TRKS,PARITY_PER_TRK,TOTAL_PARY,MAX_LBA_IN_LIST,MAX_SCTR_SPARES,DRV_SLIP_SCTR_CNT,AVAIL_SPARES
//      P530_SPARED_INFO_COL_WIDTH                 //      10,        10,            15,        10,             16,             16,               18,          13
//      P530_SPARED_INFO_COL_MASK                  //       0,         0,             0,         0,              0,              0,                0,           0
//      P530_SPARED_INFO_COL_TYPES                 // *
//      P530_SPARED_INFO_TABLE_TYPE                // S
#define P552_CMCZONE_DB_INFO                16585  // HEAD,MC_ZONE,START_TRK,TRK_NUM,PBA_TRACK,NUM_SP,SP_SIZE
//      P552_CMCZONE_DB_INFO_COL_WIDTH             //    4,      7,       12,      7,        9,     6,      6
//      P552_CMCZONE_DB_INFO_COL_MASK              //    0,      0,        0,      0,        0,     0,      0
//      P552_CMCZONE_DB_INFO_COL_TYPES             // *
//      P552_CMCZONE_DB_INFO_TABLE_TYPE            // S
#define P552_DMCZONE_DB_INFO                16586  // HEAD,DMC_ZONE,USER_ZONE,START_TRK,NUM_TRKS,PBA_PER_TRK,MINI_SERP,MINI_SERP_SIZE
//      P552_DMCZONE_DB_INFO_COL_WIDTH             //    4,       8,       10,       10,      10,         12,       10,            15
//      P552_DMCZONE_DB_INFO_COL_MASK              //    0,       0,        0,        0,       0,          0,        0,             0
//      P552_DMCZONE_DB_INFO_COL_TYPES             // *
//      P552_DMCZONE_DB_INFO_TABLE_TYPE            // S
#define P552_SVZONE_DB_INFO                 16587  // HEAD,DATA_ZN,SVO_ZN,SZ_IX,NUM_SVZ,DZ_STRT_TRK,SZ_STRT_TRK,DTZ_TRK,SVZ_TRK,ZSV_TRK,DITS_TRK_PBA,ZTB_TRK_PBA,DITS_WEDGESIZE,ZTB_WEDGESIZE,MZ_IX,NUM_SP,SP_SZE,GAP_BF_SVO,GAP_AF_SVO,ZONE_PBA,ZONE_PBA,ACC_PBA,ACC_PBA
//      P552_SVZONE_DB_INFO_COL_WIDTH              //    4,      7,     6,    5,      8,         11,         11,      7,      7,      7,          12,         11,            14,           13,    5,     6,     6,        10,        10,      10,      10,     12,     12
//      P552_SVZONE_DB_INFO_COL_MASK               //    0,      0,     0,    0,      0,          0,          0,      0,      0,      0,           0,          0,             0,            0,    0,     0,     0,         0,         0,       0,       0,      0,      0
//      P552_SVZONE_DB_INFO_COL_TYPES              // *
//      P552_SVZONE_DB_INFO_TABLE_TYPE             // S
#define P552_SYS_ZONE_INFO                  16588  // HEAD,START_SERP,NUM_SERP_PER_HD,NUM_ZN_PER_HD,START_CYL,START_TRK,NUM_TRK,PBA_PER_TRK,SECTOR_SIZE,SERP_SIZE
//      P552_SYS_ZONE_INFO_COL_WIDTH               //    4,        11,             16,           14,       10,       10,      8,         12,         14,       10
//      P552_SYS_ZONE_INFO_COL_MASK                //    0,         0,              0,            0,        0,        0,      0,          0,          0,        0
//      P552_SYS_ZONE_INFO_COL_TYPES               // *
//      P552_SYS_ZONE_INFO_TABLE_TYPE              // S
#define P521_SERIAL_FLASH_INFO              16589  // CTRL_CHIP,SER_FLASH_TYPE,MANUFACTURE_ID,DEVICE_ID,SIZE_IN_MBITS,BLOCKSIZE_IN_KBYTES,SECT_SIZE_IN_KBYTES
//      P521_SERIAL_FLASH_INFO_COL_WIDTH           //        10,            15,            15,       10,           14,                 20,                 20
//      P521_SERIAL_FLASH_INFO_COL_MASK            //         0,             0,             0,        0,            0,                  0,                  0
//      P521_SERIAL_FLASH_INFO_COL_TYPES           // *
//      P521_SERIAL_FLASH_INFO_TABLE_TYPE          // S
#define P521_HYBRID_FLASH_INFO              16590  // CTRL_CHIP,NUM_OF_DIE,PAGE_PER_BLK,BLOCK_PER_DIE,PAGE_SIZE,FLASH_ID
//      P521_HYBRID_FLASH_INFO_COL_WIDTH           //        10,        12,          12,           14,       10,      16
//      P521_HYBRID_FLASH_INFO_COL_MASK            //         0,         0,           0,            0,        0,       0
//      P521_HYBRID_FLASH_INFO_COL_TYPES           // *
//      P521_HYBRID_FLASH_INFO_TABLE_TYPE          // S
#define P530_DDT_ENTRY_INFO                 16591  // UNUSED_DDT_ENTRY,DDT_ENTRY_ALLOWED,DDT_ENTRY_SIZE
//      P530_DDT_ENTRY_INFO_COL_WIDTH              //               16,               17,            14
//      P530_DDT_ENTRY_INFO_COL_MASK               //                1,                1,             1
//      P530_DDT_ENTRY_INFO_COL_TYPES              //                N,                N,             N
//      P530_DDT_ENTRY_INFO_TABLE_TYPE             // S
#define P530_DST_ENTRY_INFO                 16592  // MAX_RESIDENT_DST,CUR_RESIDENT_DST,MAX_REALLOCATE_ALLOWED,CUR_REALLOCATE_ALLOWED,AVAIL_RESIDENT_DST
//      P530_DST_ENTRY_INFO_COL_WIDTH              //               17,              17,                    23,                    23,                19
//      P530_DST_ENTRY_INFO_COL_MASK               //                0,               0,                     0,                     0,                 0
//      P530_DST_ENTRY_INFO_COL_TYPES              // *
//      P530_DST_ENTRY_INFO_TABLE_TYPE             // S
#define P552_EMULATION_SVZONE               16593  // 512_MAX_LBA,4K_MAX_PBA,MAX_HD,MAX_ZG,MAX_ZF,MAX_SZG,ACT_SZG,OVERLAP_SZG,MAX_SVZ,ACT_SVZ,OVERLAP_SVZ,MAX_LBA_ZONE
//      P552_EMULATION_SVZONE_COL_WIDTH            //          12,        12,     7,     7,     7,      8,      8,         12,      8,      8,         12,          13
//      P552_EMULATION_SVZONE_COL_MASK             //           0,         0,     0,     0,     0,      0,      0,          0,      0,      0,          0,           0
//      P552_EMULATION_SVZONE_COL_TYPES            // *
//      P552_EMULATION_SVZONE_TABLE_TYPE           // S
#define P552_EMULATION_NON_SVZ              16594  // 512_MAX_LBA,4K_MAX_PBA,MAX_HD,MAX_PBA_ZONE,MAX_LBA_ZONE
//      P552_EMULATION_NON_SVZ_COL_WIDTH           //          12,        12,    11,          12,          12
//      P552_EMULATION_NON_SVZ_COL_MASK            //           0,         0,     0,           0,           0
//      P552_EMULATION_NON_SVZ_COL_TYPES           // *
//      P552_EMULATION_NON_SVZ_TABLE_TYPE          // S
#define P564_SMART_ADDRESS_STATS            16595  // ADDRESS_HEX,ATTR_DESCRIPTION,HD_LGC_PSN,ATTR_CUMULATIVE,ATTR_AVERAGE,ATTR_MINIMUM,ATTR_MAXIMUM,ATTR_CURRENT,UNIQUE_PATT_DETECT,HD_PHYS_PSN
//      P564_SMART_ADDRESS_STATS_COL_WIDTH         //          11,              32,        10,             15,          12,          12,          12,          12,                18,         11
//      P564_SMART_ADDRESS_STATS_COL_MASK          //           0,               0,         0,              0,           0,           0,           0,           0,                 0,          0
//      P564_SMART_ADDRESS_STATS_COL_TYPES         // *
//      P564_SMART_ADDRESS_STATS_TABLE_TYPE        // S
#define P1647_MERT_CAT_ENTRIES              16596  // RECORD_NUMBER,CHANNEL_NUM,DIE_NUM,PAGE_NUM,ERROR_TYPE,DFB_OP_INDEX,LOOP_COUNTER,PE_CYCLE_CNT,DRAM_LOG_TYPE,DRAM_LOG,BLOCK_PLANE_0,BLOCK_PLANE_1,BLOCK_PLANE_2,BLOCK_PLANE_3
//      P1647_MERT_CAT_ENTRIES_COL_WIDTH           //            13,         11,      7,       8,        10,          12,          12,          12,           16,       8,           13,           13,           13,           13
//      P1647_MERT_CAT_ENTRIES_COL_MASK            //             1,          1,      1,       1,         1,           1,           1,           1,            1,       1,            1,            1,            1,            1
//      P1647_MERT_CAT_ENTRIES_COL_TYPES           //             N,          N,      N,       N,         V,           N,           N,           N,            V,       V,            N,            N,            N,            N
//      P1647_MERT_CAT_ENTRIES_TABLE_TYPE          // S
#define P644_LUN_DIE                        16597  // CH_NUM,DIE_NUM,LUN
//      P644_LUN_DIE_COL_WIDTH                     //      6,      7, 17
//      P644_LUN_DIE_COL_MASK                      //      1,      1,  1
//      P644_LUN_DIE_COL_TYPES                     //      N,      N,  V
//      P644_LUN_DIE_TABLE_TYPE                    // S
#define P552_DMC_FRAME                      16598  // DMC_ZONE,DMC_USER_DATA_ZONE,DMC_MINI_SERPENT
//      P552_DMC_FRAME_COL_WIDTH                   //        8,                19,              17
//      P552_DMC_FRAME_COL_MASK                    //        0,                 0,               0
//      P552_DMC_FRAME_COL_TYPES                   // *
//      P552_DMC_FRAME_TABLE_TYPE                  // S

#define P552_MIN_SERPENT_SIZE               16599  // HEAD,MINI_SERPENT,MINI_SERPENT_SIZE
//      P552_MIN_SERPENT_SIZE_COL_WIDTH            //    5,          13,               18
//      P552_MIN_SERPENT_SIZE_COL_MASK             //    0,           0,                0
//      P552_MIN_SERPENT_SIZE_COL_TYPES            // *
//      P552_MIN_SERPENT_SIZE_TABLE_TYPE           // S
#define P000_TRKZN_AND_TOTAL                16600  // HEAD,ZONE,STR_TRK,NUM_TRK,TRK_PER_ZN,TRK_ACC
//      P000_TRKZN_AND_TOTAL_COL_WIDTH             //    4,   4,      8,      8,         8,     10
//      P000_TRKZN_AND_TOTAL_COL_MASK              //    0,   0,      0,      0,         0,      0
//      P000_TRKZN_AND_TOTAL_COL_TYPES             // *
//      P000_TRKZN_AND_TOTAL_TABLE_TYPE            // S
#define P000_TRKZN_AND_SECT                 16601  // HEAD,ZONE,NUM_SVZ,NUM_SERP,SVZ_SECT_SIZE,WEDGE_SIZE,STR_TRK,NUM_TRK,TOTAL_SECT
//      P000_TRKZN_AND_SECT_COL_WIDTH              //    4,   4,      8,       8,           14,        11,      8,      8,        10
//      P000_TRKZN_AND_SECT_COL_MASK               //    0,   0,      0,       0,            0,         0,      0,      0,         0
//      P000_TRKZN_AND_SECT_COL_TYPES              // *
//      P000_TRKZN_AND_SECT_TABLE_TYPE             // S
#define P000_DATA_ZN_HD_0                   16602  // ZONE,START_TRK,NUM_TRK,VBAR_SERP,NUM_SVZ,SZ_IX,NUM_SVZ_SERP,NUM_SVZ_TRK,PBA_PER_TRK,SVZ_PBA_TRK
//      P000_DATA_ZN_HD_0_COL_WIDTH                //    4,        9,      7,        9,      7,    5,          12,         11,         11,         11
//      P000_DATA_ZN_HD_0_COL_MASK                 //    0,        0,      0,        0,      0,    0,           0,          0,          0,          0
//      P000_DATA_ZN_HD_0_COL_TYPES                // *
//      P000_DATA_ZN_HD_0_TABLE_TYPE               // S
#define P521_HDC_LEAKAGE_CURRENT            16603  // HDC_LEAKAGE_CURRENT
//      P521_HDC_LEAKAGE_CURRENT_COL_WIDTH         //                  20
//      P521_HDC_LEAKAGE_CURRENT_COL_MASK          //                   0
//      P521_HDC_LEAKAGE_CURRENT_COL_TYPES         // *
//      P521_HDC_LEAKAGE_CURRENT_TABLE_TYPE        // S
#define P552_RAP_SVZ_NUM_SERP               16604  // HD,SZ0_SERP,SZ1_SERP,SZ2_SERP,SZ3_SERP,SZ4_SERP,SZ5_SERP,SZ6_SERP
//      P552_RAP_SVZ_NUM_SERP_COL_WIDTH            //  3,       9,       9,       9,       9,       9,       9,       9
//      P552_RAP_SVZ_NUM_SERP_COL_MASK             //  0,       0,       0,       0,       0,       0,       0,       0
//      P552_RAP_SVZ_NUM_SERP_COL_TYPES            // *
//      P552_RAP_SVZ_NUM_SERP_TABLE_TYPE           // S
#define P552_SZ_SERP_BOUNDARY               16605  // HEAD,SV_ZONE,NUM_SVZ_SP,SVZ_OFFSET
//      P552_SZ_SERP_BOUNDARY_COL_WIDTH            //    4,      7,        10,        10
//      P552_SZ_SERP_BOUNDARY_COL_MASK             //    0,      0,         0,         0
//      P552_SZ_SERP_BOUNDARY_COL_TYPES            // *
//      P552_SZ_SERP_BOUNDARY_TABLE_TYPE           // S
#define P515_DEFECT_LIST_HEADER             16606  // LIST,MAJOR_REV,MINOR_REV,ENTRY_COUNT,REVISION
//      P515_DEFECT_LIST_HEADER_COL_WIDTH          //    5,        9,        9,         11,       8
//      P515_DEFECT_LIST_HEADER_COL_MASK           //    0,        0,        0,          0,       0
//      P515_DEFECT_LIST_HEADER_COL_TYPES          // *
//      P515_DEFECT_LIST_HEADER_TABLE_TYPE         // S
#define P515_TOTAL_DEFECTS                  16607  // TOTAL_DEFECT_ENTRIES
//      P515_TOTAL_DEFECTS_COL_WIDTH               //                   20
//      P515_TOTAL_DEFECTS_COL_MASK                //                    0
//      P515_TOTAL_DEFECTS_COL_TYPES               // *
//      P515_TOTAL_DEFECTS_TABLE_TYPE              // S
#define P074_RAW_HF_LF_AMPLITUDES           16608  // SECTOR_NUM,HF_REF_AMPLITUDE,LF_REF_AMPLITUDE,HF_ACT_AMPLITUDE,LF_ACT_AMPLITUDE
//      P074_RAW_HF_LF_AMPLITUDES_COL_WIDTH        //         10,              16,              16,              16,              16
//      P074_RAW_HF_LF_AMPLITUDES_COL_MASK         //          0,               0,               0,               0,               0
//      P074_RAW_HF_LF_AMPLITUDES_COL_TYPES        // *
//      P074_RAW_HF_LF_AMPLITUDES_TABLE_TYPE       // S
#define P1647_MERT_SNGL_BLK_SUMRY           16609  // NUM_ENTRIES,ERROR_TYPE,ERROR_DESCRIPTION,DIE_NUM,CH_0_CNT,CH_1_CNT,CH_2_CNT,CH_3_CNT,CH_4_CNT,CH_5_CNT,CH_6_CNT,CH_7_CNT,CH_8_CNT,CH_9_CNT,CH_10_CNT,CH_11_CNT,CH_12_CNT,CH_13_CNT,CH_14_CNT,CH_15_CNT,CH_16_CNT,CH_17_CNT,CH_18_CNT,CH_19_CNT
//      P1647_MERT_SNGL_BLK_SUMRY_COL_WIDTH        //          11,        10,               17,      7,       8,       8,       8,       8,       8,       8,       8,       8,       8,       8,        9,        9,        9,        9,        9,        9,        9,        9,        9,        9
//      P1647_MERT_SNGL_BLK_SUMRY_COL_MASK         //           1,         1,                1,      1,       1,       1,       1,       1,       1,       1,       1,       1,       1,       1,        1,        1,        1,        1,        1,        1,        1,        1,        1,        1
//      P1647_MERT_SNGL_BLK_SUMRY_COL_TYPES        //           N,         V,                V,      N,       N,       N,       N,       N,       N,       N,       N,       N,       N,       N,        N,        N,        N,        N,        N,        N,        N,        N,        N,        N
//      P1647_MERT_SNGL_BLK_SUMRY_TABLE_TYPE       // S
#define P552_HEAD_ZONE_CYL                  16610  // HEAD,ZONE,START_TRK,NUM_OF_TRK,END_TRK,END_CYL,ACC_PBA
//      P552_HEAD_ZONE_CYL_COL_WIDTH               //    4,   4,       10,        10,     10,     10,     10
//      P552_HEAD_ZONE_CYL_COL_MASK                //    0,   0,        0,         0,      0,      0,      0
//      P552_HEAD_ZONE_CYL_COL_TYPES               // *
//      P552_HEAD_ZONE_CYL_TABLE_TYPE              // S
#define P552_FAFH_INFO                      16611  // FAFH_GRP,HEAD,ZONEGRP,START_TRACK,END_TRACK
//      P552_FAFH_INFO_COL_WIDTH                   //        8,   4,      8,         12,       10
//      P552_FAFH_INFO_COL_MASK                    //        0,   0,      0,          0,        0
//      P552_FAFH_INFO_COL_TYPES                   // *
//      P552_FAFH_INFO_TABLE_TYPE                  // S
#define P1502_SKEW_MEASUREMENT              16612  // OFFSET,DISC,TRACK_LOCATION,NUM_SAMPLES,SKEW_VALUE
//      P1502_SKEW_MEASUREMENT_COL_WIDTH           //      6,   4,            14,         11,        10
//      P1502_SKEW_MEASUREMENT_COL_MASK            //      0,   0,             0,          0,         0
//      P1502_SKEW_MEASUREMENT_COL_TYPES           // *
//      P1502_SKEW_MEASUREMENT_TABLE_TYPE          // S
#define P1502_DC_SKEW_RANGE                 16613  // DISC,DC_SKEW_RANGE
//      P1502_DC_SKEW_RANGE_COL_WIDTH              //    4,           13
//      P1502_DC_SKEW_RANGE_COL_MASK               //    0,            0
//      P1502_DC_SKEW_RANGE_COL_TYPES              // *
//      P1502_DC_SKEW_RANGE_TABLE_TYPE             // S
#define P552_DISP_ALLSVZONE                 16614  // MAX_LBA,MAX_PBA,MAX_HD,MAX_LZG,MAX_PZG,MAX_ZF,MAX_SZG,ACT_SZG,OVERLAP_SZG,MAX_SVZ,ACT_SVZ,OVERLAP_SVZ,MAX_LBA_ZONE
//      P552_DISP_ALLSVZONE_COL_WIDTH              //      10,     10,     7,      7,      7,     7,      8,      8,         12,      8,      8,         12,          13
//      P552_DISP_ALLSVZONE_COL_MASK               //       0,      0,     0,      0,      0,     0,      0,      0,          0,      0,      0,          0,           0
//      P552_DISP_ALLSVZONE_COL_TYPES              // *
//      P552_DISP_ALLSVZONE_TABLE_TYPE             // S
#define P552_Z_TBL_INFO                     16615  // HEAD,ZONE,SVO_ZONE,SZ_INDEX,ZN_START_CYL,TRK_NUM,PBA_TRACK,WEDGE_TO_WEDGE,MZ_IX,NUM_SP,SP_SZE,GAP_BEF_SVO,GAP_AFT_SVO,ACC_PBA
//      P552_Z_TBL_INFO_COL_WIDTH                  //    4,   4,       8,       8,          12,      7,        9,            15,    6,     6,     6,         11,         11,     12
//      P552_Z_TBL_INFO_COL_MASK                   //    0,   0,       0,       0,           0,      0,        0,             0,    0,     0,     0,          0,          0,      0
//      P552_Z_TBL_INFO_COL_TYPES                  // *
//      P552_Z_TBL_INFO_TABLE_TYPE                 // S
#define P552_NON_USERZONE_INFO              16616  // HEAD,ZONE,P_ZONE,L_ZONE,START_TRK,NUM_TRACKS
//      P552_NON_USERZONE_INFO_COL_WIDTH           //    4,   4,     7,     7,       10,        10
//      P552_NON_USERZONE_INFO_COL_MASK            //    0,   0,     0,     0,        0,         0
//      P552_NON_USERZONE_INFO_COL_TYPES           // *
//      P552_NON_USERZONE_INFO_TABLE_TYPE          // S
#define P552_DMC2_ZONE_INFO                 16617  // HEAD,DMCZONE,P_ZONE,L_ZONE,START_TRK,NUM_TRACKS
//      P552_DMC2_ZONE_INFO_COL_WIDTH              //    4,      7,     7,     7,       10,        10
//      P552_DMC2_ZONE_INFO_COL_MASK               //    0,      0,     0,     0,        0,         0
//      P552_DMC2_ZONE_INFO_COL_TYPES              // *
//      P552_DMC2_ZONE_INFO_TABLE_TYPE             // S
#define P552_FAFH_ZONE_INFO                 16618  // HEAD,FAFH_GRP,P_ZONE,L_ZONE,START_TRK,NUM_TRACKS
//      P552_FAFH_ZONE_INFO_COL_WIDTH              //    4,       8,     7,     7,       10,        10
//      P552_FAFH_ZONE_INFO_COL_MASK               //    0,       0,     0,     0,        0,         0
//      P552_FAFH_ZONE_INFO_COL_TYPES              // *
//      P552_FAFH_ZONE_INFO_TABLE_TYPE             // S
#define P000_GET_EXTRA_INFO                 16619  // SENSE_MODE,SEC_SIZE,RAP_KEY,WEDGE_COUNT,MC_SUPPORT,NVC_SUPPORT,HYBRID_SUPPORT,PI_FORMAT,5XXE,CFW_FEATURES
//      P000_GET_EXTRA_INFO_COL_WIDTH              //         12,       9,      8,         12,        11,         12,            15,       10,   5,          14
//      P000_GET_EXTRA_INFO_COL_MASK               //          0,       0,      0,          0,         0,          0,             0,        0,   0,           0
//      P000_GET_EXTRA_INFO_COL_TYPES              // *
//      P000_GET_EXTRA_INFO_TABLE_TYPE             // S
#define P529_SSD_FAIL_DFCT_SUMRY            16620  // MEDIA_ID,CHANNEL_NUM,DIE_NUM,PLANE_NUM,TOTAL_FAIL_DFCT
//      P529_SSD_FAIL_DFCT_SUMRY_COL_WIDTH         //        8,         11,      7,        9,             15
//      P529_SSD_FAIL_DFCT_SUMRY_COL_MASK          //        1,          1,      1,        1,              1
//      P529_SSD_FAIL_DFCT_SUMRY_COL_TYPES         //        N,          N,      N,        N,              N
//      P529_SSD_FAIL_DFCT_SUMRY_TABLE_TYPE        // S
#define P552_ZONED_SV_INFO                  16621  // HEAD,DATA_ZONE,SVO_ZONE,ZN_STRT_CYL,TRK_COUNT,WDG_SIZE
//      P552_ZONED_SV_INFO_COL_WIDTH               //    4,        9,       8,         11,        9,       8
//      P552_ZONED_SV_INFO_COL_MASK                //    0,        0,       0,          0,        0,       0
//      P552_ZONED_SV_INFO_COL_TYPES               // *
//      P552_ZONED_SV_INFO_TABLE_TYPE              // S
#define P552_BPI_ZONED_SV_INFO              16622  // HEAD,DATA_ZONE,SVO_ZONE,ZN_STRT_CYL,TRK_COUNT,WDG_SIZE,SYM_PER_TRK_ADJUST
//      P552_BPI_ZONED_SV_INFO_COL_WIDTH           //    4,        9,       8,         11,        9,       8,                18
//      P552_BPI_ZONED_SV_INFO_COL_MASK            //    0,        0,       0,          0,        0,       0,                 0
//      P552_BPI_ZONED_SV_INFO_COL_TYPES           // *
//      P552_BPI_ZONED_SV_INFO_TABLE_TYPE          // S
#define P630_READ_ERR_SENSE_DATA2           16623  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,CYLINDER,LBA,SQUEEZE,OVL_PCT,NUM_WRTS,NUM_RDS,S00,S01,S02,S03,S04,S05,S06,S07,S08,S09,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,KEY,CODE,QUAL,FRU,FAILING_LBA
//      P630_READ_ERR_SENSE_DATA2_COL_WIDTH        //          11,        10,   4,       8,  5,      7,      7,       8,      7,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,   4,   4,  3,         11
//      P630_READ_ERR_SENSE_DATA2_COL_MASK         //           0,         0,   0,       0,  0,      0,      0,       0,      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,   0,   0,  0,          0
//      P630_READ_ERR_SENSE_DATA2_COL_TYPES        // *
//      P630_READ_ERR_SENSE_DATA2_TABLE_TYPE       // S
#define P644_DIE_STATUS                     16624  // MEDIA_ID,CHANNEL_NUM,DIE_NUM,ERROR_DESCRIPTION
//      P644_DIE_STATUS_COL_WIDTH                  //        8,         11,      7,               32
//      P644_DIE_STATUS_COL_MASK                   //        1,          1,      1,                1
//      P644_DIE_STATUS_COL_TYPES                  //        N,          N,      N,                V
//      P644_DIE_STATUS_TABLE_TYPE                 // S
#define P564_SSD_SMRT_ATTCHK                16625  // LIFE_LEFT_PERCENT,OP_PERCENT,CUM_PE_COUNT,DEFECT_PE_COUNT,MLIST_COUNT
//      P564_SSD_SMRT_ATTCHK_COL_WIDTH             //                17,        10,          12,             15,         11
//      P564_SSD_SMRT_ATTCHK_COL_MASK              //                 1,         1,           1,              1,          1
//      P564_SSD_SMRT_ATTCHK_COL_TYPES             //                 N,         N,           N,              N,          N
//      P564_SSD_SMRT_ATTCHK_TABLE_TYPE            // S
#define P519_ERRCNT_PER_BLK_DIE             16626  // DIE_NUMBER,BLK_NUMBER,ERROR_COUNT,ERR_PER_DIE_LIMIT
//      P519_ERRCNT_PER_BLK_DIE_COL_WIDTH          //         11,        11,         11,               17
//      P519_ERRCNT_PER_BLK_DIE_COL_MASK           //          0,         0,          0,                0
//      P519_ERRCNT_PER_BLK_DIE_COL_TYPES          // *
//      P519_ERRCNT_PER_BLK_DIE_TABLE_TYPE         // S
#define P519_ERRCNT_PER_BLK                 16627  // DIE_NUMBER,BLK_NUMBER,ERROR_COUNT,ERR_PER_DIE_LIMIT
//      P519_ERRCNT_PER_BLK_COL_WIDTH              //         11,        11,         11,               17
//      P519_ERRCNT_PER_BLK_COL_MASK               //          0,         0,          0,                0
//      P519_ERRCNT_PER_BLK_COL_TYPES              // *
//      P519_ERRCNT_PER_BLK_TABLE_TYPE             // S
#define P552_FAFH_DITSCMD_INFO              16628  // FAFH_GRP,HEAD,ZONEGRP,START_TRACK,END_TRACK
//      P552_FAFH_DITSCMD_INFO_COL_WIDTH           //        8,   4,      8,         12,       10
//      P552_FAFH_DITSCMD_INFO_COL_MASK            //        0,   0,      0,          0,        0
//      P552_FAFH_DITSCMD_INFO_COL_TYPES           // *
//      P552_FAFH_DITSCMD_INFO_TABLE_TYPE          // S
#define P552_FAFH_ZONE_TBL_INFO             16629  // HEAD,FAFH_GRP,P_ZONE,L_ZONE,START_TRK,NUM_TRACKS
//      P552_FAFH_ZONE_TBL_INFO_COL_WIDTH          //    4,       8,     7,     7,       10,        10
//      P552_FAFH_ZONE_TBL_INFO_COL_MASK           //    0,       0,     0,     0,        0,         0
//      P552_FAFH_ZONE_TBL_INFO_COL_TYPES          // *
//      P552_FAFH_ZONE_TBL_INFO_TABLE_TYPE         // S
#define P552_DMC2_DITSCMD_INFO              16630  // HEAD,DMCZONE,P_ZONE,L_ZONE,START_TRK,NUM_TRACKS
//      P552_DMC2_DITSCMD_INFO_COL_WIDTH           //    4,      7,     7,     7,       10,        10
//      P552_DMC2_DITSCMD_INFO_COL_MASK            //    0,      0,     0,     0,        0,         0
//      P552_DMC2_DITSCMD_INFO_COL_TYPES           // *
//      P552_DMC2_DITSCMD_INFO_TABLE_TYPE          // S
#define P552_DMC2_ZONE_TBL_INFO             16631  // HEAD,DMCZONE,P_ZONE,L_ZONE,START_TRK,NUM_TRACKS
//      P552_DMC2_ZONE_TBL_INFO_COL_WIDTH          //    4,      7,     7,     7,       10,        10
//      P552_DMC2_ZONE_TBL_INFO_COL_MASK           //    0,      0,     0,     0,        0,         0
//      P552_DMC2_ZONE_TBL_INFO_COL_TYPES          // *
//      P552_DMC2_ZONE_TBL_INFO_TABLE_TYPE         // S
#define P552_CFW_FEATURE                    16632  // RWS_PARTITION,MC_SUPPORT,Z_SVO_SUPPORT,MINI_SP_FMT,CBAR_SUPPORT
//      P552_CFW_FEATURE_COL_WIDTH                 //            14,        11,           12,         13,          13
//      P552_CFW_FEATURE_COL_MASK                  //             0,         0,            0,          0,           0
//      P552_CFW_FEATURE_COL_TYPES                 // *
//      P552_CFW_FEATURE_TABLE_TYPE                // S
#define P552_ZN_SV_DB_INFO                   16633  // HEAD,DATA_ZONE,SVO_ZONE,ZN_STRT_CYL,TRK_COUNT,DIT_WDGSZ,ZTB_WDGSZ
//      P552_ZN_SV_DB_INFO_COL_WIDTH                //    4,        9,       8,         11,        9,       10,       10
//      P552_ZN_SV_DB_INFO_COL_MASK                 //    0,        0,       0,          0,        0,        0,        0
//      P552_ZN_SV_DB_INFO_COL_TYPES                // *
//      P552_ZN_SV_DB_INFO_TABLE_TYPE               // S
#define P552_BPI_ZN_SV_DB_INFO               16634  // HEAD,DATA_ZONE,SVO_ZONE,ZN_STRT_CYL,TRK_COUNT,WDG_SIZE1,WDG_SIZE2,SYM_PER_TRK_ADJUST
//      P552_BPI_ZN_SV_DB_INFO_COL_WIDTH            //    4,        9,       8,         11,        9,        9,        9,                18
//      P552_BPI_ZN_SV_DB_INFO_COL_MASK             //    0,        0,       0,          0,        0,        0,        0,                 0
//      P552_BPI_ZN_SV_DB_INFO_COL_TYPES            // *
//      P552_BPI_ZN_SV_DB_INFO_TABLE_TYPE           // S
#define P552_NONUSER_ZONE_TBL                16635  // HEAD,ZONE,P_ZONE,L_ZONE,START_TRK,NUM_TRACKS
//      P552_NONUSER_ZONE_TBL_COL_WIDTH             //    4,   4,     7,     7,       10,        10
//      P552_NONUSER_ZONE_TBL_COL_MASK              //    0,   0,     0,     0,        0,         0
//      P552_NONUSER_ZONE_TBL_COL_TYPES             // *
//      P552_NONUSER_ZONE_TBL_TABLE_TYPE            // S
#define P552_CFW_ZTBL_INFO                   16636  // HEAD,DATA_ZONE,RAP_SZN,STR_SVZ_IX,NUM_SVZ,ZN_START_CYL,TRK_NUM,PBA_TRACK,DITS_PBATRK,WEDGE,DITS_WEDGE,MZ_IX,NUM_SP,SP_SZE,GAP_BEF_SVO,GAP_AFT_SVO,ACC_PBA
//      P552_CFW_ZTBL_INFO_COL_WIDTH                //    4,        9,      7,         9,      7,          12,      7,        9,         11,    5,        10,    6,     6,     6,         11,         11,     12
//      P552_CFW_ZTBL_INFO_COL_MASK                 //    0,        0,      0,         0,      0,           0,      0,        0,          0,    0,         0,    0,     0,     0,          0,          0,      0
//      P552_CFW_ZTBL_INFO_COL_TYPES                // *
//      P552_CFW_ZTBL_INFO_TABLE_TYPE               // S
#define P552_TOTAL_PBA                       16637  // HEAD,ZONE,SZ_TRKS,ACC_SZ_TRK,DAT_TRK,N_USR_TRK,PBA_PER_TRK,PBA_PER_ZN,TOTAL_PBA
//      P552_TOTAL_PBA_COL_WIDTH                    //    4,   4,      8,        11,      8,       10,         12,        11,       10
//      P552_TOTAL_PBA_COL_MASK                     //    0,   0,      0,         0,      0,        0,          0,         0,        0
//      P552_TOTAL_PBA_COL_TYPES                    // *
//      P552_TOTAL_PBA_TABLE_TYPE                   // S
#define P000_RAW_LOGICAL_ZTBL                16638  // HEAD,L_ZONE,P_ZONE,NUM_SVZ,NUM_SVG,STR_TRK,NUM_TRK,NUM_SP,SP_SIZE,STR_PBA
//      P000_RAW_LOGICAL_ZTBL_COL_WIDTH             //    4,     6,     6,      7,      7,     12,      7,     7,      7,      8
//      P000_RAW_LOGICAL_ZTBL_COL_MASK              //    0,     0,     0,      0,      0,      0,      0,     0,      0,      0
//      P000_RAW_LOGICAL_ZTBL_COL_TYPES             // *
//      P000_RAW_LOGICAL_ZTBL_TABLE_TYPE            // S
#define P529_SSD_SUSPECT_DF_SUM              16639  // MEDIA_ID,DIE_NUM,CH_0_CNT,CH_1_CNT,CH_2_CNT,CH_3_CNT,CH_4_CNT,CH_5_CNT,CH_6_CNT,CH_7_CNT,CH_8_CNT,CH_9_CNT,CH_10_CNT,CH_11_CNT,CH_12_CNT,CH_13_CNT,CH_14_CNT,CH_15_CNT,CH_16_CNT,CH_17_CNT,CH_18_CNT,CH_19_CNT
//      P529_SSD_SUSPECT_DF_SUM_COL_WIDTH           //        8,      7,       8,       8,       8,       8,       8,       8,       8,       8,       8,       8,        9,        9,        9,        9,        9,        9,        9,        9,        9,        9
//      P529_SSD_SUSPECT_DF_SUM_COL_MASK            //        0,      0,       0,       0,       0,       0,       0,       0,       0,       0,       0,       0,        0,        0,        0,        0,        0,        0,        0,        0,        0,        0
//      P529_SSD_SUSPECT_DF_SUM_COL_TYPES           // *
//      P529_SSD_SUSPECT_DF_SUM_TABLE_TYPE          // S
#define P529_SSD_SUSPECT_DEFECTS             16640  // MEDIA_ID,CHANNEL_NUM,DIE_NUM,BLOCK_NUM,DEFECT_INFO,PLANE_NUM
//      P529_SSD_SUSPECT_DEFECTS_COL_WIDTH          //        8,         11,      7,        9,         11,        9
//      P529_SSD_SUSPECT_DEFECTS_COL_MASK           //        0,          0,      0,        0,          0,        0
//      P529_SSD_SUSPECT_DEFECTS_COL_TYPES          // *
//      P529_SSD_SUSPECT_DEFECTS_TABLE_TYPE         // S
#define P552_DITSCMD_USER_INFO               16641  // MAX_HEAD,SYS_SECT_SIZE,USR_SECT_SIZE,MAX_USR_LBA,MAX_USR_PBA
//      P552_DITSCMD_USER_INFO_COL_WIDTH            //        9,           14,           14,         12,         12
//      P552_DITSCMD_USER_INFO_COL_MASK             //        0,            0,            0,          0,          0
//      P552_DITSCMD_USER_INFO_COL_TYPES            // *
//      P552_DITSCMD_USER_INFO_TABLE_TYPE           // S
#define P552_SVO_Z_TBL_USER_INFO             16642  // MAX_LBA,MAX_PBA,MAX_HD,MAX_LZG,MAX_PZG,MAX_ZF,MAX_SZG,ACT_SZG,OVERLAP_SZG,MAX_SVZ,ACT_SVZ,OVERLAP_SVZ,MAX_LBA_ZONE
//      P552_SVO_Z_TBL_USER_INFO_COL_WIDTH          //      10,     10,     7,      7,      7,     7,      8,      8,         12,      8,      8,         12,          13
//      P552_SVO_Z_TBL_USER_INFO_COL_MASK           //       0,      0,     0,      0,      0,     0,      0,      0,          0,      0,      0,          0,           0
//      P552_SVO_Z_TBL_USER_INFO_COL_TYPES          // *
//      P552_SVO_Z_TBL_USER_INFO_TABLE_TYPE         // S
#define P552_FAFH_DITSCMD_DB_INFO            16643  // FAFH_GRP,HEAD,ZONEGRP,START_TRACK,END_TRACK,NUM_TRACKS,SEC_P_TRK,NUM_SECTORS,ACCUM_SECTORS
//      P552_FAFH_DITSCMD_DB_INFO_COL_WIDTH         //        8,   4,      8,         12,       10,        10,       10,         12,           14
//      P552_FAFH_DITSCMD_DB_INFO_COL_MASK          //        0,   0,      0,          0,        0,         0,        0,          0,            0
//      P552_FAFH_DITSCMD_DB_INFO_COL_TYPES         // *
//      P552_FAFH_DITSCMD_DB_INFO_TABLE_TYPE        // S
#define P552_DMC2_DITSCMD_DB_INFO            16644  // HEAD,DMCZONE,P_ZONE,L_ZONE,START_TRK,NUM_TRACKS,SEC_P_TRK,NUM_SECTORS,ACCUM_SECTORS
//      P552_DMC2_DITSCMD_DB_INFO_COL_WIDTH         //    4,      7,     7,     7,       10,        10,       10,         12,           14
//      P552_DMC2_DITSCMD_DB_INFO_COL_MASK          //    0,      0,     0,     0,        0,         0,        0,          0,            0
//      P552_DMC2_DITSCMD_DB_INFO_COL_TYPES         // *
//      P552_DMC2_DITSCMD_DB_INFO_TABLE_TYPE        // S

/****************************************************************************************************************************

 #     #    ##    #####    #    #  ###  #    #   ####
 #  #  #   #  #   #    #   # #  #   #   # #  #  #
 # # # #  ######  #####    #  # #   #   #  # #  #  ###
 ##   ##  #    #  #    #   #   ##   #   #   ##  #    #
 #     #  #    #  #     #  #    #  ###  #    #   ####

 Check the deprecation and modification policies at the top of this file before making changes.

*****************************************************************************************************************************/

// *******************  SATATEST DBLOG Table definitions  (Starts @ SATATEST_DBLOG_INDEX_OFFSET (in table_offsets.h)) *********************************
// ***  Table Names                                ***  Table Column Names / Column Widths / Masks / Table type ***
#define P000_SATA_DEBUG_DATA                32000  // *
//      P000_SATA_DEBUG_DATA_COL_WIDTH             // 5
//      P000_SATA_DEBUG_DATA_COL_MASK              // 0
//      P000_SATA_DEBUG_DATA_COL_TYPES             // *
//      P000_SATA_DEBUG_DATA_TABLE_TYPE            // S
#define P5XX_TFREGEXT                       32001  // ERROR_CODE,ERR_REG,SCNT,LBA_UPPER,LBA_LOWER,DEV,STATUS
//      P5XX_TFREGEXT_COL_WIDTH                    //         10,      8,   4,       10,       10,  4,     6
//      P5XX_TFREGEXT_COL_MASK                     //          0,      0,   0,        0,        0,  0,     0
//      P5XX_TFREGEXT_COL_TYPES                    // *
//      P5XX_TFREGEXT_TABLE_TYPE                   // V
#define P5XX_TFREG_CHS                      32002  // ERROR_CODE,ERR_REG,SCNT,SECTOR,CYLINDER,HEAD,STATUS
//      P5XX_TFREG_CHS_COL_WIDTH                   //         10,      8,   6,     8,      10,   6,     8
//      P5XX_TFREG_CHS_COL_MASK                    //          0,      0,   0,     0,       0,   0,     0
//      P5XX_TFREG_CHS_COL_TYPES                   // *
//      P5XX_TFREG_CHS_TABLE_TYPE                  // V
#define P5XX_TFREG_LBA                      32003  // ERROR_CODE,ERR_REG,SCNT,LBA,DEV,STATUS
//      P5XX_TFREG_LBA_COL_WIDTH                   //         10,      8,   6, 10,  4,     8
//      P5XX_TFREG_LBA_COL_MASK                    //          0,      0,   0,  0,  0,     0
//      P5XX_TFREG_LBA_COL_TYPES                   // *
//      P5XX_TFREG_LBA_TABLE_TYPE                  // V
#define P514_MODEL_SN_FW_VER                32004  // MODEL_NBR,HDA_SN,FW_VER
//      P514_MODEL_SN_FW_VER_COL_WIDTH             //        12,    10,     8
//      P514_MODEL_SN_FW_VER_COL_MASK              //         0,     0,     0
//      P514_MODEL_SN_FW_VER_COL_TYPES             // *
//      P514_MODEL_SN_FW_VER_TABLE_TYPE            // S
#define P514_IDENTIFY_DEVICE_DATA           32005  // WORD,VALUE
//      P514_IDENTIFY_DEVICE_DATA_COL_WIDTH        //    8,    8
//      P514_IDENTIFY_DEVICE_DATA_COL_MASK         //    0,    0
//      P514_IDENTIFY_DEVICE_DATA_COL_TYPES        // *
//      P514_IDENTIFY_DEVICE_DATA_TABLE_TYPE       // V
#define P508_BUFFER_DATA                    32006  // ADDRESS,00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F
//      P508_BUFFER_DATA_COL_WIDTH                 //       8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
//      P508_BUFFER_DATA_COL_MASK                  //       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//      P508_BUFFER_DATA_COL_TYPES                 // *
//      P508_BUFFER_DATA_TABLE_TYPE                // V
#define P535_VERSION_INFO                   32007  // CPC_VERSION,BOOT_VERSION,BOOT_DATE
//      P535_VERSION_INFO_COL_WIDTH                //          12,          17,       12
//      P535_VERSION_INFO_COL_MASK                 //           0,           0,        0
//      P535_VERSION_INFO_COL_TYPES                // *
//      P535_VERSION_INFO_TABLE_TYPE               // S
#define P008_SENSE_DATA                     32008  // SENSE,ASC,ASCQ,FRU
//      P008_SENSE_DATA_COL_WIDTH                  //     5,  4,   4,  4
//      P008_SENSE_DATA_COL_MASK                   //     0,  0,   0,  0
//      P008_SENSE_DATA_COL_TYPES                  // *
//      P008_SENSE_DATA_TABLE_TYPE                 // V
#define P598_TRANSFER_RATE                  32009  // ZONE,TIME,DATA_RATE,LBAS_XFRED,START_LBA,END_LBA,MIN_TIME,(LBA),MAX_TIME,(LBA)
//      P598_TRANSFER_RATE_COL_WIDTH               //    4,  16,       10,        20,       16,     16,      16,   16,      16,   16
//      P598_TRANSFER_RATE_COL_MASK                //    0,   0,        0,         0,        0,      0,       0,    0,       0,    0
//      P598_TRANSFER_RATE_COL_TYPES               // *
//      P598_TRANSFER_RATE_TABLE_TYPE              // V
#define P597_QUEUE_LIST                     32010  // INDEX,COMMAND,LBA,SECTOR_COUNT,BUFFER_POINTER
//      P597_QUEUE_LIST_COL_WIDTH                  //     5,     12, 20,          17,            18
//      P597_QUEUE_LIST_COL_MASK                   //     0,      0,  0,           0,             0
//      P597_QUEUE_LIST_COL_TYPES                  // *
//      P597_QUEUE_LIST_TABLE_TYPE                 // S
#define P509_ERROR_RATE_CPC                 32011  // HD_PHYS_PSN,HD_LGC_PSN,STARTING_LBA,DATA_ERRORS,BITS_READ,ERROR_RATE,ERROR_RATE10,HARD_ERROR_RATE,SOFT_ERROR_RATE
//      P509_ERROR_RATE_CPC_COL_WIDTH              //          11,        10,          12,         11,       12,        15,          12,             15,             15
//      P509_ERROR_RATE_CPC_COL_MASK               //           0,         0,           0,          0,        0,         0,           0,              0,              0
//      P509_ERROR_RATE_CPC_COL_TYPES              // *
//      P509_ERROR_RATE_CPC_TABLE_TYPE             // V
#define P510_ERROR_RATE_CPC                 32012  // HD_PHYS_PSN,HD_LGC_PSN,STARTING_LBA,DATA_ERRORS,BITS_READ,ERROR_RATE,ERROR_RATE10,HARD_ERROR_RATE,SOFT_ERROR_RATE
//      P510_ERROR_RATE_CPC_COL_WIDTH              //          11,        10,          12,         11,       12,        15,          12,             15,             15
//      P510_ERROR_RATE_CPC_COL_MASK               //           0,         0,           0,          0,        0,         0,           0,              0,              0
//      P510_ERROR_RATE_CPC_COL_TYPES              // *
//      P510_ERROR_RATE_CPC_TABLE_TYPE             // V
#define P000_TFREGEXT_LBA_AND_CHS           32013  // LBA_UPPER,LBA_LOWER,CYLINDER,HEAD,SECTOR,ERROR_CODE,ERR_REG,SCNT,LBA_UPPER,LBA_LOWER,DEV,STATUS
//      P000_TFREGEXT_LBA_AND_CHS_COL_WIDTH        //         9,        9,      10,   4,     8,        10,      8,   4,       10,       10,  4,     6
//      P000_TFREGEXT_LBA_AND_CHS_COL_MASK         //         0,        0,       0,   0,     0,         0,      0,   0,        0,        0,  0,     0
//      P000_TFREGEXT_LBA_AND_CHS_COL_TYPES        // *
//      P000_TFREGEXT_LBA_AND_CHS_TABLE_TYPE       // S
#define P515_DISPLAY_BBT_CPC                32014  // ENTRY,LBA_UPPER,LBA_LOWER,TYPE
//      P515_DISPLAY_BBT_CPC_COL_WIDTH             //     5,        9,        9,  15
//      P515_DISPLAY_BBT_CPC_COL_MASK              //     0,        0,        0,   0
//      P515_DISPLAY_BBT_CPC_COL_TYPES             // *
//      P515_DISPLAY_BBT_CPC_TABLE_TYPE            // V
#define P_CCT_MAX_CMD_TIMES                 32015  // CMD_RANK,CMD_TIME,LBA
//      P_CCT_MAX_CMD_TIMES_COL_WIDTH              //        8,       8, 12
//      P_CCT_MAX_CMD_TIMES_COL_MASK               //        1,       1,  1
//      P_CCT_MAX_CMD_TIMES_COL_TYPES              //        N,       N,  N
//      P_CCT_MAX_CMD_TIMES_TABLE_TYPE             // V
#define P_CCT_DISTRIBUTION                  32016  // CCT_BIN_NUM,BIN_THRESHOLD,BIN_ENTRIES
//      P_CCT_DISTRIBUTION_COL_WIDTH               //          11,           13,         11
//      P_CCT_DISTRIBUTION_COL_MASK                //           1,            1,          1
//      P_CCT_DISTRIBUTION_COL_TYPES               //           N,            N,          N
//      P_CCT_DISTRIBUTION_TABLE_TYPE              // V
#define P600_SELF_TEST_STATUS               32017  // SELF_TEST_OPTION,SELF_TEST_STATUS
//      P600_SELF_TEST_STATUS_COL_WIDTH            //               16,              16
//      P600_SELF_TEST_STATUS_COL_MASK             //                0,               0
//      P600_SELF_TEST_STATUS_COL_TYPES            // *
//      P600_SELF_TEST_STATUS_TABLE_TYPE           // S
#define P000_ERROR_LOCATION                 32018  // LBA_MSW,LBA_LSW,CYLINDER,HEAD,SECTOR,ERROR_CODE
//      P000_ERROR_LOCATION_COL_WIDTH              //       8,      8,      10,   4,     8,        10
//      P000_ERROR_LOCATION_COL_MASK               //       0,      0,       0,   0,     0,         0
//      P000_ERROR_LOCATION_COL_TYPES              // *
//      P000_ERROR_LOCATION_TABLE_TYPE             // S
#define P551_IO_COMPARE                     32019  // OFFSET,EXPECTED,RECEIVED
//      P551_IO_COMPARE_COL_WIDTH                  //      8,      10,      10
//      P551_IO_COMPARE_COL_MASK                   //      0,       0,       0
//      P551_IO_COMPARE_COL_TYPES                  // *
//      P551_IO_COMPARE_TABLE_TYPE                 // V
#define P535_BUILD_INFO                     32020  // BUILD_DATE,BUILD_TIME
//      P535_BUILD_INFO_COL_WIDTH                  //         12,        12
//      P535_BUILD_INFO_COL_MASK                   //          0,         0
//      P535_BUILD_INFO_COL_TYPES                  // *
//      P535_BUILD_INFO_TABLE_TYPE                 // S
#define P000_INCOMING_DATA_SIZE             32021  // BYTES
//      P000_INCOMING_DATA_SIZE_COL_WIDTH          //    10
//      P000_INCOMING_DATA_SIZE_COL_MASK           //     0
//      P000_INCOMING_DATA_SIZE_COL_TYPES          // *
//      P000_INCOMING_DATA_SIZE_TABLE_TYPE         // S
#define P529_GLIST_DATA                     32022  // LBA_MSW,LBA_LSW,CYLINDER,HEAD,BCAI,LENGTH
//      P529_GLIST_DATA_COL_WIDTH                  //       8,      8,       8,   4,   8,     8
//      P529_GLIST_DATA_COL_MASK                   //       0,      0,       0,   0,   0,     0
//      P529_GLIST_DATA_COL_TYPES                  // *
//      P529_GLIST_DATA_TABLE_TYPE                 // V
#define P5XX_STATUS_CONTROL_REG             32023  // SSTATUS,SSERROR,SSCONTROL,SSACTIVE,SSNOTIF
//      P5XX_STATUS_CONTROL_REG_COL_WIDTH          //      10,     10,       10,      10,     10
//      P5XX_STATUS_CONTROL_REG_COL_MASK           //       0,      0,        0,       0,      0
//      P5XX_STATUS_CONTROL_REG_COL_TYPES          // *
//      P5XX_STATUS_CONTROL_REG_TABLE_TYPE         // S
#define P509_SECTOR_ERROR_RATE              32024  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,STARTING_LBA,DATA_ERRORS,SECTORS_READ,SECTOR_ERROR_RATE10,HARD_SECTOR_ERROR_RATE10,SOFT_SECTOR_ERROR_RATE10,BER10_VERIFY,BER10_DELTA,PASS_FAIL_FLAG,DATA_ZONE
//      P509_SECTOR_ERROR_RATE_COL_WIDTH           //          11,        9,        10,          12,         11,          12,                 19,                      24,                      24,          12,         11,            14,        9
//      P509_SECTOR_ERROR_RATE_COL_MASK            //           0,        0,         0,           0,          0,           0,                  0,                       0,                       0,           0,          0,             0,        0
//      P509_SECTOR_ERROR_RATE_COL_TYPES           // *
//      P509_SECTOR_ERROR_RATE_TABLE_TYPE          // M
#define P000_LAST_DITS_COMMANDS             32025  // *
//      P000_LAST_DITS_COMMANDS_COL_WIDTH          // 2
//      P000_LAST_DITS_COMMANDS_COL_MASK           // 0
//      P000_LAST_DITS_COMMANDS_COL_TYPES          // *
//      P000_LAST_DITS_COMMANDS_TABLE_TYPE         // S
#define P530_ETF_PLIST                      32026  // COUNT,CYLINDER,POSITION,LENGTH,HEAD,TYPE
//      P530_ETF_PLIST_COL_WIDTH                   //     6,      10,      10,    10,   4,   4
//      P530_ETF_PLIST_COL_MASK                    //     0,       0,       0,     0,   0,   0
//      P530_ETF_PLIST_COL_TYPES                   // *
//      P530_ETF_PLIST_TABLE_TYPE                  // V
#define P529_GLIST_DATA_DETAIL              32027  // PBA_MSW,PBA_LSW,CYLINDER,HEAD,SECTOR,BCAI,LENGTH,FLAGS
//      P529_GLIST_DATA_DETAIL_COL_WIDTH           //       8,      8,       8,   4,     6,   8,     8,    5
//      P529_GLIST_DATA_DETAIL_COL_MASK            //       0,      0,       0,   0,     0,   0,     0,    0
//      P529_GLIST_DATA_DETAIL_COL_TYPES           // *
//      P529_GLIST_DATA_DETAIL_TABLE_TYPE          // V
#define P529_GLIST_SUMMARY                  32028  // PBA_MSW,PBA_LSW,FLAGS,LENGTH
//      P529_GLIST_SUMMARY_COL_WIDTH               //       8,      8,    5,     8
//      P529_GLIST_SUMMARY_COL_MASK                //       0,      0,    0,     0
//      P529_GLIST_SUMMARY_COL_TYPES               // *
//      P529_GLIST_SUMMARY_TABLE_TYPE              // V
#define P000_DEFECTIVE_PBAS                 32029  // NUMBER_OF_PBAS,RLIST_SECTORS,RLIST_WEDGES
//      P000_DEFECTIVE_PBAS_COL_WIDTH              //             14,           13,          12
//      P000_DEFECTIVE_PBAS_COL_MASK               //              1,            1,           1
//      P000_DEFECTIVE_PBAS_COL_TYPES              //              N,            N,           N
//      P000_DEFECTIVE_PBAS_TABLE_TYPE             // S
#define P000_BUFFER                         32030  // ADDRESS,00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F
//      P000_BUFFER_COL_WIDTH                      //       8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
//      P000_BUFFER_COL_MASK                       //       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//      P000_BUFFER_COL_TYPES                      // *
//      P000_BUFFER_TABLE_TYPE                     // S
#define P510_SLOW_CCT_LOCATIONS             32031  // CMD_TIME,LBA,BLOCK_COUNT
//      P510_SLOW_CCT_LOCATIONS_COL_WIDTH          //       10, 12,         11
//      P510_SLOW_CCT_LOCATIONS_COL_MASK           //        0,  0,          0
//      P510_SLOW_CCT_LOCATIONS_COL_TYPES          // *
//      P510_SLOW_CCT_LOCATIONS_TABLE_TYPE         // S
#define P520_ERROR_COUNT                    32032  // ERROR_COUNT,ERROR_CODE,ERROR_LBA_HI,ERROR_LBA_LO
//      P520_ERROR_COUNT_COL_WIDTH                 //          11,        10,          12,          12
//      P520_ERROR_COUNT_COL_MASK                  //           0,         0,           0,           0
//      P520_ERROR_COUNT_COL_TYPES                 // *
//      P520_ERROR_COUNT_TABLE_TYPE                // S
#define P598_SKIPPED_ZONES                  32033  // DATA_ZONE,START_LBA
//      P598_SKIPPED_ZONES_COL_WIDTH               //         9,       10
//      P598_SKIPPED_ZONES_COL_MASK                //         1,        1
//      P598_SKIPPED_ZONES_COL_TYPES               //         N,        V
//      P598_SKIPPED_ZONES_TABLE_TYPE              // V
#define P641_DMAEXT_TRANSFER_RATE           32034  // RW_MODE,START_LBA,END_LBA,LBA_CNT,XFER_TIME,XFER_RATE_BLOCK_PER_SEC,XFER_RATE_MB_PER_SEC
//      P641_DMAEXT_TRANSFER_RATE_COL_WIDTH        //       8,       10,     10,     10,       15,                     23,                  20
//      P641_DMAEXT_TRANSFER_RATE_COL_MASK         //       1,        1,      1,      1,        1,                      1,                   1
//      P641_DMAEXT_TRANSFER_RATE_COL_TYPES        //       V,        N,      N,      N,        N,                      N,                   N
//      P641_DMAEXT_TRANSFER_RATE_TABLE_TYPE       // S
#define P600_SELF_TEST_TIMING               32035  // DST_TIME,DST_TIME_SPEC
//      P600_SELF_TEST_TIMING_COL_WIDTH            //       10,           13
//      P600_SELF_TEST_TIMING_COL_MASK             //        0,            0
//      P600_SELF_TEST_TIMING_COL_TYPES            // *
//      P600_SELF_TEST_TIMING_TABLE_TYPE           // S
#define P_SATA_SCT                          32036  // SCT_ACTION_CODE,SCT_FUNCTION_CODE,SCT_EXTENDED_STATUS
//      P_SATA_SCT_COL_WIDTH                       //              15,               17,                 19
//      P_SATA_SCT_COL_MASK                        //               0,                0,                  0
//      P_SATA_SCT_COL_TYPES                       // *
//      P_SATA_SCT_TABLE_TYPE                      // S
#define P642_PHY_REG                        32037  // ADDRESS,DATA
//      P642_PHY_REG_COL_WIDTH                     //       8,   8
//      P642_PHY_REG_COL_MASK                      //       0,   0
//      P642_PHY_REG_COL_TYPES                     // *
//      P642_PHY_REG_TABLE_TYPE                    // S

// Deprecated 11/19/2009
#define P642_DEFECT_LIST_COUNT              32038  // COUNT
//      P642_DEFECT_LIST_COUNT_COL_WIDTH           //     8
//      P642_DEFECT_LIST_COUNT_COL_MASK            //     0
//      P642_DEFECT_LIST_COUNT_COL_TYPES           // *
//      P642_DEFECT_LIST_COUNT_TABLE_TYPE          // V

#define P642_MFG_DEFECT_LIST                32039  // BUS,CE,DIE,PLANE,BLOCK,LANE
//      P642_MFG_DEFECT_LIST_COL_WIDTH             //   3, 2,  3,    5,    5,   4
//      P642_MFG_DEFECT_LIST_COL_MASK              //   1, 1,  1,    1,    1,   1
//      P642_MFG_DEFECT_LIST_COL_TYPES             //   V, V,  V,    V,    V,   V
//      P642_MFG_DEFECT_LIST_TABLE_TYPE            // S
#define P642_GROWN_DEFECT_LIST              32040  // BUS,CE,DIE,PLANE,BLOCK,LANE
//      P642_GROWN_DEFECT_LIST_COL_WIDTH           //   3, 2,  3,    5,    5,   4
//      P642_GROWN_DEFECT_LIST_COL_MASK            //   1, 1,  1,    1,    1,   1
//      P642_GROWN_DEFECT_LIST_COL_TYPES           //   V, V,  V,    V,    V,   V
//      P642_GROWN_DEFECT_LIST_TABLE_TYPE          // S
#define P642_WEAR_DISTRIBUTION_HD           32041  // ENTRIES,COUNT_MIN,COUNT_MAX
//      P642_WEAR_DISTRIBUTION_HD_COL_WIDTH        //      10,       10,       10
//      P642_WEAR_DISTRIBUTION_HD_COL_MASK         //       0,        0,        0
//      P642_WEAR_DISTRIBUTION_HD_COL_TYPES        // *
//      P642_WEAR_DISTRIBUTION_HD_TABLE_TYPE       // S
#define P642_WEAR_DISTRIBUTION              32042  // DATA
//      P642_WEAR_DISTRIBUTION_COL_WIDTH           //   10
//      P642_WEAR_DISTRIBUTION_COL_MASK            //    0
//      P642_WEAR_DISTRIBUTION_COL_TYPES           // *
//      P642_WEAR_DISTRIBUTION_TABLE_TYPE          // S

// Deprecated 11/19/2009
#define P642_DIAGNOSTIC_IDENTIFY0           32043  // FW_REV,HW_REV,ROM_REV,FW_TYPE
//      P642_DIAGNOSTIC_IDENTIFY0_COL_WIDTH        //     18,    18,     18,      4
//      P642_DIAGNOSTIC_IDENTIFY0_COL_MASK         //      0,     0,      0,      0
//      P642_DIAGNOSTIC_IDENTIFY0_COL_TYPES        // *
//      P642_DIAGNOSTIC_IDENTIFY0_TABLE_TYPE       // S

// Deprecated 11/19/2009
#define P642_DIAGNOSTIC_IDENTIFY1           32044  // FLASH_PAGE_SIZE,CE,EPAGE,MFG_ID,DEV_ID,FL_ID2,FL_ID3,FL_ID4,FL_ID5,FL_ID6,FL_ID7
//      P642_DIAGNOSTIC_IDENTIFY1_COL_WIDTH        //              16, 5,    5,     6,     6,     6,     6,     6,     6,     6,     6
//      P642_DIAGNOSTIC_IDENTIFY1_COL_MASK         //               0, 0,    0,     0,     0,     0,     0,     0,     0,     0,     0
//      P642_DIAGNOSTIC_IDENTIFY1_COL_TYPES        // *
//      P642_DIAGNOSTIC_IDENTIFY1_TABLE_TYPE       // S

// Deprecated 11/19/2009
#define P642_DIAGNOSTIC_IDENTIFY2           32045  // ACCU_REV
//      P642_DIAGNOSTIC_IDENTIFY2_COL_WIDTH        //       40
//      P642_DIAGNOSTIC_IDENTIFY2_COL_MASK         //        0
//      P642_DIAGNOSTIC_IDENTIFY2_COL_TYPES        // *
//      P642_DIAGNOSTIC_IDENTIFY2_TABLE_TYPE       // S

#define P509_SKIPPED_SERPENTS               32046  // HD_PHYS_PSN,HD_LGC_PSN,SERPENT,STARTING_LBA,ENDING_LBA,DRV_MAX_LBA
//      P509_SKIPPED_SERPENTS_COL_WIDTH            //          11,        10,      7,          15,        15,         15
//      P509_SKIPPED_SERPENTS_COL_MASK             //           0,         0,      0,           0,         0,          0
//      P509_SKIPPED_SERPENTS_COL_TYPES            // *
//      P509_SKIPPED_SERPENTS_TABLE_TYPE           // S

// Deprecated 11/19/2009
#define P642_DIAGNOSTIC_IDENTIFY3           32047  // DIE_PER_CE,BLOCKS_PER_DIE,PAGES_PER_BLOCK,RAW_CAPACITY_SECTORS,RAW_CAPACITY_BYTES
//      P642_DIAGNOSTIC_IDENTIFY3_COL_WIDTH        //         10,            15,             16,                  20,                18
//      P642_DIAGNOSTIC_IDENTIFY3_COL_MASK         //          0,             0,              0,                   0,                 0
//      P642_DIAGNOSTIC_IDENTIFY3_COL_TYPES        // *
//      P642_DIAGNOSTIC_IDENTIFY3_TABLE_TYPE       // S

// Deprecated 11/24/2009
#define P642_SUPERCAP                       32048  // COMP_NUM,FW_REV,CAPACITANCE,ESR,REQUIRED_VOLTAGE,SUPERCAP_STATUS,HEALTH,BALANCE
//      P642_SUPERCAP_COL_WIDTH                    //        8,    25,         12, 10,              16,             16,     6,      7
//      P642_SUPERCAP_COL_MASK                     //        0,     0,          0,  0,               0,              0,     0,      0
//      P642_SUPERCAP_COL_TYPES                    // *
//      P642_SUPERCAP_TABLE_TYPE                   // S

// Deprecated 11/19/2009
#define P642_DRIVE_TEMPERATURE              32049  // ACTUAL_TEMPERATURE,TEMP_SENSOR_VALUE
//      P642_DRIVE_TEMPERATURE_COL_WIDTH           //                 18,               15
//      P642_DRIVE_TEMPERATURE_COL_MASK            //                  0,                0
//      P642_DRIVE_TEMPERATURE_COL_TYPES           // *
//      P642_DRIVE_TEMPERATURE_TABLE_TYPE          // S

#define P642_SELFTEST_REG_STATUS            32050  // TEST_TIME,STATUS,COUNT,ERROR_CODE,ERASE,WRITE,READ,ERASE_ERRS,WRITE_ERRS,UNCOR_READ_ERRS,COR_READ_ERRS
//      P642_SELFTEST_REG_STATUS_COL_WIDTH         //        16,    10,   10,        10,    6,    6,   6,        10,        10,             16,           16
//      P642_SELFTEST_REG_STATUS_COL_MASK          //         0,     0,    0,         0,    0,    0,   0,         0,         0,              0,            0
//      P642_SELFTEST_REG_STATUS_COL_TYPES         // *
//      P642_SELFTEST_REG_STATUS_TABLE_TYPE        // S
#define P642_SSD_MIF_DATA                   32051  // PCBA_NUM,COMP_TYPE,COMP_NUM,VENDOR,COMP_PART_NUM,COMP_REV,COMP_LOT_CODE
//      P642_SSD_MIF_DATA_COL_WIDTH                //        8,       14,       8,    18,           18,      18,           16
//      P642_SSD_MIF_DATA_COL_MASK                 //        1,        1,       1,     1,            1,       1,            1
//      P642_SSD_MIF_DATA_COL_TYPES                //        N,        V,       N,     V,            V,       V,            V
//      P642_SSD_MIF_DATA_TABLE_TYPE               // S
#define P642_SUPERCAP_MIF_DATA              32052  // PCBA_NUM,COMP_TYPE,COMP_NUM,VENDOR,COMP_PART_NUM,COMP_LOT_CODE,CAPACITANCE,ESR
//      P642_SUPERCAP_MIF_DATA_COL_WIDTH           //        8,       14,       8,    18,           18,           16,         16, 16
//      P642_SUPERCAP_MIF_DATA_COL_MASK            //        1,        1,       1,     1,            1,            1,          1,  1
//      P642_SUPERCAP_MIF_DATA_COL_TYPES           //        N,        V,       N,     V,            V,            V,          N,  N
//      P642_SUPERCAP_MIF_DATA_TABLE_TYPE          // S
#define P642_FLASH_MIF_DATA                 32053  // PCBA_NUM,COMP_TYPE,COMP_NUM,VENDOR,UNIQUE_ID
//      P642_FLASH_MIF_DATA_COL_WIDTH              //        8,       14,       8,    18,       32
//      P642_FLASH_MIF_DATA_COL_MASK               //        0,        0,       0,     0,        0
//      P642_FLASH_MIF_DATA_COL_TYPES              // *
//      P642_FLASH_MIF_DATA_TABLE_TYPE             // S
#define P642_FLASH_UNIQUE_ID                32054  // COMP_NUM,UNIQUE_ID
//      P642_FLASH_UNIQUE_ID_COL_WIDTH             //        8,       32
//      P642_FLASH_UNIQUE_ID_COL_MASK              //        1,        1
//      P642_FLASH_UNIQUE_ID_COL_TYPES             //        N,        V
//      P642_FLASH_UNIQUE_ID_TABLE_TYPE            // S
#define P642_DRIVE_PARAMETERS               32055  // ACTUAL_TEMPERATURE,TEMP_SENSOR_VALUE
//      P642_DRIVE_PARAMETERS_COL_WIDTH            //                 18,               15
//      P642_DRIVE_PARAMETERS_COL_MASK             //                  1,                1
//      P642_DRIVE_PARAMETERS_COL_TYPES            //                  N,                V
//      P642_DRIVE_PARAMETERS_TABLE_TYPE           // S
#define P642_DIAG_ID_REVISIONS              32056  // FW_REVISION,HW_REVISION,ROM_REVISION,FW_TYPE,ACCU_REV
//      P642_DIAG_ID_REVISIONS_COL_WIDTH           //          18,         18,          18,      8,      80
//      P642_DIAG_ID_REVISIONS_COL_MASK            //           1,          1,           1,      1,       1
//      P642_DIAG_ID_REVISIONS_COL_TYPES           //           V,          V,           V,      V,       V
//      P642_DIAG_ID_REVISIONS_TABLE_TYPE          // S
#define P642_DIAG_ID_FLASH                  32057  // FLASH_PAGE_SIZE,CE,EPAGE,MFG_ID,DEV_ID,FL_ID2,FL_ID3,FL_ID4,FL_ID5,FL_ID6,FL_ID7,DIE_PER_CE,BLOCKS_PER_DIE,PAGES_PER_BLOCK,RAW_CAPACITY_SECTORS,RAW_CAPACITY_BYTES
//      P642_DIAG_ID_FLASH_COL_WIDTH               //              16, 5,    5,     6,     6,     6,     6,     6,     6,     6,     6,        10,            15,             16,                  20,                18
//      P642_DIAG_ID_FLASH_COL_MASK                //               1, 1,    1,     1,     1,     1,     1,     1,     1,     1,     1,         1,             1,              1,                   1,                 1
//      P642_DIAG_ID_FLASH_COL_TYPES               //               V, V,    V,     V,     V,     V,     V,     V,     V,     V,     V,         N,             N,              N,                   N,                 N
//      P642_DIAG_ID_FLASH_TABLE_TYPE              // S
#define P642_DEFECT_COUNT                   32058  // TOTAL_DEFECT_COUNT,MFG_DEFECT_COUNT,GROWN_DEFECT_COUNT
//      P642_DEFECT_COUNT_COL_WIDTH                //                 20,              20,                20
//      P642_DEFECT_COUNT_COL_MASK                 //                  1,               1,                 1
//      P642_DEFECT_COUNT_COL_TYPES                //                  N,               N,                 N
//      P642_DEFECT_COUNT_TABLE_TYPE               // S
#define P642_SUPERCAP_CONTROLLER            32059  // COMP_NUM,FW_REV,CAPACITANCE,ESR,HEALTH,SUPERCAP_STATUS,REQUIRED_VOLTAGE
//      P642_SUPERCAP_CONTROLLER_COL_WIDTH         //        8,    25,         12, 10,     6,             16,              16
//      P642_SUPERCAP_CONTROLLER_COL_MASK          //        1,     1,          1,  1,     1,              1,               1
//      P642_SUPERCAP_CONTROLLER_COL_TYPES         //        N,     V,          N,  N,     N,              V,               N
//      P642_SUPERCAP_CONTROLLER_TABLE_TYPE        // S
#define P639_BLUENUNSLIDE                   32060  // REC,TOE,SLOWRD
//      P639_BLUENUNSLIDE_COL_WIDTH                //   6,  6,     6
//      P639_BLUENUNSLIDE_COL_MASK                 //   0,  0,     0
//      P639_BLUENUNSLIDE_COL_TYPES                // *
//      P639_BLUENUNSLIDE_TABLE_TYPE               // S
#define P000_PG_HW_DETECTED_ERR             32061  // LBA,EXPECTED_VALUE,RECEIVED_VALUE,BYTE_OFFSET_IN_SECTOR
//      P000_PG_HW_DETECTED_ERR_COL_WIDTH          //  20,            16,            16,                   20
//      P000_PG_HW_DETECTED_ERR_COL_MASK           //   0,             0,             0,                    0
//      P000_PG_HW_DETECTED_ERR_COL_TYPES          // *
//      P000_PG_HW_DETECTED_ERR_TABLE_TYPE         // S
#define P642_GET_DIAG_INFO                  32062  // DIAG_REVISION,DIAG_LEVEL,PRIMARY_CUSTOMER_ID,SECONDARY_CUSTOMER_ID
//      P642_GET_DIAG_INFO_COL_WIDTH               //            20,        20,                 20,                   21
//      P642_GET_DIAG_INFO_COL_MASK                //             0,         0,                  0,                    0
//      P642_GET_DIAG_INFO_COL_TYPES               // *
//      P642_GET_DIAG_INFO_TABLE_TYPE              // S
#define P642_PCBA_MIF_DATA                  32063  // PCBA_NUM,PCBA_SERIAL_NUM,PCBA_REV,PCBA_PART_NUM,DATE_CODE,TEST_DATE_CODE
//      P642_PCBA_MIF_DATA_COL_WIDTH               //        8,             18,      18,           18,       18,            18
//      P642_PCBA_MIF_DATA_COL_MASK                //        1,              1,       1,            1,        1,             1
//      P642_PCBA_MIF_DATA_COL_TYPES               //        N,              V,       V,            V,        N,             N
//      P642_PCBA_MIF_DATA_TABLE_TYPE              // S
#define P642_MIF_DATA_HEADER                32064  // MIF_DRIVE_SN,WWN,FINAL_ASSY_DATE,FLASH_CNTRL_FW_REV,MIF_REV,PIC_FW_REV,EEPROM_FW_REV
//      P642_MIF_DATA_HEADER_COL_WIDTH             //           12, 18,             16,                18,     10,        10,           10
//      P642_MIF_DATA_HEADER_COL_MASK              //            1,  1,              1,                 1,      1,         1,            1
//      P642_MIF_DATA_HEADER_COL_TYPES             //            V,  V,              V,                 V,      V,         V,            V
//      P642_MIF_DATA_HEADER_TABLE_TYPE            // S
#define P639_BLUENUNSCAN                    32065  // TOE,MIN,MAX,TSMPL,RETRY,REC
//      P639_BLUENUNSCAN_COL_WIDTH                 //   6,  6,  6,    6,    6,  6
//      P639_BLUENUNSCAN_COL_MASK                  //   0,  0,  0,    0,    0,  0
//      P639_BLUENUNSCAN_COL_TYPES                 // *
//      P639_BLUENUNSCAN_TABLE_TYPE                // S
#define P639_BLUENUNAUTO                    32066  // SPECA,SPECM
//      P639_BLUENUNAUTO_COL_WIDTH                 //     6,    6
//      P639_BLUENUNAUTO_COL_MASK                  //     0,    0
//      P639_BLUENUNAUTO_COL_TYPES                 // *
//      P639_BLUENUNAUTO_TABLE_TYPE                // S
#define P642_CONFIG_DRIVE_UNIQUE            32067  // FLAGS,CONFIGURATION_ID
//      P642_CONFIG_DRIVE_UNIQUE_COL_WIDTH         //     8,              18
//      P642_CONFIG_DRIVE_UNIQUE_COL_MASK          //     0,               0
//      P642_CONFIG_DRIVE_UNIQUE_COL_TYPES         // *
//      P642_CONFIG_DRIVE_UNIQUE_TABLE_TYPE        // S
#define P642_MF_FLASH_TEST                  32068  // BLOCK,BUS_COUNT,CE_COUNT,DIE_COUNT,LANE_COUNT
//      P642_MF_FLASH_TEST_COL_WIDTH               //    12,       12,      12,       12,        12
//      P642_MF_FLASH_TEST_COL_MASK                //     0,        0,       0,        0,         0
//      P642_MF_FLASH_TEST_COL_TYPES               // *
//      P642_MF_FLASH_TEST_TABLE_TYPE              // S
#define P642_MF_FLASH_TEST_RESULT           32069  // BUS,CE,DIE,LANE,RESULT
//      P642_MF_FLASH_TEST_RESULT_COL_WIDTH        //   8, 6,  6,   6,     6
//      P642_MF_FLASH_TEST_RESULT_COL_MASK         //   0, 0,  0,   0,     0
//      P642_MF_FLASH_TEST_RESULT_COL_TYPES        // *
//      P642_MF_FLASH_TEST_RESULT_TABLE_TYPE       // S
#define P642_LAST_FORMAT                    32070  // MEMORY_WEAR_CYCLE,PE_COUNT,LIFE,CAPACITY,SECTOR_SIZE,SECTOR_ALIGN_OFFSET,MFG_ID,DEV_ID,DIE_COUNT,TIME,MISC
//      P642_LAST_FORMAT_COL_WIDTH                 //                20,      10,  10,      10,         14,                 20,    10,    10,       10,  20,   6
//      P642_LAST_FORMAT_COL_MASK                  //                 0,       0,   0,       0,          0,                  0,     0,     0,        0,   0,   0
//      P642_LAST_FORMAT_COL_TYPES                 // *
//      P642_LAST_FORMAT_TABLE_TYPE                // S
#define P642_PANIC_DUMP_HEADER              32071  // TRANSACTION_NUMBER,SYNC_CODE,UNLOCK_LEVEL,SIZE,DATA_SIZE,EPAGE_ADDR,VALID_FLAG,CRC
//      P642_PANIC_DUMP_HEADER_COL_WIDTH           //                 20,       10,          14,  10,       10,        12,        12, 10
//      P642_PANIC_DUMP_HEADER_COL_MASK            //                  0,        0,           0,   0,        0,         0,         0,  0
//      P642_PANIC_DUMP_HEADER_COL_TYPES           // *
//      P642_PANIC_DUMP_HEADER_TABLE_TYPE          // S
#define P000_DEFECT_DATA_DETAIL             32072  // PBA_MSW,PBA_LSW,CYLINDER,HEAD,SECTOR,BCAI,LENGTH,FLAGS
//      P000_DEFECT_DATA_DETAIL_COL_WIDTH          //       8,      8,       8,   4,     6,   8,     8,    5
//      P000_DEFECT_DATA_DETAIL_COL_MASK           //       0,      0,       0,   0,     0,   0,     0,    0
//      P000_DEFECT_DATA_DETAIL_COL_TYPES          // *
//      P000_DEFECT_DATA_DETAIL_TABLE_TYPE         // V
#define P510_FIXED_RUN_TIME                 32073  // SECS
//      P510_FIXED_RUN_TIME_COL_WIDTH              //    6
//      P510_FIXED_RUN_TIME_COL_MASK               //    0
//      P510_FIXED_RUN_TIME_COL_TYPES              // *
//      P510_FIXED_RUN_TIME_TABLE_TYPE             // S
#define P000_QMON_REGISTERS                 32074  // CONTROL,SYMBOLS_PER_SECTOR,UPPER_BIE,LOWER_BIE,CONVERGED,NON_CONVERGED,RESET
//      P000_QMON_REGISTERS_COL_WIDTH              //       7,                18,        9,        9,        9,           13,    5
//      P000_QMON_REGISTERS_COL_MASK               //       0,                 0,        0,        0,        0,            0,    0
//      P000_QMON_REGISTERS_COL_TYPES              // *
//      P000_QMON_REGISTERS_TABLE_TYPE             // S
#define P648_EYE_MEASUREMENT                32075  // FREQUENCY,AMPLITUDE,WIDTH
//      P648_EYE_MEASUREMENT_COL_WIDTH             //        10,       10,   10
//      P648_EYE_MEASUREMENT_COL_MASK              //         0,        0,    0
//      P648_EYE_MEASUREMENT_COL_TYPES             // *
//      P648_EYE_MEASUREMENT_TABLE_TYPE            // S
#define P661_DRIVE_STATE                    32076  // STATE,INITIALIZED
//      P661_DRIVE_STATE_COL_WIDTH                 //     5,         11
//      P661_DRIVE_STATE_COL_MASK                  //     0,          0
//      P661_DRIVE_STATE_COL_TYPES                 // *
//      P661_DRIVE_STATE_TABLE_TYPE                // S
#define P661_SSD_SMART_BURN_IN              32077  // NUM_LFTME_WRT,NUM_LFTME_RD,CUM_LFTME_BLK_ERASE_OP,LFTME_ERASE_CNT_BLK_MIN_WRT,LFTME_ERASE_CNT_BLK_MAX_WRT,CUM_ERR_EVENTS_ERASE_OP,CUM_ERR_EVENTS_PROGRAM_OP,CUM_ERR_EVENTS_RD_OP
//      P661_SSD_SMART_BURN_IN_COL_WIDTH           //            13,          12,                    22,                         27,                         27,                     23,                       25,                  20
//      P661_SSD_SMART_BURN_IN_COL_MASK            //             1,           1,                     1,                          1,                          1,                      1,                        1,                   1
//      P661_SSD_SMART_BURN_IN_COL_TYPES           //             N,           N,                     N,                          N,                          N,                      N,                        N,                   N
//      P661_SSD_SMART_BURN_IN_TABLE_TYPE          // S

#define P000_HEAD_MAP                       32078  // HD_PHYS_PSN,HD_LGC_PSN
//      P000_HEAD_MAP_COL_WIDTH                    //          11,        10
//      P000_HEAD_MAP_COL_MASK                     //           0,         0
//      P000_HEAD_MAP_COL_TYPES                    // *
//      P000_HEAD_MAP_TABLE_TYPE                   // S
#define P000_EXT_ERROR_LOCATION             32079  // LBA_MSW,LBA_LSW,CYLINDER,HEAD,SECTOR,ZONE,FAILED_AT_CMD,ERROR
//      P000_EXT_ERROR_LOCATION_COL_WIDTH          //       8,      8,      10,   4,     8,   4,           13,    5
//      P000_EXT_ERROR_LOCATION_COL_MASK           //       0,      0,       0,   0,     0,   0,            0,    0
//      P000_EXT_ERROR_LOCATION_COL_TYPES          // *
//      P000_EXT_ERROR_LOCATION_TABLE_TYPE         // S

// Deprecated 12/09/2016
#define P507_IO_LAST_50_CMDS_SATA           32080  // TEST_NUM,P_F,CMD_NUMBER,COMMAND,LBA,FEATURE,SCNT,DEVICE,STATUS,PG,SDBP,0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,10,11,12,13,14,15,16,17
//      P507_IO_LAST_50_CMDS_SATA_COL_WIDTH        //        8,  3,        10,      8, 12,      8,   4,     6,     6, 2,   4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2, 2, 2, 2, 2, 2, 2, 2, 2
//      P507_IO_LAST_50_CMDS_SATA_COL_MASK         //        0,  0,         0,      0,  0,      0,   0,     0,     0, 0,   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0, 0, 0
//      P507_IO_LAST_50_CMDS_SATA_COL_TYPES        // *
//      P507_IO_LAST_50_CMDS_SATA_TABLE_TYPE       // S
#define P210_F3_CAP_ADJ                     32081  // CUST_FW_FEATURE,CAPACITY
//      P210_F3_CAP_ADJ_COL_WIDTH                  //              15,      10
//      P210_F3_CAP_ADJ_COL_MASK                   //               0,       0
//      P210_F3_CAP_ADJ_COL_TYPES                  // *
//      P210_F3_CAP_ADJ_TABLE_TYPE                 // S
#define P518_CONGEN_DATA                    32082  // OFFSET,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,BA,BB,BC,BD,BE,BF
//      P518_CONGEN_DATA_COL_WIDTH                 //      6, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
//      P518_CONGEN_DATA_COL_MASK                  //      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//      P518_CONGEN_DATA_COL_TYPES                 // *
//      P518_CONGEN_DATA_TABLE_TYPE                // V
#define P521_DISP_LOG_PARAMETER             32083  // PARAMETER_CODE,PARAMETER_CONTROL,PARAMETER_VALUE,MIN,MAX,STATUS,DESCRIPTION
//      P521_DISP_LOG_PARAMETER_COL_WIDTH          //             15,               18,             17,  9,  9,     7,         24
//      P521_DISP_LOG_PARAMETER_COL_MASK           //              1,                1,              1,  1,  1,     1,          1
//      P521_DISP_LOG_PARAMETER_COL_TYPES          //              V,                V,              V,  V,  V,     V,          V
//      P521_DISP_LOG_PARAMETER_TABLE_TYPE         // S
#define P521_BURN_RATIO                     32084  // RATIO,MIN,MAX,STATUS
//      P521_BURN_RATIO_COL_WIDTH                  //    10, 10, 10,    10
//      P521_BURN_RATIO_COL_MASK                   //     1,  1,  1,     1
//      P521_BURN_RATIO_COL_TYPES                  //     N,  N,  N,     V
//      P521_BURN_RATIO_TABLE_TYPE                 // S
#define P000_PARAMETER_MODIFIED             32085  // PARAMETER_NAME,ORIGINAL_VALUE,MODIFIED_VALUE
//      P000_PARAMETER_MODIFIED_COL_WIDTH          //             30,            20,            20
//      P000_PARAMETER_MODIFIED_COL_MASK           //              0,             0,             0
//      P000_PARAMETER_MODIFIED_COL_TYPES          // *
//      P000_PARAMETER_MODIFIED_TABLE_TYPE         // S

// Deprecated 05/13/2015
#define P564_SMRT_HD_ERR_2                  32086  // HD_PHYS_PSN,HD_LGC_PSN,THERMAL_ANNEALING_RCVD,THERMAL_ANNEALING_ATTMPTD
//      P564_SMRT_HD_ERR_2_COL_WIDTH               //          11,        10,                    22,                       25
//      P564_SMRT_HD_ERR_2_COL_MASK                //           0,         0,                     0,                        0
//      P564_SMRT_HD_ERR_2_COL_TYPES               // *
//      P564_SMRT_HD_ERR_2_TABLE_TYPE              // S
#define P664_HOST_AWARE_HEADER              32087  // ZONE_DESCRIPTERS,SAME,MAX_LBA
//      P664_HOST_AWARE_HEADER_COL_WIDTH           //               18,  10,     30
//      P664_HOST_AWARE_HEADER_COL_MASK            //                0,   0,      0
//      P664_HOST_AWARE_HEADER_COL_TYPES           // *
//      P664_HOST_AWARE_HEADER_TABLE_TYPE          // S
#define P664_HOST_AWARE_ENTRY               32088  // ZONE,TYPE,RESET,NONSEQ,CONDITION,LENGTH,START_LBA,WRITE_POINTER_LBA
//      P664_HOST_AWARE_ENTRY_COL_WIDTH            //   10,   6,    8,     8,       12,     8,       10,               18
//      P664_HOST_AWARE_ENTRY_COL_MASK             //    0,   0,    0,     0,        0,     0,        0,                0
//      P664_HOST_AWARE_ENTRY_COL_TYPES            // *
//      P664_HOST_AWARE_ENTRY_TABLE_TYPE           // S
#define P564_SMRT_HD_ERR_EXT                32089  // HD_PHYS_PSN,HD_LGC_PSN,THERMAL_ANNEALING_RCVD,THERMAL_ANNEALING_ATMPTD
//      P564_SMRT_HD_ERR_EXT_COL_WIDTH             //          11,        10,                    22,                      24
//      P564_SMRT_HD_ERR_EXT_COL_MASK              //           1,         1,                     1,                       1
//      P564_SMRT_HD_ERR_EXT_COL_TYPES             //           N,         N,                     N,                       N
//      P564_SMRT_HD_ERR_EXT_TABLE_TYPE            // S
#define P642_MST_STATUS                     32090  // TEST_TIME,STATUS,RESULT,UNCOR_READ_ERRS,COR_READ_ERRS
//      P642_MST_STATUS_COL_WIDTH                  //        16,    10,    10,             16,           16
//      P642_MST_STATUS_COL_MASK                   //         1,     1,     1,              1,            1
//      P642_MST_STATUS_COL_TYPES                  //         N,     N,     N,              N,            N
//      P642_MST_STATUS_TABLE_TYPE                 // S
#define P642_MST_PAGES_IN_ERRORS            32091  // BIT_ERROR,COUNT
//      P642_MST_PAGES_IN_ERRORS_COL_WIDTH         //        12,   20
//      P642_MST_PAGES_IN_ERRORS_COL_MASK          //         1,    1
//      P642_MST_PAGES_IN_ERRORS_COL_TYPES         //         N,    N
//      P642_MST_PAGES_IN_ERRORS_TABLE_TYPE        // S
#define P642_MST_EVENT                      32092  // COUNT,EVENT,CODE,TEMPERATURE,TIME,EPAGE,BIT_ERROR,CYCLE_NUMBER
//      P642_MST_EVENT_COL_WIDTH                   //     8,   20,   6,         12,  15,   15,       15,          15
//      P642_MST_EVENT_COL_MASK                    //     1,    1,   1,          1,   1,    1,        1,           1
//      P642_MST_EVENT_COL_TYPES                   //     N,    V,   N,          N,   N,    N,        N,           N
//      P642_MST_EVENT_TABLE_TYPE                  // S
#define P564_SMART_ATTRIBUTES               32093  // ID,FLAG,CUR,WORST,RAW_0,RAW_1,RAW_2,RAW_3,RAW_4,RAW_5
//      P564_SMART_ATTRIBUTES_COL_WIDTH            //  3,   4,  5,    5,    5,    5,    5,    5,    5,    5
//      P564_SMART_ATTRIBUTES_COL_MASK             //  1,   1,  1,    1,    1,    1,    1,    1,    1,    1
//      P564_SMART_ATTRIBUTES_COL_TYPES            //  N,   V,  N,    N,    V,    V,    V,    V,    V,    V
//      P564_SMART_ATTRIBUTES_TABLE_TYPE           // S
#define P000_BUFFER_WITH_ASCII              32094  // ADDRESS,00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,ASCII
//      P000_BUFFER_WITH_ASCII_COL_WIDTH           //       8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,    5
//      P000_BUFFER_WITH_ASCII_COL_MASK            //       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,    0
//      P000_BUFFER_WITH_ASCII_COL_TYPES           // *
//      P000_BUFFER_WITH_ASCII_TABLE_TYPE          // S
#define P166_SOC_INFO                       32095  // SOC_REV,FAST_BIT
//      P166_SOC_INFO_COL_WIDTH                    //       7,       8
//      P166_SOC_INFO_COL_MASK                     //       0,       0
//      P166_SOC_INFO_COL_TYPES                    // *
//      P166_SOC_INFO_TABLE_TYPE                   // S
// ***  P000_DATA_HEX_ASCII created for SATA at same time P000_BUFFER_WITH_ASCII (32094) was being worked in SAS
// ***  P000_DATA_HEX_ASCII used @ ReportDataHexAscii() ... P000_BUFFER_WITH_ASCII (32094) used in orginal ReportData()
// ***  ReportDataHexAscii() & ReportData() are pretty similar, but wanted to doc a snapshot in codebase ... rather than back-out/erase a couple hours work
// ***  ReportDataHexAscii() a cleaner, more simple function call
#define P000_DATA_HEX_ASCII                 32096  // ADDRESS,00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,ASCII,0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F
//      P000_DATA_HEX_ASCII_COL_WIDTH              //       8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,    5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
//      P000_DATA_HEX_ASCII_COL_MASK               //       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
//      P000_DATA_HEX_ASCII_COL_TYPES              // *
//      P000_DATA_HEX_ASCII_TABLE_TYPE             // S
#define P664_LBA_REASSIGNMENT               32097  // ZONE_START_LBA,WRITE_POINTER_LBA,REQUESTED_LBA,START_LBA
//      P664_LBA_REASSIGNMENT_COL_WIDTH            //             20,               20,           20,       20
//      P664_LBA_REASSIGNMENT_COL_MASK             //              0,                0,            0,        0
//      P664_LBA_REASSIGNMENT_COL_TYPES            // *
//      P664_LBA_REASSIGNMENT_TABLE_TYPE           // S
#define P514_NVME_IDENTIFY_LBAF             32098  // LBAF_INDEX,METADATA_SIZE_MS,LBA_DATA_SIZE_LBADS,RELATIVE_PERFORMANCE_RP,IN_USE
//      P514_NVME_IDENTIFY_LBAF_COL_WIDTH          //         10,              16,                 19,                     23,     6
//      P514_NVME_IDENTIFY_LBAF_COL_MASK           //          0,               0,                  0,                      0,     0
//      P514_NVME_IDENTIFY_LBAF_COL_TYPES          // *
//      P514_NVME_IDENTIFY_LBAF_TABLE_TYPE         // S
#define P514_NVME_NAMESPACE_INFO            32099  // NS_SIZE_NSZE,NS_CAPACITY_NCAP,NS_UTILIZATION_NUSE,NS_FEATURES_NSFEAT,NUM_LBA_FORMATS_NLBAF,FORMATTED_LBA_SZ_FLBAS,METADATA_CAPABILITIES_MC,DATA_PROTECT_CAPABILITIES_DPC,DATA_PROTECT_SETTINGS_DPS
//      P514_NVME_NAMESPACE_INFO_COL_WIDTH         //           12,              16,                 19,                18,                   21,                    22,                      24,                           29,                       25
//      P514_NVME_NAMESPACE_INFO_COL_MASK          //            0,               0,                  0,                 0,                    0,                     0,                       0,                            0,                        0
//      P514_NVME_NAMESPACE_INFO_COL_TYPES         // *
//      P514_NVME_NAMESPACE_INFO_TABLE_TYPE        // S
#define P564_NVME_SMART_LOG_INFO            32100  // CRITICAL_WARNING,TEMPERATURE_K,TEMPERATURE_C,AVAILABLE_SPARE,SPARE_THRESHOLD,PERCENT_USED,DATA_UNITS_READ,DATA_UNITS_WRITTEN,HOST_READS,HOST_WRITES,BUSY_TIME,POWER_CYCLES,POWER_ON_HRS,UNSAFE_SHUTDOWNS,MEDIA_ERRORS,NUM_ERROR_LOG_ENTRIES
//      P564_NVME_SMART_LOG_INFO_COL_WIDTH         //               16,           13,           13,             15,             15,          12,             15,                18,        10,         11,        9,          12,          12,              16,          12,                   21
//      P564_NVME_SMART_LOG_INFO_COL_MASK          //                0,            0,            0,              0,              0,           0,              0,                 0,         0,          0,        0,           0,           0,               0,           0,                    0
//      P564_NVME_SMART_LOG_INFO_COL_TYPES         // *
//      P564_NVME_SMART_LOG_INFO_TABLE_TYPE        // S
#define P_FASTSOC                           32101  // SOC_TYPE
//      P_FASTSOC_COL_WIDTH                        //        5
//      P_FASTSOC_COL_MASK                         //        1
//      P_FASTSOC_COL_TYPES                        //        N
//      P_FASTSOC_TABLE_TYPE                       // S
#define P000_BYTES_TRANSFERRED              32102  // BYTES_READ,BYTES_WRITTEN,READ_CMDS,WRITE_CMDS,TOTAL_CMDS,TIME_IN_SECONDS,BYTES_READ1,BYTES_WRITTEN1,SECTOR_SIZE
//      P000_BYTES_TRANSFERRED_COL_WIDTH           //         16,           16,       16,        16,        16,             16,         22,            22,         10
//      P000_BYTES_TRANSFERRED_COL_MASK            //          0,            0,        0,         0,         0,              0,          0,             0,          0
//      P000_BYTES_TRANSFERRED_COL_TYPES           // *
//      P000_BYTES_TRANSFERRED_TABLE_TYPE          // S
#define P642_TITAN_DEFECT_LIST              32103  // INDEX,GIMP,DIE_IN_GIMP,CE,BAD_PLANE_MASK,BLOCK,PAGE,REASON,FLASHMODE,EPAGE
//      P642_TITAN_DEFECT_LIST_COL_WIDTH           //     8,   8,         12, 4,            16,    8,   8,     8,       10,   16
//      P642_TITAN_DEFECT_LIST_COL_MASK            //     0,   0,          0, 0,             0,    0,   0,     0,        0,    0
//      P642_TITAN_DEFECT_LIST_COL_TYPES           // *
//      P642_TITAN_DEFECT_LIST_TABLE_TYPE          // S
#define P642_DIAG_ID_FLASH_0                32104  // UNLOCK_LEVEL,PWR_FAIL_LOCK,FLASH_PAGE_SIZE,PLANES,BLOCKS_PER_DIE,PAGES_PER_BLOCK,MAX_PE_COUNT,RAW_CAPACITY_SECTORS,RAW_CAPACITY_BYTES,N_PANICS
//      P642_DIAG_ID_FLASH_0_COL_WIDTH             //           14,           14,             16,    10,            15,             16,          14,                  20,                20,      10
//      P642_DIAG_ID_FLASH_0_COL_MASK              //            0,            0,              0,     0,             0,              0,           0,                   0,                 0,       0
//      P642_DIAG_ID_FLASH_0_COL_TYPES             // *
//      P642_DIAG_ID_FLASH_0_TABLE_TYPE            // S
#define P642_MST_BLKS_CR_RBLOCKS            32105  // CR0,CR1,CR2,CR3,CR4,CR5,CR6,CR7,RBLOCKS_TESTED,REMAINING_RBLOCKS
//      P642_MST_BLKS_CR_RBLOCKS_COL_WIDTH         //  16, 16, 16, 16, 16, 16, 16, 16,            16,               18
//      P642_MST_BLKS_CR_RBLOCKS_COL_MASK          //   0,  0,  0,  0,  0,  0,  0,  0,             0,                0
//      P642_MST_BLKS_CR_RBLOCKS_COL_TYPES         // *
//      P642_MST_BLKS_CR_RBLOCKS_TABLE_TYPE        // S
#define P642_MST_ERRORS                     32106  // START_UECC,START_PROGRAM,START_ERASE,START_GROWN_BLKS,FACTORY_BAD_BLKS,READ,PROGRAM,ERASE,UN_ERASED_BLKS
//      P642_MST_ERRORS_COL_WIDTH                  //         16,           16,         16,              16,              16,  16,     16,   16,            16
//      P642_MST_ERRORS_COL_MASK                   //          0,            0,          0,               0,               0,   0,      0,    0,             0
//      P642_MST_ERRORS_COL_TYPES                  // *
//      P642_MST_ERRORS_TABLE_TYPE                 // S
#define P642_MST_MASKS                      32107  // EXTENDED_BLK,GIMP,DIE,BLOCK,PAGE,EPAGE_OFFSET,INPUT
//      P642_MST_MASKS_COL_WIDTH                   //           14,  14, 14,   14,  14,          14,   14
//      P642_MST_MASKS_COL_MASK                    //            0,   0,  0,    0,   0,           0,    0
//      P642_MST_MASKS_COL_TYPES                   // *
//      P642_MST_MASKS_TABLE_TYPE                  // S
#define P642_MST_RANGE                      32108  // INDEX,RESULTS
//      P642_MST_RANGE_COL_WIDTH                   //     8,     20
//      P642_MST_RANGE_COL_MASK                    //     0,      0
//      P642_MST_RANGE_COL_TYPES                   // *
//      P642_MST_RANGE_TABLE_TYPE                  // S
#define P642_FLASH_CONNECTIVITY             32109  // STATUS,END,CHANNEL,CE,DIE,ERROR_COUNT
//      P642_FLASH_CONNECTIVITY_COL_WIDTH          //      8,  8,      8, 8,  8,         12
//      P642_FLASH_CONNECTIVITY_COL_MASK           //      0,  0,      0, 0,  0,          0
//      P642_FLASH_CONNECTIVITY_COL_TYPES          // *
//      P642_FLASH_CONNECTIVITY_TABLE_TYPE         // S
#define P000_DISP_ZONE_INFO_SMR             32110  // HEAD,ZONE,ST_CYL,SCALED_ST_CYL,NUM_CYL,NUM_SEC,ST_SP,NUM_SP,BAND_SZE,TRACK_PITCH,TRACK_GAURD,SHNGL_DIR,SVO_ZN_IDX,NUM_SVO_ZNS
//      P000_DISP_ZONE_INFO_SMR_COL_WIDTH          //    4,   4,     7,           13,      7,      7,    6,     6,       8,         11,         11,        9,        10,         11
//      P000_DISP_ZONE_INFO_SMR_COL_MASK           //    0,   0,     0,            0,      0,      0,    0,     0,       0,          0,          0,        0,         0,          0
//      P000_DISP_ZONE_INFO_SMR_COL_TYPES          // *
//      P000_DISP_ZONE_INFO_SMR_TABLE_TYPE         // S
#define P000_DISP_ZONE_INFO                 32111  // HEAD,ZONE,ST_CYL,END_CYL,NUM_TRK,NUM_SEC,ST_SP,NUM_SP,NUM_MNZ,SP_SZE,SKEW_ADJ,SVO_ZN_IDX,NUM_SVO_ZNS
//      P000_DISP_ZONE_INFO_COL_WIDTH              //    4,   4,     7,      7,      7,      7,    7,     7,      7,     7,       8,        10,         11
//      P000_DISP_ZONE_INFO_COL_MASK               //    0,   0,     0,      0,      0,      0,    0,     0,      0,     0,       0,         0,          0
//      P000_DISP_ZONE_INFO_COL_TYPES              // *
//      P000_DISP_ZONE_INFO_TABLE_TYPE             // S
#define P642_PANIC_DUMP_SEEK                32112  // SUCCESSFUL,TYPE,N_PANICS
//      P642_PANIC_DUMP_SEEK_COL_WIDTH             //         12,   6,      10
//      P642_PANIC_DUMP_SEEK_COL_MASK              //          0,   0,       0
//      P642_PANIC_DUMP_SEEK_COL_TYPES             // *
//      P642_PANIC_DUMP_SEEK_TABLE_TYPE            // S
#define P507_IO_LAST_50_CMDS0SATA           32113  // TEST_NUM,P_F,CMD_NUMBER,COMMAND,LBA,FEATURE,SCNT,DEVICE,ERROR,STATUS,SSTATUS,PG,SDBP,0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,10,11,12,13,14,15,16,17
//      P507_IO_LAST_50_CMDS0SATA_COL_WIDTH        //        8,  3,        10,      8, 12,      8,   4,     6,    6,     6,      7, 2,   4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2, 2, 2, 2, 2, 2, 2, 2, 2
//      P507_IO_LAST_50_CMDS0SATA_COL_MASK         //        0,  0,         0,      0,  0,      0,   0,     0,    0,     0,      0, 0,   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0, 0, 0
//      P507_IO_LAST_50_CMDS0SATA_COL_TYPES        // *
//      P507_IO_LAST_50_CMDS0SATA_TABLE_TYPE       // S
/****************************************************************************************************************************

   #               #    ##        ######      #      #   ###   #      #     ######
    #             #    #  #       #      #    # #    #    #    # #    #    #      #
     #     #     #    #    #      #      #    #  #   #    #    #  #   #   #
      #   # #   #    ########     ######      #   #  #    #    #   #  #   #     ###
       # #   # #    #        #    #     #     #    # #    #    #    # #   #       #
        #     #    #          #   #      #    #     ##    #    #     ##    #      #
        #     #   #            #  #       #   #      #   ###   #      #      ####

 Deleting or modifying any established entry or its attributes in this file could result in serious process consequences.
 E.g. previously released firmware that depends on the changed or deleted entry will function incorrectly or could stop
 functioning altogether.

 If a change is needed in an established entry, a new entry must be made to incorporate that change.
 This MUST be observed until a permanent solution is in place.

*****************************************************************************************************************************/

// ********************************  SKDC Programs Script Generated DBLOG Table definitions  ***********************************************************
// ***  Table Names                                ***  Table Column Names / Column Widths / Masks / Table type ***
#define PSKR_BI_SET_PART_1                  48000  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,SC_CODE_NAME,HT_CODE_NAME,BI_CODE_NAME,DR_BI_LAST_STEP,DR_AP_CNT,DR_SERVO_COPY_TIME,DR_HT_TIME,DR_TOTAL_BI_TIME,DR_UNLATCH_SPD,DR_RAMP_FRICTION,DR_LOAD_FRICTION,DR_SKTM_WRITE_FULL,DR_SKTM_WRITE_RANDOM,DR_SKTM_READ_FULL,DR_SKTM_READ_RANDOM,DR_MAIN_RCO_TIME,DR_SGRAY_WRITE_TIME,DR_DLIST_TOTAL,DR_DLIST_0X11_ECC,DR_DLIST_0X13_DAM,DR_DLIST_0X1F_SDS,DR_DLIST_0XSF_SF,DR_DLIST_0X6A_VWF,DR_DLIST_0X73_RWF,DR_DLIST_TA,DR_DLIST_ETC,DR_VLIST_TOTAL,DR_VLIST_REAL,DR_VLIST_VIRTUAL,DR_VLIST_ETC,DR_TLIST,DR_MCDEFECT,DR_SPIN_DAC_ULD,DR_ERROR_NAME,DR_DOWNSIZE_FLAG,DR_SC_FORCE_WRITE_RETRY,DR_SC_WRITE_RETRY,DR_10S_BER,DR_WW_BER,DR_DS_BER,DR_S_GAIN,DR_D_GAIN,DR_DATA_ASYM,DR_PES_RRO_AVG,DR_PES_TOT_AVG,DR_HT_WC,DR_LT_WC,DR_RT_WC,DR_RT_RC,DR_OPT_TPI,DR_DEFAULT_TPI,DR_RCC,DR_KILL_FLAG,DR_KILL_HEAD,DR_KILL_CAUSE,DR_FROST_CYL_GAP
//      PSKR_BI_SET_PART_1_COL_WIDTH               //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,          12,          12,          12,             15,        9,                18,        10,              16,            14,              16,              16,                18,                  20,               17,                 19,              16,                 19,            14,               17,               17,               17,              16,               17,               17,         11,          12,            14,           13,              16,          12,       8,         11,             15,           13,              16,                     23,               17,        10,        9,        9,        8,        8,          12,            14,            14,       8,       8,       8,       8,        10,            14,     6,          12,          12,           13,              16
//      PSKR_BI_SET_PART_1_COL_MASK                //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,           1,           1,           1,              1,        1,                 1,         1,               1,             1,               1,               1,                 1,                   1,                1,                  1,               1,                  1,             1,                1,                1,                1,               1,                1,                1,          1,           1,             1,            1,               1,           1,       1,          1,              1,            1,               1,                      1,                1,         1,        1,        1,        1,        1,           1,             1,             1,       1,       1,       1,       1,         1,             1,     1,           1,           1,            1,               1
//      PSKR_BI_SET_PART_1_COL_TYPES               //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,           V,           V,           V,              N,        N,                 N,         N,               N,             N,               N,               N,                 N,                   N,                N,                  N,               N,                  N,             N,                N,                N,                N,               N,                N,                N,          N,           N,             N,            N,               N,           N,       N,          N,              N,            N,               N,                      N,                N,         N,        N,        N,        N,        N,           N,             N,             N,       N,       N,       N,       N,         N,             N,     N,           N,           N,            N,               N
//      PSKR_BI_SET_PART_1_TABLE_TYPE              // S
#define PSKR_BI_SET_PART_2                  48001  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,DR_SC_TARGET_CL,DR_SC_SCALE_UPDATE,DR_SC_MAX_SERVO_CYL,DR_BACK_CAPACITY_RETURN,DR_SC_READ_RETRY,DR_S_GRADE_FLAG,DR_ID_HALF_INTG_AVG,DR_ID_NO_SYNC_COUNT,DR_MODEL_NAME_CAPACITY,DR_SECTOR_SIZE,DR_WRO_LIST,DR_RPO,DR_BI_MAX_SERVO_CYL,DR_SC_FORST_VERIFY,DR_SC_ID_SEEK_MAX_TRK,DR_SC_ALARM_PARK_CNT,DR_SC_LOAD_CNT,DR_SC_NRRO1,DR_SC_NRRO2,DR_BI_NRRO2,DR_LATCH_FORCE,DR_SC_RCC_RTY_OVER,DR_SPIRAL_FOD_DONE,DR_OD_READ_PERFORMANCE,DR_OD_WRITE_PERFORMANCE,DR_ID_READ_PERFORMANCE,DR_ID_WRITE_PERFORMANCE,DR_SC_TEMP_START,DR_SC_TEMP_END,DR_PRE_SGRAY_TOTAL,DR_SC_IRPS,DR_VCM_RESISTANCE,DR_SC_THERMAL_SHOCK,DR_SC_INSTABLE_CAUSE,DR_SC_TSHR_FOD_POWR,DR_SC_TSHR_FOD_DUR,DR_WEARING_CNT,DR_FLASH_W_CNT,DR_FLASH_FOD_CNT,DR_FLASH_LOWVDD_CNT,DR_FLASH_WV_FAIL_CNT,MDDS_SKIP,ABNORMAL_DGAIN_CNT,AV_SCAN_100,AV_SCAN_270,FT_ECC_COUNT,DRV_FT_ERROR_LOC_C,DRV_FT_ERROR_LOC_H,DRV_FT_ERROR_LOC_S,TD_FOD_DELTA_FLAG,PIVOT_BIAS_CAL_DATA_PEAK_CYL,PIVOT_BIAS_CAL_DATA_AVG,PIVOT_BIAS_CAL_DATA_MAX_SLOPE,FT_MAPPING_HEAD_NUM
//      PSKR_BI_SET_PART_2_COL_WIDTH               //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,             15,                18,                 19,                     23,              16,             15,                 19,                 19,                    22,            14,         11,     6,                 19,                18,                   21,                  20,            14,         11,         11,         11,            14,                18,                18,                    22,                     23,                    22,                     23,              16,            14,                18,        10,               17,                 19,                  20,                 19,                18,            14,            14,              16,                 19,                  20,        9,                18,         11,         11,          12,                18,                18,                18,               17,                          28,                     23,                           29,                 19
//      PSKR_BI_SET_PART_2_COL_MASK                //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,              1,                 1,                  1,                      1,               1,              1,                  1,                  1,                     1,             1,          1,     1,                  1,                 1,                    1,                   1,             1,          1,          1,          1,             1,                 1,                 1,                     1,                      1,                     1,                      1,               1,             1,                 1,         1,                1,                  1,                   1,                  1,                 1,             1,             1,               1,                  1,                   1,        1,                 1,          1,          1,           1,                 1,                 1,                 1,                1,                           1,                      1,                            1,                  1
//      PSKR_BI_SET_PART_2_COL_TYPES               //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,              N,                 N,                  N,                      N,               N,              V,                  N,                  N,                     N,             N,          N,     N,                  N,                 N,                    N,                   N,             N,          N,          N,          N,             N,                 N,                 N,                     N,                      N,                     N,                      N,               N,             N,                 N,         N,                N,                  N,                   N,                  N,                 N,             N,             N,               N,                  N,                   N,        N,                 N,          N,          N,           N,                 N,                 N,                 N,                N,                           N,                      N,                            N,                  N
//      PSKR_BI_SET_PART_2_TABLE_TYPE              // S
#define PSKR_BI_SETZN_PART_1                48002  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,DR_SPIN_DAC_LD_1_ZN_0,DR_SPIN_DAC_LD_1_ZN_1,DR_SPIN_DAC_LD_1_ZN_2,DR_SPIN_DAC_LD_1_ZN_3,DR_SPIN_DAC_LD_1_ZN_4,DR_SPIN_DAC_LD_1_ZN_5,DR_SPIN_DAC_LD_1_ZN_6,DR_SPIN_DAC_LD_1_ZN_7,DR_SPIN_DAC_LD_1_ZN_8,DR_SPIN_DAC_LD_1_ZN_9,DR_SPIN_DAC_LD_1_ZN_10,DR_SPIN_DAC_LD_1_ZN_11,DR_SPIN_DAC_LD_1_ZN_12,DR_SPIN_DAC_LD_1_ZN_13,DR_SPIN_DAC_LD_1_ZN_14,DR_SPIN_DAC_LD_1_ZN_15,DR_SPIN_DAC_LD_1_ZN_16,DR_SPIN_DAC_LD_1_ZN_17,DR_SPIN_DAC_LD_1_ZN_18,DR_SPIN_DAC_LD_1_ZN_19,DR_SPIN_DAC_LD_1_ZN_20,DR_SPIN_DAC_LD_1_ZN_21,DR_SPIN_DAC_LD_1_ZN_22,DR_SPIN_DAC_LD_1_ZN_23,DR_SPIN_DAC_LD_1_ZN_24,DR_SPIN_DAC_LD_1_ZN_25,DR_SPIN_DAC_LD_1_ZN_26,DR_SPIN_DAC_LD_1_ZN_27,DR_SPIN_DAC_LD_1_ZN_28,DR_SPIN_DAC_LD_1_ZN_29,DR_SPIN_DAC_LD_1_ZN_30,DR_SPIN_DAC_LD_1_ZN_31,DR_SPIN_DAC_LD_1_ZN_32,DR_SPIN_DAC_LD_1_ZN_33,DR_SPIN_DAC_LD_1_ZN_34,DR_SPIN_DAC_LD_1_ZN_35,DR_SPIN_DAC_LD_1_ZN_36,DR_SPIN_DAC_LD_1_ZN_37,DR_SPIN_DAC_LD_1_ZN_38,DR_SPIN_DAC_LD_1_ZN_39,DR_SPIN_DAC_LD_1_ZN_40,DR_SPIN_DAC_LD_1_ZN_41,DR_SPIN_DAC_LD_1_ZN_42,DR_SPIN_DAC_LD_1_ZN_43,DR_SPIN_DAC_LD_1_ZN_44,DR_SPIN_DAC_LD_1_ZN_45,DR_SPIN_DAC_LD_1_ZN_46,DR_SPIN_DAC_LD_1_ZN_47
//      PSKR_BI_SETZN_PART_1_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22
//      PSKR_BI_SETZN_PART_1_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1
//      PSKR_BI_SETZN_PART_1_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N
//      PSKR_BI_SETZN_PART_1_TABLE_TYPE            // S
#define PSKR_BI_SETZN_PART_2                48003  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,DR_SPIN_DAC_LD_2_ZN_0,DR_SPIN_DAC_LD_2_ZN_1,DR_SPIN_DAC_LD_2_ZN_2,DR_SPIN_DAC_LD_2_ZN_3,DR_SPIN_DAC_LD_2_ZN_4,DR_SPIN_DAC_LD_2_ZN_5,DR_SPIN_DAC_LD_2_ZN_6,DR_SPIN_DAC_LD_2_ZN_7,DR_SPIN_DAC_LD_2_ZN_8,DR_SPIN_DAC_LD_2_ZN_9,DR_SPIN_DAC_LD_2_ZN_10,DR_SPIN_DAC_LD_2_ZN_11,DR_SPIN_DAC_LD_2_ZN_12,DR_SPIN_DAC_LD_2_ZN_13,DR_SPIN_DAC_LD_2_ZN_14,DR_SPIN_DAC_LD_2_ZN_15,DR_SPIN_DAC_LD_2_ZN_16,DR_SPIN_DAC_LD_2_ZN_17,DR_SPIN_DAC_LD_2_ZN_18,DR_SPIN_DAC_LD_2_ZN_19,DR_SPIN_DAC_LD_2_ZN_20,DR_SPIN_DAC_LD_2_ZN_21,DR_SPIN_DAC_LD_2_ZN_22,DR_SPIN_DAC_LD_2_ZN_23,DR_SPIN_DAC_LD_2_ZN_24,DR_SPIN_DAC_LD_2_ZN_25,DR_SPIN_DAC_LD_2_ZN_26,DR_SPIN_DAC_LD_2_ZN_27,DR_SPIN_DAC_LD_2_ZN_28,DR_SPIN_DAC_LD_2_ZN_29,DR_SPIN_DAC_LD_2_ZN_30,DR_SPIN_DAC_LD_2_ZN_31,DR_SPIN_DAC_LD_2_ZN_32,DR_SPIN_DAC_LD_2_ZN_33,DR_SPIN_DAC_LD_2_ZN_34,DR_SPIN_DAC_LD_2_ZN_35,DR_SPIN_DAC_LD_2_ZN_36,DR_SPIN_DAC_LD_2_ZN_37,DR_SPIN_DAC_LD_2_ZN_38,DR_SPIN_DAC_LD_2_ZN_39,DR_SPIN_DAC_LD_2_ZN_40,DR_SPIN_DAC_LD_2_ZN_41,DR_SPIN_DAC_LD_2_ZN_42,DR_SPIN_DAC_LD_2_ZN_43,DR_SPIN_DAC_LD_2_ZN_44,DR_SPIN_DAC_LD_2_ZN_45,DR_SPIN_DAC_LD_2_ZN_46,DR_SPIN_DAC_LD_2_ZN_47
//      PSKR_BI_SETZN_PART_2_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22
//      PSKR_BI_SETZN_PART_2_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1
//      PSKR_BI_SETZN_PART_2_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N
//      PSKR_BI_SETZN_PART_2_TABLE_TYPE            // S
#define PSKR_BI_SETZN_PART_3                48004  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,DR_D0_PERR_ZN_MAX,DR_D0_SAGC_ZN_42,DR_D0_SAGC_ZN_43,DR_D0_SAGC_ZN_44,DR_D0_SAGC_ZN_45,DR_D0_SAGC_ZN_46,DR_D0_SAGC_ZN_47,DR_D0_PERR_2_ZN_MAX,DR_D0_SAGC_2_ZN_42,DR_D0_SAGC_2_ZN_43,DR_D0_SAGC_2_ZN_44,DR_D0_SAGC_2_ZN_45,DR_D0_SAGC_2_ZN_46,DR_D0_SAGC_2_ZN_47,DR_D0_PERR_3_ZN_MAX,DR_D0_SAGC_3_ZN_42,DR_D0_SAGC_3_ZN_43,DR_D0_SAGC_3_ZN_44,DR_D0_SAGC_3_ZN_45,DR_D0_SAGC_3_ZN_46,DR_D0_SAGC_3_ZN_47,DR_D1_PERR_ZN_MAX,DR_D1_SAGC_ZN_42,DR_D1_SAGC_ZN_43,DR_D1_SAGC_ZN_44,DR_D1_SAGC_ZN_45,DR_D1_SAGC_ZN_46,DR_D1_SAGC_ZN_47,DR_D1_PERR_2_ZN_MAX,DR_D1_SAGC_2_ZN_42,DR_D1_SAGC_2_ZN_43,DR_D1_SAGC_2_ZN_44,DR_D1_SAGC_2_ZN_45,DR_D1_SAGC_2_ZN_46,DR_D1_SAGC_2_ZN_47,DR_D1_PERR_3_ZN_MAX,DR_D1_SAGC_3_ZN_42,DR_D1_SAGC_3_ZN_43,DR_D1_SAGC_3_ZN_44,DR_D1_SAGC_3_ZN_45,DR_D1_SAGC_3_ZN_46,DR_D1_SAGC_3_ZN_47,DR_D2_PERR_ZN_MAX,DR_D2_SAGC_ZN_42,DR_D2_SAGC_ZN_43,DR_D2_SAGC_ZN_44,DR_D2_SAGC_ZN_45,DR_D2_SAGC_ZN_46,DR_D2_SAGC_ZN_47,DR_D2_PERR_2_ZN_MAX,DR_D2_SAGC_2_ZN_42,DR_D2_SAGC_2_ZN_43,DR_D2_SAGC_2_ZN_44,DR_D2_SAGC_2_ZN_45,DR_D2_SAGC_2_ZN_46,DR_D2_SAGC_2_ZN_47
//      PSKR_BI_SETZN_PART_3_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,               17,              16,              16,              16,              16,              16,              16,                 19,                18,                18,                18,                18,                18,                18,                 19,                18,                18,                18,                18,                18,                18,               17,              16,              16,              16,              16,              16,              16,                 19,                18,                18,                18,                18,                18,                18,                 19,                18,                18,                18,                18,                18,                18,               17,              16,              16,              16,              16,              16,              16,                 19,                18,                18,                18,                18,                18,                18
//      PSKR_BI_SETZN_PART_3_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                1,               1,               1,               1,               1,               1,               1,                  1,                 1,                 1,                 1,                 1,                 1,                 1,                  1,                 1,                 1,                 1,                 1,                 1,                 1,                1,               1,               1,               1,               1,               1,               1,                  1,                 1,                 1,                 1,                 1,                 1,                 1,                  1,                 1,                 1,                 1,                 1,                 1,                 1,                1,               1,               1,               1,               1,               1,               1,                  1,                 1,                 1,                 1,                 1,                 1,                 1
//      PSKR_BI_SETZN_PART_3_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                N,               N,               N,               N,               N,               N,               N,                  N,                 N,                 N,                 N,                 N,                 N,                 N,                  N,                 N,                 N,                 N,                 N,                 N,                 N,                N,               N,               N,               N,               N,               N,               N,                  N,                 N,                 N,                 N,                 N,                 N,                 N,                  N,                 N,                 N,                 N,                 N,                 N,                 N,                N,               N,               N,               N,               N,               N,               N,                  N,                 N,                 N,                 N,                 N,                 N,                 N
//      PSKR_BI_SETZN_PART_3_TABLE_TYPE            // S
#define PSKR_BI_SETZN_PART_4                48005  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,DR_D2_PERR_3_ZN_MAX,DR_D2_SAGC_3_ZN_42,DR_D2_SAGC_3_ZN_43,DR_D2_SAGC_3_ZN_44,DR_D2_SAGC_3_ZN_45,DR_D2_SAGC_3_ZN_46,DR_D2_SAGC_3_ZN_47,DR_PSGRAY_HD_0_ZN_NA,DR_PSGRAY_HD_1_ZN_NA,DR_PSGRAY_HD_2_ZN_NA,DR_PSGRAY_HD_3_ZN_NA,DR_PSGRAY_HD_0_REAL_ZN_NA,DR_PSGRAY_HD_1_REAL_ZN_NA,DR_PSGRAY_HD_2_REAL_ZN_NA,DR_PSGRAY_HD_3_REAL_ZN_NA,DR_PSGRAY_HD_0_VIRTUAL_ZN_NA,DR_PSGRAY_HD_1_VIRTUAL_ZN_NA,DR_PSGRAY_HD_2_VIRTUAL_ZN_NA,DR_PSGRAY_HD_3_VIRTUAL_ZN_NA,DR_PSGRAY_HD_0_ETC_ZN_NA,DR_PSGRAY_HD_1_ETC_ZN_NA,DR_PSGRAY_HD_2_ETC_ZN_NA,DR_PSGRAY_HD_3_ETC_ZN_NA,DR_SPIN_DAC_1_ULD_MAX,DR_SPIN_DAC_2_ULD_MAX,DR_SPIN_DAC_1_LD_ZN_1,DR_SPIN_DAC_2_LD_ZN_1
//      PSKR_BI_SETZN_PART_4_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,                 19,                18,                18,                18,                18,                18,                18,                  20,                  20,                  20,                  20,                       25,                       25,                       25,                       25,                          28,                          28,                          28,                          28,                      24,                      24,                      24,                      24,                   21,                   21,                   21,                   21
//      PSKR_BI_SETZN_PART_4_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                  1,                 1,                 1,                 1,                 1,                 1,                 1,                   1,                   1,                   1,                   1,                        1,                        1,                        1,                        1,                           1,                           1,                           1,                           1,                       1,                       1,                       1,                       1,                    1,                    1,                    1,                    1
//      PSKR_BI_SETZN_PART_4_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                  N,                 N,                 N,                 N,                 N,                 N,                 N,                   N,                   N,                   N,                   N,                        N,                        N,                        N,                        N,                           N,                           N,                           N,                           N,                       N,                       N,                       N,                       N,                    N,                    N,                    N,                    N
//      PSKR_BI_SETZN_PART_4_TABLE_TYPE            // S
#define PSKR_BI_SETSP_PART_1                48006  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,DR_BIAS_FORCE_ODSP_1,DR_BIAS_FORCE_ODSP_2,DR_BIAS_FORCE_ODSP_3,DR_BIAS_FORCE_ODSP_4,DR_BIAS_FORCE_ODSP_5,DR_BIAS_FORCE_ODSP_6,DR_BIAS_FORCE_ODSP_7,DR_BIAS_FORCE_ODSP_8,DR_BIAS_FORCE_ODSP_9,DR_BIAS_FORCE_ODSP_10,DR_BIAS_FORCE_ODSP_11,DR_BIAS_FORCE_ODSP_12,DR_BIAS_FORCE_ODSP_13,DR_BIAS_FORCE_ODSP_14,DR_BIAS_FORCE_ODSP_15,DR_BIAS_FORCE_ODSP_16,DR_BIAS_FORCE_ODSP_17,DR_BIAS_FORCE_ODSP_18,DR_BIAS_FORCE_ODSP_19,DR_BIAS_FORCE_ODSP_20,DR_BIAS_FORCE_IDSP_1,DR_BIAS_FORCE_IDSP_2,DR_BIAS_FORCE_IDSP_3,DR_BIAS_FORCE_IDSP_4,DR_BIAS_FORCE_IDSP_5,DR_BIAS_FORCE_IDSP_6,DR_BIAS_FORCE_IDSP_7,DR_BIAS_FORCE_IDSP_8,DR_BIAS_FORCE_IDSP_9,DR_BIAS_FORCE_IDSP_10,DR_BIAS_FORCE_IDSP_11,DR_BIAS_FORCE_IDSP_12,DR_BIAS_FORCE_IDSP_13,DR_BIAS_FORCE_IDSP_14,DR_BIAS_FORCE_IDSP_15,DR_BIAS_FORCE_IDSP_16,DR_BIAS_FORCE_IDSP_17,DR_BIAS_FORCE_IDSP_18,DR_BIAS_FORCE_IDSP_19,DR_BIAS_FORCE_IDSP_20
//      PSKR_BI_SETSP_PART_1_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21
//      PSKR_BI_SETSP_PART_1_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1
//      PSKR_BI_SETSP_PART_1_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N
//      PSKR_BI_SETSP_PART_1_TABLE_TYPE            // S
#define PSKR_BI_SETSP_PART_2                48007  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,DR_KT_ODSP_1,DR_KT_ODSP_2,DR_KT_ODSP_3,DR_KT_ODSP_4,DR_KT_ODSP_5,DR_KT_ODSP_6,DR_KT_ODSP_7,DR_KT_ODSP_8,DR_KT_ODSP_9,DR_KT_ODSP_10,DR_KT_ODSP_11,DR_KT_ODSP_12,DR_KT_IDSP_1,DR_KT_IDSP_2,DR_KT_IDSP_3,DR_KT_IDSP_4,DR_KT_IDSP_5,DR_KT_IDSP_6,DR_KT_IDSP_7,DR_KT_IDSP_8,DR_KT_IDSP_9,DR_KT_IDSP_10,DR_KT_IDSP_11,DR_KT_IDSP_12,DR_FT_TEMP_SP_1,DR_FT_TEMP_SP_2,DR_FT_TEMP_SP_3,DR_FT_TEMP_SP_4,DR_FT_TEMP_SP_5,DR_FT_TEMP_SP_6,DR_FT_TEMP_SP_7,DR_FT_TEMP_SP_8,DR_FT_TEMP_SP_9,DR_FT_TEMP_SP_10,DR_FT_TEMP_SP_11,DR_FT_TEMP_SP_12,DR_FT_TEMP_SP_13,DR_FT_TEMP_SP_14,DR_FT_TEMP_SP_15,DR_FT_TEMP_SP_16,DR_FT_TEMP_SP_17,DR_FT_TEMP_SP_18,DR_FT_TEMP_SP_19,DR_FT_TEMP_SP_20
//      PSKR_BI_SETSP_PART_2_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,          12,          12,          12,          12,          12,          12,          12,          12,          12,           13,           13,           13,          12,          12,          12,          12,          12,          12,          12,          12,          12,           13,           13,           13,             15,             15,             15,             15,             15,             15,             15,             15,             15,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16
//      PSKR_BI_SETSP_PART_2_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,           1,           1,           1,           1,           1,           1,           1,           1,           1,            1,            1,            1,           1,           1,           1,           1,           1,           1,           1,           1,           1,            1,            1,            1,              1,              1,              1,              1,              1,              1,              1,              1,              1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1
//      PSKR_BI_SETSP_PART_2_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,           N,           N,           N,           N,           N,           N,           N,           N,           N,            N,            N,            N,           N,           N,           N,           N,           N,           N,           N,           N,           N,            N,            N,            N,              N,              N,              N,              N,              N,              N,              N,              N,              N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N
//      PSKR_BI_SETSP_PART_2_TABLE_TYPE            // S
#define PSKR_BI_HD_PART_1                   48008  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HD_MC_DEFECT,HD_DATA_ASYM,HD_SERVO_ASYM,HD_RRO,HD_TOTAL_PES,HD_OPT_TPI,HD_RCC,HD_TNU_CNT_TOTAL,HD_P_GAIN,HD_SELECT_TPI_INDEX,HD_DLIST_0X11_ECC,HD_DLIST_0X13_DAM,HD_DLIST_0X1F_SDS,HD_DLIST_0X52_DAM2,HD_DLIST_0XSF_SF,HD_DLIST_0X6A_VWF,HD_DLIST_0X73_RWF,HD_DLIST_TA,HD_DLIST_ETC,HD_VLIST_REAL,HD_VLIST_VIRTUAL,HD_VLIST_ETC,HD_TLIST_REAL,HD_TLIST_VIRTUAL,HD_TLIST_SF,HD_TLIST_DATA,HD_CAPACITY_INDEX,HD_RRO_1XMAG,HD_RRO_1XPHASE,HD_TNU_CNT_MAX_ZN,HD_TLIST_MAX_ZN,HD_RRO_HT_BI,HD_TOTAL_PES_HT_BI,HD_CAPACITY_BEFORE_RETURN,HD_CAPACITY_AFTER_RETURN,HD_TPI_PERCENT,HD_SC_WC,HD_SC_FOD,HD_SC_OSA,HD_SC_OSD,HD_TLIST_TW,HD_TLIST_11,HD_VLIST_SGRAY_WRITE,HD_VLIST_SGRAY_READ,HD_VLIST_SGRAY_OFFSET,HD_VLIST_TNU,HD_TLIST_SGRAY_WRITE,HD_TLIST_SGRAY_READ,HD_TLIST_SGRAY_OFFSET
//      PSKR_BI_HD_PART_1_COL_WIDTH                //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,          12,          12,           13,     6,          12,        10,     6,              16,        9,                 19,               17,               17,               17,                18,              16,               17,               17,         11,          12,           13,              16,          12,           13,              16,         11,           13,               17,          12,            14,               17,             15,          12,                18,                       25,                      24,            14,       8,        9,        9,        9,         11,         11,                  20,                 19,                   21,          12,                  20,                 19,                   21
//      PSKR_BI_HD_PART_1_COL_MASK                 //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,           1,           1,            1,     1,           1,         1,     1,               1,        1,                  1,                1,                1,                1,                 1,               1,                1,                1,          1,           1,            1,               1,           1,            1,               1,          1,            1,                1,           1,             1,                1,              1,           1,                 1,                        1,                       1,             1,       1,        1,        1,        1,          1,          1,                   1,                  1,                    1,           1,                   1,                  1,                    1
//      PSKR_BI_HD_PART_1_COL_TYPES                //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,           N,           N,            N,     N,           N,         N,     N,               N,        N,                  N,                N,                N,                N,                 N,               N,                N,                N,          N,           N,            N,               N,           N,            N,               N,          N,            N,                N,           N,             N,                N,              N,           N,                 N,                        N,                       N,             N,       N,        N,        N,        N,          N,          N,                   N,                  N,                    N,           N,                   N,                  N,                    N
//      PSKR_BI_HD_PART_1_TABLE_TYPE               // S
#define PSKR_BI_HD_PART_2                   48009  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HD_MWW,HD_EWAC,HD_RCO_EWAC,HD_FIXED_RCO_EWAC,HD_BPI0_BER_AVG,HD_SC_TD,HD_MRW,HD_TLIST_TNU,HD_TLIST_BD_BURST,HD_TLIST_ETC,HD_ITR_OFF_0BPI_BER,HD_SDS_THRESHOLD,HD_ZN_SKIP_PRE_SGRAY,HD_ZN_SKIP_SAGC,HD_ZN_SKIP_WARPAGE,HD_WPTP,HD_FODW10DAC_OSAD,HD_TPI2_RESULT_OD,HD_TPI2_RESULT_MD,HD_TPI2_RESULT_ID,HD_CAPACITY_PRIME,HD_PRIME_BPI0_BER_Z0,HD_SKIPPED_ZONE,HD_CSM_TEST_CYL,HD_CSM_MAX_10_AVG,HD_CSM_MIN_10_AVG,HD_TD_RETRY,HD_HTTD_DELTA,HD_SPTD_Z1,HD_SPTD_Z2,HD_SPTD_Z3,HD_SPTD_Z4,HD_SPTD_Z5,HD_SPTD_Z6,HD_SPTD_Z7,HD_PRE_SDS_ERR_CNT,HD_2ND_GEO_FLAG_HI,HD_2ND_GEO_FLAG_LO,HD_TD_FAIL_ZONE,HD_RRO_WO_RCC,HD_TOTAL_PERR_WO_RCC,HD_OGB_CYL_NUM,HD_CSM_DIFF_RATIO,HD_SC_RCO_OW,HD_SC_RCO_EWAC,HD_SC_RCO_OSA,HD_SC_RCO_WC,HD_SC_RCO_FOD,HD_SC_RCO_DONE_FLAG,HD_SKIPPED_ZONE_HI,HD_SKIPPED_ZONE_LO,HD_DELTA_OW_ZONE,HD_DELTA_OW_STEP
//      PSKR_BI_HD_PART_2_COL_WIDTH                //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,     6,      7,         11,               17,             15,       8,     6,          12,               17,          12,                 19,              16,                  20,             15,                18,      7,               17,               17,               17,               17,               17,                  20,             15,             15,               17,               17,         11,           13,        10,        10,        10,        10,        10,        10,        10,                18,                18,                18,             15,           13,                  20,            14,               17,          12,            14,           13,          12,           13,                 19,                18,                18,              16,              16
//      PSKR_BI_HD_PART_2_COL_MASK                 //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,     1,      1,          1,                1,              1,       1,     1,           1,                1,           1,                  1,               1,                   1,              1,                 1,      1,                1,                1,                1,                1,                1,                   1,              1,              1,                1,                1,          1,            1,         1,         1,         1,         1,         1,         1,         1,                 1,                 1,                 1,              1,            1,                   1,             1,                1,           1,             1,            1,           1,            1,                  1,                 1,                 1,               1,               1
//      PSKR_BI_HD_PART_2_COL_TYPES                //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,     N,      N,          N,                N,              N,       N,     N,           N,                N,           N,                  N,               N,                   N,              N,                 N,      N,                N,                N,                N,                N,                N,                   N,              N,              N,                N,                N,          N,            N,         N,         N,         N,         N,         N,         N,         N,                 N,                 N,                 N,              N,            N,                   N,             N,                N,           N,             N,            N,           N,            N,                  N,                 N,                 N,               N,               N
//      PSKR_BI_HD_PART_2_TABLE_TYPE               // S
#define PSKR_BI_HDRNG_PART_1                48010  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDR_D_GAIN_RNG_1,HDR_D_GAIN_RNG_2,HDR_D_GAIN_RNG_3,HDR_D_GAIN_RNG_4,HDR_S_GAIN_RNG_1,HDR_S_GAIN_RNG_2,HDR_S_GAIN_RNG_3,HDR_S_GAIN_RNG_4,HDR_RC_RNG_1,HDR_RC_RNG_2,HDR_RC_RNG_3,HDR_RC_RNG_4,HDR_WC_HT_RNG_1,HDR_WC_HT_RNG_2,HDR_WC_HT_RNG_3,HDR_WC_HT_RNG_4,HDR_WC_RT_RNG_1,HDR_WC_RT_RNG_2,HDR_WC_RT_RNG_3,HDR_WC_RT_RNG_4,HDR_WC_LT_RNG_1,HDR_WC_LT_RNG_2,HDR_WC_LT_RNG_3,HDR_WC_LT_RNG_4,HDR_OSA_RT_RNG_1,HDR_OSA_RT_RNG_2,HDR_OSA_RT_RNG_3,HDR_OSA_RT_RNG_4,HDR_OSA_HT_RNG_1,HDR_OSA_HT_RNG_2,HDR_OSA_HT_RNG_3,HDR_OSA_HT_RNG_4,HDR_OSA_LT_RNG_1,HDR_OSA_LT_RNG_2,HDR_OSA_LT_RNG_3,HDR_OSA_LT_RNG_4,HDR_OSD_RT_RNG_1,HDR_OSD_RT_RNG_2,HDR_OSD_RT_RNG_3,HDR_OSD_RT_RNG_4,HDR_OSD_HT_RNG_1,HDR_OSD_HT_RNG_2,HDR_OSD_HT_RNG_3,HDR_OSD_HT_RNG_4,HDR_OSD_LT_RNG_1,HDR_OSD_LT_RNG_2,HDR_OSD_LT_RNG_3,HDR_OSD_LT_RNG_4,HDR_PREHEAT_RNG_1,HDR_PREHEAT_RNG_2,HDR_PREHEAT_RNG_3,HDR_PREHEAT_RNG_4,HDR_PREHEAT_RNG_5,HDR_PREHEAT_RNG_6
//      PSKR_BI_HDRNG_PART_1_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,              16,              16,              16,              16,              16,              16,              16,              16,          12,          12,          12,          12,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,               17,               17,               17,               17,               17,               17
//      PSKR_BI_HDRNG_PART_1_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,               1,               1,               1,               1,               1,               1,               1,               1,           1,           1,           1,           1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,                1,                1,                1,                1,                1,                1
//      PSKR_BI_HDRNG_PART_1_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,               N,               N,               N,               N,               N,               N,               N,               N,           N,           N,           N,           N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,                N,                N,                N,                N,                N,                N
//      PSKR_BI_HDRNG_PART_1_TABLE_TYPE            // S
#define PSKR_BI_HDRNG_PART_2                48011  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDR_WPTP_CNT_RNG_1,HDR_WPTP_CNT_RNG_2,HDR_WPTP_CNT_RNG_3,HDR_WPTP_CNT_RNG_4,HDR_WPTP_CNT_RNG_5,HDR_WPTP_CNT_RNG_6,HDR_10DAC_BER_RNG_1,HDR_10DAC_BER_RNG_2,HDR_10DAC_BER_RNG_3,HDR_10DAC_BER_RNG_4,HDR_15DAC_BER_RNG_1,HDR_15DAC_BER_RNG_2,HDR_15DAC_BER_RNG_3,HDR_15DAC_BER_RNG_4,HDR_PES_EC1_RNG_1,HDR_PES_EC1_RNG_2,HDR_PES_EC1_RNG_3,HDR_PES_EC1_RNG_4,HDR_PES_EC2_RNG_1,HDR_PES_EC2_RNG_2,HDR_PES_EC2_RNG_3,HDR_PES_EC2_RNG_4,HDR_TIME_EC1_RNG_1,HDR_TIME_EC1_RNG_2,HDR_TIME_EC1_RNG_3,HDR_TIME_EC1_RNG_4,HDR_TIME_EC2_RNG_1,HDR_TIME_EC2_RNG_2,HDR_TIME_EC2_RNG_3,HDR_TIME_EC2_RNG_4,HDR_10DAC_FT_BER_RNG_1,HDR_10DAC_FT_BER_RNG_2,HDR_10DAC_FT_BER_RNG_3,HDR_10DAC_FT_BER_RNG_4,HDR_FT_BER_RNG_1,HDR_FT_BER_RNG_2,HDR_FT_BER_RNG_3,HDR_FT_BER_RNG_4,HDR_FRG02W_TD_RNG_1,HDR_FRG02W_TD_RNG_2,HDR_FRG02W_TD_RNG_3,HDR_FRG02W_TD_RNG_4,HDR_FRG02W_TD_RNG_5,HDR_ATWEC1_RNG_1,HDR_ATWEC1_RNG_2,HDR_ATWEC1_RNG_3,HDR_ATWEC1_RNG_4,HDR_ATWEC1_RNG_5,HDR_ATWEC1_RNG_NA,HDR_ATWEC2_RNG_1,HDR_ATWEC2_RNG_2,HDR_ATWEC2_RNG_3,HDR_ATWEC2_RNG_4,HDR_ATWEC2_RNG_5,HDR_ATWEC2_RNG_NA
//      PSKR_BI_HDRNG_PART_2_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,                18,                18,                18,                18,                18,                18,                 18,                 18,                 18,                 18,                 19,                 19,                 19,                 19,               17,               17,               17,               17,               17,               17,               17,               17,                18,                18,                18,                18,                18,                18,                18,                18,                    22,                    22,                    22,                    22,              16,              16,              16,              16,                 19,                 19,                 19,                 19,                 19,              16,              16,              16,              16,              16,               17,              16,              16,              16,              16,              16,               17
//      PSKR_BI_HDRNG_PART_2_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                 1,                 1,                 1,                 1,                 1,                 1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                1,                1,                1,                1,                1,                1,                1,                1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                     1,                     1,                     1,                     1,               1,               1,               1,               1,                  1,                  1,                  1,                  1,                  1,               1,               1,               1,               1,               1,                1,               1,               1,               1,               1,               1,                1
//      PSKR_BI_HDRNG_PART_2_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                 N,                 N,                 N,                 N,                 N,                 N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                N,                N,                N,                N,                N,                N,                N,                N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                     N,                     N,                     N,                     N,               N,               N,               N,               N,                  N,                  N,                  N,                  N,                  N,               N,               N,               N,               N,               N,                N,               N,               N,               N,               N,               N,                N
//      PSKR_BI_HDRNG_PART_2_TABLE_TYPE            // S
#define PSKR_BI_HDRNG_PART_3                48012  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDR_FRG02R_RNG_1,HDR_FRG02R_RNG_2,HDR_FRG02R_RNG_3,HDR_FRG02R_RNG_4,HDR_FODW_RNG_1,HDR_FODW_RNG_2,HDR_FODW_RNG_3,HDR_FODW_RNG_4,HDR_FH_RNG_1,HDR_FH_RNG_2,HDR_FH_RNG_3,HDR_FH_RNG_4,HDR_TD_RNG_1,HDR_TD_RNG_2,HDR_TD_RNG_3,HDR_TD_RNG_4,HDR_FODR2_RNG_1,HDR_FODR2_RNG_2,HDR_FODR2_RNG_3,HDR_FODR2_RNG_4,HDR_FODW2_RNG_1,HDR_FODW2_RNG_2,HDR_FODW2_RNG_3,HDR_FODW2_RNG_4,HDR_FH2_RNG_1,HDR_FH2_RNG_2,HDR_FH2_RNG_3,HDR_FH2_RNG_4,HDR_TD2_RNG_1,HDR_TD2_RNG_2,HDR_TD2_RNG_3,HDR_TD2_RNG_4,HDR_FODR_RNG_5,HDR_FODW_RNG_5,HDR_FH_RNG_5,HDR_TD_RNG_5,HDR_FODR2_RNG_5,HDR_FODW2_RNG_5,HDR_FH2_RNG_5,HDR_TD2_RNG_5,HDR_FODW_RTD_RNG_1,HDR_FODW_RTD_RNG_2,HDR_FODW_RTD_RNG_3,HDR_FODW_RTD_RNG_4,HDR_FODW_RTD_RNG_5,HDR_FODW_WTD_RNG_1,HDR_FODW_WTD_RNG_2,HDR_FODW_WTD_RNG_3,HDR_FODW_WTD_RNG_4,HDR_FODW_WTD_RNG_5,HDR_RT_FODR_TD_RNG_1,HDR_RT_FODR_TD_RNG_2,HDR_RT_FODR_TD_RNG_3,HDR_RT_FODR_TD_RNG_4,HDR_RT_FODR_TD_RNG_5,HDR_RT_FODR_TD_RNG_6
//      PSKR_BI_HDRNG_PART_3_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,              16,              16,              16,              16,            14,            14,            14,            14,          12,          12,          12,          12,          12,          12,          12,          12,             15,             15,             15,             15,             15,             15,             15,             15,           13,           13,           13,           13,           13,           13,           13,           13,            14,            14,          12,          12,             15,             15,           13,           13,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                  20,                  20,                  20,                  20,                  20,                  20
//      PSKR_BI_HDRNG_PART_3_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,               1,               1,               1,               1,             1,             1,             1,             1,           1,           1,           1,           1,           1,           1,           1,           1,              1,              1,              1,              1,              1,              1,              1,              1,            1,            1,            1,            1,            1,            1,            1,            1,             1,             1,           1,           1,              1,              1,            1,            1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                   1,                   1,                   1,                   1,                   1,                   1
//      PSKR_BI_HDRNG_PART_3_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,               N,               N,               N,               N,             N,             N,             N,             N,           N,           N,           N,           N,           N,           N,           N,           N,              N,              N,              N,              N,              N,              N,              N,              N,            N,            N,            N,            N,            N,            N,            N,            N,             N,             N,           N,           N,              N,              N,            N,            N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                   N,                   N,                   N,                   N,                   N,                   N
//      PSKR_BI_HDRNG_PART_3_TABLE_TYPE            // S
#define PSKR_BI_HDRNG_PART_4                48013  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDR_HT_FODR_TD_RNG_1,HDR_HT_FODR_TD_RNG_2,HDR_HT_FODR_TD_RNG_3,HDR_HT_FODR_TD_RNG_4,HDR_HT_FODR_TD_RNG_5,HDR_HT_FODR_TD_RNG_6,HDR_FODR_TCC_06C_RNG_1,HDR_FODR_TCC_06C_RNG_2,HDR_FODR_TCC_06C_RNG_3,HDR_FODR_TCC_06C_RNG_4,HDR_FODR_TCC_06C_RNG_5,HDR_FODR_TCC_06C_RNG_6,HDR_FODR_TCC_33C_RNG_1,HDR_FODR_TCC_33C_RNG_2,HDR_FODR_TCC_33C_RNG_3,HDR_FODR_TCC_33C_RNG_4,HDR_FODR_TCC_33C_RNG_5,HDR_FODR_TCC_33C_RNG_6,HDR_FODR_TCC_62C_RNG_1,HDR_FODR_TCC_62C_RNG_2,HDR_FODR_TCC_62C_RNG_3,HDR_FODR_TCC_62C_RNG_4,HDR_FODR_TCC_62C_RNG_5,HDR_FODR_TCC_62C_RNG_6,HDR_FODW_TCC_06C_RNG_1,HDR_FODW_TCC_06C_RNG_2,HDR_FODW_TCC_06C_RNG_3,HDR_FODW_TCC_06C_RNG_4,HDR_FODW_TCC_06C_RNG_5,HDR_FODW_TCC_06C_RNG_6,HDR_FODW_TCC_33C_RNG_1,HDR_FODW_TCC_33C_RNG_2,HDR_FODW_TCC_33C_RNG_3,HDR_FODW_TCC_33C_RNG_4,HDR_FODW_TCC_33C_RNG_5,HDR_FODW_TCC_33C_RNG_6,HDR_FODW_TCC_62C_RNG_1,HDR_FODW_TCC_62C_RNG_2,HDR_FODW_TCC_62C_RNG_3,HDR_FODW_TCC_62C_RNG_4,HDR_FODW_TCC_62C_RNG_5,HDR_FODW_TCC_62C_RNG_6,HDR_PREHEAT_TCC_06C_RNG_1,HDR_PREHEAT_TCC_06C_RNG_2,HDR_PREHEAT_TCC_06C_RNG_3,HDR_PREHEAT_TCC_06C_RNG_4,HDR_PREHEAT_TCC_06C_RNG_5,HDR_PREHEAT_TCC_06C_RNG_6,HDR_PREHEAT_TCC_33C_RNG_1,HDR_PREHEAT_TCC_33C_RNG_2,HDR_PREHEAT_TCC_33C_RNG_3,HDR_PREHEAT_TCC_33C_RNG_4,HDR_PREHEAT_TCC_33C_RNG_5,HDR_PREHEAT_TCC_33C_RNG_6
//      PSKR_BI_HDRNG_PART_4_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,                  20,                  20,                  20,                  20,                  20,                  20,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                       25,                       25,                       25,                       25,                       25,                       25,                       25,                       25,                       25,                       25,                       25,                       25
//      PSKR_BI_HDRNG_PART_4_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                   1,                   1,                   1,                   1,                   1,                   1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                        1,                        1,                        1,                        1,                        1,                        1,                        1,                        1,                        1,                        1,                        1,                        1
//      PSKR_BI_HDRNG_PART_4_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                   N,                   N,                   N,                   N,                   N,                   N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                        N,                        N,                        N,                        N,                        N,                        N,                        N,                        N,                        N,                        N,                        N,                        N
//      PSKR_BI_HDRNG_PART_4_TABLE_TYPE            // S
#define PSKR_BI_HDRNG_PART_5                48014  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDR_PREHEAT_TCC_62C_RNG_1,HDR_PREHEAT_TCC_62C_RNG_2,HDR_PREHEAT_TCC_62C_RNG_3,HDR_PREHEAT_TCC_62C_RNG_4,HDR_PREHEAT_TCC_62C_RNG_5,HDR_PREHEAT_TCC_62C_RNG_6,HDR_WGCNT_TCC_06C_RNG_1,HDR_WGCNT_TCC_06C_RNG_2,HDR_WGCNT_TCC_06C_RNG_3,HDR_WGCNT_TCC_06C_RNG_4,HDR_WGCNT_TCC_06C_RNG_5,HDR_WGCNT_TCC_06C_RNG_6,HDR_WGCNT_TCC_33C_RNG_1,HDR_WGCNT_TCC_33C_RNG_2,HDR_WGCNT_TCC_33C_RNG_3,HDR_WGCNT_TCC_33C_RNG_4,HDR_WGCNT_TCC_33C_RNG_5,HDR_WGCNT_TCC_33C_RNG_6,HDR_WGCNT_TCC_62C_RNG_1,HDR_WGCNT_TCC_62C_RNG_2,HDR_WGCNT_TCC_62C_RNG_3,HDR_WGCNT_TCC_62C_RNG_4,HDR_WGCNT_TCC_62C_RNG_5,HDR_WGCNT_TCC_62C_RNG_6,HDR_FOD_STEP_TCC_06C_RNG_1,HDR_FOD_STEP_TCC_06C_RNG_2,HDR_FOD_STEP_TCC_06C_RNG_3,HDR_FOD_STEP_TCC_06C_RNG_4,HDR_FOD_STEP_TCC_06C_RNG_5,HDR_FOD_STEP_TCC_06C_RNG_6,HDR_FOD_STEP_TCC_33C_RNG_1,HDR_FOD_STEP_TCC_33C_RNG_2,HDR_FOD_STEP_TCC_33C_RNG_3,HDR_FOD_STEP_TCC_33C_RNG_4,HDR_FOD_STEP_TCC_33C_RNG_5,HDR_FOD_STEP_TCC_33C_RNG_6,HDR_FOD_STEP_TCC_62C_RNG_1,HDR_FOD_STEP_TCC_62C_RNG_2,HDR_FOD_STEP_TCC_62C_RNG_3,HDR_FOD_STEP_TCC_62C_RNG_4,HDR_FOD_STEP_TCC_62C_RNG_5,HDR_FOD_STEP_TCC_62C_RNG_6,HDR_FOD_USA_TCC_06C_RNG_1,HDR_FOD_USA_TCC_06C_RNG_2,HDR_FOD_USA_TCC_06C_RNG_3,HDR_FOD_USA_TCC_06C_RNG_4,HDR_FOD_USA_TCC_06C_RNG_5,HDR_FOD_USA_TCC_06C_RNG_6,HDR_FOD_USA_TCC_33C_RNG_1,HDR_FOD_USA_TCC_33C_RNG_2,HDR_FOD_USA_TCC_33C_RNG_3,HDR_FOD_USA_TCC_33C_RNG_4,HDR_FOD_USA_TCC_33C_RNG_5,HDR_FOD_USA_TCC_33C_RNG_6
//      PSKR_BI_HDRNG_PART_5_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,                       25,                       25,                       25,                       25,                       25,                       25,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                        26,                        26,                        26,                        26,                        26,                        26,                        26,                        26,                        26,                        26,                        26,                        26,                        26,                        26,                        26,                        26,                        26,                        26,                       25,                       25,                       25,                       25,                       25,                       25,                       25,                       25,                       25,                       25,                       25,                       25
//      PSKR_BI_HDRNG_PART_5_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                        1,                        1,                        1,                        1,                        1,                        1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                         1,                         1,                         1,                         1,                         1,                         1,                         1,                         1,                         1,                         1,                         1,                         1,                         1,                         1,                         1,                         1,                         1,                         1,                        1,                        1,                        1,                        1,                        1,                        1,                        1,                        1,                        1,                        1,                        1,                        1
//      PSKR_BI_HDRNG_PART_5_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                        N,                        N,                        N,                        N,                        N,                        N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                         N,                         N,                         N,                         N,                         N,                         N,                         N,                         N,                         N,                         N,                         N,                         N,                         N,                         N,                         N,                         N,                         N,                         N,                        N,                        N,                        N,                        N,                        N,                        N,                        N,                        N,                        N,                        N,                        N,                        N
//      PSKR_BI_HDRNG_PART_5_TABLE_TYPE            // S
#define PSKR_BI_HDRNG_PART_6                48015  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDR_FOD_USA_TCC_62C_RNG_1,HDR_FOD_USA_TCC_62C_RNG_2,HDR_FOD_USA_TCC_62C_RNG_3,HDR_FOD_USA_TCC_62C_RNG_4,HDR_FOD_USA_TCC_62C_RNG_5,HDR_FOD_USA_TCC_62C_RNG_6,HDR_BPI_REAL_TARGET_RNG_1,HDR_BPI_REAL_TARGET_RNG_2,HDR_BPI_REAL_TARGET_RNG_3,HDR_BPI_REAL_TARGET_RNG_4,HDR_BPI_REAL_TARGET_RNG_5,HDR_BPI_EST_TARGET_RNG_1,HDR_BPI_EST_TARGET_RNG_2,HDR_BPI_EST_TARGET_RNG_3,HDR_BPI_EST_TARGET_RNG_4,HDR_BPI_EST_TARGET_RNG_5,HDR_BPI_SLOPE_RNG_1,HDR_BPI_SLOPE_RNG_2,HDR_BPI_SLOPE_RNG_3,HDR_BPI_SLOPE_RNG_4,HDR_BPI_SLOPE_RNG_5,HDR_VALID_POINT_CNT_RNG_1,HDR_VALID_POINT_CNT_RNG_2,HDR_VALID_POINT_CNT_RNG_3,HDR_VALID_POINT_CNT_RNG_4,HDR_VALID_POINT_CNT_RNG_5,HDR_SELECT_TPI_OFFSET_RNG_1,HDR_SELECT_TPI_OFFSET_RNG_2,HDR_SELECT_TPI_OFFSET_RNG_3,HDR_SELECT_TPI_OFFSET_RNG_4,HDR_SELECT_TPI_OFFSET_RNG_5,HDR_TPI_SLOPE_RNG_1,HDR_TPI_SLOPE_RNG_2,HDR_TPI_SLOPE_RNG_3,HDR_TPI_SLOPE_RNG_4,HDR_TPI_SLOPE_RNG_5,HDR_TPI_INTERCEPT_RNG_1,HDR_TPI_INTERCEPT_RNG_2,HDR_TPI_INTERCEPT_RNG_3,HDR_TPI_INTERCEPT_RNG_4,HDR_TPI_INTERCEPT_RNG_5,HDR_RTD_METHOD_RNG_1,HDR_RTD_METHOD_RNG_2,HDR_RTD_METHOD_RNG_3,HDR_RTD_METHOD_RNG_4,HDR_RTD_METHOD_RNG_5,HDR_RTD_BIAS_RNG_1,HDR_RTD_BIAS_RNG_2,HDR_RTD_BIAS_RNG_3,HDR_RTD_BIAS_RNG_4,HDR_RTD_BIAS_RNG_5
//      PSKR_BI_HDRNG_PART_6_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,                       25,                       25,                       25,                       25,                       25,                       25,                       25,                       25,                       25,                       25,                       25,                      24,                      24,                      24,                      24,                      24,                 19,                 19,                 19,                 19,                 19,                       25,                       25,                       25,                       25,                       25,                         27,                         27,                         27,                         27,                         27,                 19,                 19,                 19,                 19,                 19,                     23,                     23,                     23,                     23,                     23,                  20,                  20,                  20,                  20,                  20,                18,                18,                18,                18,                18
//      PSKR_BI_HDRNG_PART_6_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                        1,                        1,                        1,                        1,                        1,                        1,                        1,                        1,                        1,                        1,                        1,                       1,                       1,                       1,                       1,                       1,                  1,                  1,                  1,                  1,                  1,                        1,                        1,                        1,                        1,                        1,                          1,                          1,                          1,                          1,                          1,                  1,                  1,                  1,                  1,                  1,                      1,                      1,                      1,                      1,                      1,                   1,                   1,                   1,                   1,                   1,                 1,                 1,                 1,                 1,                 1
//      PSKR_BI_HDRNG_PART_6_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                        N,                        N,                        N,                        N,                        N,                        N,                        N,                        N,                        N,                        N,                        N,                       N,                       N,                       N,                       N,                       N,                  N,                  N,                  N,                  N,                  N,                        N,                        N,                        N,                        N,                        N,                          N,                          N,                          N,                          N,                          N,                  N,                  N,                  N,                  N,                  N,                      N,                      N,                      N,                      N,                      N,                   N,                   N,                   N,                   N,                   N,                 N,                 N,                 N,                 N,                 N
//      PSKR_BI_HDRNG_PART_6_TABLE_TYPE            // S
#define PSKR_BI_HDRNG_PART_7                48016  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDR_RTD_DSW_RNG_1,HDR_RTD_DSW_RNG_2,HDR_RTD_DSW_RNG_3,HDR_RTD_DSW_RNG_4,HDR_RTD_DSW_RNG_5,HDR_RTD_HDI4_RNG_1,HDR_RTD_HDI4_RNG_2,HDR_RTD_HDI4_RNG_3,HDR_RTD_HDI4_RNG_4,HDR_RTD_HDI4_RNG_5,HDR_RTD_PES_RNG_1,HDR_RTD_PES_RNG_2,HDR_RTD_PES_RNG_3,HDR_RTD_PES_RNG_4,HDR_RTD_PES_RNG_5,HDR_RTD_MAC_RNG_1,HDR_RTD_MAC_RNG_2,HDR_RTD_MAC_RNG_3,HDR_RTD_MAC_RNG_4,HDR_RTD_MAC_RNG_5,HDR_RTD_DCR_SLOPE_RNG_1,HDR_RTD_DCR_SLOPE_RNG_2,HDR_RTD_DCR_SLOPE_RNG_3,HDR_RTD_DCR_SLOPE_RNG_4,HDR_RTD_DCR_SLOPE_RNG_5,HDR_FT_RMODE_BER_RNG_1,HDR_FT_RMODE_BER_RNG_2,HDR_FT_RMODE_BER_RNG_3,HDR_FT_RMODE_TEMP_RNG_1,HDR_FT_RMODE_TEMP_RNG_2,HDR_FT_RMODE_TEMP_RNG_3,HDR_FT_WRMODE_BER_RNG_1,HDR_FT_WRMODE_BER_RNG_2,HDR_FT_WRMODE_BER_RNG_3,HDR_FT_WRMODE_TEMP_RNG_1,HDR_FT_WRMODE_TEMP_RNG_2,HDR_FT_WRMODE_TEMP_RNG_3,HDR_OW2AVG_RNG_1,HDR_FT_ATW_CNT_RNG_1,HDR_FT_ATW_CNT_RNG_2,HDR_FT_ATW_CNT_RNG_3,HDR_PREHEAT_ERR_RNG_1,HDR_PREHEAT_ERR_RNG_2,HDR_PREHEAT_ERR_RNG_3,HDR_2NDFT_WR_BER_RNG_1,HDR_2NDFT_WR_BER_RNG_2,HDR_2NDFT_WR_BER_RNG_3,HDR_3THFT_WR_BER_RNG_1,HDR_3THFT_WR_BER_RNG_2,HDR_3THFT_WR_BER_RNG_3,HDR_4THFT_WR_BER_RNG_1,HDR_4THFT_WR_BER_RNG_2,HDR_4THFT_WR_BER_RNG_3
//      PSKR_BI_HDRNG_PART_7_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,               17,               17,               17,               17,               17,                18,                18,                18,                18,                18,               17,               17,               17,               17,               17,               17,               17,               17,               17,               17,                     23,                     23,                     23,                     23,                     23,                    22,                    22,                    22,                     23,                     23,                     23,                     23,                     23,                     23,                      24,                      24,                      24,              16,                  20,                  20,                  20,                   21,                   21,                   21,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22
//      PSKR_BI_HDRNG_PART_7_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                1,                1,                1,                1,                1,                 1,                 1,                 1,                 1,                 1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                      1,                      1,                      1,                      1,                      1,                     1,                     1,                     1,                      1,                      1,                      1,                      1,                      1,                      1,                       1,                       1,                       1,               1,                   1,                   1,                   1,                    1,                    1,                    1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1
//      PSKR_BI_HDRNG_PART_7_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                N,                N,                N,                N,                N,                 N,                 N,                 N,                 N,                 N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                      N,                      N,                      N,                      N,                      N,                     N,                     N,                     N,                      N,                      N,                      N,                      N,                      N,                      N,                       N,                       N,                       N,               N,                   N,                   N,                   N,                    N,                    N,                    N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N
//      PSKR_BI_HDRNG_PART_7_TABLE_TYPE            // S
#define PSKR_BI_HDSTP_PART_1                48017  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDS_NP_OFFSET_SP_1,HDS_NP_OFFSET_SP_2,HDS_NP_OFFSET_SP_3,HDS_NP_OFFSET_SP_4,HDS_NP_OFFSET_SP_5,HDS_NP_OFFSET_SP_6,HDS_NP_OFFSET_SP_7,HDS_NP_OFFSET_SP_8,HDS_NP_OFFSET_SP_9,HDS_NP_OFFSET_SP_10,HDS_NP_OFFSET_SP_11,HDS_NP_OFFSET_SP_12,HDS_MRTUNE_SP_1,HDS_MRTUNE_SP_2,HDS_MRTUNE_SP_3,HDS_MRTUNE_SP_4,HDS_MRTUNE_SP_5,HDS_MRTUNE_SP_6,HDS_MRTUNE_SP_7,HDS_MRTUNE_SP_8,HDS_MRTUNE_SP_9,HDS_MRTUNE_SP_10,HDS_MRTUNE_SP_11,HDS_MRTUNE_SP_12,HDS_MRTUNE_SP_13,HDS_MRTUNE_SP_14,HDS_MRTUNE_SP_15,HDS_MRTUNE_SP_16,HDS_MRTUNE_SP_17,HDS_MRTUNE_SP_18,HDS_PARM_AGC_SP_1,HDS_PARM_AGC_SP_2,HDS_PARM_AGC_SP_3,HDS_PARM_AGC_SP_4,HDS_PARM_AGC_SP_5,HDS_PARM_AGC_SP_6,HDS_PARM_AGC_SP_7,HDS_PARM_AGC_SP_8,HDS_PARM_AGC_SP_9,HDS_PARM_AGC_SP_10,HDS_PARM_AGC_SP_11,HDS_PARM_AGC_SP_12,HDS_PARM_AGC_SP_13,HDS_PARM_AGC_SP_14,HDS_PARM_AGC_SP_15,HDS_PARM_AGC_SP_16
//      PSKR_BI_HDSTP_PART_1_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,                18,                18,                18,                18,                18,                18,                18,                18,                18,                 19,                 19,                 19,             15,             15,             15,             15,             15,             15,             15,             15,             15,              16,              16,              16,              16,              16,              16,              16,              16,              16,               17,               17,               17,               17,               17,               17,               17,               17,               17,                18,                18,                18,                18,                18,                18,                18
//      PSKR_BI_HDSTP_PART_1_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                  1,                  1,                  1,              1,              1,              1,              1,              1,              1,              1,              1,              1,               1,               1,               1,               1,               1,               1,               1,               1,               1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                 1,                 1,                 1,                 1,                 1,                 1,                 1
//      PSKR_BI_HDSTP_PART_1_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                  N,                  N,                  N,              N,              N,              N,              N,              N,              N,              N,              N,              N,               N,               N,               N,               N,               N,               N,               N,               N,               N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                 N,                 N,                 N,                 N,                 N,                 N,                 N
//      PSKR_BI_HDSTP_PART_1_TABLE_TYPE            // S
#define PSKR_BI_HDSTP_PART_2                48018  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDS_PARM_ASYM_SP_1,HDS_PARM_ASYM_SP_2,HDS_PARM_ASYM_SP_3,HDS_PARM_ASYM_SP_4,HDS_PARM_ASYM_SP_5,HDS_PARM_ASYM_SP_6,HDS_PARM_ASYM_SP_7,HDS_PARM_ASYM_SP_8,HDS_PARM_ASYM_SP_9,HDS_PARM_ASYM_SP_10,HDS_PARM_ASYM_SP_11,HDS_PARM_ASYM_SP_12,HDS_PARM_ASYM_SP_13,HDS_PARM_ASYM_SP_14,HDS_PARM_ASYM_SP_15,HDS_PARM_ASYM_SP_16,HDS_PARM_MRR_SP_1,HDS_PARM_MRR_SP_2,HDS_PARM_MRR_SP_3,HDS_PARM_MRR_SP_4,HDS_PARM_MRR_SP_5,HDS_PARM_MRR_SP_6,HDS_PARM_MRR_SP_7,HDS_PARM_MRR_SP_8,HDS_PARM_MRR_SP_9,HDS_PARM_MRR_SP_10,HDS_PARM_MRR_SP_11,HDS_PARM_MRR_SP_12,HDS_PARM_MRR_SP_13,HDS_PARM_MRR_SP_14,HDS_PARM_MRR_SP_15,HDS_PARM_MRR_SP_16,HDS_PARM_TEMP_SP_1,HDS_PARM_TEMP_SP_2,HDS_PARM_TEMP_SP_3,HDS_PARM_TEMP_SP_4,HDS_PARM_TEMP_SP_5,HDS_PARM_TEMP_SP_6,HDS_PARM_TEMP_SP_7,HDS_PARM_TEMP_SP_8,HDS_PARM_TEMP_SP_9,HDS_PARM_TEMP_SP_10,HDS_PARM_TEMP_SP_11,HDS_PARM_TEMP_SP_12,HDS_PARM_TEMP_SP_13,HDS_PARM_TEMP_SP_14,HDS_PARM_TEMP_SP_15,HDS_PARM_TEMP_SP_16
//      PSKR_BI_HDSTP_PART_2_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,                18,                18,                18,                18,                18,                18,                18,                18,                18,                 19,                 19,                 19,                 19,                 19,                 19,                 19,               17,               17,               17,               17,               17,               17,               17,               17,               17,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                 19,                 19,                 19,                 19,                 19,                 19,                 19
//      PSKR_BI_HDSTP_PART_2_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                  1,                  1,                  1,                  1,                  1,                  1,                  1
//      PSKR_BI_HDSTP_PART_2_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                  N,                  N,                  N,                  N,                  N,                  N,                  N
//      PSKR_BI_HDSTP_PART_2_TABLE_TYPE            // S
#define PSKR_BI_HDSTP_PART_3                48019  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDS_PARM_AP_SP_1,HDS_PARM_AP_SP_2,HDS_PARM_AP_SP_3,HDS_PARM_AP_SP_4,HDS_PARM_AP_SP_5,HDS_PARM_AP_SP_6,HDS_PARM_AP_SP_7,HDS_PARM_AP_SP_8,HDS_PARM_AP_SP_9,HDS_PARM_AP_SP_10,HDS_PARM_AP_SP_11,HDS_PARM_AP_SP_12,HDS_PARM_AP_SP_13,HDS_PARM_AP_SP_14,HDS_PARM_AP_SP_15,HDS_PARM_AP_SP_16,HDS_PARM_CSM_SP_1,HDS_PARM_CSM_SP_2,HDS_PARM_CSM_SP_3,HDS_PARM_CSM_SP_4,HDS_PARM_CSM_SP_5,HDS_PARM_CSM_SP_6,HDS_PARM_CSM_SP_7,HDS_PARM_CSM_SP_8,HDS_PARM_CSM_SP_9,HDS_PARM_CSM_SP_10,HDS_PARM_CSM_SP_11,HDS_PARM_CSM_SP_12,HDS_PARM_CSM_SP_13,HDS_PARM_CSM_SP_14,HDS_PARM_CSM_SP_15,HDS_PARM_CSM_SP_16,HDS_PARM_OW_1_SP_1,HDS_PARM_OW_1_SP_2,HDS_PARM_OW_1_SP_3,HDS_PARM_OW_1_SP_4,HDS_PARM_OW_1_SP_5,HDS_PARM_OW_1_SP_6,HDS_PARM_OW_1_SP_7,HDS_PARM_OW_1_SP_8,HDS_PARM_OW_1_SP_9,HDS_PARM_OW_1_SP_10,HDS_PARM_OW_1_SP_11,HDS_PARM_OW_1_SP_12,HDS_PARM_OW_1_SP_13,HDS_PARM_OW_1_SP_14,HDS_PARM_OW_1_SP_15,HDS_PARM_OW_1_SP_16,HDS_PARM_OW_2_SP_1,HDS_PARM_OW_2_SP_2,HDS_PARM_OW_2_SP_3,HDS_PARM_OW_2_SP_4,HDS_PARM_OW_2_SP_5,HDS_PARM_OW_2_SP_6,HDS_PARM_OW_2_SP_7,HDS_PARM_OW_2_SP_8,HDS_PARM_OW_2_SP_9
//      PSKR_BI_HDSTP_PART_3_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,              16,              16,              16,              16,              16,              16,              16,              16,              16,               17,               17,               17,               17,               17,               17,               17,               17,               17,               17,               17,               17,               17,               17,               17,               17,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                18,                18,                18,                18,                18,                18,                18,                18,                18
//      PSKR_BI_HDSTP_PART_3_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,               1,               1,               1,               1,               1,               1,               1,               1,               1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1
//      PSKR_BI_HDSTP_PART_3_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,               N,               N,               N,               N,               N,               N,               N,               N,               N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N
//      PSKR_BI_HDSTP_PART_3_TABLE_TYPE            // S
#define PSKR_BI_HDSTP_PART_4                48020  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDS_PARM_OW_2_SP_10,HDS_PARM_OW_2_SP_11,HDS_PARM_OW_2_SP_12,HDS_PARM_OW_2_SP_13,HDS_PARM_OW_2_SP_14,HDS_PARM_OW_2_SP_15,HDS_PARM_OW_2_SP_16,HDS_PARM_OW_3_SP_1,HDS_PARM_OW_3_SP_2,HDS_PARM_OW_3_SP_3,HDS_PARM_OW_3_SP_4,HDS_PARM_OW_3_SP_5,HDS_PARM_OW_3_SP_6,HDS_PARM_OW_3_SP_7,HDS_PARM_OW_3_SP_8,HDS_PARM_OW_3_SP_9,HDS_PARM_OW_3_SP_10,HDS_PARM_OW_3_SP_11,HDS_PARM_OW_3_SP_12,HDS_PARM_OW_3_SP_13,HDS_PARM_OW_3_SP_14,HDS_PARM_OW_3_SP_15,HDS_PARM_OW_3_SP_16,HDS_PARM_BER_SP_1,HDS_PARM_BER_SP_2,HDS_PARM_BER_SP_3,HDS_PARM_BER_SP_4,HDS_PARM_BER_SP_5,HDS_PARM_BER_SP_6,HDS_PARM_BER_SP_7,HDS_PARM_BER_SP_8,HDS_PARM_BER_SP_9,HDS_PARM_BER_SP_10,HDS_PARM_BER_SP_11,HDS_PARM_BER_SP_12,HDS_PARM_BER_SP_13,HDS_PARM_BER_SP_14,HDS_PARM_BER_SP_15,HDS_PARM_BER_SP_16,HDS_PARM_BER_SP_NA,HDS_NOTCH_SP_1,HDS_NOTCH_SP_2,HDS_NOTCH_SP_3,HDS_NOTCH_SP_4,HDS_NOTCH_SP_5,HDS_NOTCH_MAG_SP_1,HDS_NOTCH_MAG_SP_2,HDS_NOTCH_MAG_SP_3,HDS_NOTCH_MAG_SP_4,HDS_NOTCH_MAG_SP_5
//      PSKR_BI_HDSTP_PART_4_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                18,                18,                18,                18,                18,                18,                18,                18,                18,                 19,                 19,                 19,                 19,                 19,                 19,                 19,               17,               17,               17,               17,               17,               17,               17,               17,               17,                18,                18,                18,                18,                18,                18,                18,                18,            14,            14,            14,            14,            14,                18,                18,                18,                18,                18
//      PSKR_BI_HDSTP_PART_4_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,             1,             1,             1,             1,             1,                 1,                 1,                 1,                 1,                 1
//      PSKR_BI_HDSTP_PART_4_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,             N,             N,             N,             N,             N,                 N,                 N,                 N,                 N,                 N
//      PSKR_BI_HDSTP_PART_4_TABLE_TYPE            // S
#define PSKR_BI_HDSTP_PART_5                48021  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDS_WPC101_SP_1,HDS_WPC101_SP_2,HDS_WPC101_SP_3,HDS_WPC011_SP_1,HDS_WPC011_SP_2,HDS_WPC011_SP_3,HDS_WPC111_SP_1,HDS_WPC111_SP_2,HDS_WPC111_SP_3,HDS_HT_WPC101_SP_1,HDS_HT_WPC101_SP_2,HDS_HT_WPC101_SP_3,HDS_HT_WPC011_SP_1,HDS_HT_WPC011_SP_2,HDS_HT_WPC011_SP_3,HDS_HT_WPC111_SP_1,HDS_HT_WPC111_SP_2,HDS_HT_WPC111_SP_3,HDS_REF_CSM_OD_SP_1,HDS_REF_CSM_OD_SP_2,HDS_REF_CSM_OD_SP_3,HDS_REF_CSM_OD_SP_4,HDS_REF_CSM_OD_SP_5,HDS_REF_CSM_OD_SP_6,HDS_REF_CSM_OD_SP_7,HDS_REF_CSM_OD_SP_8,HDS_REF_CSM_OD_SP_9,HDS_REF_CSM_OD_SP_10,HDS_REF_CSM_OD_SP_11,HDS_REF_CSM_OD_SP_12,HDS_REF_CSM_OD_SP_13,HDS_REF_CSM_OD_SP_14,HDS_REF_CSM_OD_SP_15,HDS_REF_CSM_OD_SP_16,HDS_REF_CSM_OD_SP_17,HDS_REF_CSM_OD_SP_18,HDS_REF_CSM_MD_SP_1,HDS_REF_CSM_MD_SP_2,HDS_REF_CSM_MD_SP_3,HDS_REF_CSM_MD_SP_4,HDS_REF_CSM_MD_SP_5,HDS_REF_CSM_MD_SP_6,HDS_REF_CSM_MD_SP_7,HDS_REF_CSM_MD_SP_8,HDS_REF_CSM_MD_SP_9,HDS_REF_CSM_MD_SP_10,HDS_REF_CSM_MD_SP_11,HDS_REF_CSM_MD_SP_12,HDS_REF_CSM_MD_SP_13,HDS_REF_CSM_MD_SP_14,HDS_REF_CSM_MD_SP_15,HDS_REF_CSM_MD_SP_16,HDS_REF_CSM_MD_SP_17,HDS_REF_CSM_MD_SP_18,HDS_REF_CSM_ID_SP_1,HDS_REF_CSM_ID_SP_2,HDS_REF_CSM_ID_SP_3
//      PSKR_BI_HDSTP_PART_5_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,             15,             15,             15,             15,             15,             15,             15,             15,             15,                18,                18,                18,                18,                18,                18,                18,                18,                18,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                 19,                 19,                 19
//      PSKR_BI_HDSTP_PART_5_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,              1,              1,              1,              1,              1,              1,              1,              1,              1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                  1,                  1,                  1
//      PSKR_BI_HDSTP_PART_5_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,              N,              N,              N,              N,              N,              N,              N,              N,              N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                  N,                  N,                  N
//      PSKR_BI_HDSTP_PART_5_TABLE_TYPE            // S
#define PSKR_BI_HDSTP_PART_6                48022  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDS_REF_CSM_ID_SP_4,HDS_REF_CSM_ID_SP_5,HDS_REF_CSM_ID_SP_6,HDS_REF_CSM_ID_SP_7,HDS_REF_CSM_ID_SP_8,HDS_REF_CSM_ID_SP_9,HDS_REF_CSM_ID_SP_10,HDS_REF_CSM_ID_SP_11,HDS_REF_CSM_ID_SP_12,HDS_REF_CSM_ID_SP_13,HDS_REF_CSM_ID_SP_14,HDS_REF_CSM_ID_SP_15,HDS_REF_CSM_ID_SP_16,HDS_REF_CSM_ID_SP_17,HDS_REF_CSM_ID_SP_18,HDS_ATW_CSM_OD_SP_1,HDS_ATW_CSM_OD_SP_2,HDS_ATW_CSM_OD_SP_3,HDS_ATW_CSM_OD_SP_4,HDS_ATW_CSM_OD_SP_5,HDS_ATW_CSM_OD_SP_6,HDS_ATW_CSM_OD_SP_7,HDS_ATW_CSM_OD_SP_8,HDS_ATW_CSM_OD_SP_9,HDS_ATW_CSM_OD_SP_10,HDS_ATW_CSM_OD_SP_11,HDS_ATW_CSM_OD_SP_12,HDS_ATW_CSM_OD_SP_13,HDS_ATW_CSM_OD_SP_14,HDS_ATW_CSM_OD_SP_15,HDS_ATW_CSM_OD_SP_16,HDS_ATW_CSM_OD_SP_17,HDS_ATW_CSM_OD_SP_18,HDS_ATW_CSM_MD_SP_1,HDS_ATW_CSM_MD_SP_2,HDS_ATW_CSM_MD_SP_3,HDS_ATW_CSM_MD_SP_4,HDS_ATW_CSM_MD_SP_5,HDS_ATW_CSM_MD_SP_6,HDS_ATW_CSM_MD_SP_7,HDS_ATW_CSM_MD_SP_8,HDS_ATW_CSM_MD_SP_9,HDS_ATW_CSM_MD_SP_10,HDS_ATW_CSM_MD_SP_11,HDS_ATW_CSM_MD_SP_12,HDS_ATW_CSM_MD_SP_13,HDS_ATW_CSM_MD_SP_14,HDS_ATW_CSM_MD_SP_15,HDS_ATW_CSM_MD_SP_16,HDS_ATW_CSM_MD_SP_17,HDS_ATW_CSM_MD_SP_18,HDS_ATW_CMS_ID_SP_1,HDS_ATW_CMS_ID_SP_2,HDS_ATW_CMS_ID_SP_3,HDS_ATW_CMS_ID_SP_4,HDS_ATW_CMS_ID_SP_5,HDS_ATW_CMS_ID_SP_6
//      PSKR_BI_HDSTP_PART_6_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,                 19,                 19,                 19,                 19,                 19,                 19,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                 19,                 19,                 19,                 19,                 19,                 19
//      PSKR_BI_HDSTP_PART_6_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                  1,                  1,                  1,                  1,                  1,                  1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                  1,                  1,                  1,                  1,                  1,                  1
//      PSKR_BI_HDSTP_PART_6_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                  N,                  N,                  N,                  N,                  N,                  N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                  N,                  N,                  N,                  N,                  N,                  N
//      PSKR_BI_HDSTP_PART_6_TABLE_TYPE            // S
#define PSKR_BI_HDSTP_PART_7                48023  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDS_ATW_CMS_ID_SP_7,HDS_ATW_CMS_ID_SP_8,HDS_ATW_CMS_ID_SP_9,HDS_ATW_CMS_ID_SP_10,HDS_ATW_CMS_ID_SP_11,HDS_ATW_CMS_ID_SP_12,HDS_ATW_CMS_ID_SP_13,HDS_ATW_CMS_ID_SP_14,HDS_ATW_CMS_ID_SP_15,HDS_ATW_CMS_ID_SP_16,HDS_ATW_CMS_ID_SP_17,HDS_ATW_CMS_ID_SP_18,HDS_WTD_METHOD_SP_1,HDS_WTD_METHOD_SP_2,HDS_WTD_METHOD_SP_3,HDS_WTD_METHOD_SP_4,HDS_WTD_METHOD_SP_5,HDS_WTD_BIAS_SP_1,HDS_WTD_BIAS_SP_2,HDS_WTD_BIAS_SP_3,HDS_WTD_BIAS_SP_4,HDS_WTD_BIAS_SP_5,HDS_WTD_DSW_SP_1,HDS_WTD_DSW_SP_2,HDS_WTD_DSW_SP_3,HDS_WTD_DSW_SP_4,HDS_WTD_DSW_SP_5,HDS_WTD_HDI4_SP_1,HDS_WTD_HDI4_SP_2,HDS_WTD_HDI4_SP_3,HDS_WTD_HDI4_SP_4,HDS_WTD_HDI4_SP_5,HDS_WTD_PES_SP_1,HDS_WTD_PES_SP_2,HDS_WTD_PES_SP_3,HDS_WTD_PES_SP_4,HDS_WTD_PES_SP_5,HDS_WTD_MAC_SP_1,HDS_WTD_MAC_SP_2,HDS_WTD_MAC_SP_3,HDS_WTD_MAC_SP_4,HDS_WTD_MAC_SP_5,HDS_WTD_DCRSLP_SP_1,HDS_WTD_DCRSLP_SP_2,HDS_WTD_DCRSLP_SP_3,HDS_WTD_DCRSLP_SP_4,HDS_WTD_DCRSLP_SP_5
//      PSKR_BI_HDSTP_PART_7_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,                 19,                 19,                 19,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                 19,                 19,                 19,                 19,                 19,               17,               17,               17,               17,               17,              16,              16,              16,              16,              16,               17,               17,               17,               17,               17,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,                 19,                 19,                 19,                 19,                 19
//      PSKR_BI_HDSTP_PART_7_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                  1,                  1,                  1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                  1,                  1,                  1,                  1,                  1,                1,                1,                1,                1,                1,               1,               1,               1,               1,               1,                1,                1,                1,                1,                1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,                  1,                  1,                  1,                  1,                  1
//      PSKR_BI_HDSTP_PART_7_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                  N,                  N,                  N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                  N,                  N,                  N,                  N,                  N,                N,                N,                N,                N,                N,               N,               N,               N,               N,               N,                N,                N,                N,                N,                N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,                  N,                  N,                  N,                  N,                  N
//      PSKR_BI_HDSTP_PART_7_TABLE_TYPE            // S
#define PSKR_BI_HDSTP_PART_8                48024  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDS_SPTD_1ST_SP_1,HDS_SPTD_1ST_SP_2,HDS_SPTD_1ST_SP_3,HDS_SPTD_1ST_SP_4,HDS_SPTD_1ST_SP_5,HDS_SPTD_2ND_SP_1,HDS_SPTD_2ND_SP_2,HDS_SPTD_2ND_SP_3,HDS_SPTD_2ND_SP_4,HDS_SPTD_2ND_SP_5,HDS_SPTD_3RD_SP_1,HDS_SPTD_3RD_SP_2,HDS_SPTD_3RD_SP_3,HDS_SPTD_3RD_SP_4,HDS_SPTD_3RD_SP_5
//      PSKR_BI_HDSTP_PART_8_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,               17,               17,               17,               17,               17,               17,               17,               17,               17,               17,               17,               17,               17,               17,               17
//      PSKR_BI_HDSTP_PART_8_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                1,                1
//      PSKR_BI_HDSTP_PART_8_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                N,                N
//      PSKR_BI_HDSTP_PART_8_TABLE_TYPE            // S
#define PSKR_BI_HDZNA_PART_1                48025  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDZ_DLIST_ZN_0,HDZ_DLIST_ZN_1,HDZ_DLIST_ZN_2,HDZ_DLIST_ZN_3,HDZ_DLIST_ZN_4,HDZ_DLIST_ZN_5,HDZ_DLIST_ZN_6,HDZ_DLIST_ZN_7,HDZ_DLIST_ZN_8,HDZ_DLIST_ZN_9,HDZ_DLIST_ZN_10,HDZ_DLIST_ZN_11,HDZ_DLIST_ZN_12,HDZ_DLIST_ZN_13,HDZ_DLIST_ZN_14,HDZ_DLIST_ZN_15,HDZ_DLIST_ZN_16,HDZ_DLIST_ZN_17,HDZ_DLIST_ZN_18,HDZ_DLIST_ZN_19,HDZ_DLIST_ZN_20,HDZ_DLIST_ZN_21,HDZ_DLIST_ZN_22,HDZ_DLIST_ZN_23,HDZ_DLIST_ZN_24,HDZ_DLIST_ZN_25,HDZ_DLIST_ZN_26,HDZ_DLIST_ZN_27,HDZ_DLIST_ZN_28,HDZ_DLIST_ZN_29,HDZ_DLIST_ZN_30,HDZ_DLIST_ZN_31,HDZ_DLIST_ZN_32,HDZ_DLIST_ZN_33,HDZ_DLIST_ZN_34,HDZ_DLIST_ZN_35,HDZ_DLIST_ZN_36,HDZ_DLIST_ZN_37,HDZ_DLIST_ZN_38,HDZ_DLIST_ZN_39,HDZ_DLIST_ZN_40,HDZ_DLIST_ZN_41,HDZ_DLIST_ZN_42,HDZ_DLIST_ZN_43,HDZ_DLIST_ZN_44,HDZ_DLIST_ZN_45,HDZ_DLIST_ZN_46,HDZ_DLIST_ZN_47
//      PSKR_BI_HDZNA_PART_1_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15
//      PSKR_BI_HDZNA_PART_1_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1
//      PSKR_BI_HDZNA_PART_1_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N
//      PSKR_BI_HDZNA_PART_1_TABLE_TYPE            // S
#define PSKR_BI_HDZNA_PART_2                48026  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDZ_TLIST_ZN_0,HDZ_TLIST_ZN_1,HDZ_TLIST_ZN_2,HDZ_TLIST_ZN_3,HDZ_TLIST_ZN_4,HDZ_TLIST_ZN_5,HDZ_TLIST_ZN_6,HDZ_TLIST_ZN_7,HDZ_TLIST_ZN_8,HDZ_TLIST_ZN_9,HDZ_TLIST_ZN_10,HDZ_TLIST_ZN_11,HDZ_TLIST_ZN_12,HDZ_TLIST_ZN_13,HDZ_TLIST_ZN_14,HDZ_TLIST_ZN_15,HDZ_TLIST_ZN_16,HDZ_TLIST_ZN_17,HDZ_TLIST_ZN_18,HDZ_TLIST_ZN_19,HDZ_TLIST_ZN_20,HDZ_TLIST_ZN_21,HDZ_TLIST_ZN_22,HDZ_TLIST_ZN_23,HDZ_TLIST_ZN_24,HDZ_TLIST_ZN_25,HDZ_TLIST_ZN_26,HDZ_TLIST_ZN_27,HDZ_TLIST_ZN_28,HDZ_TLIST_ZN_29,HDZ_TLIST_ZN_30,HDZ_TLIST_ZN_31,HDZ_TLIST_ZN_32,HDZ_TLIST_ZN_33,HDZ_TLIST_ZN_34,HDZ_TLIST_ZN_35,HDZ_TLIST_ZN_36,HDZ_TLIST_ZN_37,HDZ_TLIST_ZN_38,HDZ_TLIST_ZN_39,HDZ_TLIST_ZN_40,HDZ_TLIST_ZN_41,HDZ_TLIST_ZN_42,HDZ_TLIST_ZN_43,HDZ_TLIST_ZN_44,HDZ_TLIST_ZN_45,HDZ_TLIST_ZN_46,HDZ_TLIST_ZN_47
//      PSKR_BI_HDZNA_PART_2_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15
//      PSKR_BI_HDZNA_PART_2_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1
//      PSKR_BI_HDZNA_PART_2_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N
//      PSKR_BI_HDZNA_PART_2_TABLE_TYPE            // S
#define PSKR_BI_HDZNA_PART_3                48027  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDZ_VLIST_ZN_0,HDZ_VLIST_ZN_1,HDZ_VLIST_ZN_2,HDZ_VLIST_ZN_3,HDZ_VLIST_ZN_4,HDZ_VLIST_ZN_5,HDZ_VLIST_ZN_6,HDZ_VLIST_ZN_7,HDZ_VLIST_ZN_8,HDZ_VLIST_ZN_9,HDZ_VLIST_ZN_10,HDZ_VLIST_ZN_11,HDZ_VLIST_ZN_12,HDZ_VLIST_ZN_13,HDZ_VLIST_ZN_14,HDZ_VLIST_ZN_15,HDZ_VLIST_ZN_16,HDZ_VLIST_ZN_17,HDZ_VLIST_ZN_18,HDZ_VLIST_ZN_19,HDZ_VLIST_ZN_20,HDZ_VLIST_ZN_21,HDZ_VLIST_ZN_22,HDZ_VLIST_ZN_23,HDZ_VLIST_ZN_24,HDZ_VLIST_ZN_25,HDZ_VLIST_ZN_26,HDZ_VLIST_ZN_27,HDZ_VLIST_ZN_28,HDZ_VLIST_ZN_29,HDZ_VLIST_ZN_30,HDZ_VLIST_ZN_31,HDZ_VLIST_ZN_32,HDZ_VLIST_ZN_33,HDZ_VLIST_ZN_34,HDZ_VLIST_ZN_35,HDZ_VLIST_ZN_36,HDZ_VLIST_ZN_37,HDZ_VLIST_ZN_38,HDZ_VLIST_ZN_39,HDZ_VLIST_ZN_40,HDZ_VLIST_ZN_41,HDZ_VLIST_ZN_42,HDZ_VLIST_ZN_43,HDZ_VLIST_ZN_44,HDZ_VLIST_ZN_45,HDZ_VLIST_ZN_46,HDZ_VLIST_ZN_47
//      PSKR_BI_HDZNA_PART_3_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15
//      PSKR_BI_HDZNA_PART_3_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1
//      PSKR_BI_HDZNA_PART_3_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N
//      PSKR_BI_HDZNA_PART_3_TABLE_TYPE            // S
#define PSKR_BI_HDZNA_PART_4                48028  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDZ_BI_ERR_CNT_ZN_0,HDZ_BI_ERR_CNT_ZN_1,HDZ_BI_ERR_CNT_ZN_2,HDZ_BI_ERR_CNT_ZN_3,HDZ_BI_ERR_CNT_ZN_4,HDZ_BI_ERR_CNT_ZN_5,HDZ_BI_ERR_CNT_ZN_6,HDZ_BI_ERR_CNT_ZN_7,HDZ_BI_ERR_CNT_ZN_8,HDZ_BI_ERR_CNT_ZN_9,HDZ_BI_ERR_CNT_ZN_10,HDZ_BI_ERR_CNT_ZN_11,HDZ_BI_ERR_CNT_ZN_12,HDZ_BI_ERR_CNT_ZN_13,HDZ_BI_ERR_CNT_ZN_14,HDZ_BI_ERR_CNT_ZN_15,HDZ_BI_ERR_CNT_ZN_16,HDZ_BI_ERR_CNT_ZN_17,HDZ_BI_ERR_CNT_ZN_18,HDZ_BI_ERR_CNT_ZN_19,HDZ_BI_ERR_CNT_ZN_20,HDZ_BI_ERR_CNT_ZN_21,HDZ_BI_ERR_CNT_ZN_22,HDZ_BI_ERR_CNT_ZN_23,HDZ_BI_ERR_CNT_ZN_24,HDZ_BI_ERR_CNT_ZN_25,HDZ_BI_ERR_CNT_ZN_26,HDZ_BI_ERR_CNT_ZN_27,HDZ_BI_ERR_CNT_ZN_28,HDZ_BI_ERR_CNT_ZN_29,HDZ_BI_ERR_CNT_ZN_30,HDZ_BI_ERR_CNT_ZN_31,HDZ_BI_ERR_CNT_ZN_32,HDZ_BI_ERR_CNT_ZN_33,HDZ_BI_ERR_CNT_ZN_34,HDZ_BI_ERR_CNT_ZN_35,HDZ_BI_ERR_CNT_ZN_36,HDZ_BI_ERR_CNT_ZN_37,HDZ_BI_ERR_CNT_ZN_38,HDZ_BI_ERR_CNT_ZN_39,HDZ_BI_ERR_CNT_ZN_40,HDZ_BI_ERR_CNT_ZN_41,HDZ_BI_ERR_CNT_ZN_42,HDZ_BI_ERR_CNT_ZN_43,HDZ_BI_ERR_CNT_ZN_44,HDZ_BI_ERR_CNT_ZN_45,HDZ_BI_ERR_CNT_ZN_46,HDZ_BI_ERR_CNT_ZN_47
//      PSKR_BI_HDZNA_PART_4_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20,                  20
//      PSKR_BI_HDZNA_PART_4_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1,                   1
//      PSKR_BI_HDZNA_PART_4_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N,                   N
//      PSKR_BI_HDZNA_PART_4_TABLE_TYPE            // S
#define PSKR_BI_HDZNA_PART_5                48029  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDZ_FIR3_ZN_0,HDZ_FIR3_ZN_1,HDZ_FIR3_ZN_2,HDZ_FIR3_ZN_3,HDZ_FIR3_ZN_4,HDZ_FIR3_ZN_5,HDZ_FIR3_ZN_6,HDZ_FIR3_ZN_7,HDZ_FIR3_ZN_8,HDZ_FIR3_ZN_9,HDZ_FIR3_ZN_10,HDZ_FIR3_ZN_11,HDZ_FIR3_ZN_12,HDZ_FIR3_ZN_13,HDZ_FIR3_ZN_14,HDZ_FIR3_ZN_15,HDZ_FIR3_ZN_16,HDZ_FIR3_ZN_17,HDZ_FIR3_ZN_18,HDZ_FIR3_ZN_19,HDZ_FIR3_ZN_20,HDZ_FIR3_ZN_21,HDZ_FIR3_ZN_22,HDZ_FIR3_ZN_23,HDZ_FIR3_ZN_24,HDZ_FIR3_ZN_25,HDZ_FIR3_ZN_26,HDZ_FIR3_ZN_27,HDZ_FIR3_ZN_28,HDZ_FIR3_ZN_29,HDZ_FIR3_ZN_30,HDZ_FIR3_ZN_31,HDZ_FIR3_ZN_32,HDZ_FIR3_ZN_33,HDZ_FIR3_ZN_34,HDZ_FIR3_ZN_35,HDZ_FIR3_ZN_36,HDZ_FIR3_ZN_37,HDZ_FIR3_ZN_38,HDZ_FIR3_ZN_39,HDZ_FIR3_ZN_40,HDZ_FIR3_ZN_41,HDZ_FIR3_ZN_42,HDZ_FIR3_ZN_43,HDZ_FIR3_ZN_44,HDZ_FIR3_ZN_45,HDZ_FIR3_ZN_46,HDZ_FIR3_ZN_47
//      PSKR_BI_HDZNA_PART_5_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14
//      PSKR_BI_HDZNA_PART_5_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1
//      PSKR_BI_HDZNA_PART_5_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N
//      PSKR_BI_HDZNA_PART_5_TABLE_TYPE            // S
#define PSKR_BI_HDZNA_PART_6                48030  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDZ_FIR4_ZN_0,HDZ_FIR4_ZN_1,HDZ_FIR4_ZN_2,HDZ_FIR4_ZN_3,HDZ_FIR4_ZN_4,HDZ_FIR4_ZN_5,HDZ_FIR4_ZN_6,HDZ_FIR4_ZN_7,HDZ_FIR4_ZN_8,HDZ_FIR4_ZN_9,HDZ_FIR4_ZN_10,HDZ_FIR4_ZN_11,HDZ_FIR4_ZN_12,HDZ_FIR4_ZN_13,HDZ_FIR4_ZN_14,HDZ_FIR4_ZN_15,HDZ_FIR4_ZN_16,HDZ_FIR4_ZN_17,HDZ_FIR4_ZN_18,HDZ_FIR4_ZN_19,HDZ_FIR4_ZN_20,HDZ_FIR4_ZN_21,HDZ_FIR4_ZN_22,HDZ_FIR4_ZN_23,HDZ_FIR4_ZN_24,HDZ_FIR4_ZN_25,HDZ_FIR4_ZN_26,HDZ_FIR4_ZN_27,HDZ_FIR4_ZN_28,HDZ_FIR4_ZN_29,HDZ_FIR4_ZN_30,HDZ_FIR4_ZN_31,HDZ_FIR4_ZN_32,HDZ_FIR4_ZN_33,HDZ_FIR4_ZN_34,HDZ_FIR4_ZN_35,HDZ_FIR4_ZN_36,HDZ_FIR4_ZN_37,HDZ_FIR4_ZN_38,HDZ_FIR4_ZN_39,HDZ_FIR4_ZN_40,HDZ_FIR4_ZN_41,HDZ_FIR4_ZN_42,HDZ_FIR4_ZN_43,HDZ_FIR4_ZN_44,HDZ_FIR4_ZN_45,HDZ_FIR4_ZN_46,HDZ_FIR4_ZN_47
//      PSKR_BI_HDZNA_PART_6_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14
//      PSKR_BI_HDZNA_PART_6_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1
//      PSKR_BI_HDZNA_PART_6_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N
//      PSKR_BI_HDZNA_PART_6_TABLE_TYPE            // S
#define PSKR_BI_HDZNA_PART_7                48031  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDZ_BPI_INDEX_1ST_ZN_0,HDZ_BPI_INDEX_1ST_ZN_1,HDZ_BPI_INDEX_1ST_ZN_2,HDZ_BPI_INDEX_1ST_ZN_3,HDZ_BPI_INDEX_1ST_ZN_4,HDZ_BPI_INDEX_1ST_ZN_5,HDZ_BPI_INDEX_1ST_ZN_6,HDZ_BPI_INDEX_1ST_ZN_7,HDZ_BPI_INDEX_1ST_ZN_8,HDZ_BPI_INDEX_1ST_ZN_9,HDZ_BPI_INDEX_1ST_ZN_10,HDZ_BPI_INDEX_1ST_ZN_11,HDZ_BPI_INDEX_1ST_ZN_12,HDZ_BPI_INDEX_1ST_ZN_13,HDZ_BPI_INDEX_1ST_ZN_14,HDZ_BPI_INDEX_1ST_ZN_15,HDZ_BPI_INDEX_1ST_ZN_16,HDZ_BPI_INDEX_1ST_ZN_17,HDZ_BPI_INDEX_1ST_ZN_18,HDZ_BPI_INDEX_1ST_ZN_19,HDZ_BPI_INDEX_1ST_ZN_20,HDZ_BPI_INDEX_1ST_ZN_21,HDZ_BPI_INDEX_1ST_ZN_22,HDZ_BPI_INDEX_1ST_ZN_23,HDZ_BPI_INDEX_1ST_ZN_24,HDZ_BPI_INDEX_1ST_ZN_25,HDZ_BPI_INDEX_1ST_ZN_26,HDZ_BPI_INDEX_1ST_ZN_27,HDZ_BPI_INDEX_1ST_ZN_28,HDZ_BPI_INDEX_1ST_ZN_29,HDZ_BPI_INDEX_1ST_ZN_30,HDZ_BPI_INDEX_1ST_ZN_31,HDZ_BPI_INDEX_1ST_ZN_32,HDZ_BPI_INDEX_1ST_ZN_33,HDZ_BPI_INDEX_1ST_ZN_34,HDZ_BPI_INDEX_1ST_ZN_35,HDZ_BPI_INDEX_1ST_ZN_36,HDZ_BPI_INDEX_1ST_ZN_37,HDZ_BPI_INDEX_1ST_ZN_38,HDZ_BPI_INDEX_1ST_ZN_39,HDZ_BPI_INDEX_1ST_ZN_40,HDZ_BPI_INDEX_1ST_ZN_41,HDZ_BPI_INDEX_1ST_ZN_42,HDZ_BPI_INDEX_1ST_ZN_43,HDZ_BPI_INDEX_1ST_ZN_44,HDZ_BPI_INDEX_1ST_ZN_45,HDZ_BPI_INDEX_1ST_ZN_46,HDZ_BPI_INDEX_1ST_ZN_47
//      PSKR_BI_HDZNA_PART_7_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23
//      PSKR_BI_HDZNA_PART_7_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1
//      PSKR_BI_HDZNA_PART_7_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N
//      PSKR_BI_HDZNA_PART_7_TABLE_TYPE            // S
#define PSKR_BI_HDZNA_PART_8                48032  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HDZ_BPI_INDEX_2ND_ZN_0,HDZ_BPI_INDEX_2ND_ZN_1,HDZ_BPI_INDEX_2ND_ZN_2,HDZ_BPI_INDEX_2ND_ZN_3,HDZ_BPI_INDEX_2ND_ZN_4,HDZ_BPI_INDEX_2ND_ZN_5,HDZ_BPI_INDEX_2ND_ZN_6,HDZ_BPI_INDEX_2ND_ZN_7,HDZ_BPI_INDEX_2ND_ZN_8,HDZ_BPI_INDEX_2ND_ZN_9,HDZ_BPI_INDEX_2ND_ZN_10,HDZ_BPI_INDEX_2ND_ZN_11,HDZ_BPI_INDEX_2ND_ZN_12,HDZ_BPI_INDEX_2ND_ZN_13,HDZ_BPI_INDEX_2ND_ZN_14,HDZ_BPI_INDEX_2ND_ZN_15,HDZ_BPI_INDEX_2ND_ZN_16,HDZ_BPI_INDEX_2ND_ZN_17,HDZ_BPI_INDEX_2ND_ZN_18,HDZ_BPI_INDEX_2ND_ZN_19,HDZ_BPI_INDEX_2ND_ZN_20,HDZ_BPI_INDEX_2ND_ZN_21,HDZ_BPI_INDEX_2ND_ZN_22,HDZ_BPI_INDEX_2ND_ZN_23,HDZ_BPI_INDEX_2ND_ZN_24,HDZ_BPI_INDEX_2ND_ZN_25,HDZ_BPI_INDEX_2ND_ZN_26,HDZ_BPI_INDEX_2ND_ZN_27,HDZ_BPI_INDEX_2ND_ZN_28,HDZ_BPI_INDEX_2ND_ZN_29,HDZ_BPI_INDEX_2ND_ZN_30,HDZ_BPI_INDEX_2ND_ZN_31,HDZ_BPI_INDEX_2ND_ZN_32,HDZ_BPI_INDEX_2ND_ZN_33,HDZ_BPI_INDEX_2ND_ZN_34,HDZ_BPI_INDEX_2ND_ZN_35,HDZ_BPI_INDEX_2ND_ZN_36,HDZ_BPI_INDEX_2ND_ZN_37,HDZ_BPI_INDEX_2ND_ZN_38,HDZ_BPI_INDEX_2ND_ZN_39,HDZ_BPI_INDEX_2ND_ZN_40,HDZ_BPI_INDEX_2ND_ZN_41,HDZ_BPI_INDEX_2ND_ZN_42,HDZ_BPI_INDEX_2ND_ZN_43,HDZ_BPI_INDEX_2ND_ZN_44,HDZ_BPI_INDEX_2ND_ZN_45,HDZ_BPI_INDEX_2ND_ZN_46,HDZ_BPI_INDEX_2ND_ZN_47
//      PSKR_BI_HDZNA_PART_8_COL_WIDTH             //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23
//      PSKR_BI_HDZNA_PART_8_COL_MASK              //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1
//      PSKR_BI_HDZNA_PART_8_COL_TYPES             //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N
//      PSKR_BI_HDZNA_PART_8_TABLE_TYPE            // S
#define PSKR_BI_HDZNA2_PART_1               48033  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,SCRIPT_VER,HDZ_SELECTED_FDT_ZN_0,HDZ_SELECTED_FDT_ZN_1,HDZ_SELECTED_FDT_ZN_2,HDZ_SELECTED_FDT_ZN_3,HDZ_SELECTED_FDT_ZN_4,HDZ_SELECTED_FDT_ZN_5,HDZ_SELECTED_FDT_ZN_6,HDZ_SELECTED_FDT_ZN_7,HDZ_SELECTED_FDT_ZN_8,HDZ_SELECTED_FDT_ZN_9,HDZ_SELECTED_FDT_ZN_10,HDZ_SELECTED_FDT_ZN_11,HDZ_SELECTED_FDT_ZN_12,HDZ_SELECTED_FDT_ZN_13,HDZ_SELECTED_FDT_ZN_14,HDZ_SELECTED_FDT_ZN_15,HDZ_SELECTED_FDT_ZN_16,HDZ_SELECTED_FDT_ZN_17,HDZ_SELECTED_FDT_ZN_18,HDZ_SELECTED_FDT_ZN_19,HDZ_SELECTED_FDT_ZN_20,HDZ_SELECTED_FDT_ZN_21,HDZ_SELECTED_FDT_ZN_22,HDZ_SELECTED_FDT_ZN_23,HDZ_SELECTED_FDT_ZN_24,HDZ_SELECTED_FDT_ZN_25,HDZ_SELECTED_FDT_ZN_26,HDZ_SELECTED_FDT_ZN_27,HDZ_SELECTED_FDT_ZN_28,HDZ_SELECTED_FDT_ZN_29,HDZ_SELECTED_FDT_ZN_30,HDZ_SELECTED_FDT_ZN_31,HDZ_SELECTED_FDT_ZN_32,HDZ_SELECTED_FDT_ZN_33,HDZ_SELECTED_FDT_ZN_34,HDZ_SELECTED_FDT_ZN_35,HDZ_SELECTED_FDT_ZN_36,HDZ_SELECTED_FDT_ZN_37,HDZ_SELECTED_FDT_ZN_38,HDZ_SELECTED_FDT_ZN_39,HDZ_SELECTED_FDT_ZN_40,HDZ_SELECTED_FDT_ZN_41,HDZ_SELECTED_FDT_ZN_42,HDZ_SELECTED_FDT_ZN_43,HDZ_SELECTED_FDT_ZN_44,HDZ_SELECTED_FDT_ZN_45,HDZ_SELECTED_FDT_ZN_46,HDZ_SELECTED_FDT_ZN_47
//      PSKR_BI_HDZNA2_PART_1_COL_WIDTH            //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,        10,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22
//      PSKR_BI_HDZNA2_PART_1_COL_MASK             //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,         1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1
//      PSKR_BI_HDZNA2_PART_1_COL_TYPES            //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,         V,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N
//      PSKR_BI_HDZNA2_PART_1_TABLE_TYPE           // S
#define PSKR_BI_HDZNA2_PART_2               48034  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,SCRIPT_VER,HDZ_PULSE_PARING_ZN_0,HDZ_PULSE_PARING_ZN_1,HDZ_PULSE_PARING_ZN_2,HDZ_PULSE_PARING_ZN_3,HDZ_PULSE_PARING_ZN_4,HDZ_PULSE_PARING_ZN_5,HDZ_PULSE_PARING_ZN_6,HDZ_PULSE_PARING_ZN_7,HDZ_PULSE_PARING_ZN_8,HDZ_PULSE_PARING_ZN_9,HDZ_PULSE_PARING_ZN_10,HDZ_PULSE_PARING_ZN_11,HDZ_PULSE_PARING_ZN_12,HDZ_PULSE_PARING_ZN_13,HDZ_PULSE_PARING_ZN_14,HDZ_PULSE_PARING_ZN_15,HDZ_PULSE_PARING_ZN_16,HDZ_PULSE_PARING_ZN_17,HDZ_PULSE_PARING_ZN_18,HDZ_PULSE_PARING_ZN_19,HDZ_PULSE_PARING_ZN_20,HDZ_PULSE_PARING_ZN_21,HDZ_PULSE_PARING_ZN_22,HDZ_PULSE_PARING_ZN_23,HDZ_PULSE_PARING_ZN_24,HDZ_PULSE_PARING_ZN_25,HDZ_PULSE_PARING_ZN_26,HDZ_PULSE_PARING_ZN_27,HDZ_PULSE_PARING_ZN_28,HDZ_PULSE_PARING_ZN_29,HDZ_PULSE_PARING_ZN_30,HDZ_PULSE_PARING_ZN_31,HDZ_PULSE_PARING_ZN_32,HDZ_PULSE_PARING_ZN_33,HDZ_PULSE_PARING_ZN_34,HDZ_PULSE_PARING_ZN_35,HDZ_PULSE_PARING_ZN_36,HDZ_PULSE_PARING_ZN_37,HDZ_PULSE_PARING_ZN_38,HDZ_PULSE_PARING_ZN_39,HDZ_PULSE_PARING_ZN_40,HDZ_PULSE_PARING_ZN_41,HDZ_PULSE_PARING_ZN_42,HDZ_PULSE_PARING_ZN_43,HDZ_PULSE_PARING_ZN_44,HDZ_PULSE_PARING_ZN_45,HDZ_PULSE_PARING_ZN_46,HDZ_PULSE_PARING_ZN_47
//      PSKR_BI_HDZNA2_PART_2_COL_WIDTH            //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,        10,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22
//      PSKR_BI_HDZNA2_PART_2_COL_MASK             //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,         1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1
//      PSKR_BI_HDZNA2_PART_2_COL_TYPES            //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,         V,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N,                     N
//      PSKR_BI_HDZNA2_PART_2_TABLE_TYPE           // S
#define PSKR_BI_HDZNA2_PART_3               48035  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,SCRIPT_VER,HDZ_10SBER_ZN_0,HDZ_10SBER_ZN_1,HDZ_10SBER_ZN_2,HDZ_10SBER_ZN_3,HDZ_10SBER_ZN_4,HDZ_10SBER_ZN_5,HDZ_10SBER_ZN_6,HDZ_10SBER_ZN_7,HDZ_10SBER_ZN_8,HDZ_10SBER_ZN_9,HDZ_10SBER_ZN_10,HDZ_10SBER_ZN_11,HDZ_10SBER_ZN_12,HDZ_10SBER_ZN_13,HDZ_10SBER_ZN_14,HDZ_10SBER_ZN_15,HDZ_10SBER_ZN_16,HDZ_10SBER_ZN_17,HDZ_10SBER_ZN_18,HDZ_10SBER_ZN_19,HDZ_10SBER_ZN_20,HDZ_10SBER_ZN_21,HDZ_10SBER_ZN_22,HDZ_10SBER_ZN_23,HDZ_10SBER_ZN_24,HDZ_10SBER_ZN_25,HDZ_10SBER_ZN_26,HDZ_10SBER_ZN_27,HDZ_10SBER_ZN_28,HDZ_10SBER_ZN_29,HDZ_10SBER_ZN_30,HDZ_10SBER_ZN_31,HDZ_10SBER_ZN_32,HDZ_10SBER_ZN_33,HDZ_10SBER_ZN_34,HDZ_10SBER_ZN_35,HDZ_10SBER_ZN_36,HDZ_10SBER_ZN_37,HDZ_10SBER_ZN_38,HDZ_10SBER_ZN_39,HDZ_10SBER_ZN_40,HDZ_10SBER_ZN_41,HDZ_10SBER_ZN_42,HDZ_10SBER_ZN_43,HDZ_10SBER_ZN_44,HDZ_10SBER_ZN_45,HDZ_10SBER_ZN_46,HDZ_10SBER_ZN_47,HDZ_10SBER_ZN_NA,HDZ_10SBER_ZN_TOTAL
//      PSKR_BI_HDZNA2_PART_3_COL_WIDTH            //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,        10,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,              16,                 19
//      PSKR_BI_HDZNA2_PART_3_COL_MASK             //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,         1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,               1,                  1
//      PSKR_BI_HDZNA2_PART_3_COL_TYPES            //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,         V,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,               N,                  N
//      PSKR_BI_HDZNA2_PART_3_TABLE_TYPE           // S
#define PSKR_BI_HDZNA2_PART_4               48036  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,SCRIPT_VER,HDZ_WWBER_ZN_0,HDZ_WWBER_ZN_1,HDZ_WWBER_ZN_2,HDZ_WWBER_ZN_3,HDZ_WWBER_ZN_4,HDZ_WWBER_ZN_5,HDZ_WWBER_ZN_6,HDZ_WWBER_ZN_7,HDZ_WWBER_ZN_8,HDZ_WWBER_ZN_9,HDZ_WWBER_ZN_10,HDZ_WWBER_ZN_11,HDZ_WWBER_ZN_12,HDZ_WWBER_ZN_13,HDZ_WWBER_ZN_14,HDZ_WWBER_ZN_15,HDZ_WWBER_ZN_16,HDZ_WWBER_ZN_17,HDZ_WWBER_ZN_18,HDZ_WWBER_ZN_19,HDZ_WWBER_ZN_20,HDZ_WWBER_ZN_21,HDZ_WWBER_ZN_22,HDZ_WWBER_ZN_23,HDZ_WWBER_ZN_24,HDZ_WWBER_ZN_25,HDZ_WWBER_ZN_26,HDZ_WWBER_ZN_27,HDZ_WWBER_ZN_28,HDZ_WWBER_ZN_29,HDZ_WWBER_ZN_30,HDZ_WWBER_ZN_31,HDZ_WWBER_ZN_32,HDZ_WWBER_ZN_33,HDZ_WWBER_ZN_34,HDZ_WWBER_ZN_35,HDZ_WWBER_ZN_36,HDZ_WWBER_ZN_37,HDZ_WWBER_ZN_38,HDZ_WWBER_ZN_39,HDZ_WWBER_ZN_40,HDZ_WWBER_ZN_41,HDZ_WWBER_ZN_42,HDZ_WWBER_ZN_43,HDZ_WWBER_ZN_44,HDZ_WWBER_ZN_45,HDZ_WWBER_ZN_46,HDZ_WWBER_ZN_47,HDZ_WWBER_ZN_NA,HDZ_WWBER_ZN_TOTAL
//      PSKR_BI_HDZNA2_PART_4_COL_WIDTH            //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,        10,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,                18
//      PSKR_BI_HDZNA2_PART_4_COL_MASK             //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,         1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,                 1
//      PSKR_BI_HDZNA2_PART_4_COL_TYPES            //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,         V,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,                 N
//      PSKR_BI_HDZNA2_PART_4_TABLE_TYPE           // S
#define PSKR_BI_HDZNA2_PART_5               48037  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,SCRIPT_VER,HDZ_DSBER_ZN_0,HDZ_DSBER_ZN_1,HDZ_DSBER_ZN_2,HDZ_DSBER_ZN_3,HDZ_DSBER_ZN_4,HDZ_DSBER_ZN_5,HDZ_DSBER_ZN_6,HDZ_DSBER_ZN_7,HDZ_DSBER_ZN_8,HDZ_DSBER_ZN_9,HDZ_DSBER_ZN_10,HDZ_DSBER_ZN_11,HDZ_DSBER_ZN_12,HDZ_DSBER_ZN_13,HDZ_DSBER_ZN_14,HDZ_DSBER_ZN_15,HDZ_DSBER_ZN_16,HDZ_DSBER_ZN_17,HDZ_DSBER_ZN_18,HDZ_DSBER_ZN_19,HDZ_DSBER_ZN_20,HDZ_DSBER_ZN_21,HDZ_DSBER_ZN_22,HDZ_DSBER_ZN_23,HDZ_DSBER_ZN_24,HDZ_DSBER_ZN_25,HDZ_DSBER_ZN_26,HDZ_DSBER_ZN_27,HDZ_DSBER_ZN_28,HDZ_DSBER_ZN_29,HDZ_DSBER_ZN_30,HDZ_DSBER_ZN_31,HDZ_DSBER_ZN_32,HDZ_DSBER_ZN_33,HDZ_DSBER_ZN_34,HDZ_DSBER_ZN_35,HDZ_DSBER_ZN_36,HDZ_DSBER_ZN_37,HDZ_DSBER_ZN_38,HDZ_DSBER_ZN_39,HDZ_DSBER_ZN_40,HDZ_DSBER_ZN_41,HDZ_DSBER_ZN_42,HDZ_DSBER_ZN_43,HDZ_DSBER_ZN_44,HDZ_DSBER_ZN_45,HDZ_DSBER_ZN_46,HDZ_DSBER_ZN_47,HDZ_DSBER_ZN_NA,HDZ_DSBER_ZN_TOTAL
//      PSKR_BI_HDZNA2_PART_5_COL_WIDTH            //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,        10,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,             15,                18
//      PSKR_BI_HDZNA2_PART_5_COL_MASK             //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,         1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,              1,                 1
//      PSKR_BI_HDZNA2_PART_5_COL_TYPES            //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,         V,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,              N,                 N
//      PSKR_BI_HDZNA2_PART_5_TABLE_TYPE           // S
#define PSKR_BI_HDZNA2_PART_6               48038  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,SCRIPT_VER,HDZ_ITR_OFF_10SBER_ZN_0,HDZ_ITR_OFF_10SBER_ZN_1,HDZ_ITR_OFF_10SBER_ZN_2,HDZ_ITR_OFF_10SBER_ZN_3,HDZ_ITR_OFF_10SBER_ZN_4,HDZ_ITR_OFF_10SBER_ZN_5,HDZ_ITR_OFF_10SBER_ZN_6,HDZ_ITR_OFF_10SBER_ZN_7,HDZ_ITR_OFF_10SBER_ZN_8,HDZ_ITR_OFF_10SBER_ZN_9,HDZ_ITR_OFF_10SBER_ZN_10,HDZ_ITR_OFF_10SBER_ZN_11,HDZ_ITR_OFF_10SBER_ZN_12,HDZ_ITR_OFF_10SBER_ZN_13,HDZ_ITR_OFF_10SBER_ZN_14,HDZ_ITR_OFF_10SBER_ZN_15,HDZ_ITR_OFF_10SBER_ZN_16,HDZ_ITR_OFF_10SBER_ZN_17,HDZ_ITR_OFF_10SBER_ZN_18,HDZ_ITR_OFF_10SBER_ZN_19,HDZ_ITR_OFF_10SBER_ZN_20,HDZ_ITR_OFF_10SBER_ZN_21,HDZ_ITR_OFF_10SBER_ZN_22,HDZ_ITR_OFF_10SBER_ZN_23,HDZ_ITR_OFF_10SBER_ZN_24,HDZ_ITR_OFF_10SBER_ZN_25,HDZ_ITR_OFF_10SBER_ZN_26,HDZ_ITR_OFF_10SBER_ZN_27,HDZ_ITR_OFF_10SBER_ZN_28,HDZ_ITR_OFF_10SBER_ZN_29,HDZ_ITR_OFF_10SBER_ZN_30,HDZ_ITR_OFF_10SBER_ZN_31,HDZ_ITR_OFF_10SBER_ZN_32,HDZ_ITR_OFF_10SBER_ZN_33,HDZ_ITR_OFF_10SBER_ZN_34,HDZ_ITR_OFF_10SBER_ZN_35,HDZ_ITR_OFF_10SBER_ZN_36,HDZ_ITR_OFF_10SBER_ZN_37,HDZ_ITR_OFF_10SBER_ZN_38,HDZ_ITR_OFF_10SBER_ZN_39,HDZ_ITR_OFF_10SBER_ZN_40,HDZ_ITR_OFF_10SBER_ZN_41,HDZ_ITR_OFF_10SBER_ZN_42,HDZ_ITR_OFF_10SBER_ZN_43,HDZ_ITR_OFF_10SBER_ZN_44,HDZ_ITR_OFF_10SBER_ZN_45,HDZ_ITR_OFF_10SBER_ZN_46,HDZ_ITR_OFF_10SBER_ZN_47
//      PSKR_BI_HDZNA2_PART_6_COL_WIDTH            //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,        10,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                     23,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24,                      24
//      PSKR_BI_HDZNA2_PART_6_COL_MASK             //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,         1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                      1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1,                       1
//      PSKR_BI_HDZNA2_PART_6_COL_TYPES            //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,         V,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                      N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N,                       N
//      PSKR_BI_HDZNA2_PART_6_TABLE_TYPE           // S
#define PSKR_BI_HDZNA2_PART_7               48039  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,SCRIPT_VER,HDZ_RW_OFFSET_ZN_0,HDZ_RW_OFFSET_ZN_1,HDZ_RW_OFFSET_ZN_2,HDZ_RW_OFFSET_ZN_3,HDZ_RW_OFFSET_ZN_4,HDZ_RW_OFFSET_ZN_5,HDZ_RW_OFFSET_ZN_6,HDZ_RW_OFFSET_ZN_7,HDZ_RW_OFFSET_ZN_8,HDZ_RW_OFFSET_ZN_9,HDZ_RW_OFFSET_ZN_10,HDZ_RW_OFFSET_ZN_11,HDZ_RW_OFFSET_ZN_12,HDZ_RW_OFFSET_ZN_13,HDZ_RW_OFFSET_ZN_14,HDZ_RW_OFFSET_ZN_15,HDZ_RW_OFFSET_ZN_16,HDZ_RW_OFFSET_ZN_17,HDZ_RW_OFFSET_ZN_18,HDZ_RW_OFFSET_ZN_19,HDZ_RW_OFFSET_ZN_20,HDZ_RW_OFFSET_ZN_21,HDZ_RW_OFFSET_ZN_22,HDZ_RW_OFFSET_ZN_23,HDZ_RW_OFFSET_ZN_24,HDZ_RW_OFFSET_ZN_25,HDZ_RW_OFFSET_ZN_26,HDZ_RW_OFFSET_ZN_27,HDZ_RW_OFFSET_ZN_28,HDZ_RW_OFFSET_ZN_29,HDZ_RW_OFFSET_ZN_30,HDZ_RW_OFFSET_ZN_31,HDZ_RW_OFFSET_ZN_32,HDZ_RW_OFFSET_ZN_33,HDZ_RW_OFFSET_ZN_34,HDZ_RW_OFFSET_ZN_35,HDZ_RW_OFFSET_ZN_36,HDZ_RW_OFFSET_ZN_37,HDZ_RW_OFFSET_ZN_38,HDZ_RW_OFFSET_ZN_39,HDZ_RW_OFFSET_ZN_40,HDZ_RW_OFFSET_ZN_41,HDZ_RW_OFFSET_ZN_42,HDZ_RW_OFFSET_ZN_43,HDZ_RW_OFFSET_ZN_44,HDZ_RW_OFFSET_ZN_45,HDZ_RW_OFFSET_ZN_46,HDZ_RW_OFFSET_ZN_47,HDZ_RW_OFFSET_ZN_MC
//      PSKR_BI_HDZNA2_PART_7_COL_WIDTH            //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,        10,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19,                 19
//      PSKR_BI_HDZNA2_PART_7_COL_MASK             //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,         1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1,                  1
//      PSKR_BI_HDZNA2_PART_7_COL_TYPES            //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,         V,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N,                  N
//      PSKR_BI_HDZNA2_PART_7_TABLE_TYPE           // S
#define PSKR_BI_HDZNA2_PART_8               48040  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,SCRIPT_VER,HDZ_EWAC_ZN_0,HDZ_EWAC_ZN_1,HDZ_EWAC_ZN_2,HDZ_EWAC_ZN_3,HDZ_EWAC_ZN_4,HDZ_EWAC_ZN_5,HDZ_EWAC_ZN_6,HDZ_EWAC_ZN_7,HDZ_EWAC_ZN_8,HDZ_EWAC_ZN_9,HDZ_EWAC_ZN_10,HDZ_EWAC_ZN_11,HDZ_EWAC_ZN_12,HDZ_EWAC_ZN_13,HDZ_EWAC_ZN_14,HDZ_EWAC_ZN_15,HDZ_EWAC_ZN_16,HDZ_EWAC_ZN_17,HDZ_EWAC_ZN_18,HDZ_EWAC_ZN_19,HDZ_EWAC_ZN_20,HDZ_EWAC_ZN_21,HDZ_EWAC_ZN_22,HDZ_EWAC_ZN_23,HDZ_EWAC_ZN_24,HDZ_EWAC_ZN_25,HDZ_EWAC_ZN_26,HDZ_EWAC_ZN_27,HDZ_EWAC_ZN_28,HDZ_EWAC_ZN_29,HDZ_EWAC_ZN_30,HDZ_EWAC_ZN_31,HDZ_EWAC_ZN_32,HDZ_EWAC_ZN_33,HDZ_EWAC_ZN_34,HDZ_EWAC_ZN_35,HDZ_EWAC_ZN_36,HDZ_EWAC_ZN_37,HDZ_EWAC_ZN_38,HDZ_EWAC_ZN_39,HDZ_EWAC_ZN_40,HDZ_EWAC_ZN_41,HDZ_EWAC_ZN_42,HDZ_EWAC_ZN_43,HDZ_EWAC_ZN_44,HDZ_EWAC_ZN_45,HDZ_EWAC_ZN_46,HDZ_EWAC_ZN_47
//      PSKR_BI_HDZNA2_PART_8_COL_WIDTH            //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,        10,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14,            14
//      PSKR_BI_HDZNA2_PART_8_COL_MASK             //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,         1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1,             1
//      PSKR_BI_HDZNA2_PART_8_COL_TYPES            //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,         V,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N,             N
//      PSKR_BI_HDZNA2_PART_8_TABLE_TYPE           // S
#define PSKR_BI_HDZNA2_PART_9               48041  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,SCRIPT_VER,HDZ_PERR_RAW_RRO_ZN_0,HDZ_PERR_RAW_RRO_ZN_1,HDZ_PERR_RAW_RRO_ZN_2,HDZ_PERR_RAW_RRO_ZN_3,HDZ_PERR_RAW_RRO_ZN_4,HDZ_PERR_RAW_RRO_ZN_5,HDZ_PERR_RAW_RRO_ZN_6,HDZ_PERR_RAW_RRO_ZN_7,HDZ_PERR_RAW_RRO_ZN_8,HDZ_PERR_RAW_RRO_ZN_9,HDZ_PERR_RAW_RRO_ZN_10,HDZ_PERR_RAW_RRO_ZN_11,HDZ_PERR_RAW_TOT_ZN_0,HDZ_PERR_RAW_TOT_ZN_1,HDZ_PERR_RAW_TOT_ZN_2,HDZ_PERR_RAW_TOT_ZN_3,HDZ_PERR_RAW_TOT_ZN_4,HDZ_PERR_RAW_TOT_ZN_5,HDZ_PERR_RAW_TOT_ZN_6,HDZ_PERR_RAW_TOT_ZN_7,HDZ_PERR_RAW_TOT_ZN_8,HDZ_PERR_RAW_TOT_ZN_9,HDZ_PERR_RAW_TOT_ZN_10,HDZ_PERR_RAW_TOT_ZN_11,HDZ_PRE_SGRAY_ZN_0,HDZ_PRE_SGRAY_ZN_1,HDZ_PRE_SGRAY_ZN_2,HDZ_PRE_SGRAY_ZN_3,HDZ_PRE_SGRAY_ZN_4,HDZ_PRE_SGRAY_ZN_5,HDZ_PRE_SGRAY_ZN_6,HDZ_PRE_SGRAY_ZN_7,HDZ_PRE_SGRAY_ZN_8,HDZ_PRE_SGRAY_ZN_9,HDZ_PRE_SGRAY_ZN_10,HDZ_PRE_SGRAY_ZN_11,HDZ_PRE_SGRAY_ZN_12,HDZ_PRE_SGRAY_ZN_13,HDZ_PRE_SGRAY_ZN_14,HDZ_PRE_SGRAY_ZN_15
//      PSKR_BI_HDZNA2_PART_9_COL_WIDTH            //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,        10,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                    22,                    22,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                   21,                    22,                    22,                18,                18,                18,                18,                18,                18,                18,                18,                18,                18,                 19,                 19,                 19,                 19,                 19,                 19
//      PSKR_BI_HDZNA2_PART_9_COL_MASK             //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,         1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                     1,                     1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                    1,                     1,                     1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                  1,                  1,                  1,                  1,                  1,                  1
//      PSKR_BI_HDZNA2_PART_9_COL_TYPES            //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,         V,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                     N,                     N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                    N,                     N,                     N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                  N,                  N,                  N,                  N,                  N,                  N
//      PSKR_BI_HDZNA2_PART_9_TABLE_TYPE           // S
#define PSKR_BI_GRADEBI_PART_1              48042  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,SET_GRADE_G0_G9,SET_GRADE_A_C,SET_SCORE,BER_AVG_VALUE,BER_AVG_GRADE,BER_AVG_WEIGHT,BER_AVG_TYPE,BER_MIN_VALUE,BER_MIN_GRADE,BER_MIN_WEIGHT,BER_MIN_TYPE,BER_DELTA_VALUE,BER_DELTA_GRADE,BER_DELTA_WEIGHT,BER_DELTA_TYPE,PARA_BER_GAP_VALUE,PARA_BER_GAP_GRADE,PARA_BER_GAP_WEIGHT,PARA_BER_GAP_TYPE,FODR_DELTA_VALUE,FODR_DELTA_GRADE,FODR_DELTA_WEIGHT,FODR_DELTA_TYPE,FODW_DELTA_VALUE,FODW_DELTA_GRADE,FODW_DELTA_WEIGHT,FODW_DELTA_TYPE,DEFECT_TOTAL_VALUE,DEFECT_TOTAL_GRADE,DEFECT_TOTAL_WEIGHT,DEFECT_TOTAL_TYPE,DEFECT_ZONE_VALUE,DEFECT_ZONE_GRADE,DEFECT_ZONE_WEIGHT,DEFECT_ZONE_TYPE,DEFECT_TA_VALUE,DEFECT_TA_GRADE,DEFECT_TA_WEIGHT,DEFECT_TA_TYPE,SERVO_DEFECT_VALUE,SERVO_DEFECT_GRADE,SERVO_DEFECT_WEIGHT,SERVO_DEFECT_TYPE,TRACK_DEFECT_VALUE,TRACK_DEFECT_GRADE,TRACK_DEFECT_WEIGHT,TRACK_DEFECT_TYPE,UP_DOWN_FH_GAP_VALUE,UP_DOWN_FH_GAP_GRADE,UP_DOWN_FH_GAP_WEIGHT,UP_DOWN_FH_GAP_TYPE
//      PSKR_BI_GRADEBI_PART_1_COL_WIDTH           //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,             15,           13,        9,           13,           13,            14,          12,           13,           13,            14,          12,             15,             15,              16,            14,                18,                18,                 19,               17,              16,              16,               17,             15,              16,              16,               17,             15,                18,                18,                 19,               17,               17,               17,                18,              16,             15,             15,              16,            14,                18,                18,                 19,               17,                18,                18,                 19,               17,                  20,                  20,                   21,                 19
//      PSKR_BI_GRADEBI_PART_1_COL_MASK            //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,              1,            1,        1,            1,            1,             1,           1,            1,            1,             1,           1,              1,              1,               1,             1,                 1,                 1,                  1,                1,               1,               1,                1,              1,               1,               1,                1,              1,                 1,                 1,                  1,                1,                1,                1,                 1,               1,              1,              1,               1,             1,                 1,                 1,                  1,                1,                 1,                 1,                  1,                1,                   1,                   1,                    1,                  1
//      PSKR_BI_GRADEBI_PART_1_COL_TYPES           //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,              V,            V,        N,            N,            V,             N,           N,            N,            V,             N,           N,              N,              V,               N,             N,                 N,                 V,                  N,                N,               N,               V,                N,              N,               N,               V,                N,              N,                 N,                 V,                  N,                N,                N,                V,                 N,               N,              N,              V,               N,             N,                 N,                 V,                  N,                N,                 N,                 V,                  N,                N,                   N,                   V,                    N,                  N
//      PSKR_BI_GRADEBI_PART_1_TABLE_TYPE          // S
#define PSKR_BI_GRADEBI_PART_2              48043  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,FH_MAX_VALUE,FH_MAX_GRADE,FH_MAX_WEIGHT,FH_MAX_TYPE,FH_MIN_VALUE,FH_MIN_GRADE,FH_MIN_WEIGHT,FH_MIN_TYPE,TOTAL_PES_VALUE,TOTAL_PES_GRADE,TOTAL_PES_WEIGHT,TOTAL_PES_TYPE,PES_GAP_VALUE,PES_GAP_GRADE,PES_GAP_WEIGHT,PES_GAP_TYPE,CAPACITY_HEAD_GAP_VALUE,CAPACITY_HEAD_GAP_GRADE,CAPACITY_HEAD_GAP_WEIGHT,CAPACITY_HEAD_GAP_TYPE,RESONANCE_VALUE,RESONANCE_GRADE,RESONANCE_WEIGHT,RESONANCE_TYPE,LATCH_FORCE_VALUE,LATCH_FORCE_GRADE,LATCH_FORCE_WEIGHT,LATCH_FORCE_TYPE,WC_1_VALUE,WC_1_GRADE,WC_1_WEIGHT,WC_1_TYPE,WC_2_VALUE,WC_2_GRADE,WC_2_WEIGHT,WC_2_TYPE,WC_3_VALUE,WC_3_GRADE,WC_3_WEIGHT,WC_3_TYPE,WC_4_VALUE,WC_4_GRADE,WC_4_WEIGHT,WC_4_TYPE,WC_GAP_1_VALUE,WC_GAP_1_GRADE,WC_GAP_1_WEIGHT,WC_GAP_1_TYPE,WC_GAP_2_VALUE,WC_GAP_2_GRADE,WC_GAP_2_WEIGHT,WC_GAP_2_TYPE
//      PSKR_BI_GRADEBI_PART_2_COL_WIDTH           //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,          12,          12,           13,         11,          12,          12,           13,         11,             15,             15,              16,            14,           13,           13,            14,          12,                     23,                     23,                      24,                    22,             15,             15,              16,            14,               17,               17,                18,              16,        10,        10,         11,        9,        10,        10,         11,        9,        10,        10,         11,        9,        10,        10,         11,        9,            14,            14,             15,           13,            14,            14,             15,           13
//      PSKR_BI_GRADEBI_PART_2_COL_MASK            //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,           1,           1,            1,          1,           1,           1,            1,          1,              1,              1,               1,             1,            1,            1,             1,           1,                      1,                      1,                       1,                     1,              1,              1,               1,             1,                1,                1,                 1,               1,         1,         1,          1,        1,         1,         1,          1,        1,         1,         1,          1,        1,         1,         1,          1,        1,             1,             1,              1,            1,             1,             1,              1,            1
//      PSKR_BI_GRADEBI_PART_2_COL_TYPES           //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,           N,           V,            N,          N,           N,           V,            N,          N,              N,              V,               N,             N,            N,            V,             N,           N,                      N,                      V,                       N,                     N,              N,              V,               N,             N,                N,                V,                 N,               N,         N,         V,          N,        N,         N,         V,          N,        N,         N,         V,          N,        N,         N,         V,          N,        N,             N,             V,              N,            N,             N,             V,              N,            N
//      PSKR_BI_GRADEBI_PART_2_TABLE_TYPE          // S
#define PSKR_BI_GRADEBI_PART_3              48044  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,WC_GAP_3_VALUE,WC_GAP_3_GRADE,WC_GAP_3_WEIGHT,WC_GAP_3_TYPE,WC_GAP_4_VALUE,WC_GAP_4_GRADE,WC_GAP_4_WEIGHT,WC_GAP_4_TYPE,DATA_GAIN_1_VALUE,DATA_GAIN_1_GRADE,DATA_GAIN_1_WEIGHT,DATA_GAIN_1_TYPE,DATA_GAIN_2_VALUE,DATA_GAIN_2_GRADE,DATA_GAIN_2_WEIGHT,DATA_GAIN_2_TYPE,DATA_GAIN_3_VALUE,DATA_GAIN_3_GRADE,DATA_GAIN_3_WEIGHT,DATA_GAIN_3_TYPE,DATA_GAIN_4_VALUE,DATA_GAIN_4_GRADE,DATA_GAIN_4_WEIGHT,DATA_GAIN_4_TYPE,SERVO_GAIN_1_VALUE,SERVO_GAIN_1_GRADE,SERVO_GAIN_1_WEIGHT,SERVO_GAIN_1_TYPE,SERVO_GAIN_2_VALUE,SERVO_GAIN_2_GRADE,SERVO_GAIN_2_WEIGHT,SERVO_GAIN_2_TYPE,SERVO_GAIN_3_VALUE,SERVO_GAIN_3_GRADE,SERVO_GAIN_3_WEIGHT,SERVO_GAIN_3_TYPE,SERVO_GAIN_4_VALUE,SERVO_GAIN_4_GRADE,SERVO_GAIN_4_WEIGHT,SERVO_GAIN_4_TYPE,AV_SCAN_100MS_VALUE,AV_SCAN_100MS_GRADE,AV_SCAN_100MS_WEIGHT,AV_SCAN_100MS_TYPE,AV_SCAN_270MS_VALUE,AV_SCAN_270MS_GRADE,AV_SCAN_270MS_WEIGHT,AV_SCAN_270MS_TYPE,ALARM_COUNT_VALUE,ALARM_COUNT_GRADE,ALARM_COUNT_WEIGHT,ALARM_COUNT_TYPE
//      PSKR_BI_GRADEBI_PART_3_COL_WIDTH           //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,            14,            14,             15,           13,            14,            14,             15,           13,               17,               17,                18,              16,               17,               17,                18,              16,               17,               17,                18,              16,               17,               17,                18,              16,                18,                18,                 19,               17,                18,                18,                 19,               17,                18,                18,                 19,               17,                18,                18,                 19,               17,                 19,                 19,                  20,                18,                 19,                 19,                  20,                18,               17,               17,                18,              16
//      PSKR_BI_GRADEBI_PART_3_COL_MASK            //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,             1,             1,              1,            1,             1,             1,              1,            1,                1,                1,                 1,               1,                1,                1,                 1,               1,                1,                1,                 1,               1,                1,                1,                 1,               1,                 1,                 1,                  1,                1,                 1,                 1,                  1,                1,                 1,                 1,                  1,                1,                 1,                 1,                  1,                1,                  1,                  1,                   1,                 1,                  1,                  1,                   1,                 1,                1,                1,                 1,               1
//      PSKR_BI_GRADEBI_PART_3_COL_TYPES           //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,             N,             V,              N,            N,             N,             V,              N,            N,                N,                V,                 N,               N,                N,                V,                 N,               N,                N,                V,                 N,               N,                N,                V,                 N,               N,                 N,                 V,                  N,                N,                 N,                 V,                  N,                N,                 N,                 V,                  N,                N,                 N,                 V,                  N,                N,                  N,                  V,                   N,                 N,                  N,                  V,                   N,                 N,                N,                V,                 N,               N
//      PSKR_BI_GRADEBI_PART_3_TABLE_TYPE          // S
#define PSKR_BI_GRADEBI_PART_4              48045  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,LOADING_FRICTION_VALUE,LOADING_FRICTION_GRADE,LOADING_FRICTION_WEIGHT,LOADING_FRICTION_TYPE,SHOCK_COUNT_VALUE,SHOCK_COUNT_GRADE,SHOCK_COUNT_WEIGHT,SHOCK_COUNT_TYPE,DOWNSIZING_FLAG_VALUE,DOWNSIZING_FLAG_GRADE,DOWNSIZING_FLAG_WEIGHT,DOWNSIZING_FLAG_TYPE,FT_RETRY_VALUE,FT_RETRY_GRADE,FT_RETRY_WEIGHT,FT_RETRY_TYPE,FT_ADD_DEFECT_VALUE,FT_ADD_DEFECT_GRADE,FT_ADD_DEFECT_WEIGHT,FT_ADD_DEFECT_TYPE,EMER_UNLOAD_SPEED_VALUE,EMER_UNLOAD_SPEED_GRADE,EMER_UNLOAD_SPEED_WEIGHT,EMER_UNLOAD_SPEED_TYPE,WC_H_1_VALUE,WC_H_1_GRADE,WC_H_1_WEIGHT,WC_H_1_TYPE,WC_H_2_VALUE,WC_H_2_GRADE,WC_H_2_WEIGHT,WC_H_2_TYPE,WC_H_3_VALUE,WC_H_3_GRADE,WC_H_3_WEIGHT,WC_H_3_TYPE,WC_H_4_VALUE,WC_H_4_GRADE,WC_H_4_WEIGHT,WC_H_4_TYPE,REF_BER_VALUE,REF_BER_GRADE,REF_BER_WEIGHT,REF_BER_TYPE,OPT_TPI_VALUE,OPT_TPI_GRADE,OPT_TPI_WEIGHT,OPT_TPI_TYPE,OFODR_VALUE,OFODR_GRADE,OFODR_WEIGHT,OFODR_TYPE
//      PSKR_BI_GRADEBI_PART_4_COL_WIDTH           //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,                    22,                    22,                     23,                   21,               17,               17,                18,              16,                   21,                   21,                    22,                  20,            14,            14,             15,           13,                 19,                 19,                  20,                18,                     23,                     23,                      24,                    22,          12,          12,           13,         11,          12,          12,           13,         11,          12,          12,           13,         11,          12,          12,           13,         11,           13,           13,            14,          12,           13,           13,            14,          12,         11,         11,          12,        10
//      PSKR_BI_GRADEBI_PART_4_COL_MASK            //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,                     1,                     1,                      1,                    1,                1,                1,                 1,               1,                    1,                    1,                     1,                   1,             1,             1,              1,            1,                  1,                  1,                   1,                 1,                      1,                      1,                       1,                     1,           1,           1,            1,          1,           1,           1,            1,          1,           1,           1,            1,          1,           1,           1,            1,          1,            1,            1,             1,           1,            1,            1,             1,           1,          1,          1,           1,         1
//      PSKR_BI_GRADEBI_PART_4_COL_TYPES           //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,                     N,                     V,                      N,                    N,                N,                V,                 N,               N,                    N,                    V,                     N,                   N,             N,             V,              N,            N,                  N,                  V,                   N,                 N,                      N,                      V,                       N,                     N,           N,           V,            N,          N,           N,           V,            N,          N,           N,           V,            N,          N,           N,           V,            N,          N,            N,            V,             N,           N,            N,            V,             N,           N,          N,          V,           N,         N
//      PSKR_BI_GRADEBI_PART_4_TABLE_TYPE          // S
#define PSKR_BI_GRADEBI_PART_5              48046  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,OFODW_VALUE,OFODW_GRADE,OFODW_WEIGHT,OFODW_TYPE,ATW_BER_VALUE,ATW_BER_GRADE,ATW_BER_WEIGHT,ATW_BER_TYPE,NP_OFFSET_VALUE,NP_OFFSET_GRADE,NP_OFFSET_WEIGHT,NP_OFFSET_TYPE,RW_OFFSET_VALUE,RW_OFFSET_GRADE,RW_OFFSET_WEIGHT,RW_OFFSET_TYPE,DEFECT_ZONE_MAX2_VALUE,DEFECT_ZONE_MAX2_GRADE,DEFECT_ZONE_MAX2_WEIGHT,DEFECT_ZONE_MAX2_TYPE,ATW_CSM_VALUE,ATW_CSM_GRADE,ATW_CSM_WEIGHT,ATW_CSM_TYPE,BPI_DIFFERENCE_VALUE,BPI_DIFFERENCE_GRADE,BPI_DIFFERENCE_WEIGHT,BPI_DIFFERENCE_TYPE,OFODR_MAX_VALUE,OFODR_MAX_GRADE,OFODR_MAX_WEIGHT,OFODR_MAX_TYPE,TPI_CRITERIA_VALUE,TPI_CRITERIA_GRADE,TPI_CRITERIA_WEIGHT,TPI_CRITERIA_TYPE,FT_ATW_CNT_VALUE,FT_ATW_CNT_GRADE,FT_ATW_CNT_WEIGHT,FT_ATW_CNT_TYPE,TARGET_BER_VALUE,TARGET_BER_GRADE,TARGET_BER_WEIGHT,TARGET_BER_TYPE,TARGET_CL_R_VALUE,TARGET_CL_R_GRADE,TARGET_CL_R_WEIGHT,TARGET_CL_R_TYPE,TARGET_CL_WEIGHT_VALUE,TARGET_CL_WEIGHT_GRADE,TARGET_CL_WEIGHT_WEIGHT,TARGET_CL_WEIGHT_TYPE
//      PSKR_BI_GRADEBI_PART_5_COL_WIDTH           //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,         11,         11,          12,        10,           13,           13,            14,          12,             15,             15,              16,            14,             15,             15,              16,            14,                    22,                    22,                     23,                   21,           13,           13,            14,          12,                  20,                  20,                   21,                 19,             15,             15,              16,            14,                18,                18,                 19,               17,              16,              16,               17,             15,              16,              16,               17,             15,               17,               17,                18,              16,                    22,                    22,                     23,                   21
//      PSKR_BI_GRADEBI_PART_5_COL_MASK            //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,          1,          1,           1,         1,            1,            1,             1,           1,              1,              1,               1,             1,              1,              1,               1,             1,                     1,                     1,                      1,                    1,            1,            1,             1,           1,                   1,                   1,                    1,                  1,              1,              1,               1,             1,                 1,                 1,                  1,                1,               1,               1,                1,              1,               1,               1,                1,              1,                1,                1,                 1,               1,                     1,                     1,                      1,                    1
//      PSKR_BI_GRADEBI_PART_5_COL_TYPES           //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,          N,          V,           N,         N,            N,            V,             N,           N,              N,              V,               N,             N,              N,              V,               N,             N,                     N,                     V,                      N,                    N,            N,            V,             N,           N,                   N,                   V,                    N,                  N,              N,              V,               N,             N,                 N,                 V,                  N,                N,               N,               V,                N,              N,               N,               V,                N,              N,                N,                V,                 N,               N,                     N,                     V,                      N,                    N
//      PSKR_BI_GRADEBI_PART_5_TABLE_TYPE          // S
#define PSKR_BI_GRADEBI_PART_6              48047  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,BIAS_DIFF_OD_MAX_VALUE,BIAS_DIFF_OD_MAX_GRADE,BIAS_DIFF_OD_MAX_WEIGHT,BIAS_DIFF_OD_MAX_TYPE,BIAS_DIFF_ID_MAX_VALUE,BIAS_DIFF_ID_MAX_GRADE,BIAS_DIFF_ID_MAX_WEIGHT,BIAS_DIFF_ID_MAX_TYPE,ID_CUT_TYPE_TRACK_VALUE,ID_CUT_TYPE_TRACK_GRADE,ID_CUT_TYPE_TRACK_WEIGHT,ID_CUT_TYPE_TRACK_TYPE,OD_BPI_SCREEN_VALUE,OD_BPI_SCREEN_GRADE,OD_BPI_SCREEN_WEIGHT,OD_BPI_SCREEN_TYPE,FT_MIN_BER_VALUE,FT_MIN_BER_GRADE,FT_MIN_BER_WEIGHT,FT_MIN_BER_TYPE,OW2_SP11_MAX_VALUE,OW2_SP11_MAX_GRADE,OW2_SP11_MAX_WEIGHT,OW2_SP11_MAX_TYPE,OW2_SP11_MIN_VALUE,OW2_SP11_MIN_GRADE,OW2_SP11_MIN_WEIGHT,OW2_SP11_MIN_TYPE,BIAS_FORCE_GRADEAP_MAX_VALUE,BIAS_FORCE_GRADEAP_MAX_GRADE,BIAS_FORCE_GRADEAP_MAX_WEIGHT,BIAS_FORCE_GRADEAP_MAX_TYPE,UNLATCH_SPD_VALUE,UNLATCH_SPD_GRADE,UNLATCH_SPD_WEIGHT,UNLATCH_SPD_TYPE,SHOCK_RMS_ACTIVE_VALUE,SHOCK_RMS_ACTIVE_GRADE,SHOCK_RMS_ACTIVE_WEIGHT,SHOCK_RMS_ACTIVE_TYPE,SHOCK_RMS_SEEK_VALUE,SHOCK_RMS_SEEK_GRADE,SHOCK_RMS_SEEK_WEIGHT,SHOCK_RMS_SEEK_TYPE,TOTAL_FT_TYPE_TIME_VALUE,TOTAL_FT_TYPE_TIME_GRADE,TOTAL_FT_TYPE_TIME_WEIGHT,TOTAL_FT_TYPE_TIME_TYPE,TRACK_DEFECT_MAX_HD_VALUE,TRACK_DEFECT_MAX_HD_GRADE,TRACK_DEFECT_MAX_HD_WEIGHT,TRACK_DEFECT_MAX_HD_TYPE
//      PSKR_BI_GRADEBI_PART_6_COL_WIDTH           //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,                    22,                    22,                     23,                   21,                    22,                    22,                     23,                   21,                     21,                     21,                      22,                    20,                 19,                 19,                  20,                18,              16,              16,               17,             15,                18,                18,                 19,               17,                18,                18,                 19,               17,                          28,                          28,                           29,                         27,               17,               17,                18,              16,                    22,                    22,                     23,                   21,                  20,                  20,                   21,                 19,                      23,                      23,                       24,                     22,                       25,                       25,                        26,                      24
//      PSKR_BI_GRADEBI_PART_6_COL_MASK            //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,                     1,                     1,                      1,                    1,                     1,                     1,                      1,                    1,                      1,                      1,                       1,                     1,                  1,                  1,                   1,                 1,               1,               1,                1,              1,                 1,                 1,                  1,                1,                 1,                 1,                  1,                1,                           1,                           1,                            1,                          1,                1,                1,                 1,               1,                     1,                     1,                      1,                    1,                   1,                   1,                    1,                  1,                       1,                       1,                        1,                      1,                        1,                        1,                         1,                       1
//      PSKR_BI_GRADEBI_PART_6_COL_TYPES           //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,                     N,                     V,                      N,                    N,                     N,                     V,                      N,                    N,                      N,                      V,                       N,                     N,                  N,                  V,                   N,                 N,               N,               V,                N,              N,                 N,                 V,                  N,                N,                 N,                 V,                  N,                N,                           N,                           V,                            N,                          N,                N,                V,                 N,               N,                     N,                     V,                      N,                    N,                   N,                   V,                    N,                  N,                       N,                       V,                        N,                      N,                        N,                        V,                         N,                       N
//      PSKR_BI_GRADEBI_PART_6_TABLE_TYPE          // S
#define PSKR_BI_GRADEBI_PART_7              48048  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,LOOPBACK_ERR_CNT_VALUE,LOOPBACK_ERR_CNT_GRADE,LOOPBACK_ERR_CNT_WEIGHT,LOOPBACK_ERR_CNT_TYPE,FT_WEIGHT_WRITE_RETRY_VALUE,FT_WEIGHT_WRITE_RETRY_GRADE,FT_WEIGHT_WRITE_RETRY_WEIGHT,FT_WEIGHT_WRITE_RETRY_TYPE,FNL_EWAC_VALUE,FNL_EWAC_GRADE,FNL_EWAC_WEIGHT,FNL_EWAC_TYPE,BPI0_BER_MIN_HD_VALUE,BPI0_BER_MIN_HD_GRADE,BPI0_BER_MIN_HD_WEIGHT,BPI0_BER_MIN_HD_TYPE,TEN_SECTOR_BER_VALUE,TEN_SECTOR_BER_GRADE,TEN_SECTOR_BER_WEIGHT,TEN_SECTOR_BER_TYPE,OW1_MIN_VALUE,OW1_MIN_GRADE,OW1_MIN_WEIGHT,OW1_MIN_TYPE,OW2_MIN_VALUE,OW2_MIN_GRADE,OW2_MIN_WEIGHT,OW2_MIN_TYPE,DELTA_OW_ZONE_VALUE,DELTA_OW_ZONE_GRADE,DELTA_OW_ZONE_WEIGHT,DELTA_OW_ZONE_TYPE,DELTA_OW_STEP_VALUE,DELTA_OW_STEP_GRADE,DELTA_OW_STEP_WEIGHT,DELTA_OW_STEP_TYPE
//      PSKR_BI_GRADEBI_PART_7_COL_WIDTH           //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,                    22,                    22,                     23,                   21,                         27,                         27,                          28,                        26,            14,            14,             15,           13,                   21,                   21,                    22,                  20,                  20,                  20,                   21,                 19,           13,           13,            14,          12,           13,           13,            14,          12,                 19,                 19,                  20,                18,                 19,                 19,                  20,                18
//      PSKR_BI_GRADEBI_PART_7_COL_MASK            //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,                     1,                     1,                      1,                    1,                          1,                          1,                           1,                         1,             1,             1,              1,            1,                    1,                    1,                     1,                   1,                   1,                   1,                    1,                  1,            1,            1,             1,           1,            1,            1,             1,           1,                  1,                  1,                   1,                 1,                  1,                  1,                   1,                 1
//      PSKR_BI_GRADEBI_PART_7_COL_TYPES           //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,                     N,                     V,                      N,                    N,                          N,                          V,                           N,                         N,             N,             V,              N,            N,                    N,                    V,                     N,                   N,                   N,                   V,                    N,                  N,            N,            V,             N,           N,            N,            V,             N,           N,                  N,                  V,                   N,                 N,                  N,                  V,                   N,                 N
//      PSKR_BI_GRADEBI_PART_7_TABLE_TYPE          // S
#define PSKR_BI_GRADEBI_PART_8              48049  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,LEAKAGE_VALUE,LEAKAGE_GRADE,LEAKAGE_WEIGHT,LEAKAGE_TYPE,IMBALANCE_VALUE,IMBALANCE_GRADE,IMBALANCE_WEIGHT,IMBALANCE_TYPE,DMR_FLAG_VALUE,DMR_FLAG_GRADE,DMR_FLAG_WEIGHT,DMR_FLAG_TYPE,REPROCESS_RESTW_VALUE,REPROCESS_RESTW_GRADE,REPROCESS_RESTW_WEIGHT,REPROCESS_RESTW_TYPE,PCBA_VALUE,PCBA_GRADE,PCBA_WEIGHT,PCBA_TYPE
//      PSKR_BI_GRADEBI_PART_8_COL_WIDTH           //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,           13,           13,            14,          12,             15,             15,              16,            14,            14,            14,             15,           13,                   21,                   21,                    22,                  20,        10,        10,         11,        9
//      PSKR_BI_GRADEBI_PART_8_COL_MASK            //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,            1,            1,             1,           1,              1,              1,               1,             1,             1,             1,              1,            1,                    1,                    1,                     1,                   1,         1,         1,          1,        1
//      PSKR_BI_GRADEBI_PART_8_COL_TYPES           //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,            N,            V,             N,           N,              N,              V,               N,             N,             N,             V,              N,            N,                    N,                    V,                     N,                   N,         N,         V,          N,        N
//      PSKR_BI_GRADEBI_PART_8_TABLE_TYPE          // S
#define PSKR_AT_SET_PART_1                  48050  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PASS_GBN,PRE_MES_CODE,READY_TIME,ID_WRITE_1,ID_READ_1,OD_WRITE_1,OD_READ_1,ID_WRITE_2,ID_READ_2,OD_WRITE_2,OD_READ_2,ID_WRITE_3,ID_READ_3,OD_WRITE_3,OD_READ_3,ID_WRITE_4,ID_READ_4,OD_WRITE_4,OD_READ_4,ID_WRITE_5,ID_READ_5,OD_WRITE_5,OD_READ_5,ID_WRITE_6,ID_READ_6,OD_WRITE_6,OD_READ_6,ID_WRITE_7,ID_READ_7,OD_WRITE_7,OD_READ_7,ID_WRITE_8,ID_READ_8,OD_WRITE_8,OD_READ_8,ID_WRITE_9,ID_READ_9,OD_WRITE_9,OD_READ_9,ID_WRITE_10,ID_READ_10,OD_WRITE_10,OD_READ_10
//      PSKR_AT_SET_PART_1_COL_WIDTH               //      6,       8,        9,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,       8,          12,        10,        10,        9,        10,        9,        10,        9,        10,        9,        10,        9,        10,        9,        10,        9,        10,        9,        10,        9,        10,        9,        10,        9,        10,        9,        10,        9,        10,        9,        10,        9,        10,        9,        10,        9,        10,        9,         11,        10,         11,        10
//      PSKR_AT_SET_PART_1_COL_MASK                //      1,       1,        1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,       1,           1,         1,         1,        1,         1,        1,         1,        1,         1,        1,         1,        1,         1,        1,         1,        1,         1,        1,         1,        1,         1,        1,         1,        1,         1,        1,         1,        1,         1,        1,         1,        1,         1,        1,         1,        1,         1,        1,          1,         1,          1,         1
//      PSKR_AT_SET_PART_1_COL_TYPES               //      V,       N,        N,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,       V,           V,         N,         N,        N,         N,        N,         N,        N,         N,        N,         N,        N,         N,        N,         N,        N,         N,        N,         N,        N,         N,        N,         N,        N,         N,        N,         N,        N,         N,        N,         N,        N,         N,        N,         N,        N,         N,        N,          N,         N,          N,         N
//      PSKR_AT_SET_PART_1_TABLE_TYPE              // S
#define PSKR_AT_SET_PART_2                  48051  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PASS_GBN,PRE_MES_CODE,ID_WRITE_11,ID_READ_11,OD_WRITE_11,OD_READ_11,ID_WRITE_12,ID_READ_12,OD_WRITE_12,OD_READ_12,ID_WRITE_13,ID_READ_13,OD_WRITE_13,OD_READ_13,ID_WRITE_14,ID_READ_14,OD_WRITE_14,OD_READ_14,ID_WRITE_15,ID_READ_15,OD_WRITE_15,OD_READ_15,FACT1,FACT2,FACT3,FACT4,FACT5,FACT6,FACT7,FACT8,FACT9,FACT10,FACT11,FACT12,FACT13,FACT14,FACT15,FACT16,FACT17,FACT18,FACT19,FACT20,FACT21,FACT22,FACT23,FACT24,FACT25,FACT26,FACT27
//      PSKR_AT_SET_PART_2_COL_WIDTH               //      6,       8,        9,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,       8,          12,         11,        10,         11,        10,         11,        10,         11,        10,         11,        10,         11,        10,         11,        10,         11,        10,         11,        10,         11,        10,    5,    5,    5,    5,    5,    5,    5,    5,    5,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6
//      PSKR_AT_SET_PART_2_COL_MASK                //      1,       1,        1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,       1,           1,          1,         1,          1,         1,          1,         1,          1,         1,          1,         1,          1,         1,          1,         1,          1,         1,          1,         1,          1,         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1
//      PSKR_AT_SET_PART_2_COL_TYPES               //      V,       N,        N,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,       V,           V,          N,         N,          N,         N,          N,         N,          N,         N,          N,         N,          N,         N,          N,         N,          N,         N,          N,         N,          N,         N,    N,    N,    N,    N,    N,    N,    N,    N,    N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N
//      PSKR_AT_SET_PART_2_TABLE_TYPE              // S
#define PSKR_BI_GRADEBI_PART_9              48052  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,MAX_BPI1ST_AVG__V,MAX_BPI1ST_AVG__G,MAX_BPI1ST_AVG__W,MAX_BPI1ST_AVG__T,MIN_TPI_AVG__V,MIN_TPI_AVG__G,MIN_TPI_AVG__W,MIN_TPI_AVG__T,MAX_HD_CAPA_BEFORE_GB___V,MAX_HD_CAPA_BEFORE_GB___G,MAX_HD_CAPA_BEFORE_GB___W,MAX_HD_CAPA_BEFORE_GB___T,MIN_RTD_AVG__V,MIN_RTD_AVG__G,MIN_RTD_AVG__W,MIN_RTD_AVG__T,MIN_OSA_AVG__V,MIN_OSA_AVG__G,MIN_OSA_AVG__W,MIN_OSA_AVG__T,MAX_ATWMD__V,MAX_ATWMD__G,MAX_ATWMD__W,MAX_ATWMD__T,MIN_6DACBERMIN__V,MIN_6DACBERMIN__G,MIN_6DACBERMIN__W,MIN_6DACBERMIN__T,MIN_FT1STBERMIN__V,MIN_FT1STBERMIN__G,MIN_FT1STBERMIN__W,MIN_FT1STBERMIN__T,MIN_PARMMRRAVG__V,MIN_PARMMRRAVG__G,MIN_PARMMRRAVG__W,MIN_PARMMRRAVG__T,MEAN_TEMPERATUREAVG__V,MEAN_TEMPERATUREAVG__G,MEAN_TEMPERATUREAVG__W,MEAN_TEMPERATUREAVG__T,MAX_SGAIN__V,MAX_SGAIN__G,MAX_SGAIN__W,MAX_SGAIN__T,MAX_HD_DLIST_0X11_ECC___V,MAX_HD_DLIST_0X11_ECC___G,MAX_HD_DLIST_0X11_ECC___W,MAX_HD_DLIST_0X11_ECC___T,MEAN_DR_SKTM_WR_FUL__V,MEAN_DR_SKTM_WR_FUL__G
//      PSKR_BI_GRADEBI_PART_9_COL_WIDTH           //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,               17,               17,               17,               17,            14,            14,            14,            14,                       25,                       25,                       25,                       25,            14,            14,            14,            14,            14,            14,            14,            14,          12,          12,          12,          12,               17,               17,               17,               17,                18,                18,                18,                18,               17,               17,               17,               17,                    22,                    22,                    22,                    22,          12,          12,          12,          12,                       25,                       25,                       25,                       25,                    22,                    22
//      PSKR_BI_GRADEBI_PART_9_COL_MASK            //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,                1,                1,                1,                1,             1,             1,             1,             1,                        1,                        1,                        1,                        1,             1,             1,             1,             1,             1,             1,             1,             1,           1,           1,           1,           1,                1,                1,                1,                1,                 1,                 1,                 1,                 1,                1,                1,                1,                1,                     1,                     1,                     1,                     1,           1,           1,           1,           1,                        1,                        1,                        1,                        1,                     1,                     1
//      PSKR_BI_GRADEBI_PART_9_COL_TYPES           //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,                N,                V,                N,                N,             N,             V,             N,             N,                        N,                        V,                        N,                        N,             N,             V,             N,             N,             N,             V,             N,             N,           N,           V,           N,           N,                N,                V,                N,                N,                 N,                 V,                 N,                 N,                N,                V,                N,                N,                     N,                     V,                     N,                     N,           N,           V,           N,           N,                        N,                        V,                        N,                        N,                     N,                     V
//      PSKR_BI_GRADEBI_PART_9_TABLE_TYPE          // S
#define PSKR_BI_GRADEBI_PART_10             48053  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,MEAN_DR_SKTM_WR_FUL__W,MEAN_DR_SKTM_WR_FUL__T,MEAN_DR_SKTM_WR_RAN__V,MEAN_DR_SKTM_WR_RAN__G,MEAN_DR_SKTM_WR_RAN__W,MEAN_DR_SKTM_WR_RAN__T,MEAN_DR_SKTM_RD_RAN__V,MEAN_DR_SKTM_RD_RAN__G,MEAN_DR_SKTM_RD_RAN__W,MEAN_DR_SKTM_RD_RAN__T,MEAN_DR_DLIST_0X13_DAM___V,MEAN_DR_DLIST_0X13_DAM___G,MEAN_DR_DLIST_0X13_DAM___W,MEAN_DR_DLIST_0X13_DAM___T,MEAN_DR_DLIST_0X1F_SDS___V,MEAN_DR_DLIST_0X1F_SDS___G,MEAN_DR_DLIST_0X1F_SDS___W,MEAN_DR_DLIST_0X1F_SDS___T,MEAN_DR_DLIST_0XSF_SF___V,MEAN_DR_DLIST_0XSF_SF___G,MEAN_DR_DLIST_0XSF_SF___W,MEAN_DR_DLIST_0XSF_SF___T,MEAN_DR_VLIST_REAL__V,MEAN_DR_VLIST_REAL__G,MEAN_DR_VLIST_REAL__W,MEAN_DR_VLIST_REAL__T,MEAN_DR_VLIST_ETC__V,MEAN_DR_VLIST_ETC__G,MEAN_DR_VLIST_ETC__W,MEAN_DR_VLIST_ETC__T,MEAN_DR_SC_WRITE_RETRY__V,MEAN_DR_SC_WRITE_RETRY__G,MEAN_DR_SC_WRITE_RETRY__W,MEAN_DR_SC_WRITE_RETRY__T,MEAN_DR_10SBER__V,MEAN_DR_10SBER__G,MEAN_DR_10SBER__W,MEAN_DR_10SBER__T,MEAN_DR_RCC__V,MEAN_DR_RCC__G,MEAN_DR_RCC__W,MEAN_DR_RCC__T,MEAN_DR_RAMP_FRICTION__V,MEAN_DR_RAMP_FRICTION__G,MEAN_DR_RAMP_FRICTION__W,MEAN_DR_RAMP_FRICTION__T,MIN_TENSBER_OW_V,MIN_TENSBER_OW_G,MIN_TENSBER_OW_W,MIN_TENSBER_OW_T
//      PSKR_BI_GRADEBI_PART_10_COL_WIDTH          //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                    22,                        26,                        26,                        26,                        26,                        26,                        26,                        26,                        26,                       25,                       25,                       25,                       25,                   21,                   21,                   21,                   21,                  20,                  20,                  20,                  20,                       25,                       25,                       25,                       25,               17,               17,               17,               17,            14,             4,            14,            14,                      24,                      24,                      24,                      24,              16,              16,              16,              16
//      PSKR_BI_GRADEBI_PART_10_COL_MASK           //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                     1,                         1,                         1,                         1,                         1,                         1,                         1,                         1,                         1,                        1,                        1,                        1,                        1,                    1,                    1,                    1,                    1,                   1,                   1,                   1,                   1,                        1,                        1,                        1,                        1,                1,                1,                1,                1,             1,             1,             1,             1,                       1,                       1,                       1,                       1,               1,               1,               1,               1
//      PSKR_BI_GRADEBI_PART_10_COL_TYPES          //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,                     N,                     N,                     N,                     V,                     N,                     N,                     N,                     V,                     N,                     N,                         N,                         V,                         N,                         N,                         N,                         V,                         N,                         N,                        N,                        V,                        N,                        N,                    N,                    V,                    N,                    N,                   N,                   V,                   N,                   N,                        N,                        V,                        N,                        N,                N,                V,                N,                N,             N,             V,             N,             N,                       N,                       V,                       N,                       N,               N,               V,               N,               N
//      PSKR_BI_GRADEBI_PART_10_TABLE_TYPE         // S
#define PSKR_AT_SET_PART_3                  48054  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PASS_GBN,PRE_MES_CODE,FACT28,FACT29,FACT30,FACT31,FACT32,FACT33,FACT34,FACT35,FACT36,FACT37,FACT38,FACT39,FACT40,FACT41,FACT42,FACT43,FACT44,FACT45,FACT46,FACT47,FACT48,FACT49,FACT50,FACT51,FACT52,FACT53,FACT54,FACT55,FACT56,FACT57,FACT58,FACT59,FACT60
//      PSKR_AT_SET_PART_3_COL_WIDTH               //      6,       8,        9,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,       8,          12,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6
//      PSKR_AT_SET_PART_3_COL_MASK                //      1,       1,        1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,       1,           1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1
//      PSKR_AT_SET_PART_3_COL_TYPES               //      V,       N,        N,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,       V,           V,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N
//      PSKR_AT_SET_PART_3_TABLE_TYPE              // S
#define PSKR_BI_HD_PART_3                   48055  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,HD_ZONESKIP_SCORE,HD_SPFOD2_Z01,HD_SPFOD2_Z02,HD_SPFOD2_Z03,HD_SPFOD2_Z04,HD_SPFOD2_Z05,HD_SPFOD2_Z06,HD_SPFOD2_Z07,HD_SPFOD3_Z01,HD_SPFOD3_Z02,HD_SPFOD3_Z03,HD_SPFOD3_Z04,HD_SPFOD3_Z05,HD_SPFOD3_Z06,HD_SPFOD3_Z07
//      PSKR_BI_HD_PART_3_COL_WIDTH                //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,               17,           12,           12,           12,           12,           12,           12,           12,           12,           12,           12,           12,           12,           12,           12
//      PSKR_BI_HD_PART_3_COL_MASK                 //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,                1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1
//      PSKR_BI_HD_PART_3_COL_TYPES                //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,                N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N
//      PSKR_BI_HD_PART_3_TABLE_TYPE               // S
#define PSKR_BI_HDZNA2_PART_10              48056  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,RETEST_FLAG,DS_FLAG,DEBUG_FLAG,PRE_MES_CODE,SCRIPT_VER,HDZ_TNUTRKCNTZN_0,HDZ_TNUTRKCNTZN_01,HDZ_TNUTRKCNTZN_02,HDZ_TNUTRKCNTZN_03,HDZ_TNUTRKCNTZN_04,HDZ_TNUTRKCNTZN_05,HDZ_TNUTRKCNTZN_06,HDZ_TNUTRKCNTZN_07,HDZ_TNUTRKCNTZN_08,HDZ_TNUTRKCNTZN_09,HDZ_TNUTRKCNTZN_10,HDZ_TNUTRKCNTZN_11,HDZ_TNUTRKCNTZN_12,HDZ_TNUTRKCNTZN_13,HDZ_TNUTRKCNTZN_14,HDZ_TNUTRKCNTZN_15,HDZ_TNUTRKCNTZN_16,HDZ_TNUTRKCNTZN_17,HDZ_TNUTRKCNTZN_18,HDZ_TNUTRKCNTZN_19,HDZ_TNUTRKCNTZN_20,HDZ_TNUTRKCNTZN_21,HDZ_TNUTRKCNTZN_22,HDZ_TNUTRKCNTZN_23,HDZ_TNUTRKCNTZN_24,HDZ_TNUTRKCNTZN_25,HDZ_TNUTRKCNTZN_26,HDZ_TNUTRKCNTZN_27,HDZ_TNUTRKCNTZN_28,HDZ_TNUTRKCNTZN_29,HDZ_TNUTRKCNTZN_30,HDZ_TNUTRKCNTZN_31,HDZ_TNUTRKCNTZN_32,HDZ_TNUTRKCNTZN_33,HDZ_TNUTRKCNTZN_34,HDZ_TNUTRKCNTZN_35,HDZ_TNUTRKCNTZN_36,HDZ_TNUTRKCNTZN_37,HDZ_TNUTRKCNTZN_38,HDZ_TNUTRKCNTZN_39,HDZ_TNUTRKCNTZN_40,HDZ_TNUTRKCNTZN_41,HDZ_TNUTRKCNTZN_42,HDZ_TNUTRKCNTZN_43,HDZ_TNUTRKCNTZN_44,HDZ_TNUTRKCNTZN_45,HDZ_TNUTRKCNTZN_46,HDZ_TNUTRKCNTZN_47
//      PSKR_BI_HDZNA2_PART_10_COL_WIDTH           //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,         11,      7,        10,          12,        10,               18,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19,                19
//      PSKR_BI_HDZNA2_PART_10_COL_MASK            //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,          1,      1,         1,           1,         1,                1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1,                 1
//      PSKR_BI_HDZNA2_PART_10_COL_TYPES           //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,          V,      V,         V,           V,         V,                N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N,                 N
//      PSKR_BI_HDZNA2_PART_10_TABLE_TYPE          // S
#define PSKR_BI_SET_TIME_PART_1             48057  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,TIME_STEP_001,TIME_STEP_002,TIME_STEP_003,TIME_STEP_004,TIME_STEP_005,TIME_STEP_006,TIME_STEP_007,TIME_STEP_008,TIME_STEP_009,TIME_STEP_010,TIME_STEP_011,TIME_STEP_012,TIME_STEP_013,TIME_STEP_014,TIME_STEP_015,TIME_STEP_016,TIME_STEP_017,TIME_STEP_018,TIME_STEP_019,TIME_STEP_020,TIME_STEP_021,TIME_STEP_022,TIME_STEP_023,TIME_STEP_024,TIME_STEP_025,TIME_STEP_026,TIME_STEP_027,TIME_STEP_028,TIME_STEP_029,TIME_STEP_030,TIME_STEP_031,TIME_STEP_032,TIME_STEP_033,TIME_STEP_034,TIME_STEP_035,TIME_STEP_036,TIME_STEP_037,TIME_STEP_038,TIME_STEP_039,TIME_STEP_040,TIME_STEP_041,TIME_STEP_042,TIME_STEP_043,TIME_STEP_044,TIME_STEP_045,TIME_STEP_046,TIME_STEP_047,TIME_STEP_048,TIME_STEP_049,TIME_STEP_050
//      PSKR_BI_SET_TIME_PART_1_COL_WIDTH          //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13
//      PSKR_BI_SET_TIME_PART_1_COL_MASK           //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1
//      PSKR_BI_SET_TIME_PART_1_COL_TYPES          //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N
//      PSKR_BI_SET_TIME_PART_1_TABLE_TYPE         // S
#define PSKR_BI_SET_TIME_PART_2             48058  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,TIME_STEP_051,TIME_STEP_052,TIME_STEP_053,TIME_STEP_054,TIME_STEP_055,TIME_STEP_056,TIME_STEP_057,TIME_STEP_058,TIME_STEP_059,TIME_STEP_060,TIME_STEP_061,TIME_STEP_062,TIME_STEP_063,TIME_STEP_064,TIME_STEP_065,TIME_STEP_066,TIME_STEP_067,TIME_STEP_068,TIME_STEP_069,TIME_STEP_070,TIME_STEP_071,TIME_STEP_072,TIME_STEP_073,TIME_STEP_074,TIME_STEP_075,TIME_STEP_076,TIME_STEP_077,TIME_STEP_078,TIME_STEP_079,TIME_STEP_080,TIME_STEP_081,TIME_STEP_082,TIME_STEP_083,TIME_STEP_084,TIME_STEP_085,TIME_STEP_086,TIME_STEP_087,TIME_STEP_088,TIME_STEP_089,TIME_STEP_090,TIME_STEP_091,TIME_STEP_092,TIME_STEP_093,TIME_STEP_094,TIME_STEP_095,TIME_STEP_096,TIME_STEP_097,TIME_STEP_098,TIME_STEP_099,TIME_STEP_100
//      PSKR_BI_SET_TIME_PART_2_COL_WIDTH          //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13
//      PSKR_BI_SET_TIME_PART_2_COL_MASK           //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1
//      PSKR_BI_SET_TIME_PART_2_COL_TYPES          //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N
//      PSKR_BI_SET_TIME_PART_2_TABLE_TYPE         // S
#define PSKR_BI_SET_TIME_PART_3             48059  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,TIME_STEP_101,TIME_STEP_102,TIME_STEP_103,TIME_STEP_104,TIME_STEP_105,TIME_STEP_106,TIME_STEP_107,TIME_STEP_108,TIME_STEP_109,TIME_STEP_110,TIME_STEP_111,TIME_STEP_112,TIME_STEP_113,TIME_STEP_114,TIME_STEP_115,TIME_STEP_116,TIME_STEP_117,TIME_STEP_118,TIME_STEP_119,TIME_STEP_120,TIME_STEP_121,TIME_STEP_122,TIME_STEP_123,TIME_STEP_124,TIME_STEP_125,TIME_STEP_126,TIME_STEP_127,TIME_STEP_128,TIME_STEP_129,TIME_STEP_130,TIME_STEP_131,TIME_STEP_132,TIME_STEP_133,TIME_STEP_134,TIME_STEP_135,TIME_STEP_136,TIME_STEP_137,TIME_STEP_138,TIME_STEP_139,TIME_STEP_140,TIME_STEP_141,TIME_STEP_142,TIME_STEP_143,TIME_STEP_144,TIME_STEP_145,TIME_STEP_146,TIME_STEP_147,TIME_STEP_148,TIME_STEP_149,TIME_STEP_150
//      PSKR_BI_SET_TIME_PART_3_COL_WIDTH          //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13
//      PSKR_BI_SET_TIME_PART_3_COL_MASK           //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1
//      PSKR_BI_SET_TIME_PART_3_COL_TYPES          //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N
//      PSKR_BI_SET_TIME_PART_3_TABLE_TYPE         // S
#define PSKR_BI_SET_TIME_PART_4             48060  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,TIME_STEP_151,TIME_STEP_152,TIME_STEP_153,TIME_STEP_154,TIME_STEP_155,TIME_STEP_156,TIME_STEP_157,TIME_STEP_158,TIME_STEP_159,TIME_STEP_160,TIME_STEP_161,TIME_STEP_162,TIME_STEP_163,TIME_STEP_164,TIME_STEP_165,TIME_STEP_166,TIME_STEP_167,TIME_STEP_168,TIME_STEP_169,TIME_STEP_170,TIME_STEP_171,TIME_STEP_172,TIME_STEP_173,TIME_STEP_174,TIME_STEP_175,TIME_STEP_176,TIME_STEP_177,TIME_STEP_178,TIME_STEP_179,TIME_STEP_180,TIME_STEP_181,TIME_STEP_182,TIME_STEP_183,TIME_STEP_184,TIME_STEP_185,TIME_STEP_186,TIME_STEP_187,TIME_STEP_188,TIME_STEP_189,TIME_STEP_190,TIME_STEP_191,TIME_STEP_192,TIME_STEP_193,TIME_STEP_194,TIME_STEP_195,TIME_STEP_196,TIME_STEP_197,TIME_STEP_198,TIME_STEP_199,TIME_STEP_200
//      PSKR_BI_SET_TIME_PART_4_COL_WIDTH          //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13
//      PSKR_BI_SET_TIME_PART_4_COL_MASK           //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1
//      PSKR_BI_SET_TIME_PART_4_COL_TYPES          //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N
//      PSKR_BI_SET_TIME_PART_4_TABLE_TYPE         // S
#define PSKR_BI_SET_TIME_PART_5             48061  // HDD_SN,WORK_SEQ,DATE_TIME,EQUIP_ID,PORT_NUM,PASS_GBN,REWORK_FLAG,WO_STATUS,MES_CODE,MC_GROUP,SAMPLE_FLAG,OP,HEAD_NUM,TIME_STEP_201,TIME_STEP_202,TIME_STEP_203,TIME_STEP_204,TIME_STEP_205,TIME_STEP_206,TIME_STEP_207,TIME_STEP_208,TIME_STEP_209,TIME_STEP_210,TIME_STEP_211,TIME_STEP_212,TIME_STEP_213,TIME_STEP_214,TIME_STEP_215,TIME_STEP_216,TIME_STEP_217,TIME_STEP_218,TIME_STEP_219,TIME_STEP_220,TIME_STEP_221,TIME_STEP_222,TIME_STEP_223,TIME_STEP_224,TIME_STEP_225,TIME_STEP_226,TIME_STEP_227,TIME_STEP_228,TIME_STEP_229,TIME_STEP_230,TIME_STEP_231,TIME_STEP_232,TIME_STEP_233,TIME_STEP_234,TIME_STEP_235,TIME_STEP_236,TIME_STEP_237,TIME_STEP_238,TIME_STEP_239,TIME_STEP_240,TIME_STEP_241,TIME_STEP_242,TIME_STEP_243,TIME_STEP_244,TIME_STEP_245,TIME_STEP_246,TIME_STEP_247,TIME_STEP_248,TIME_STEP_249,TIME_STEP_250,TIME_STEP_251,TIME_STEP_252,TIME_STEP_253,TIME_STEP_254,TIME_STEP_255
//      PSKR_BI_SET_TIME_PART_5_COL_WIDTH          //      6,       8,        9,       8,       8,       8,         11,        9,       8,       8,         11, 2,       8,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13,           13
//      PSKR_BI_SET_TIME_PART_5_COL_MASK           //      1,       1,        1,       1,       1,       1,          1,        1,       1,       1,          1, 1,       1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1,            1
//      PSKR_BI_SET_TIME_PART_5_COL_TYPES          //      V,       N,        N,       V,       V,       V,          V,        V,       V,       V,          V, N,       N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N,            N
//      PSKR_BI_SET_TIME_PART_5_TABLE_TYPE         // S


/****************************************************************************************************************************

   #               #    ##        ######      #      #   ###   #      #     ######
    #             #    #  #       #      #    # #    #    #    # #    #    #      #
     #     #     #    #    #      #      #    #  #   #    #    #  #   #   #
      #   # #   #    ########     ######      #   #  #    #    #   #  #   #     ###
       # #   # #    #        #    #     #     #    # #    #    #    # #   #       #
        #     #    #          #   #      #    #     ##    #    #     ##    #      #
        #     #   #            #  #       #   #      #   ###   #      #      ####

 Check the deprecation and modification policies at the top of this file before making changes.

*****************************************************************************************************************************/


// *******************  Common DBLog firmware tables, used by all TSE firmware types; (All changes MUST be agreed upon by all Firmware and FoF software leads) DO NOT EDIT below this line. ****************************************

// ***  Table Names                                ***  Table Column Names / Column Widths / Masks / Table type ***
// P_TEST_PARAMETERS
#define P_TEST_PARAMETERS                   64000  // *
//      P_TEST_PARAMETERS_COL_WIDTH                // 0
//      P_TEST_PARAMETERS_COL_MASK                 // 0
//      P_TEST_PARAMETERS_COL_TYPES                // *
//      P_TEST_PARAMETERS_TABLE_TYPE               // S

// P_FAULT is a generic table for reporting errors that are defined in the codes.h file.  This table is reported using a unique block code so that DEX can more easily look up and print the decode.
#define P_FAULT                             64001  // FAULT_MESSAGE_SOURCE,FAULT_CODE,FAULT_MESSAGE
//      P_FAULT_COL_WIDTH                          //                   20,        10,            1
//      P_FAULT_COL_MASK                           //                    0,         0,            0
//      P_FAULT_COL_TYPES                          // *
//      P_FAULT_TABLE_TYPE                         // S

// P_MESSAGE is a generic table for reporting messages that are defined in the messages.h file.  This table is reported using a unique block code so that DEX can more easily look up and print the decode.
#define P_MESSAGE                           64002  // MESSAGE_CODE
//      P_MESSAGE_COL_WIDTH                        //           12
//      P_MESSAGE_COL_MASK                         //            0
//      P_MESSAGE_COL_TYPES                        // *
//      P_MESSAGE_TABLE_TYPE                       // S

#define P_TRACK                             64003  // HEAD,CYLINDER
//      P_TRACK_COL_WIDTH                          //    4,       8
//      P_TRACK_COL_MASK                           //    0,       0
//      P_TRACK_COL_TYPES                          // *
//      P_TRACK_TABLE_TYPE                         // S

#define P_INVALID_TEST_PARAM_NAME           64004  // PARAMETER_NAME,PARAMETER_CODE
//      P_INVALID_TEST_PARAM_NAME_COL_WIDTH        //             18,            14
//      P_INVALID_TEST_PARAM_NAME_COL_MASK         //              0,             0
//      P_INVALID_TEST_PARAM_NAME_COL_TYPES        // *
//      P_INVALID_TEST_PARAM_NAME_TABLE_TYPE       // S

#define P_UNSOLICITED_TEST_PARAM            64005  // PARAMETER_NAME,PARAMETER_CODE
//      P_UNSOLICITED_TEST_PARAM_COL_WIDTH         //             18,            14
//      P_UNSOLICITED_TEST_PARAM_COL_MASK          //              0,             0
//      P_UNSOLICITED_TEST_PARAM_COL_TYPES         // *
//      P_UNSOLICITED_TEST_PARAM_TABLE_TYPE        // S

#define P_FAILING_HEAD                      64006  // FAILED_HEAD,FAILED_ZONE,FAIL_CODE
//      P_FAILING_HEAD_COL_WIDTH                   //          11,         11,        9
//      P_FAILING_HEAD_COL_MASK                    //           0,          0,        0
//      P_FAILING_HEAD_COL_TYPES                   // *
//      P_FAILING_HEAD_TABLE_TYPE                  // S

#define P_TEST_TIMEOUT                      64007  // TEST_NUM,TIMEOUT_COUNT,HD_LGC_PSN,HD_PHYS_PSN,CYL,MCT_RETURN_ADDR,MCT_WAIT_FLAGS,RW_RETURN_ADDR,RW_WAIT_FLAGS,IS_SVO_CMD_ACTIVE,ACTIVE_SVO_CMD,SVO_CMD_STAT,SVO_CMD_ERR
//      P_TEST_TIMEOUT_COL_WIDTH                   //        8,           13,        10,         11, 10,             15,            14,            14,           13,               17,            14,          12,         12
//      P_TEST_TIMEOUT_COL_MASK                    //        0,            0,         0,          0,  0,              0,             0,             0,            0,                0,             0,           0,          0
//      P_TEST_TIMEOUT_COL_TYPES                   // *
//      P_TEST_TIMEOUT_TABLE_TYPE                  // S
#define P_SERVO_FEATURE_WORDS               64008  // ORIG/EXT,INDEX,VALUE
//      P_SERVO_FEATURE_WORDS_COL_WIDTH            //        8,    5,    6
//      P_SERVO_FEATURE_WORDS_COL_MASK             //        0,    0,    0
//      P_SERVO_FEATURE_WORDS_COL_TYPES            // *
//      P_SERVO_FEATURE_WORDS_TABLE_TYPE           // S
#define P_SERVO_FEATURE_BITS                64009  // FEATURE,VAL
//      P_SERVO_FEATURE_BITS_COL_WIDTH             //      30,  3
//      P_SERVO_FEATURE_BITS_COL_MASK              //       0,  0
//      P_SERVO_FEATURE_BITS_COL_TYPES             // *
//      P_SERVO_FEATURE_BITS_TABLE_TYPE            // S

// Use this table ONLY to report explanatory data for imminent test failure. (For trace information use P000_DEBUG_DATA).
#define P_ERROR_MSG                         64010  // *
//      P_ERROR_MSG_COL_WIDTH                      // 0
//      P_ERROR_MSG_COL_MASK                       // 0
//      P_ERROR_MSG_COL_TYPES                      // *
//      P_ERROR_MSG_TABLE_TYPE                     // S

// Use a data specific data table where appropriate.  Use this table ONLY to output user requested (via run-time control) non-specific data.
#define P_USER_REQUESTED_DATA               64011  // *
//      P_USER_REQUESTED_DATA_COL_WIDTH            // 0
//      P_USER_REQUESTED_DATA_COL_MASK             // 0
//      P_USER_REQUESTED_DATA_COL_TYPES            // *
//      P_USER_REQUESTED_DATA_TABLE_TYPE           // S


/****************************************************************************************************************************

 #     #    ##    #####    #    #  ###  #    #   ####
 #  #  #   #  #   #    #   # #  #   #   # #  #  #
 # # # #  ######  #####    #  # #   #   #  # #  #  ###
 ##   ##  #    #  #    #   #   ##   #   #   ##  #    #
 #     #  #    #  #     #  #    #  ###  #    #   ####

 Check the deprecation and modification policies at the top of this file before making changes.

*****************************************************************************************************************************/




// *************************  TSE System/Tools Tables; DO NOT EDIT below this line. *****************************************




// ***  Table Names                                ***  Table Column Names / Column Widths / Masks / Table type ***
#define P_EVENT_SUMMARY                     65000  // RUN_TIME,SLOT,COMPLETION_CODE,FAILING_SEQ,FAILING_TEST,FAILING_SEQ_VER,FAILING_PORTID,FAILING_EVENT,FAILING_SQ_EVT,FAILING_TST_EVT,FAILING_TS_EVT,FAILING_5V,FAILING_12V,FAILING_TEMP,SUB_BUILD_GROUP,EQUIP_ID,CM_VERSION,HOST_VER,CONFIG_NAME,CONFIG_VER,DEX_VER,PWR_LOSS_CNT,PARAM_DICTIONARY_VER,FAIL_STATE,FAIL_DATA,FAIL_PARAMETER_NAME,CARRIER_ID
//      P_EVENT_SUMMARY_COL_WIDTH                  //        8,   8,             15,         11,          12,             15,            14,           13,            14,             15,            14,        10,         11,          12,             15,       8,        24,      24,         20,        10,      7,          12,                  20,        20,       50,                 20,        10
//      P_EVENT_SUMMARY_COL_MASK                   //        1,   1,              1,          1,           1,              1,             1,            1,             1,              1,             1,         1,          1,           1,              1,       1,         1,       1,          1,         1,      1,           1,                   1,         1,        1,                  1,         1
//      P_EVENT_SUMMARY_COL_TYPES                  //        N,   N,              N,          N,           N,              N,             N,            N,             N,              N,             N,         N,          N,           N,              V,       V,         V,       V,          V,         V,      V,           N,                   N,         V,        V,                  V,         V
//      P_EVENT_SUMMARY_TABLE_TYPE                 // S
#define P172_AREAL_DENSITY_VBAR             65001  // HD_PHYS_PSN,DATA_ZONE,AREAL_DENSITY_BPI,AREAL_DENSITY_TPI,AREAL_DENSITY_VBAR,HD_LGC_PSN
//      P172_AREAL_DENSITY_VBAR_COL_WIDTH          //          11,        9,               17,               17,                18,        10
//      P172_AREAL_DENSITY_VBAR_COL_MASK           //           1,        1,                1,                1,                 1,         1
//      P172_AREAL_DENSITY_VBAR_COL_TYPES          //           N,        N,                N,                N,                 N,         N
//      P172_AREAL_DENSITY_VBAR_TABLE_TYPE         // M
#define P_VBAR_SUMMARY2                     65002  // HD_PHYS_PSN,HD_LGC_PSN,BPI_CAP,BPI_PICK,BPI_MRGN,BPI_TABLE_NUM,TPI_CAP,TPI_PICK,TPI_MRGN,TPI_TABLE_NUM
//      P_VBAR_SUMMARY2_COL_WIDTH                  //          11,        10,      7,       8,       8,           13,      7,       8,       8,           13
//      P_VBAR_SUMMARY2_COL_MASK                   //           1,         1,      1,       1,       1,            1,      1,       1,       1,            1
//      P_VBAR_SUMMARY2_COL_TYPES                  //           N,         N,      N,       N,       N,            N,      N,       N,       N,            N
//      P_VBAR_SUMMARY2_TABLE_TYPE                 // V
#define P152_BODE_SENSITIVE_SCORE           65003  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,BODE_SENSITIVITY_FREQ,BODE_SENSITIVITY_SCORE,BODE_SENSITIVITY_LIMIT,MARGIN_NUM,BODE_SENSITIVITY_HEALTH
//      P152_BODE_SENSITIVE_SCORE_COL_WIDTH        //          11,      7,        10,                   21,                    22,                    22,        10,                     23
//      P152_BODE_SENSITIVE_SCORE_COL_MASK         //           1,      1,         1,                    1,                     1,                     1,         1,                      1
//      P152_BODE_SENSITIVE_SCORE_COL_TYPES        //           N,      N,         N,                    N,                     N,                     N,         N,                      N
//      P152_BODE_SENSITIVE_SCORE_TABLE_TYPE       // M
#define P_SDAT_MAM_BS                       65004  // HD,MAM_PRE,BS_PRE,NUM_SEEKS,MAM_POST,BS_POST,SECS
//      P_SDAT_MAM_BS_COL_WIDTH                    //  2,      7,     6,        9,       8,      7,   4
//      P_SDAT_MAM_BS_COL_MASK                     //  0,      0,     0,        0,       0,      0,   0
//      P_SDAT_MAM_BS_COL_TYPES                    // *
//      P_SDAT_MAM_BS_TABLE_TYPE                   // S
#define P_BURNISH_CHECK                     65005  // HD_PHYS_PSN,TEST_PSN,HD_LGC_PSN,WRT_HTR_CLRNC_1,WRT_HTR_CLRNC_2,MOD_CALC_AVG_1,MOD_CALC_AVG_2,DELTA_BRNSH_CHECK,BRNSH_USL,HD_STATUS
//      P_BURNISH_CHECK_COL_WIDTH                  //          11,       8,        10,             15,             15,            14,            14,               17,        9,        9
//      P_BURNISH_CHECK_COL_MASK                   //           1,       1,         1,              1,              1,             1,             1,                1,        1,        1
//      P_BURNISH_CHECK_COL_TYPES                  //           N,       N,         N,              N,              N,             N,             N,                N,        N,        N
//      P_BURNISH_CHECK_TABLE_TYPE                 // M
#define P210_VBAR_THRSHLD                   65006  // HD_PHYS_PSN,HD_LGC_PSN,TPI_VBAR_SERT,BPI_VBAR_SERT
//      P210_VBAR_THRSHLD_COL_WIDTH                //          11,        10,           13,           13
//      P210_VBAR_THRSHLD_COL_MASK                 //           1,         1,            1,            1
//      P210_VBAR_THRSHLD_COL_TYPES                //           N,         N,            N,            N
//      P210_VBAR_THRSHLD_TABLE_TYPE               // V
#define P_SDAT_TRK0                         65007  // HD,TRK0
//      P_SDAT_TRK0_COL_WIDTH                      //  2,   4
//      P_SDAT_TRK0_COL_MASK                       //  0,   0
//      P_SDAT_TRK0_COL_TYPES                      // *
//      P_SDAT_TRK0_TABLE_TYPE                     // S
#define P_MINOR_FAIL_CODE                   65008  // HD_PHYS_PSN,TEST_NUMBER,HD_LGC_PSN,ERROR_CODE,FAIL_DATA
//      P_MINOR_FAIL_CODE_COL_WIDTH                //          11,         11,        10,        10,        9
//      P_MINOR_FAIL_CODE_COL_MASK                 //           1,          1,         1,         1,        1
//      P_MINOR_FAIL_CODE_COL_TYPES                //           N,          N,         N,         V,        V
//      P_MINOR_FAIL_CODE_TABLE_TYPE               // M
#define P_WRT_PWR_PICKER                    65009  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,WRT_PWR_NDX,WRT_HEAT_CLRNC,CLRNC_WGHT_FUNC,STRTN_PWR_WGHT_FUNC,FITNESS_PWR_WGHT_FUNC,BPI_CAP,FLTR_BPI_CAP,TPI_CAP,FLTR_TPI_CAP,SATURATION_PEAK,CAPACITY_CALC,SATURATION_PICK,CAPACITY_PICK
//      P_WRT_PWR_PICKER_COL_WIDTH                 //          11,        9,        10,         11,            14,             15,                 19,                   21,      7,          12,      7,          12,             15,           13,             15,           13
//      P_WRT_PWR_PICKER_COL_MASK                  //           1,        1,         1,          1,             1,              1,                  1,                    1,      1,           1,      1,           1,              1,            1,              1,            1
//      P_WRT_PWR_PICKER_COL_TYPES                 //           N,        N,         N,          N,             N,              N,                  N,                    N,      N,           N,      N,           N,              N,            N,              V,            V
//      P_WRT_PWR_PICKER_TABLE_TYPE                // M
#define P_WRT_PWR_TRIPLETS                  65010  // WRT_PWR_NDX,ZONE_TYPE,WRT_CUR,OVRSHT,OVRSHT_DUR
//      P_WRT_PWR_TRIPLETS_COL_WIDTH               //          11,        9,      7,     6,        10
//      P_WRT_PWR_TRIPLETS_COL_MASK                //           1,        1,      1,     1,         1
//      P_WRT_PWR_TRIPLETS_COL_TYPES               //           N,        V,      N,     N,         N
//      P_WRT_PWR_TRIPLETS_TABLE_TYPE              // M
#define P_SDAT_INFO                         65011  // SBR,START_DATE,PROJECT,SN,INTERFACE,TESTER,SLOT_NUM,TEMP,VOLTS_5,VOLTS_12,MULTI,MAX_CONT,S_TPI,MAX_CYL
//      P_SDAT_INFO_COL_WIDTH                      //   3,        10,      7, 2,        9,     6,       8,   4,      7,       8,    5,       8,    5,      7
//      P_SDAT_INFO_COL_MASK                       //   0,         0,      0, 0,        0,     0,       0,   0,      0,       0,    0,       0,    0,      0
//      P_SDAT_INFO_COL_TYPES                      // *
//      P_SDAT_INFO_TABLE_TYPE                     // S
#define P211_VBAR_CAPS_WPPS                 65012  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BPI_CAP,TPI_CAP,WP_PICK
//      P211_VBAR_CAPS_WPPS_COL_WIDTH              //          11,        9,        10,      7,      7,      7
//      P211_VBAR_CAPS_WPPS_COL_MASK               //           1,        1,         1,      1,      1,      1
//      P211_VBAR_CAPS_WPPS_COL_TYPES              //           N,        N,         N,      N,      N,      N
//      P211_VBAR_CAPS_WPPS_TABLE_TYPE             // M
#define P_VBAR_NIBLET                       65013  // CAP_TRGT,NUM_HEADS,BPI_MIN_AVG,BPI_MAX_AVG,TPI_MRGN_FACTOR,BPI_MRGN_THRSHLD,TPI_MRGN_THRSHLD,BPI_MEAS_MRGN,TPI_MEAS_MRGN,TPI_OVERCOMP_FACTOR,BPI_OVERCOMP_FACTOR,BPI_TPI_OVERCOMP_FACTOR
//      P_VBAR_NIBLET_COL_WIDTH                    //        8,        9,         11,         11,             15,              16,              16,           13,           13,                 19,                 19,                     23
//      P_VBAR_NIBLET_COL_MASK                     //        1,        1,          1,          1,              1,               1,               1,            1,            1,                  1,                  1,                      1
//      P_VBAR_NIBLET_COL_TYPES                    //        N,        N,          N,          N,              N,               N,               N,            N,            N,                  N,                  N,                      N
//      P_VBAR_NIBLET_TABLE_TYPE                   // S
#define P_SDAT_TMR_VERF                     65014  // NUM_PTS,REVS
//      P_SDAT_TMR_VERF_COL_WIDTH                  //       7,   4
//      P_SDAT_TMR_VERF_COL_MASK                   //       0,   0
//      P_SDAT_TMR_VERF_COL_TYPES                  // *
//      P_SDAT_TMR_VERF_TABLE_TYPE                 // S
#define P_QUICK_ERR_RATE                    65015  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,RBIT,RRAW,OTF,HARD,DATA_ZONE
//      P_QUICK_ERR_RATE_COL_WIDTH                 //          11,      7,        10,   4,   4,  3,   4,        9
//      P_QUICK_ERR_RATE_COL_MASK                  //           1,      1,         1,   1,   1,  1,   1,        1
//      P_QUICK_ERR_RATE_COL_TYPES                 //           N,      N,         N,   N,   N,  N,   N,        N
//      P_QUICK_ERR_RATE_TABLE_TYPE                // M
#define P_GROWN_DEFECT_LIST                 65016  // PBA,ERR_LENGTH,RW_FLAGS,HD_PHYS_PSN,PHYS_TRK_NUM,PHYS_SECTOR
//      P_GROWN_DEFECT_LIST_COL_WIDTH              //   3,        10,       8,         11,          12,         11
//      P_GROWN_DEFECT_LIST_COL_MASK               //   1,         1,       1,          1,           1,          1
//      P_GROWN_DEFECT_LIST_COL_TYPES              //   N,         N,       V,          N,           N,          N
//      P_GROWN_DEFECT_LIST_TABLE_TYPE             // S
#define P035_PHYS_CLR                       65017  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,RD_CLR,WRT_CLR,WRT_LOSS,DIODE_TEMP
//      P035_PHYS_CLR_COL_WIDTH                    //          11,        9,        10,     6,      7,       8,        10
//      P035_PHYS_CLR_COL_MASK                     //           1,        1,         1,     1,      1,       1,         1
//      P035_PHYS_CLR_COL_TYPES                    //           N,        N,         N,     N,      N,       N,         N
//      P035_PHYS_CLR_TABLE_TYPE                   // M
#define P_SDAT_CONTROLLER_MAP               65018  // HEAD,CONT
//      P_SDAT_CONTROLLER_MAP_COL_WIDTH            //    4,   4
//      P_SDAT_CONTROLLER_MAP_COL_MASK             //    0,   0
//      P_SDAT_CONTROLLER_MAP_COL_TYPES            // *
//      P_SDAT_CONTROLLER_MAP_TABLE_TYPE           // S
#define P_SDAT_TMR_VERF_HI_RO               65019  // HD,HI_RRO_TRK,HI_RRO,HI_NRRO_TRK,HI_NRRO
//      P_SDAT_TMR_VERF_HI_RO_COL_WIDTH            //  2,        10,     6,         11,      7
//      P_SDAT_TMR_VERF_HI_RO_COL_MASK             //  0,         0,     0,          0,      0
//      P_SDAT_TMR_VERF_HI_RO_COL_TYPES            // *
//      P_SDAT_TMR_VERF_HI_RO_TABLE_TYPE           // S
#define P_SWD_ADJUSTMENT                    65020  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,DIODE_TEMP,RD_CLR_ADJ,WRT_CLR_ADJ,RD_CLR_ADJ_PCT,WRT_CLR_ADJ_PCT
//      P_SWD_ADJUSTMENT_COL_WIDTH                 //          11,        9,        10,        10,        10,         11,            14,             15
//      P_SWD_ADJUSTMENT_COL_MASK                  //           1,        1,         1,         1,         1,          1,             1,              1
//      P_SWD_ADJUSTMENT_COL_TYPES                 //           N,        N,         N,         N,         N,          N,             N,              N
//      P_SWD_ADJUSTMENT_TABLE_TYPE                // M
#define P_SDAT_PES                          65021  // TEST_ID,HD_PHYS_PSN,CYL,RAW_RO,RRO,NRRO
//      P_SDAT_PES_COL_WIDTH                       //       7,         11,  3,     6,  3,   4
//      P_SDAT_PES_COL_MASK                        //       1,          1,  1,     1,  1,   1
//      P_SDAT_PES_COL_TYPES                       //       N,          N,  N,     N,  N,   N
//      P_SDAT_PES_TABLE_TYPE                      // S
#define P_SDAT_ECCENTRICITY                 65022  // HEAD,SIN,COS,ECCENTRICITY
//      P_SDAT_ECCENTRICITY_COL_WIDTH              //    4,  3,  3,          12
//      P_SDAT_ECCENTRICITY_COL_MASK               //    0,  0,  0,           0
//      P_SDAT_ECCENTRICITY_COL_TYPES              // *
//      P_SDAT_ECCENTRICITY_TABLE_TYPE             // S
#define P035_TEMP_CAP                       65023  // HD_PHYS_PSN,HD_LGC_PSN,COLD_CAP,HOT_CAP
//      P035_TEMP_CAP_COL_WIDTH                    //          11,        10,       8,      7
//      P035_TEMP_CAP_COL_MASK                     //           1,         1,       1,      1
//      P035_TEMP_CAP_COL_TYPES                    //           N,         N,       N,      N
//      P035_TEMP_CAP_TABLE_TYPE                   // V
#define P_DAC_CLR                           65024  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,RD_HEAT_DAC,RD_CLR,RD_TEMP,WRT_HEAT_DAC,WRT_CLR,WRT_TEMP,CHK_NUM,MSRMNT_STATUS
//      P_DAC_CLR_COL_WIDTH                        //          11,      7,        10,         11,     6,      7,          12,      7,       8,      7,           13
//      P_DAC_CLR_COL_MASK                         //           1,      1,         1,          1,     1,      1,           1,      1,       1,      1,            1
//      P_DAC_CLR_COL_TYPES                        //           N,      N,         N,          N,     N,      N,           N,      N,       N,      N,            V
//      P_DAC_CLR_TABLE_TYPE                       // M
#define P_NPT_OPTI_AGERE                    65025  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TARG_T0,TARG_T1,TARG_T2,TDTARGR,RAW_ERROR_RATE,FINAL_NPT_FLAG
//      P_NPT_OPTI_AGERE_COL_WIDTH                 //          11,        9,        10,      7,      7,      7,      7,            14,            14
//      P_NPT_OPTI_AGERE_COL_MASK                  //           1,        1,         1,      1,      1,      1,      1,             1,             1
//      P_NPT_OPTI_AGERE_COL_TYPES                 //           N,        N,         N,      N,      N,      N,      N,             N,             N
//      P_NPT_OPTI_AGERE_TABLE_TYPE                // S
#define P107_DELTA_DEFECT_COUNT             65026  // HD_PHYS_PSN,HD_LGC_PSN,DELTA_DEFECT_COUNT
//      P107_DELTA_DEFECT_COUNT_COL_WIDTH          //          11,        10,                18
//      P107_DELTA_DEFECT_COUNT_COL_MASK           //           0,         0,                 0
//      P107_DELTA_DEFECT_COUNT_COL_TYPES          // *
//      P107_DELTA_DEFECT_COUNT_TABLE_TYPE         // V
#define P_THROUGHPUT_DATA                   65027  // RW_MODE,DATA_ZONE,CYL_SKEW,HD_SKEW,THROUGHPUT
//      P_THROUGHPUT_DATA_COL_WIDTH                //       7,        9,       8,      7,        10
//      P_THROUGHPUT_DATA_COL_MASK                 //       0,        0,       0,      0,         0
//      P_THROUGHPUT_DATA_COL_TYPES                // *
//      P_THROUGHPUT_DATA_TABLE_TYPE               // S
#define P_LUL_DEFECT_DIFF_HD                65028  // HD_PHYS_PSN,DEFECT_COUNT_DIFF,DEFECT_COUNT
//      P_LUL_DEFECT_DIFF_HD_COL_WIDTH             //          11,               17,          12
//      P_LUL_DEFECT_DIFF_HD_COL_MASK              //           0,                0,           0
//      P_LUL_DEFECT_DIFF_HD_COL_TYPES             // *
//      P_LUL_DEFECT_DIFF_HD_TABLE_TYPE            // V
#define P_LUL_DEFECT_DIFF_DRIVE             65029  // DEFECT_COUNT_DIFF,DEFECT_COUNT
//      P_LUL_DEFECT_DIFF_DRIVE_COL_WIDTH          //                17,          12
//      P_LUL_DEFECT_DIFF_DRIVE_COL_MASK           //                 0,           0
//      P_LUL_DEFECT_DIFF_DRIVE_COL_TYPES          // *
//      P_LUL_DEFECT_DIFF_DRIVE_TABLE_TYPE         // S
#define P109_WEDGE_FLAW_01                  65030  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,WEDGE
//      P109_WEDGE_FLAW_01_COL_WIDTH               //          11,        10,      7,    5
//      P109_WEDGE_FLAW_01_COL_MASK                //           0,         0,      0,    0
//      P109_WEDGE_FLAW_01_COL_TYPES               // *
//      P109_WEDGE_FLAW_01_TABLE_TYPE              // V
#define P109_WEDGE_FLAW_02                  65031  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,WEDGE
//      P109_WEDGE_FLAW_02_COL_WIDTH               //          11,        10,      7,    5
//      P109_WEDGE_FLAW_02_COL_MASK                //           0,         0,      0,    0
//      P109_WEDGE_FLAW_02_COL_TYPES               // *
//      P109_WEDGE_FLAW_02_TABLE_TYPE              // V
#define P109_NEW_WEDGE_FLAW                 65032  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,WEDGE
//      P109_NEW_WEDGE_FLAW_COL_WIDTH              //          11,        10,      7,    5
//      P109_NEW_WEDGE_FLAW_COL_MASK               //           0,         0,      0,    0
//      P109_NEW_WEDGE_FLAW_COL_TYPES              // *
//      P109_NEW_WEDGE_FLAW_TABLE_TYPE             // V
#define P109_VANISH_WEDGE_FLAW              65033  // HD_PHYS_PSN,HD_LGC_PSN,TRK_NUM,WEDGE
//      P109_VANISH_WEDGE_FLAW_COL_WIDTH           //          11,        10,      7,    5
//      P109_VANISH_WEDGE_FLAW_COL_MASK            //           0,         0,      0,    0
//      P109_VANISH_WEDGE_FLAW_COL_TYPES           // *
//      P109_VANISH_WEDGE_FLAW_TABLE_TYPE          // V
#define P109_WEDGE_FLAW_COUNT               65034  // HD_PHYS_PSN,HD_LGC_PSN,FLAW_CNT_01,FLAW_CNT_02,NEW_FLAW_CNT,VANISH_FLAW_CNT
//      P109_WEDGE_FLAW_COUNT_COL_WIDTH            //          11,        10,         11,         11,          12,             15
//      P109_WEDGE_FLAW_COUNT_COL_MASK             //           0,         0,          0,          0,           0,              0
//      P109_WEDGE_FLAW_COUNT_COL_TYPES            // *
//      P109_WEDGE_FLAW_COUNT_TABLE_TYPE           // V
#define P_SCREEN_DEFECTS                    65035  // SCREEN_NAME,HD_PHYS_PSN,HD_LGC_PSN,PHYS_TRK_NUM,LGC_TRK_NUM,PHYS_SECTOR,LGC_SECTOR,LBA,RW_SENSE_CODE,DIAGNOSTIC_ERR_CODE
//      P_SCREEN_DEFECTS_COL_WIDTH                 //          32,         11,        10,          12,         11,         11,        10, 15,           32,                 32
//      P_SCREEN_DEFECTS_COL_MASK                  //           1,          1,         1,           1,          1,          1,         1,  1,            1,                  1
//      P_SCREEN_DEFECTS_COL_TYPES                 //           V,          N,         N,           N,          N,          N,         N,  N,            V,                  V
//      P_SCREEN_DEFECTS_TABLE_TYPE                // S
#define P_GOTF_TABLE_SUMMARY                65036  // DBLOG_TABLE,DBLOG_COLUMN,DBLOG_FILTER_COL,DBLOG_POSITION,BUSINESS_GROUP,PF_RESULT
//      P_GOTF_TABLE_SUMMARY_COL_WIDTH             //          11,          12,              16,            14,            14,        9
//      P_GOTF_TABLE_SUMMARY_COL_MASK              //           0,           0,               0,             0,             0,        0
//      P_GOTF_TABLE_SUMMARY_COL_TYPES             // *
//      P_GOTF_TABLE_SUMMARY_TABLE_TYPE            // S
#define P_FORMAT_ZONE_ERROR_RATE            65037  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ECC_LEVEL,NUM_READ_RETRIES,BITS_READ_LOG10,HARD_ERROR_RATE,SOFT_ERROR_RATE,OTF_ERROR_RATE,RAW_ERROR_RATE,BITS_WRITTEN_LOG10,BITS_UNWRITEABLE_LOG10,BITS_WITH_WRT_RETRY_LOG10,SYMBOLS_READ_LOG10,SYMBOL_ERROR_RATE
//      P_FORMAT_ZONE_ERROR_RATE_COL_WIDTH         //          11,        9,        10,        9,              16,             15,             15,             15,            14,            14,                18,                    22,                       25,                18,               17
//      P_FORMAT_ZONE_ERROR_RATE_COL_MASK          //           1,        1,         1,        1,               1,              1,              1,              1,             1,             1,                 1,                     1,                        1,                 1,                1
//      P_FORMAT_ZONE_ERROR_RATE_COL_TYPES         //           N,        N,         N,        N,               N,              N,              N,              N,             N,             N,                 N,                     N,                        N,                 N,                N
//      P_FORMAT_ZONE_ERROR_RATE_TABLE_TYPE        // M
#define P_DOS_VERIFY                        65038  // NUM_GLIST_DEFECTS,NUM_PENDING_LIST_DEFECTS,NUM_DOS_CRITICAL_EVENTS
//      P_DOS_VERIFY_COL_WIDTH                     //                17,                      24,                     23
//      P_DOS_VERIFY_COL_MASK                      //                 1,                       1,                      1
//      P_DOS_VERIFY_COL_TYPES                     //                 N,                       N,                      N
//      P_DOS_VERIFY_TABLE_TYPE                    // S
#define P_DICE_FAIL_HEADS                   65039  // HD_PHYS_PSN,TEST_MODE,FAIL_CODE,TEST_TIME
//      P_DICE_FAIL_HEADS_COL_WIDTH                //          11,        9,        9,        9
//      P_DICE_FAIL_HEADS_COL_MASK                 //           0,        0,        0,        0
//      P_DICE_FAIL_HEADS_COL_TYPES                // *
//      P_DICE_FAIL_HEADS_TABLE_TYPE               // S
#define P_VBAR_FORMAT_SUMMARY               65040  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,BPI_CAP,BPI_INTERPOLATED,BPI_PICK,BPI_MRGN,BPI_TABLE_NUM,TPI_CAP,TPI_INTERPOLATED,TPI_PICK,TPI_MRGN,TPI_TABLE_NUM,ADC
//      P_VBAR_FORMAT_SUMMARY_COL_WIDTH            //          11,        9,        10,      7,              16,       8,       8,           13,      7,              16,       8,       8,           13,  6
//      P_VBAR_FORMAT_SUMMARY_COL_MASK             //           1,        1,         1,      1,               1,       1,       1,            1,      1,               1,       1,       1,            1,  1
//      P_VBAR_FORMAT_SUMMARY_COL_TYPES            //           N,        N,         N,      N,               V,       N,       N,            N,      N,               V,       N,       N,            N,  N
//      P_VBAR_FORMAT_SUMMARY_TABLE_TYPE           // S
#define P_VBAR_CAP_SUMMARY_BY_HD            65041  // HD_PHYS_PSN,HD_LGC_PSN,BPI_CAP_AVG,BPI_CAP_MIN,BPI_MRGN_AVG,BPI_MRGN_MIN,VZB_TABLE,TPI_CAP_AVG,TPI_CAP_MIN,TPI_MRGN_AVG,TPI_MRGN_MIN
//      P_VBAR_CAP_SUMMARY_BY_HD_COL_WIDTH         //          11,        10,         11,         11,          12,          12,        9,         11,         11,          12,          12
//      P_VBAR_CAP_SUMMARY_BY_HD_COL_MASK          //           1,         1,          1,          1,           1,           1,        1,          1,          1,           1,           1
//      P_VBAR_CAP_SUMMARY_BY_HD_COL_TYPES         //           N,         N,          N,          N,           N,           N,        N,          N,          N,           N,           N
//      P_VBAR_CAP_SUMMARY_BY_HD_TABLE_TYPE        // S
#define P_VBAR_WRT_FAULT_SUMMARY            65042  // HD_PHYS_PSN,HD_LGC_PSN,TPI_MRGN_MIN,WRT_FAULT_ADJUSTMENT,WRT_FAULT_FINAL
//      P_VBAR_WRT_FAULT_SUMMARY_COL_WIDTH         //          11,        10,          12,                  20,             15
//      P_VBAR_WRT_FAULT_SUMMARY_COL_MASK          //           1,         1,           1,                   1,              1
//      P_VBAR_WRT_FAULT_SUMMARY_COL_TYPES         //           N,         N,           N,                   N,              N
//      P_VBAR_WRT_FAULT_SUMMARY_TABLE_TYPE        // S
#define P000_DEPOP_HEADS                    65043  // HD_PHYS_PSN
//      P000_DEPOP_HEADS_COL_WIDTH                 //          11
//      P000_DEPOP_HEADS_COL_MASK                  //           0
//      P000_DEPOP_HEADS_COL_TYPES                 // *
//      P000_DEPOP_HEADS_TABLE_TYPE                // S
#define P_HEAD_ERROR_RATE                   65044  // HD_PHYS_PSN,HD_LGC_PSN,BITS_READ_LOG10,HARD_ERROR_RATE,SOFT_ERROR_RATE,OTF_ERROR_RATE,RAW_ERROR_RATE,SYMBOLS_READ_LOG10,SYMBOL_ERROR_RATE,BITS_WRITTEN_LOG10,BITS_UNWRITEABLE_LOG10,BITS_WITH_WRT_RETRY_LOG10
//      P_HEAD_ERROR_RATE_COL_WIDTH                //          11,        10,             15,             15,             15,            14,            14,                18,               17,                18,                    22,                       25
//      P_HEAD_ERROR_RATE_COL_MASK                 //           1,         1,              1,              1,              1,             1,             1,                 1,                1,                 1,                     1,                        1
//      P_HEAD_ERROR_RATE_COL_TYPES                //           N,         N,              N,              N,              N,             N,             N,                 N,                N,                 N,                     N,                        N
//      P_HEAD_ERROR_RATE_TABLE_TYPE               // S
#define P_VBAR_HMS_ADJUST                   65045  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ITERATION,HMS_CAP,HMS_MRGN,BPI_ADJ,CUM_BPI_ADJ,BPI_CAP,BPI_PICK,TPI_PICK,ACTIVE_ZONE,OUT_OF_SPEC,TPI_CAP,TGT_WRT_CLR,CAP_PENALTY
//      P_VBAR_HMS_ADJUST_COL_WIDTH                //          11,        10,        9,        9,      7,       8,      7,         11,      7,       8,       8,         11,         11,      7,         11,         11
//      P_VBAR_HMS_ADJUST_COL_MASK                 //           1,         1,        1,        1,      1,       1,      1,          1,      1,       1,       1,          1,          1,      1,          1,          1
//      P_VBAR_HMS_ADJUST_COL_TYPES                //           N,         N,        N,        N,      N,       N,      N,          N,      N,       N,       N,          N,          V,      N,          N,          N
//      P_VBAR_HMS_ADJUST_TABLE_TYPE               // S
#define P211_TPI_MARGIN_HISTOGRAM           65046  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TPI_MRGN,BIN_COUNT
//      P211_TPI_MARGIN_HISTOGRAM_COL_WIDTH        //          11,        10,        9,       8,        9
//      P211_TPI_MARGIN_HISTOGRAM_COL_MASK         //           1,         1,        1,       1,        1
//      P211_TPI_MARGIN_HISTOGRAM_COL_TYPES        //           N,         N,        N,       N,        N
//      P211_TPI_MARGIN_HISTOGRAM_TABLE_TYPE       // S
#define P_POWER_MEASUREMENT                 65047  // TEST_NUM,PRM_NAME,AVG_5V_PWR_PRE_TEST,AVG_5V_PWR_TEST,AVG_5V_PWR_POST_TEST,MAX_5V_PWR_TEST,AVG_12V_PWR_PRE_TEST,AVG_12V_PWR_TEST,AVG_12V_PWR_POST_TEST,MAX_12V_PWR_TEST,NUM_SAMPLES_COLLECTED,SAMPLE_TIME
//      P_POWER_MEASUREMENT_COL_WIDTH              //        8,      45,                 19,             15,                  20,             15,                  20,              16,                   21,              16,                   21,         11
//      P_POWER_MEASUREMENT_COL_MASK               //        1,       1,                  1,              1,                   1,              1,                   1,               1,                    1,               1,                    1,          1
//      P_POWER_MEASUREMENT_COL_TYPES              //        N,       V,                  N,              N,                   N,              N,                   N,               N,                    N,               N,                    N,          N
//      P_POWER_MEASUREMENT_TABLE_TYPE             // S
#define P_GEMINI_ATTRIBUTES                 65048  // OPERATION,EQUIP_ID,SLOT,CELL_SN,RISER_SN,RISER_EXT,RISER_TYPE,RIM_TYPE,DRIVE_FAN_RPM,ELEC_FAN_RPM,CELL_TEMP,HOST_VER,CM_VERSION,CONFIG_NAME,INITIATOR_CODE_VER,INITIATOR_MODEL_NUM,INITIATOR_SERIAL_NUM,VIB_LOCK_TIME,CPC_LOCK_TIME,HEATER_LOCK_TIME
//      P_GEMINI_ATTRIBUTES_COL_WIDTH              //         9,       8,   6,      7,      32,       16,        16,      16,           13,          12,        9,      24,        16,         20,                32,                 20,                  20,           13,           13,              16
//      P_GEMINI_ATTRIBUTES_COL_MASK               //         1,       1,   1,      1,       1,        1,         1,       1,            1,           1,        1,       1,         1,          1,                 1,                  1,                   1,            1,            1,               1
//      P_GEMINI_ATTRIBUTES_COL_TYPES              //         V,       V,   V,      V,       V,        V,         V,       V,            N,           N,        N,       V,         V,          V,                 V,                  V,                   V,            N,            N,               N
//      P_GEMINI_ATTRIBUTES_TABLE_TYPE             // S
#define P_AFH_MEASURED_TCC                  65049  // HD_PHYS_PSN,DATA_ZONE,SPC_ID,OCCURRENCE,SEQ,TEST_SEQ_EVENT,HD_LGC_PSN,ACTUATION_MODE,WRT_CLR_1,TEMP_1,WRT_CLR_2,TEMP_2,UNMODIFIED_SLOPE_MSRMNT,UNMODIFIED_THERMAL_CLR_COEF_1,MODIFIED_SLOPE_LSL,MODIFIED_SLOPE_USL,MODIFIED_THERMAL_CLR_COEF_1,THERMAL_CLR_COEF_2
//      P_AFH_MEASURED_TCC_COL_WIDTH               //          11,        9,     6,        10,  3,            13,        10,            14,        9,     6,        9,     6,                     23,                           29,                18,                18,                         27,                18
//      P_AFH_MEASURED_TCC_COL_MASK                //           0,        0,     0,         0,  0,             0,         0,             0,        0,     0,        0,     0,                      0,                            0,                 0,                 0,                          0,                 0
//      P_AFH_MEASURED_TCC_COL_TYPES               // *
//      P_AFH_MEASURED_TCC_TABLE_TYPE              // M
#define P_AFH_DH_MEASURED_TCC               65050  // HD_PHYS_PSN,ACTIVE_HEATER,DATA_ZONE,HD_LGC_PSN,CLR_ACTUATION_MODE,WRT_CLR_1,TEMP_1,WRT_CLR_2,TEMP_2,RAW_SLOPE_MSRMNT,RAW_TCC_1,MOD_SLOPE_LSL,MOD_SLOPE_USL,MOD_TCC_1,RAW_TCC_2
//      P_AFH_DH_MEASURED_TCC_COL_WIDTH            //          11,           13,        9,        10,                18,        9,     7,        9,     7,              16,        9,           13,           13,        9,        9
//      P_AFH_DH_MEASURED_TCC_COL_MASK             //           1,            1,        1,         1,                 1,        1,     1,        1,     1,               1,        1,            1,            1,        1,        1
//      P_AFH_DH_MEASURED_TCC_COL_TYPES            //           N,            V,        N,         N,                 V,        N,     N,        N,     N,               N,        N,            N,            N,        N,        N
//      P_AFH_DH_MEASURED_TCC_TABLE_TYPE           // S
#define P211_SER_VS_CLEARANCE               65051  // HD_PHYS_PSN,ZONE,HD_LGC_PSN,TRACK_NUM,SER_VS_CLEARANCE_SLOPE,SER_VS_CLEARANCE_INTERCEPT,SER_VS_CLEARANCE_RSQUARED
//      P211_SER_VS_CLEARANCE_COL_WIDTH            //          11,   4,        10,        9,                    22,                        26,                       25
//      P211_SER_VS_CLEARANCE_COL_MASK             //           0,   0,         0,        0,                     0,                         0,                        0
//      P211_SER_VS_CLEARANCE_COL_TYPES            // *
//      P211_SER_VS_CLEARANCE_TABLE_TYPE           // S
#define P_AFH_DH_CONSISTENCY_CHK            65052  // HD_PHYS_PSN,DATA_ZONE,RETRY_NUM,HD_LGC_PSN,CLR_ACTUATION_MODE,TRIMMED_MEAN,TRIMMED_MEAN_LSL,TRIMMED_MEAN_USL,WINSORIZED_STD_DEV,WINSORIZED_STD_DEV_LSL,WINSORIZED_STD_DEV_USL,POINTS_IN_ERR_CNT,POINTS_IN_ERR_ALLOWED,MAX_CLR_DELTA,CHK_FAIL_CRITERIA
//      P_AFH_DH_CONSISTENCY_CHK_COL_WIDTH         //          11,        9,        9,        10,                18,          12,              16,              16,                18,                    22,                    22,               17,                   21,           13,               17
//      P_AFH_DH_CONSISTENCY_CHK_COL_MASK          //           1,        1,        1,         1,                 1,           1,               1,               1,                 1,                     1,                     1,                1,                    1,            1,                1
//      P_AFH_DH_CONSISTENCY_CHK_COL_TYPES         //           N,        N,        N,         N,                 V,           N,               N,               N,                 N,                     N,                     N,                N,                    N,            N,                V
//      P_AFH_DH_CONSISTENCY_CHK_TABLE_TYPE        // S
#define P_AFH_DH_BURNISH_CHECK              65053  // HD_PHYS_PSN,TEST_PSN,TEST_TYPE,ACTIVE_HEATER,CLR_ACTUATION_MODE,HD_LGC_PSN,WRT_HTR_CLR_1,WRT_HTR_CLR_2,MOD_CALC_AVG_1,MOD_CALC_AVG_2,DELTA_BURNISH_CHECK,BURNISH_USL,HD_STATUS,BURNISH_LSL
//      P_AFH_DH_BURNISH_CHECK_COL_WIDTH           //          11,       8,       15,           13,                18,        10,           13,           13,            14,            14,                 19,         11,        9,         11
//      P_AFH_DH_BURNISH_CHECK_COL_MASK            //           1,       1,        1,            1,                 1,         1,            1,            1,             1,             1,                  1,          1,        1,          1
//      P_AFH_DH_BURNISH_CHECK_COL_TYPES           //           N,       N,        V,            V,                 V,         N,            N,            N,             N,             N,                  N,          N,        N,          N
//      P_AFH_DH_BURNISH_CHECK_TABLE_TYPE          // S
#define P_WEAK_WRITE_BER_DELTA              65054  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,BITS_READ_LOG10,HARD_ERROR_RATE,HARD_ERROR_DELTA,OTF_ERROR_RATE,OTF_ERROR_DELTA,RAW_ERROR_RATE,RAW_ERROR_DELTA
//      P_WEAK_WRITE_BER_DELTA_COL_WIDTH           //          11,        10,        9,             15,             15,              16,            14,             15,            14,             15
//      P_WEAK_WRITE_BER_DELTA_COL_MASK            //           1,         1,        1,              1,              1,               1,             1,              1,             1,              1
//      P_WEAK_WRITE_BER_DELTA_COL_TYPES           //           N,         N,        N,              N,              N,               N,             N,              N,             N,              N
//      P_WEAK_WRITE_BER_DELTA_TABLE_TYPE          // S
#define P_GLIST_SUM                         65055  // GLIST_ENTRY_CNT
//      P_GLIST_SUM_COL_WIDTH                      //              18
//      P_GLIST_SUM_COL_MASK                       //               1
//      P_GLIST_SUM_COL_TYPES                      //               N
//      P_GLIST_SUM_TABLE_TYPE                     // S
#define P250_LBA_INFO_DEBUG                 65056  // FAILURE_DESCRIPTION,HD_PHYS_PSN,ZONE,TRK_NUM
//      P250_LBA_INFO_DEBUG_COL_WIDTH              //                  30,         11,   4,      7
//      P250_LBA_INFO_DEBUG_COL_MASK               //                   0,          0,   0,      0
//      P250_LBA_INFO_DEBUG_COL_TYPES              // *
//      P250_LBA_INFO_DEBUG_TABLE_TYPE             // M
#define P_USER_SLIP_LIST                    65057  // SLIP_LIST_ENTRIES,TOTAL_SPARE_SECTORS
//      P_USER_SLIP_LIST_COL_WIDTH                 //                17,                 19
//      P_USER_SLIP_LIST_COL_MASK                  //                 1,                  1
//      P_USER_SLIP_LIST_COL_TYPES                 //                 N,                  N
//      P_USER_SLIP_LIST_TABLE_TYPE                // S
#define P_VBAR_SMR_MEASUREMENT              65058  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,BPI_CAP,SQZ_TYPE,MSRD_BPI,SQZ_CAP
//      P_VBAR_SMR_MEASUREMENT_COL_WIDTH           //          11,        10,        9,      7,       8,       8,      7
//      P_VBAR_SMR_MEASUREMENT_COL_MASK            //           1,         1,        1,      1,       1,       1,      1
//      P_VBAR_SMR_MEASUREMENT_COL_TYPES           //           N,         N,        N,      N,       N,       N,      N
//      P_VBAR_SMR_MEASUREMENT_TABLE_TYPE          // S
#define P_TEMPERATURES                      65059  // STATE_NAME,DRIVE_TEMP,CELL_TEMP,REQ_TEMP,INPUT_TEMP,OUTPUT_TEMP,ELEC_TEMP,DRIVE_FAN_RPM,ELEC_FAN_RPM,HEAT_DEMAND,COOL_DEMAND,PWR_5V,PWR_12V
//      P_TEMPERATURES_COL_WIDTH                   //         20,        10,        9,       8,        10,         11,        9,           13,          12,         11,         11,     6,      7
//      P_TEMPERATURES_COL_MASK                    //          1,         1,        1,       1,         1,          1,        1,            1,           1,          1,          1,     1,      1
//      P_TEMPERATURES_COL_TYPES                   //          V,         N,        N,       N,         N,          N,        N,            N,           N,          N,          N,     N,      N
//      P_TEMPERATURES_TABLE_TYPE                  // S
#define P_VIB_LOCK_TIME                     65060  // TEST_NUMBER,PARAMETER_NAME,VIB_LOCK_TIME
//      P_VIB_LOCK_TIME_COL_WIDTH                  //          11,            40,           13
//      P_VIB_LOCK_TIME_COL_MASK                   //           1,             1,            1
//      P_VIB_LOCK_TIME_COL_TYPES                  //           N,             V,            N
//      P_VIB_LOCK_TIME_TABLE_TYPE                 // S
#define P_GLIST_SUM_HD                      65061  // HD_PHYS_PSN,HD_LGC_PSN,GLIST_ENTRY_CNT
//      P_GLIST_SUM_HD_COL_WIDTH                   //          11,        10,             18
//      P_GLIST_SUM_HD_COL_MASK                    //           1,         1,              1
//      P_GLIST_SUM_HD_COL_TYPES                   //           N,         N,              N
//      P_GLIST_SUM_HD_TABLE_TYPE                  // S
#define P_SETTLING_SUMMARY                  65062  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,WRT_CLRNC,DWELL_TIME,HARD_ERR_RATE_SETTLE,RAW_ERR_RATE_SETTLE,HARD_ERR_RATE_TIME_0,RAW_ERR_RATE_TIME_0,RAP_TARGET_WRT_CLRNC,HD_CLRNC_SETTLE,SETTLE_SLOPE,SETTLE_INTERCEPT,SETTLE_R_SQUARED,BPI_CAP_VBAR,TPI_CAP_VBAR,HMS_CAP_VBAR,HMS_MRGN_VBAR,TEMP_VBAR,HMS_CAP_1,HMS_MRGN_1,TEMP_CUR_1,DELTA_HMS_CAP_1,DELTA_TEMP_1,HMS_CAP_INIT
//      P_SETTLING_SUMMARY_COL_WIDTH               //          11,        10,        9,        9,        10,                  20,                 19,                  20,                 19,                  20,             15,          12,              16,              16,          12,          12,          12,           13,        9,        9,        10,        10,             15,          12,          12
//      P_SETTLING_SUMMARY_COL_MASK                //           1,         1,        1,        1,         1,                   1,                  1,                   1,                  1,                   1,              1,           1,               1,               1,           1,           1,           1,            1,        1,        1,         1,         1,              1,           1,           1
//      P_SETTLING_SUMMARY_COL_TYPES               //           N,         N,        N,        N,         N,                   N,                  N,                   N,                  N,                   N,              N,           N,               N,               N,           N,           N,           N,            N,        N,        N,         N,         N,              N,           N,           N
//      P_SETTLING_SUMMARY_TABLE_TYPE              // S
#define P_VBAR_MEASUREMENTS                 65063  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,WRT_PWR_NDX,BPI_CAP,TPI_CAP,HMS_CAP,ADC
//      P_VBAR_MEASUREMENTS_COL_WIDTH              //          11,        10,        9,         11,      7,      7,      7,  7
//      P_VBAR_MEASUREMENTS_COL_MASK               //           0,         0,        0,          0,      0,      0,      0,  0
//      P_VBAR_MEASUREMENTS_COL_TYPES              // *
//      P_VBAR_MEASUREMENTS_TABLE_TYPE             // S
#define P_TCS_SUMMARY                       65064  // HD_PHYS_PSN,HD_LGC_PSN,HMS_HOT,TEMP_HOT,HMS_COLD,TEMP_COLD,TCS,ADD_TCS_COLD_DTC,ADD_TCS_HOT_DTH,HMS_CAP_COLD,HMS_CAP_HOT,MEAN_HMS_CAP_COLD
//      P_TCS_SUMMARY_COL_WIDTH                    //          11,        10,      7,       8,       8,        9,  7,              16,             15,          12,         11,               17
//      P_TCS_SUMMARY_COL_MASK                     //           1,         1,      1,       1,       1,        1,  1,               1,              1,           1,          1,                1
//      P_TCS_SUMMARY_COL_TYPES                    //           N,         N,      N,       N,       N,        N,  N,               N,              N,           N,          N,                N
//      P_TCS_SUMMARY_TABLE_TYPE                   // S
#define P_TCS_ZN_SUMMARY                    65065  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,HMS_HOT,TEMP_HOT,HMS_COLD,TEMP_COLD,TCS,HMS_CAP_COLD,HMS_CAP_HOT
//      P_TCS_ZN_SUMMARY_COL_WIDTH                 //          11,        10,        9,      7,       8,       8,        9,  7,          12,         11
//      P_TCS_ZN_SUMMARY_COL_MASK                  //           1,         1,        1,      1,       1,       1,        1,  1,           1,          1
//      P_TCS_ZN_SUMMARY_COL_TYPES                 //           N,         N,        N,      N,       N,       N,        N,  N,           N,          N
//      P_TCS_ZN_SUMMARY_TABLE_TYPE                // S
#define P211_M_BPI_MEASUREMENT              65066  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,DELTA_BPI_PCT,N_VAL,R_VAL,D_VAL,SECTOR_ERROR_RATE,BANDWIDTH,BANDWIDTH_RNG,TW_3,TW_5,PRECOMP,BOOST,R32,R44,R46,R52
//      P211_M_BPI_MEASUREMENT_COL_WIDTH           //          11,        9,        10,      7,           13,    5,    5,    5,               17,        9,           13,   4,   4,      7,    5,  3,  3,  3,  3
//      P211_M_BPI_MEASUREMENT_COL_MASK            //           0,        0,         0,      0,            0,    0,    0,    0,                0,        0,            0,   0,   0,      0,    0,  0,  0,  0,  0
//      P211_M_BPI_MEASUREMENT_COL_TYPES           // *
//      P211_M_BPI_MEASUREMENT_TABLE_TYPE          // M
#define P211_M_BPI_INIT                     65067  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,ORIG_N,ORIG_R,ORIG_D,R32,R44,R46,R52,F_STEP,STEP_PCT
//      P211_M_BPI_INIT_COL_WIDTH                  //          11,      7,        10,     6,     6,     6,  4,  4,  4,  4,     6,       8
//      P211_M_BPI_INIT_COL_MASK                   //           0,      0,         0,     0,     0,     0,  0,  0,  0,  0,     0,       0
//      P211_M_BPI_INIT_COL_TYPES                  // *
//      P211_M_BPI_INIT_TABLE_TYPE                 // M
#define P211_M_TPI_INIT                     65068  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,BPI_PCT,ORIG_N,ORIG_R,ORIG_D,NEW_N,NEW_R,NEW_D,BANDWIDTH,BANDWIDTH_RNG,TW_3,TW_5,PRECOMP,BOOST
//      P211_M_TPI_INIT_COL_WIDTH                  //          11,      7,        10,      7,     6,     6,     5,    5,    5,    5,       10,           13,   4,   4,      7,    5
//      P211_M_TPI_INIT_COL_MASK                   //           0,      0,         0,      0,     0,     0,     0,    0,    0,    0,        0,            0,   0,   0,      0,    0
//      P211_M_TPI_INIT_COL_TYPES                  // *
//      P211_M_TPI_INIT_TABLE_TYPE                 // M
#define P109_M_FREQUENCY_SETTINGS           65069  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,DESC,N,R,D,SEQ_SG2WG,SEQ_SG2RG,FB_GAS,FB_GBS,FB_IPLO,SEQ_IPLO,SCALAR,WEDGE_SIZE
//      P109_M_FREQUENCY_SETTINGS_COL_WIDTH        //          11,        10,   4,   8,3,3,3,        9,        9,     6,     6,      7,       8,     6,        10
//      P109_M_FREQUENCY_SETTINGS_COL_MASK         //           0,         0,   0,   0,0,0,0,        0,        0,     0,     0,      0,       0,     0,         0
//      P109_M_FREQUENCY_SETTINGS_COL_TYPES        // *
//      P109_M_FREQUENCY_SETTINGS_TABLE_TYPE       // S
#define P_FAILING_TEST                      65070  // STATE_NAME,FAILING_TEST,ERROR_CODE,PARAM_FILE_NAME,FAILED_HD_PHYS_PSN,FAILING_ZONE,TEST_ACTION,TEST_ID
//      P_FAILING_TEST_COL_WIDTH                   //         10,          12,        10,             50,                18,          12,         11,      7
//      P_FAILING_TEST_COL_MASK                    //          1,           1,         1,              1,                 1,           1,          1,      1
//      P_FAILING_TEST_COL_TYPES                   //          V,           V,         N,              V,                 N,           N,          V,      V
//      P_FAILING_TEST_TABLE_TYPE                  // S
#define P_VBAR_INITIAL_PICKS                65071  // HD_LGC_PSN,DATA_ZONE,BPI_CAP,BPI_TABLE_NUM,BPI_PICK,BPI_MRGN,TPI_CAP,TPI_TABLE_NUM,TPI_PICK,TPI_MRGN,HD_PHYS_PSN
//      P_VBAR_INITIAL_PICKS_COL_WIDTH             //         10,        9,      7,           13,       8,       8,      7,           13,       8,       8,         11
//      P_VBAR_INITIAL_PICKS_COL_MASK              //          0,        0,      0,            0,       0,       0,      0,            0,       0,       0,          0
//      P_VBAR_INITIAL_PICKS_COL_TYPES             // *
//      P_VBAR_INITIAL_PICKS_TABLE_TYPE            // S
#define P_VBAR_PICKER_FMT_ADJUST            65072  // COMPUTED_CAP_GB,AVE_DENSITY,HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,OP_MODE,CAP_ADJUST,FMT_TYPE,RELATIVE_PICK,SELECTED_FORMAT,BPI_AVE
//      P_VBAR_PICKER_FMT_ADJUST_COL_WIDTH         //              15,         11,         11,        10,        9,      7,        10,       8,           13,             15,      7
//      P_VBAR_PICKER_FMT_ADJUST_COL_MASK          //               0,          0,          0,         0,        0,      0,         0,       0,            0,              0,      0
//      P_VBAR_PICKER_FMT_ADJUST_COL_TYPES         // *
//      P_VBAR_PICKER_FMT_ADJUST_TABLE_TYPE        // S
#define P_VBAR_PICKER_RESULTS               65073  // TARGET_CAPACITY,FINAL_DENSITY,TARGET_CAP_GB,COMPUTED_CAP_GB,MIN_BPI_AVE_LIMIT,BPI_AVE,MAX_BPI_AVE_LIMIT
//      P_VBAR_PICKER_RESULTS_COL_WIDTH            //              15,           13,           13,             15,               17,      7,               17
//      P_VBAR_PICKER_RESULTS_COL_MASK             //               0,            0,            0,              0,                0,      0,                0
//      P_VBAR_PICKER_RESULTS_COL_TYPES            // *
//      P_VBAR_PICKER_RESULTS_TABLE_TYPE           // S
#define P_NEG_BURNISH_FAIL                  65074  // HD_PHYS_PSN,HD_LGC_PSN,MEDIAN_DELTA_DAC,AVERAGE_DELTA_BER,HD_REWORK_FLG
//      P_NEG_BURNISH_FAIL_COL_WIDTH               //          11,        10,              16,               17,           13
//      P_NEG_BURNISH_FAIL_COL_MASK                //           1,         1,               1,                1,            1
//      P_NEG_BURNISH_FAIL_COL_TYPES               //           N,         N,               N,                N,            N
//      P_NEG_BURNISH_FAIL_TABLE_TYPE              // S
#define P_BURNISH_SUMMARY_2                 65075  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,HEATER,PREAMP_MFGR,FIRST_MSRD_CNTCT_DAC,FIRST_INTRPLTD_CNTCT_DAC,CURRENT_MSRD_CNTCT_DAC,CURRENT_INTRPLTD_CNTCT_DAC,THCC_MSRD_CNTCT_DAC,DELTA_CNTCT_DAC,POS_DELTA_LIMIT_DAC,NEG_DELTA_LIMIT_DAC,FIRST_DTCTR_MASK,FIRST_SNR_DTCTR_1,FIRST_SNR_DTCTR_2,FIRST_SNR_DTCTR_3,FIRST_SNR_DTCTR_4,FIRST_SNR_DTCTR_5,FIRST_SNR_DTCTR_6,CURRENT_DTCTR_MASK,CURRENT_SNR_DTCTR_1,CURRENT_SNR_DTCTR_2,CURRENT_SNR_DTCTR_3,CURRENT_SNR_DTCTR_4,CURRENT_SNR_DTCTR_5,CURRENT_SNR_DTCTR_6,FIRST_TEMP,CURRENT_TEMP,DELTA_TEMP,FIRST_MIX_RATIO,FIRST_RAW_HUMIDITY,CURRENT_MIX_RATIO,CURRENT_RAW_HUMIDITY,FIRST_RES,CURRENT_RES,DELTA_RES,FIRST_ERROR_RATE10,CURRENT_ERROR_RATE10,DELTA_ERROR_RATE10,FIRST_X_LIN_COEF,FIRST_X_QUAD_COEF,FIRST_RD_ACTN_CONTACT,FIRST_HIRP_RMS_ERR,CURRENT_X_LIN_COEF,CURRENT_X_QUAD_COEF,CURRENT_RD_ACTN_CONTACT,CURRENT_HIRP_RMS_ERR,FIRST_MEAN_COV_AGC,FIRST_COV_AGC_PCT,CURRENT_MEAN_COV_AGC,CURRENT_COV_AGC_PCT,ERROR_CODE,FIRST_EXT_RETRY_CNT,FIRST_CALC_HUMIDITY,FIRST_PRESSURE,CURRENT_PRESSURE,STARTING_DETCR_RES,CURRENT_DETCR_RES,FIRST_DETCR_MEAN_BSLN_THRSHLD,FIRST_DETCR_MAX_BSLN_THRSHLD,FIRST_DETCR_STDEV_BSLN_THRSHLD,CUR_DETCR_MEAN_BSLN_THRSHLD,CUR_DETCR_MAX_BSLN_THRSHLD,CUR_DETCR_STDEV_BSLN_THRSHLD,STABILITY_SCORE,CONTAMINATION_SCORE,STATUS_CODE
//      P_BURNISH_SUMMARY_2_COL_WIDTH              //          11,        10,        9,     7,         11,                  20,                      24,                    22,                        26,                 19,             15,                 19,                 19,              16,               17,               17,               17,               17,               17,               17,                18,                 19,                 19,                 19,                 19,                 19,                 19,        10,          12,        10,             15,                18,               17,                  20,        9,         11,        9,                18,                  20,                18,              16,               17,                   21,                18,                18,                 19,                     23,                  20,                18,               17,                  20,                 19,        10,                 19,                 19,            14,              16,                18,               17,                           29,                          28,                            30,                         27,                        26,                          28,             15,                 19,         11
//      P_BURNISH_SUMMARY_2_COL_MASK               //           1,         1,        1,     1,          1,                   1,                       1,                     1,                         1,                  1,              1,                  1,                  1,               1,                1,                1,                1,                1,                1,                1,                 1,                  1,                  1,                  1,                  1,                  1,                  1,         1,           1,         1,              1,                 1,                1,                   1,        1,          1,        1,                 1,                   1,                 1,               1,                1,                    1,                 1,                 1,                  1,                      1,                   1,                 1,                1,                   1,                  1,         1,                  1,                  1,             1,               1,                 1,                1,                            1,                           1,                             1,                          1,                         1,                           1,              1,                  1,          1
//      P_BURNISH_SUMMARY_2_COL_TYPES              //           N,         N,        N,     V,          V,                   N,                       N,                     N,                         N,                  N,              N,                  N,                  N,               V,                N,                N,                N,                N,                N,                N,                 V,                  N,                  N,                  N,                  N,                  N,                  N,         N,           N,         N,              N,                 N,                N,                   N,        N,          N,        N,                 N,                   N,                 N,               N,                N,                    N,                 N,                 N,                  N,                      N,                   N,                 N,                N,                   N,                  N,         V,                  N,                  N,             N,               N,                 N,                N,                            N,                           N,                             N,                          N,                         N,                           N,              N,                  N,          V
//      P_BURNISH_SUMMARY_2_TABLE_TYPE             // S
#define P_HUMIDITY_SUMMARY                  65076  // OPERATION,STATUS,ERROR_CODE,NUM_SAMPLES_MSRD,INITIAL_HUMIDITY,FINAL_HUMIDITY,HUMIDITY_MEAN,HUMIDITY_SIGMA,HUMIDITY_RANGE,HUMIDITY_LEAK_RATE,TEMP_MEAN,TEMP_SIGMA,TEMP_RANGE
//      P_HUMIDITY_SUMMARY_COL_WIDTH               //         9,     7,        10,              16,              16,            14,           13,            14,            14,                18,        9,        10,        10
//      P_HUMIDITY_SUMMARY_COL_MASK                //         1,     1,         1,               1,               1,             1,            1,             1,             1,                 1,        1,         1,         1
//      P_HUMIDITY_SUMMARY_COL_TYPES               //         V,     V,         N,               N,               N,             N,            N,             N,             N,                 N,        N,         N,         N
//      P_HUMIDITY_SUMMARY_TABLE_TYPE              // S
#define P_CLEARANCE_RESET                   65077  // HD_PHYS_PSN,HD_LGC_PSN,STAGE_DESCRIPTION,MEAN_DELTA_CNTCT_DAC,MEAN_DELTA_BER,CLR_RESET_FLAG
//      P_CLEARANCE_RESET_COL_WIDTH                //          11,        10,               17,                  20,            14,            14
//      P_CLEARANCE_RESET_COL_MASK                 //           1,         1,                1,                   1,             1,             1
//      P_CLEARANCE_RESET_COL_TYPES                //           N,         N,                V,                   N,             N,             N
//      P_CLEARANCE_RESET_TABLE_TYPE               // S
#define P_VBAR_CLRNC_ADJUST                 65078  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,ADJ_TYPE,WRT_RD_HMS,ADJ_WRT_RD_HMS,WRT_CLRNC_TRGT,ADJ_WRT_CLRNC_TRGT,WRT_CLR_ADJUSTMENT,RD_HMS,ADJ_RD_HMS,RD_CLRNC_TRGT,ADJ_RD_CLRNC_TRGT,RD_CLR_ADJUSTMENT
//      P_VBAR_CLRNC_ADJUST_COL_WIDTH              //          11,        9,        10,       8,        10,            14,            14,                18,                18,     6,        10,           13,               17,               17
//      P_VBAR_CLRNC_ADJUST_COL_MASK               //           0,        0,         0,       0,         0,             0,             0,                 0,                 0,     0,         0,            0,                0,                0
//      P_VBAR_CLRNC_ADJUST_COL_TYPES              // *
//      P_VBAR_CLRNC_ADJUST_TABLE_TYPE             // S
#define P_SMR_FORMAT_SUMMARY                65079  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TPIC_S,TP_S,TPIC_D,TP_D,PICK,EFF_TPIC,BANDSIZE_RATIO,BANDSIZE_PICK,SHINGLE_TRK_PITCH,GUARD_TRK_PITCH,SHINGLE_DIR,UJOG_SQUEEZE,BANDSIZE_PHY,TRK_PITCH,TRK_GUARD,NUM_LGC_TRKS,NOM_TRKS_ALLOC,NOM_TRKS_USED,NUM_OF_BANDS
//      P_SMR_FORMAT_SUMMARY_COL_WIDTH             //          11,        9,        10,     9,   9,     9,   9,   9,       9,            14,           13,               17,             14,         11,          12,          12,        9,        9,          12,            14,           13,          12
//      P_SMR_FORMAT_SUMMARY_COL_MASK              //           1,        1,         1,     1,   1,     1,   1,   1,       1,             1,            1,                1,              1,          1,           1,           1,        1,        1,           1,             1,            1,           1
//      P_SMR_FORMAT_SUMMARY_COL_TYPES             //           N,        N,         N,     N,   N,     N,   N,   N,       N,             N,            N,                N,              N,          V,           N,           N,        N,        N,           N,             N,            N,           N
//      P_SMR_FORMAT_SUMMARY_TABLE_TYPE            // S
#define P_TIMEOUT_DUMP                      65080  // *
//      P_TIMEOUT_DUMP_COL_WIDTH                   // 0
//      P_TIMEOUT_DUMP_COL_MASK                    // 0
//      P_TIMEOUT_DUMP_COL_TYPES                   // *
//      P_TIMEOUT_DUMP_TABLE_TYPE                  // S
#define P_FILE_SIZE_BY_STATE                65081  // STATE_NAME,FILE_SIZE
//      P_FILE_SIZE_BY_STATE_COL_WIDTH             //         25,        9
//      P_FILE_SIZE_BY_STATE_COL_MASK              //          0,        0
//      P_FILE_SIZE_BY_STATE_COL_TYPES             // *
//      P_FILE_SIZE_BY_STATE_TABLE_TYPE            // S
#define P_MAX_DAC_BEYOND_CONTACT            65082  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,HEATER,HEATER_MODE,MAX_MSRD_EXT_RETRY,MAX_MSRD_INTRPLTD_RETRY,MAX_MSRD_CNTCT_DAC,INTRPLTD_CNTCT_DAC,MAX_BEYOND_CNTCT_DELTA,DELTA_SPEC
//      P_MAX_DAC_BEYOND_CONTACT_COL_WIDTH         //          11,        10,        9,     6,         11,                18,                     23,                18,                18,                    22,        10
//      P_MAX_DAC_BEYOND_CONTACT_COL_MASK          //           1,         1,        1,     1,          1,                 1,                      1,                 1,                 1,                     1,         1
//      P_MAX_DAC_BEYOND_CONTACT_COL_TYPES         //           N,         N,        N,     V,          V,                 N,                      N,                 N,                 N,                     N,         N
//      P_MAX_DAC_BEYOND_CONTACT_TABLE_TYPE        // S
#define P255_BEDF_FIR_LSI_DATA              65083  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,VSCALE2,TARG_T0,TARG_T1,TARG_T2,TAP1R,TAP2R,TAP3R,TAP4R,TAP5R,TAP6R,TAP7R,TAP8R,TAP9R,TAP10R,TAP11R,TAP12R,TAP13R,TAP14R,TAP15R,TAP16R,MAINNPCAL2,BENPTHRESH,BENPTHRESHLO
//      P255_BEDF_FIR_LSI_DATA_COL_WIDTH           //          11,        10,        9,      7,      7,      7,      7,    5,    5,    5,    5,    5,    5,    5,    5,    5,     6,     6,     6,     6,     6,     6,     6,        10,        10,          12
//      P255_BEDF_FIR_LSI_DATA_COL_MASK            //           1,         1,        1,      1,      1,      1,      1,    1,    1,    1,    1,    1,    1,    1,    1,    1,     1,     1,     1,     1,     1,     1,     1,         1,         1,           1
//      P255_BEDF_FIR_LSI_DATA_COL_TYPES           //           N,         N,        N,      N,      N,      N,      N,    N,    N,    N,    N,    N,    N,    N,    N,    N,     N,     N,     N,     N,     N,     N,     N,         N,         N,           N
//      P255_BEDF_FIR_LSI_DATA_TABLE_TYPE           // S
#define P255_BEDF_FIR_LSI                   65084  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,VSCALE2,TARG_T0,TARG_T1,TARG_T2,TAP1R,TAP2R,TAP3R,TAP4R,TAP5R,TAP6R,TAP7R,TAP8R,TAP9R,TAP10R,TAP11R,TAP12R,TAP13R,TAP14R,TAP15R,TAP16R,MAINNPCAL2,BENPTHRESH
//      P255_BEDF_FIR_LSI_COL_WIDTH                //          11,        10,   4,      7,      6,      6,      6,    5,    5,    5,    5,    5,    5,    5,    6,    6,     5,     6,     6,     6,     6,     6,     6,        10,        10
//      P255_BEDF_FIR_LSI_COL_MASK                 //           0,         0,   0,      0,      0,      0,      0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,     0,     0,     0,     0,         0,         0
//      P255_BEDF_FIR_LSI_COL_TYPES                    // *
//      P255_BEDF_FIR_LSI_TABLE_TYPE                   // S
#define P255_BENP_BIAS_LSI_XTAPS            65085  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,BIAS0,BIAS1,BIAS2,BIAS3,BIAS4,BIAS5,BIAS6,BIAS7,BIAS8,BIAS9,BIASA,BIASB,BIASC,BIASD,BIASE,BIASF,BIAS10,BIAS11,BIAS12,BIAS13,BIAS14,BIAS15,BIAS16,BIAS17,BIAS18,BIAS19,BIAS1A,BIAS1B,BIAS1C,BIAS1D,BIAS1E,BIAS1F
//      P255_BENP_BIAS_LSI_XTAPS_COL_WIDTH         //          10,        11,   4,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,     5
//      P255_BENP_BIAS_LSI_XTAPS_COL_MASK          //           0,         0,   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0
//      P255_BENP_BIAS_LSI_XTAPS_COL_TYPES         // *
//      P255_BENP_BIAS_LSI_XTAPS_TABLE_TYPE        // S
#define P255_BENP_BIAS_LSI_TAPS             65086  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,BIAS0,BIAS1,BIAS2,BIAS3,BIAS4,BIAS5,BIAS6,BIAS7,BIAS8,BIAS9,BIASA,BIASB,BIASC,BIASD,BIASE,BIASF,BIAS10,BIAS11,BIAS12,BIAS13,BIAS14,BIAS15,BIAS16,BIAS17,BIAS18,BIAS19,BIAS1A,BIAS1B,BIAS1C,BIAS1D,BIAS1E,BIAS1F
//      P255_BENP_BIAS_LSI_TAPS_COL_WIDTH          //          11,        10,        4,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6
//      P255_BENP_BIAS_LSI_TAPS_COL_MASK           //           1,         1,        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1
//      P255_BENP_BIAS_LSI_TAPS_COL_TYPES          //           N,         N,        N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,    N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N
//      P255_BENP_BIAS_LSI_TAPS_TABLE_TYPE         // S
#define P255_BENP_TAP0_1_LSI_DATA           65087  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TAP0_1,TAP0_2,TAP0_3,TAP0_4,TAP0_5,TAP0_6,TAP0_7,TAP1_0,TAP1_1,TAP1_2,TAP1_3,TAP1_4,TAP1_5,TAP1_6,TAP1_7
//      P255_BENP_TAP0_1_LSI_DATA_COL_WIDTH        //          10,        11,        4,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6
//      P255_BENP_TAP0_1_LSI_DATA_COL_MASK         //           1,         1,        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1
//      P255_BENP_TAP0_1_LSI_DATA_COL_TYPES        //           N,         N,        N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N
//      P255_BENP_TAP0_1_LSI_DATA_TABLE_TYPE       // S
#define P255_BENP_TAP2_3_LSI_DATA           65088  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TAP2_0,TAP2_1,TAP2_2,TAP2_3,TAP2_4,TAP2_5,TAP2_6,TAP2_7,TAP3_0,TAP3_1,TAP3_2,TAP3_3,TAP3_4,TAP3_5,TAP3_6,TAP3_7
//      P255_BENP_TAP2_3_LSI_DATA_COL_WIDTH        //          10,        11,        4,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6
//      P255_BENP_TAP2_3_LSI_DATA_COL_MASK         //           1,         1,        1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1,     1
//      P255_BENP_TAP2_3_LSI_DATA_COL_TYPES        //           N,         N,        N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N
//      P255_BENP_TAP2_3_LSI_DATA_TABLE_TYPE       // S
#define P255_BENP_TAP0_TAP1_LSI             65089  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,TAP0_1,TAP0_2,TAP0_3,TAP0_4,TAP0_5,TAP0_6,TAP0_7,TAP1_0,TAP1_1,TAP1_2,TAP1_3,TAP1_4,TAP1_5,TAP1_6,TAP1_7
//      P255_BENP_TAP0_TAP1_LSI_COL_WIDTH          //          10,        11,   4,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6
//      P255_BENP_TAP0_TAP1_LSI_COL_MASK           //           0,         0,   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0
//      P255_BENP_TAP0_TAP1_LSI_COL_TYPES          // *
//      P255_BENP_TAP0_TAP1_LSI_TABLE_TYPE         // S
#define P255_BENP_TAP2_TAP3_LSI             65090  // HD_PHYS_PSN,HD_LGC_PSN,ZONE,TAP2_0,TAP2_1,TAP2_2,TAP2_3,TAP2_4,TAP2_5,TAP2_6,TAP2_7,TAP3_0,TAP3_1,TAP3_2,TAP3_3,TAP3_4,TAP3_5,TAP3_6,TAP3_7
//      P255_BENP_TAP2_TAP3_LSI_COL_WIDTH          //          10,        11,   4,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,     6
//      P255_BENP_TAP2_TAP3_LSI_COL_MASK           //           0,         0,   0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0
//      P255_BENP_TAP2_TAP3_LSI_COL_TYPES          // *
//      P255_BENP_TAP2_TAP3_LSI_TABLE_TYPE         // S
#define TEST_TIME_BY_TEST                   65091  // TEST_NUMBER,ELAPSED_TIME,PARAMETER_NAME,TEST_STATUS,CELL_TEMP,SZ,RSS,CPU_ET
//      TEST_TIME_BY_TEST_COL_WIDTH                //          11,          12,            14,         11,        9, 2,  3,     6
//      TEST_TIME_BY_TEST_COL_MASK                 //           1,           1,             1,          1,        1, 1,  1,     1
//      TEST_TIME_BY_TEST_COL_TYPES                //           N,           N,             V,          N,        N, N,  N,     N
//      TEST_TIME_BY_TEST_TABLE_TYPE               // S
#define TEST_TIME_BY_STATE                  65092  // OPER,STATE_NAME,SEQ,START_TIME,END_TIME,ELAPSED_TIME,CPU_ELAPSED_TIME,SZ_START,RSS_START,SZ_END,RSS_END,DRIVE_TEMP
//      TEST_TIME_BY_STATE_COL_WIDTH               //    4,        10,  3,        10,       8,          12,              16,       8,        9,     6,      7,        10
//      TEST_TIME_BY_STATE_COL_MASK                //    1,         1,  1,         1,       1,           1,               1,       1,        1,     1,      1,         1
//      TEST_TIME_BY_STATE_COL_TYPES               //    V,         V,  N,         V,       V,           N,               N,       N,        N,     N,      N,         N
//      TEST_TIME_BY_STATE_TABLE_TYPE              // S
#define P_BURNISH_HD_STATS                  65093  // HD_PHYS_PSN,HD_LGC_PSN,MEDIAN_DELTA_DAC_WH,DELTA_DAC_SPEC_WH,DELTA_CLR_WH,MAX_DELTA_DAC_WH,MIN_DELTA_DAC_WH,NUM_CLR_RESET_WH,DETCR_CAL_MAX_THRSHLD_WH,MEDIAN_DELTA_DAC_RH,DELTA_DAC_SPEC_RH,DELTA_CLR_RH,MAX_DELTA_DAC_RH,MIN_DELTA_DAC_RH,NUM_CLR_RESET_RH,DETCR_CAL_MAX_THRSHLD_RH,NUM_BURNISH_MEAS,AVG_DELTA_BER,DELTA_MRE,BMHI,DELTA_BURNISH_TIME
//      P_BURNISH_HD_STATS_COL_WIDTH               //          11,        10,                 19,               17,          12,              16,              16,              16,                      24,                 19,               17,          12,              16,              16,              16,                      24,              16,           13,        9,   4,                18
//      P_BURNISH_HD_STATS_COL_MASK                //           1,         1,                  1,                1,           1,               1,               1,               1,                       1,                  1,                1,           1,               1,               1,               1,                       1,               1,            1,        1,   1,                 1
//      P_BURNISH_HD_STATS_COL_TYPES               //           N,         N,                  N,                N,           N,               N,               N,               N,                       N,                  N,                N,           N,               N,               N,               N,                       N,               N,            N,        N,   N,                 N
//      P_BURNISH_HD_STATS_TABLE_TYPE              // S
#define P_TIME_TO_READY                     65094  // SET_3V,SET_5V,SET_12V,SENSE_VOLTAGE_3V,SENSE_VOLTAGE_5V,SENSE_VOLTAGE_12V,SENSE_CURRENT_3V,SENSE_CURRENT_5V,SENSE_CURRENT_12V,POWER_OPTIONS,DEVICE_ERROR_RGSTR,DEVICE_STATUS_RGSTR,SPIN_UP_TIME_TO_READY
//      P_TIME_TO_READY_COL_WIDTH                  //      6,     6,      7,              16,              16,               17,              16,              16,               17,           13,                18,                 19,                   21
//      P_TIME_TO_READY_COL_MASK                   //      1,     1,      1,               1,               1,                1,               1,               1,                1,            1,                 1,                  1,                    1
//      P_TIME_TO_READY_COL_TYPES                  //      N,     N,      N,               N,               N,                N,               N,               N,                N,            V,                 N,                  N,                    N
//      P_TIME_TO_READY_TABLE_TYPE                 // S
#define P_FINE_LASER_CAL                    65095  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,LASER_THRSHLD_CUR_DAC,LASER_OPERATING_CUR_DAC,WORKING_WRWH_DAC,SNGL_TRK_BER,SQZ_TRK_BER,BER_DELTA,SWEEP_MODE,LDI_UPDATE_FLAG
//      P_FINE_LASER_CAL_COL_WIDTH                 //          11,        10,        9,                   21,                     23,              16,          12,         11,        9,        10,             15
//      P_FINE_LASER_CAL_COL_MASK                  //           1,         1,        1,                    1,                      1,               1,           1,          1,        1,         1,              1
//      P_FINE_LASER_CAL_COL_TYPES                 //           N,         N,        N,                    N,                      N,               N,           N,          N,        N,         V,              N
//      P_FINE_LASER_CAL_TABLE_TYPE                // S
#define P_HAMR_LASER_CALIBRATION            65096  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,MSRD_INTRPLTD,LASER_THRSHLD_CUR_DAC,LASER_OPERATING_CUR_DAC,LASER_TOTAL_CUR_MA
//      P_HAMR_LASER_CALIBRATION_COL_WIDTH         //          11,        10,        9,           13,                   21,                     23,                18
//      P_HAMR_LASER_CALIBRATION_COL_MASK          //           1,         1,        1,            1,                    1,                      1,                 1
//      P_HAMR_LASER_CALIBRATION_COL_TYPES         //           N,         N,        N,            V,                    N,                      N,                 N
//      P_HAMR_LASER_CALIBRATION_TABLE_TYPE        // S
#define P_CONTACT_DETECT_PATCH              65097  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,HEAD_TYPE,SQR_COEF,LIN_COEF,DLTA_DAC,WRT_CNCT_DAC,WRT_CNCT_DAC_ADJ,RD_CNCT_DAC
//      P_CONTACT_DETECT_PATCH_COL_WIDTH           //          11,        10,        9,        9,       9,       9,      10,          12,              16,         11
//      P_CONTACT_DETECT_PATCH_COL_MASK            //           0,         0,        0,        0,       0,       0,       0,           0,               0,          0
//      P_CONTACT_DETECT_PATCH_COL_TYPES           // *
//      P_CONTACT_DETECT_PATCH_TABLE_TYPE          // S
#define P_LIFE_TEST_SUMMARY                 65098  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TEST_REV,TEST_CYCLES,FULL_TRK_WRTS,WPOH,JOULES,INIT_DEG_SPEC,INIT_DEG_WPOH,START_LDI_TOTAL,END_LDI_TOTAL,START_LDI_IOP,END_LDI_IOP,START_BER
//      P_LIFE_TEST_SUMMARY_COL_WIDTH              //          11,        10,        9,      10,         12,           14,  11,    13,           14,           14,             15,           15,           15,         12,       15
//      P_LIFE_TEST_SUMMARY_COL_MASK               //           0,         0,        0,       0,          0,            0,   0,     0,            0,            0,              0,            0,            0,          0,        0
//      P_LIFE_TEST_SUMMARY_COL_TYPES              // *
//      P_LIFE_TEST_SUMMARY_TABLE_TYPE             // S
#define P_LIFE_TEST_CYCLE                   65099  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TEST_REV,TEST_CYCLES,FULL_TRK_WRTS,WPOH,JOULES,CUR_LDI_TOTAL,CUR_LDI_IOP,NOSQ_BER,SQ_BER,RD_REF_BER,NUM_LSR_RECALS,STRSS_REF_NOSQ_BER,STRSS_BND_IDX,BER_CORRUPT_IOP,PDV_INFLECT_IOP
//      P_LIFE_TEST_CYCLE_COL_WIDTH                //          11,        10,        9,      10,         12,           14,  11,    13,           13,         14,      15,    15,        15,            14,                18,           13,             15,             15
//      P_LIFE_TEST_CYCLE_COL_MASK                 //           0,         0,        0,       0,          0,            0,   0,     0,            0,          0,       0,     0,         0,             0,                 0,            0,              0,              0
//      P_LIFE_TEST_CYCLE_COL_TYPES                // *
//      P_LIFE_TEST_CYCLE_TABLE_TYPE               // S
#define P_663_FINAL_TALLEY                  65100  // HD_PHYS_PSN,HD_LGC_PSN,T663_FLAG,TOTAL_BITS_SET_FAIL,TOTAL_BITS_SET_OUTLIER,HEAD_UNSTABLE_FAILURE,HEAD_UNSTABLE_OUTLIER,HIDDEN_ERR_CNT_CP_1,HIDDEN_ERR_CNT_CP_2,HIDDEN_ERR_CNT_CP_3,HIDDEN_ERR_CNT_FINAL,VISIBLE_ERR_CNT_CP_1,VISIBLE_ERR_CNT_CP_2,VISIBLE_ERR_CNT_CP_3,VISIBLE_ERR_CNT_FINAL,P_F_FLAG,FAIL_MODE,TIME_TO_FAIL,FAIL_MODE_0,FAIL_MODE_1,FAIL_MODE_2,FAIL_MODE_3,FAIL_MODE_4,FAIL_MODE_5,FAIL_MODE_6,OUTLIER_MODE_0,OUTLIER_MODE_1,OUTLIER_MODE_2,OUTLIER_MODE_3,OUTLIER_MODE_4,OUTLIER_MODE_5,OUTLIER_MODE_6,FA_FAIL_STATION,FA_FAIL_TEST_SPC_ID,FA_FAIL_TEST_NUM,FA_FAIL_STAT,FA_FAIL_ZONE,FA_FAIL_STATE,FA_FAIL_PARAM,FA_FAIL_EC,MEDIAN_DELTA_BER
//      P_663_FINAL_TALLEY_COL_WIDTH               //          11,        10,        9,                 19,                    22,                   21,                   21,                 19,                 19,                 19,                  20,                  20,                  20,                  20,                   21,       8,        9,          12,         11,         11,         11,         11,         11,         11,         11,            14,            14,            14,            14,            14,            14,            14,             15,                 19,              16,          12,          12,           13,           13,        10,              16
//      P_663_FINAL_TALLEY_COL_MASK                //           1,         1,        1,                  1,                     1,                    1,                    1,                  1,                  1,                  1,                   1,                   1,                   1,                   1,                    1,       1,        1,           1,          1,          1,          1,          1,          1,          1,          1,             1,             1,             1,             1,             1,             1,             1,              1,                  1,               1,           1,           1,            1,            1,         1,               1
//      P_663_FINAL_TALLEY_COL_TYPES               //           N,         N,        V,                  N,                     N,                    V,                    V,                  V,                  V,                  V,                   N,                   V,                   V,                   V,                    N,       V,        V,           N,          V,          V,          V,          V,          V,          V,          V,             V,             V,             V,             V,             V,             V,             V,              V,                  V,               V,           V,           V,            V,            V,         V,               N
//      P_663_FINAL_TALLEY_TABLE_TYPE              // S
#define P_GROUP3_TABLE_GOTF                 65101  // HD_PHYS_PSN,HD_LGC_PSN,SENSE_CODE,STATUS
//      P_GROUP3_TABLE_GOTF_COL_WIDTH              //          11,        10,        10,     6
//      P_GROUP3_TABLE_GOTF_COL_MASK               //           0,         0,         0,     0
//      P_GROUP3_TABLE_GOTF_COL_TYPES              // *
//      P_GROUP3_TABLE_GOTF_TABLE_TYPE             // S
#define P_BER_MEASUREMENT                   65102  // FLAW_COUNT,BITS_TRANSFERRED,ERROR_RATE10
//      P_BER_MEASUREMENT_COL_WIDTH                //         10,              16,          12
//      P_BER_MEASUREMENT_COL_MASK                 //          1,               1,           1
//      P_BER_MEASUREMENT_COL_TYPES                //          N,               N,           N
//      P_BER_MEASUREMENT_TABLE_TYPE               // S
#define P_VBAR_SME_ADJUST                   65103  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ITERATION,AFH_QM,STRESSED_BER,BIE_MRGN,BPI_ADJ,CUM_BPI_ADJ,BPI_CAP,BPI_PICK,TPI_PICK,ACTIVE_ZONE,OUT_OF_SPEC,TPI_CAP,TGT_WRT_CLR,TGT_RD_CLR,BIE_ATI,INCREASE_BAR,TPI_ADJ,CUM_TPI_ADJ,BPI_PER_BIE,BPI_ADJ_REQ,ATI_ADJ,STABILITY_ADJ,CUM_ADJ,MAX_BPI_ADJ,MIN_BPI_ADJ,MAX_TPI_ADJ,MIN_TPI_ADJ,HMS_BPI_ADJ
//      P_VBAR_SME_ADJUST_COL_WIDTH                //          11,        10,        9,        9,     6,          12,       8,      7,         11,      7,       8,       8,         11,         11,      7,         11,        10,      7,          12,      7,         11,         11,         11,      7,           13,      7,         11,         11,         11,         11,         11
//      P_VBAR_SME_ADJUST_COL_MASK                 //           1,         1,        1,        1,     1,           1,       1,      1,          1,      1,       1,       1,          1,          1,      1,          1,         1,      1,           1,      1,          1,          1,          1,      1,            1,      1,          1,          1,          1,          1,          0
//      P_VBAR_SME_ADJUST_COL_TYPES                //           N,         N,        N,        N,     N,           N,       N,      N,          N,      N,       N,       N,          N,          V,      N,          N,         N,      N,           N,      N,          N,          N,          N,      N,            N,      N,          N,          N,          N,          N
//      P_VBAR_SME_ADJUST_TABLE_TYPE               // S
#define P_VBAR_SMR_BANDED_TPI               65104  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TPIC_DSS,TPIC_IDSS,TPIC_ODSS,SQZC_DSS,SQZC_IDSS,SQZC_ODSS,DIR,TPIC_EFF,RD_OFST,MSRD_BPI
//      P_VBAR_SMR_BANDED_TPI_COL_WIDTH            //          11,        10,        9,       8,        9,        9,       8,        9,        9,  4,       8,      7,       8
//      P_VBAR_SMR_BANDED_TPI_COL_MASK             //           0,         0,        0,       0,        0,        0,       0,        0,        0,  0,       0,      0,       0
//      P_VBAR_SMR_BANDED_TPI_COL_TYPES            // *
//      P_VBAR_SMR_BANDED_TPI_TABLE_TYPE           // S
#define P_CFM_TABLE                         65105  // DDIS_DFCTS_WORST_HEAD,DDIS_DFCTS_WORST_MEDIA,POTENTIAL_CAUSE
//      P_CFM_TABLE_COL_WIDTH                      //                    21,                    22,             15
//      P_CFM_TABLE_COL_MASK                       //                     0,                     0,              0
//      P_CFM_TABLE_COL_TYPES                      // *
//      P_CFM_TABLE_TABLE_TYPE                     // S
#define P_DDIS_POSSIBLE_CAUSE               65106  // POTENTIAL_CAUSE,DDIS_DFCTS_WORST_HEAD,DDIS_DFCTS_WORST_MEDIA,DDIS_FAILED_TEST_SEQUENCE,FAILURE_DESCRIPTION,DDIS_DEFECT_MODE
//      P_DDIS_POSSIBLE_CAUSE_COL_WIDTH            //              15,                   21,                    22,                       25,                 30,              16
//      P_DDIS_POSSIBLE_CAUSE_COL_MASK             //               0,                    0,                     0,                        0,                  0,               0
//      P_DDIS_POSSIBLE_CAUSE_COL_TYPES            // *
//      P_DDIS_POSSIBLE_CAUSE_TABLE_TYPE           // S
#define P211_M11K_BPI_INIT                  65107  // HD_PHYS_PSN,TRK_NUM,HD_LGC_PSN,ORIG_N,ORIG_R,ORIG_D,R32,R44,R46,R52,RDLLGM,F_STEP,STEP_PCT
//      P211_M11K_BPI_INIT_COL_WIDTH               //          11,      7,        10,     6,     6,     6,  4,  4,  4,  4,     7,     6,       8
//      P211_M11K_BPI_INIT_COL_MASK                //           0,      0,         0,     0,     0,     0,  0,  0,  0,  0,     0,     0,       0
//      P211_M11K_BPI_INIT_COL_TYPES               // *
//      P211_M11K_BPI_INIT_TABLE_TYPE              // M
#define P211_M11K_BPI_MEASUREMENT           65108  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,TRK_NUM,DELTA_BPI_PCT,N_VAL,R_VAL,D_VAL,SECTOR_ERROR_RATE,BANDWIDTH,BANDWIDTH_RNG,TW_3,TW_5,PRECOMP,BOOST,R32,R44,R46,R52,RDllGm
//      P211_M11K_BPI_MEASUREMENT_COL_WIDTH        //          11,        9,        10,      7,           13,    5,    5,    5,               17,        9,           13,   4,   4,      7,    5,  3,  3,  3,  3,     7
//      P211_M11K_BPI_MEASUREMENT_COL_MASK         //           0,        0,         0,      0,            0,    0,    0,    0,                0,        0,            0,   0,   0,      0,    0,  0,  0,  0,  0,     0
//      P211_M11K_BPI_MEASUREMENT_COL_TYPES        // *
//      P211_M11K_BPI_MEASUREMENT_TABLE_TYPE       // M
#define P1645_MEDIA_DEST_TEST_SUM           65109  // MEDIA_ID,CHANNEL_NUM,CHIP_ENABLE_NUM,DIE_NUM,BLOCK_NUM,PE_CYCLE_CNT,ACTUAL_TEMPERATURE,ERASE_TIME,ERASE_ERRORS,FIRST_ERASE_ERROR_CYCLE,LOWER_PAGE_PROGRAM_TIME,MIDDLE_PAGE_PROGRAM_TIME,UPPER_PAGE_PROGRAM_TIME,PROGRAM_ERRORS,FIRST_PROGRAM_ERROR_CYCLE,LOWER_PAGE_READ_AVG_BIE,MIDDLE_PAGE_READ_AVG_BIE,UPPER_PAGE_READ_AVG_BIE,UNRECOVERED_READS,ERROR_RECOVERY,ELAPSED_TIME
//      P1645_MEDIA_DEST_TEST_SUM_COL_WIDTH        //        8,         11,             15,      7,        9,          12,                18,        10,          12,                     23,                     23,                      24,                     23,            14,                       25,                     23,                      24,                     23,               17,            14,          12
//      P1645_MEDIA_DEST_TEST_SUM_COL_MASK         //        1,          1,              1,      1,        1,           1,                 1,         1,           1,                      1,                      1,                       1,                      1,             1,                        1,                      1,                       1,                      1,                1,             1,           1
//      P1645_MEDIA_DEST_TEST_SUM_COL_TYPES        //        N,          N,              N,      N,        N,           N,                 N,         N,           N,                      N,                      N,                       N,                      N,             N,                        N,                      N,                       N,                      N,                N,             N,           N
//      P1645_MEDIA_DEST_TEST_SUM_TABLE_TYPE       // S
#define P2645_MEDIA_DEST_TEST_SUM           65110  // MEDIA_ID,CHANNEL_NUM,CHIP_ENABLE_NUM,DIE_NUM,BLOCK_NUM,PE_CYCLE_CNT,ACTUAL_TEMPERATURE,ERASE_TIME,ERASE_ERRORS,FIRST_ERASE_ERROR_CYCLE,LOWER_PAGE_PROGRAM_TIME,MIDDLE_PAGE_PROGRAM_TIME,UPPER_PAGE_PROGRAM_TIME,PROGRAM_ERRORS,FIRST_PROGRAM_ERROR_CYCLE,LOWER_PAGE_READ_AVG_BIE,MIDDLE_PAGE_READ_AVG_BIE,UPPER_PAGE_READ_AVG_BIE,UNRECOVERED_READS,ERROR_RECOVERY,ELAPSED_TIME
//      P2645_MEDIA_DEST_TEST_SUM_COL_WIDTH        //        8,         11,             15,      7,        9,          12,                18,        10,          12,                     23,                     23,                      24,                     23,            14,                       25,                     23,                      24,                     23,               17,            14,          12
//      P2645_MEDIA_DEST_TEST_SUM_COL_MASK         //        1,          1,              1,      1,        1,           1,                 1,         1,           1,                      1,                      1,                       1,                      1,             1,                        1,                      1,                       1,                      1,                1,             1,           1
//      P2645_MEDIA_DEST_TEST_SUM_COL_TYPES        //        N,          N,              N,      N,        N,           N,                 N,         N,           N,                      N,                      N,                       N,                      N,             N,                        N,                      N,                       N,                      N,                N,             N,           N
//      P2645_MEDIA_DEST_TEST_SUM_TABLE_TYPE       // S
#define P_ADC_DATA                          65111  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,ZONE_PSN,LASER_TOTAL_CUR_MA,KTPI,KFCI,BPI_NDX,IST_BER,TT_BER,TT_BER_OD_10_PCT,TT_BER_ID_10_PCT,AVG_OT_BER
//      P_ADC_DATA_COL_WIDTH                       //          11,        10,        9,       8,                18,   5,   5,      7,      7,     6,              16,              16,        10
//      P_ADC_DATA_COL_MASK                        //           1,         1,        1,       1,                 1,   1,   1,      1,      1,     1,               1,               1,         1
//      P_ADC_DATA_COL_TYPES                       //           N,         N,        N,       N,                 N,   N,   N,      N,      N,     N,               N,               N,         N
//      P_ADC_DATA_TABLE_TYPE                      // S
#define P_ADC_SUMMARY                       65112  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,MSRD_INTRPLTD,LASER_TOTAL_CUR_MA,KTPI,KFCI,BPI_NDX,CALC_ADC
//      P_ADC_SUMMARY_COL_WIDTH                    //          11,        10,        9,           13,                18,   5,   5,      7,       8
//      P_ADC_SUMMARY_COL_MASK                     //           1,         1,        1,            1,                 1,   1,   1,      1,       1
//      P_ADC_SUMMARY_COL_TYPES                    //           N,         N,        N,            V,                 N,   N,   N,      N,       N
//      P_ADC_SUMMARY_TABLE_TYPE                   // S
#define P_VBAR_MAX_FORMAT_SUMMARY           65113  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,BPI_CAP,BPIM_SEG,BPIM_FSOW,BPIM_HMS,BPIM_SQZBPIC,BPIM_FINAL,BPIP_MAX,TPI_CAP,TPIM_ATI,TPIP_MAX,ADC_MAX,NIBLET_IDX,TPIM_OTC,TPIM_SOVA
//      P_VBAR_MAX_FORMAT_SUMMARY_COL_WIDTH        //          11,         9,        9,      7,       8,        9,       8,           8,        10,       8,      7,       8,       8,      7,        10,       8,        9
//      P_VBAR_MAX_FORMAT_SUMMARY_COL_MASK         //           1,         1,        1,      1,       1,        1,       1,           1,         1,       1,      1,       1,       1,      1,         1,       1,        1
//      P_VBAR_MAX_FORMAT_SUMMARY_COL_TYPES        //           N,         N,        N,      N,       N,        N,       N,           N,         N,       N,      N,       N,       N,      N,         N,       N,        N
//      P_VBAR_MAX_FORMAT_SUMMARY_TABLE_TYPE       // S
#define P_VBAR_ADC_SUMMARY                  65114  // PARAMETER_NAME,DRV_CAPACITY
//      P_VBAR_ADC_SUMMARY_COL_WIDTH               //             14,          12
//      P_VBAR_ADC_SUMMARY_COL_MASK                //              1,           1
//      P_VBAR_ADC_SUMMARY_COL_TYPES               //              V,           N
//      P_VBAR_ADC_SUMMARY_TABLE_TYPE              // S
#define P_VBAR_BANDED_FMT_SUMMARY           65115  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,BPIC,TPI_DSS,TPI_IDSS,TPI_ODSS,TPI_EFF,TPI_MAX,RD_OFFSET,DIR
//      P_VBAR_BANDED_FMT_SUMMARY_COL_WIDTH        //          11,         9,        9,   8,      8,       8,       8,      8,      8,        8,  4
//      P_VBAR_BANDED_FMT_SUMMARY_COL_MASK         //           0,         0,        0,   0,      0,       0,       0,      0,      0,        0,  0
//      P_VBAR_BANDED_FMT_SUMMARY_COL_TYPES        // *
//      P_VBAR_BANDED_FMT_SUMMARY_TABLE_TYPE       // S
#define P_TESTER_RESULTS_FOLDER             65116  // FOLDER_SIZE,RESULT_FILE_SIZE,PARAM_FILE_START_SIZE,PARAM_FILE_END_SIZE
//      P_TESTER_RESULTS_FOLDER_COL_WIDTH          //          11,              16,                   21,                 19
//      P_TESTER_RESULTS_FOLDER_COL_MASK           //           1,               1,                    1,                  1
//      P_TESTER_RESULTS_FOLDER_COL_TYPES          //           N,               N,                    N,                  N
//      P_TESTER_RESULTS_FOLDER_TABLE_TYPE         // S
#define P_PARAMETRIC_TABLES                 65117  // NAME,SIZE,PRIORITY,UPLOADED
//      P_PARAMETRIC_TABLES_COL_WIDTH              //   30,  10,       8,       8
//      P_PARAMETRIC_TABLES_COL_MASK               //    0,   0,       0,       0
//      P_PARAMETRIC_TABLES_COL_TYPES              // *
//      P_PARAMETRIC_TABLES_TABLE_TYPE             // S
#define P_NAND_UNIQUE_ID                    65118  // MEDIA_ID,CHANNEL_NUM,CHIP_ENABLE_NUM,DIE_NUM,NAND_UNIQUE_ID,PE_CYCLE_CNT,TRIM_REV
//      P_NAND_UNIQUE_ID_COL_WIDTH                 //        8,         11,             15,      7,            32,          12,       8
//      P_NAND_UNIQUE_ID_COL_MASK                  //        1,          1,              1,      1,             1,           1,       1
//      P_NAND_UNIQUE_ID_COL_TYPES                 //        N,          N,              N,      N,             V,           N,       N
//      P_NAND_UNIQUE_ID_TABLE_TYPE                // S
#define P_SSD_DEFECT_LIST                   65119  // MEDIA_ID,CHANNEL_NUM,CHIP_ENABLE_NUM,DIE_NUM,START_BLOCK_NUM,NUM_BAD_BLOCKS,DEFECT_REASON
//      P_SSD_DEFECT_LIST_COL_WIDTH                //        8,         11,             15,      7,             15,            14,           13
//      P_SSD_DEFECT_LIST_COL_MASK                 //        1,          1,              1,      1,              1,             1,            1
//      P_SSD_DEFECT_LIST_COL_TYPES                //        N,          N,              N,      N,              N,             N,            N
//      P_SSD_DEFECT_LIST_TABLE_TYPE               // S
#define P_SSD_DEFECT_SUMMARY                65120  // MEDIA_ID,CHANNEL_NUM,CHIP_ENABLE_NUM,DIE_NUM,DIE_TOTAL_DEFECTS,CNT_SUPPLIER_BB,CNT_USER_ADD_BB,CNT_GROWN_BB,CNT_DESTROYED_BB,CNT_DS_RD_BB,CNT_DS_PROG_BB,CNT_DS_ERASE_BB,CNT_PAD_BB
//      P_SSD_DEFECT_SUMMARY_COL_WIDTH             //        8,         11,             15,      7,               17,             15,             15,          12,              16,          12,            14,             15,        10
//      P_SSD_DEFECT_SUMMARY_COL_MASK              //        1,          1,              1,      1,                1,              1,              1,           1,               1,           1,             1,              1,         1
//      P_SSD_DEFECT_SUMMARY_COL_TYPES             //        N,          N,              N,      N,                N,              N,              N,           N,               N,           N,             N,              N,         N
//      P_SSD_DEFECT_SUMMARY_TABLE_TYPE            // S
#define P2645_MDT_CYCLE_SUMMARY             65121  // MEDIA_ID,CHANNEL_NUM,CHIP_ENABLE_NUM,DIE_NUM,BLOCK_NUM,PE_CYCLE_CNT,ACTUAL_TEMPERATURE,DRIVE_CLOCK,SSD_DRIVE_ERRORS
//      P2645_MDT_CYCLE_SUMMARY_COL_WIDTH          //        8,         11,             15,      7,        9,          12,                18,         11,              16
//      P2645_MDT_CYCLE_SUMMARY_COL_MASK           //        1,          1,              1,      1,        1,           1,                 1,          1,               1
//      P2645_MDT_CYCLE_SUMMARY_COL_TYPES          //        N,          N,              N,      N,        N,           N,                 N,          N,               N
//      P2645_MDT_CYCLE_SUMMARY_TABLE_TYPE         // S
#define P2645_MDT_PE_DELAY_TIMES            65122  // MEDIA_ID,CHANNEL_NUM,CHIP_ENABLE_NUM,DIE_NUM,BLOCK_NUM,START_PE_CYCLE_CNT,CYCLES_PER_ITERATION,AVG_TEMPERATURE,MIN_TEMPERATURE,MAX_TEMPERATURE,ERASE_DELAY_AVG,ERASE_DELAY_MIN,ERASE_DELAY_MAX,PROGRAM_DELAY_AVG,PROGRAM_DELAY_MIN,PROGRAM_DELAY_MAX
//      P2645_MDT_PE_DELAY_TIMES_COL_WIDTH         //        8,         11,             15,      7,        9,                18,                  20,             15,             15,             15,             15,             15,             15,               17,               17,               17
//      P2645_MDT_PE_DELAY_TIMES_COL_MASK          //        1,          1,              1,      1,        1,                 1,                   1,              1,              1,              1,              1,              1,              1,                1,                1,                1
//      P2645_MDT_PE_DELAY_TIMES_COL_TYPES         //        N,          N,              N,      N,        N,                 N,                   N,              N,              N,              N,              N,              N,              N,                N,                N,                N
//      P2645_MDT_PE_DELAY_TIMES_TABLE_TYPE        // S
#define P2645_MDT_RD_BIE_CYCLE_PG           65123  // MEDIA_ID,CHANNEL_NUM,CHIP_ENABLE_NUM,DIE_NUM,BLOCK_NUM,PAGE_NUM,CYCLES_PER_ITERATION,PE_CYCLE_1_BIE,PE_CYCLE_2_BIE,PE_CYCLE_3_BIE,PE_CYCLE_4_BIE,PE_CYCLE_5_BIE,PE_CYCLE_6_BIE,PE_CYCLE_7_BIE,PE_CYCLE_8_BIE,PE_CYCLE_9_BIE,PE_CYCLE_10_BIE,PE_CYCLE_11_BIE,PE_CYCLE_12_BIE,PE_CYCLE_13_BIE,PE_CYCLE_14_BIE,PE_CYCLE_15_BIE
//      P2645_MDT_RD_BIE_CYCLE_PG_COL_WIDTH        //        8,         11,             15,      7,        9,       8,                  20,            14,            14,            14,            14,            14,            14,            14,            14,            14,             15,             15,             15,             15,             15,             15
//      P2645_MDT_RD_BIE_CYCLE_PG_COL_MASK         //        1,          1,              1,      1,        1,       1,                   1,             1,             1,             1,             1,             1,             1,             1,             1,             1,              1,              1,              1,              1,              1,              1
//      P2645_MDT_RD_BIE_CYCLE_PG_COL_TYPES        //        N,          N,              N,      N,        N,       N,                   N,             N,             N,             N,             N,             N,             N,             N,             N,             N,              N,              N,              N,              N,              N,              N
//      P2645_MDT_RD_BIE_CYCLE_PG_TABLE_TYPE       // S
#define P2645_MDT_RD_OE_PG_SUM              65124  // MEDIA_ID,CHANNEL_NUM,CHIP_ENABLE_NUM,DIE_NUM,BLOCK_NUM,PE_CYCLE_CNT,EVEN_PAGE_READ_MIN_BIE,EVEN_PAGE_READ_MAX_BIE,EVEN_PAGE_READ_AVG_BIE,EVEN_PAGE_READ_STDEV_BIE,ODD_PAGE_READ_MIN_BIE,ODD_PAGE_READ_MAX_BIE,ODD_PAGE_READ_AVG_BIE,ODD_PAGE_READ_STDEV_BIE
//      P2645_MDT_RD_OE_PG_SUM_COL_WIDTH           //        8,         11,             15,      7,        9,          12,                    22,                    22,                    22,                      24,                   21,                   21,                   21,                     23
//      P2645_MDT_RD_OE_PG_SUM_COL_MASK            //        1,          1,              1,      1,        1,           1,                     1,                     1,                     1,                       1,                    1,                    1,                    1,                      1
//      P2645_MDT_RD_OE_PG_SUM_COL_TYPES           //        N,          N,              N,      N,        N,           N,                     N,                     N,                     N,                       N,                    N,                    N,                    N,                      N
//      P2645_MDT_RD_OE_PG_SUM_TABLE_TYPE          // S
#define P2645_MDT_RD_UML_PG_SUM             65125  // MEDIA_ID,CHANNEL_NUM,CHIP_ENABLE_NUM,DIE_NUM,BLOCK_NUM,PE_CYCLE_CNT,LOWER_PAGE_READ_MIN_BIE,LOWER_PAGE_READ_MAX_BIE,LOWER_PAGE_READ_AVG_BIE,LOWER_PAGE_READ_STDEV_BIE,MIDDLE_PAGE_READ_MIN_BIE,MIDDLE_PAGE_READ_MAX_BIE,MIDDLE_PAGE_READ_AVG_BIE,MIDDLE_PAGE_READ_STDEV_BIE,UPPER_PAGE_READ_MIN_BIE,UPPER_PAGE_READ_MAX_BIE,UPPER_PAGE_READ_AVG_BIE,UPPER_PAGE_READ_STDEV_BIE
//      P2645_MDT_RD_UML_PG_SUM_COL_WIDTH          //        8,         11,             15,      7,        9,          12,                     23,                     23,                     23,                       25,                      24,                      24,                      24,                        26,                     23,                     23,                     23,                       25
//      P2645_MDT_RD_UML_PG_SUM_COL_MASK           //        1,          1,              1,      1,        1,           1,                      1,                      1,                      1,                        1,                       1,                       1,                       1,                         1,                      1,                      1,                      1,                        1
//      P2645_MDT_RD_UML_PG_SUM_COL_TYPES          //        N,          N,              N,      N,        N,           N,                      N,                      N,                      N,                        N,                       N,                       N,                       N,                         N,                      N,                      N,                      N,                        N
//      P2645_MDT_RD_UML_PG_SUM_TABLE_TYPE         // S
#define P2648_DEFECT_SCAN_SUMMARY           65126  // MEDIA_ID,CHANNEL_NUM,CHIP_ENABLE_NUM,DIE_NUM,BLOCK_NUM,START_PAGE_NUM,END_PAGE_NUM,PE_CYCLE,ACTUAL_TEMPERATURE,DEFECT_TYPE
//      P2648_DEFECT_SCAN_SUMMARY_COL_WIDTH        //        8,         11,             15,      7,        9,            14,          12,       8,                18,         11
//      P2648_DEFECT_SCAN_SUMMARY_COL_MASK         //        1,          1,              1,      1,        1,             1,           1,       1,                 1,          1
//      P2648_DEFECT_SCAN_SUMMARY_COL_TYPES        //        N,          N,              N,      N,        N,             N,           N,       N,                 N,          N
//      P2648_DEFECT_SCAN_SUMMARY_TABLE_TYPE       // S
#define P051_ERASURE_BER_MAX_MIN            65127  // HD_PHYS_PSN,HD_LGC_PSN,MAX_HARD_ERR_CNT,MIN_BITS_IN_ERROR_BER
//      P051_ERASURE_BER_MAX_MIN_COL_WIDTH         //          11,        10,              16,                   21
//      P051_ERASURE_BER_MAX_MIN_COL_MASK          //           0,         0,               0,                    0
//      P051_ERASURE_BER_MAX_MIN_COL_TYPES         // *
//      P051_ERASURE_BER_MAX_MIN_TABLE_TYPE        // S
#define P_TCS_ZN_SUM_MAX_MIN                65128  // HD_PHYS_PSN,HD_LGC_PSN,MIN_HMS_CAP_COLD,MIN_HMS_CAP_HOT
//      P_TCS_ZN_SUM_MAX_MIN_COL_WIDTH             //          11,        10,              16,             15
//      P_TCS_ZN_SUM_MAX_MIN_COL_MASK              //           0,         0,               0,              0
//      P_TCS_ZN_SUM_MAX_MIN_COL_TYPES             // *
//      P_TCS_ZN_SUM_MAX_MIN_TABLE_TYPE            // S
#define P051_ERASURE_BER_DELTAS             65129  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_INDEX,TRK_NUM,NUM_WRT_BASELINE,NUM_WRT_ERASURE,SCTR_READ_CNT_BASELINE,SCTR_READ_CNT_ERASURE,BITS_IN_ERROR_BASELINE,BITS_IN_ERROR_ERASURE,BITS_IN_ERROR_DELTA,BITS_IN_ERROR_RATIO,BITS_IN_ERROR_BER_BASELINE,BITS_IN_ERROR_BER_ERASURE,BITS_IN_ERROR_BER_DELTA,OTF_BER_BASELINE,OTF_BER_ERASURE,OTF_BER_DELTA,HARD_ERR_CNT_BASELINE,HARD_ERR_CNT_ERASURE
//      P051_ERASURE_BER_DELTAS_COL_WIDTH          //          11,        10,        9,        9,      7,              16,             15,                    22,                   21,                    22,                   21,                 19,                 19,                        26,                       25,                     23,              16,             15,           13,                   21,                  20
//      P051_ERASURE_BER_DELTAS_COL_MASK           //           1,         1,        1,        1,      1,               1,              1,                     1,                    1,                     1,                    1,                  1,                  1,                         1,                        1,                      1,               1,              1,            1,                    1,                   1
//      P051_ERASURE_BER_DELTAS_COL_TYPES          //           N,         N,        N,        N,      N,               N,              N,                     N,                    N,                     N,                    N,                  N,                  N,                         N,                        N,                      N,               N,              N,            N,                    N,                   N
//      P051_ERASURE_BER_DELTAS_TABLE_TYPE         // S
#define P051_STE_ATI_SUMMARY                65130  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,NUM_WRT,TRK_TYPE,MIN_HARD_BER,MIN_HARD_BER_TRK,MIN_BITS_IN_ERR_BER,MIN_BITS_IN_ERR_BER_TRK,MAX_HRD_ERR_CNT,MAX_HRD_ERR_CNT_TRK,STD_DEV_BIE_BER
//      P051_STE_ATI_SUMMARY_COL_WIDTH             //          11,        10,        9,      7,       8,          12,              16,                 19,                     23,             15,                 19,             15
//      P051_STE_ATI_SUMMARY_COL_MASK              //           0,         0,        0,      0,       0,           0,               0,                  0,                      0,              0,                  0,              0
//      P051_STE_ATI_SUMMARY_COL_TYPES             // *
//      P051_STE_ATI_SUMMARY_TABLE_TYPE            // S
#define P051_DELTA_STE_ATI                  65131  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,NUM_WRT,DELTA_HARD_BER,DELTA_BIE_BER,DELTA_HARD_ERR
//      P051_DELTA_STE_ATI_COL_WIDTH               //          11,        10,        9,      7,            14,           13,            14
//      P051_DELTA_STE_ATI_COL_MASK                //           0,         0,        0,      0,             0,            0,             0
//      P051_DELTA_STE_ATI_COL_TYPES               // *
//      P051_DELTA_STE_ATI_TABLE_TYPE              // S
#define P051_ERASURE_BER_DELTA              65132  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_NUM,DELTA_BITS_IN_ERROR_BER,DELTA_OTF_BER
//      P051_ERASURE_BER_DELTA_COL_WIDTH           //          11,        10,        9,      7,                     23,           13
//      P051_ERASURE_BER_DELTA_COL_MASK            //           0,         0,        0,      0,                      0,            0
//      P051_ERASURE_BER_DELTA_COL_TYPES           // *
//      P051_ERASURE_BER_DELTA_TABLE_TYPE          // S
#define P380_HD_STATUS                      65133  // HD_PHYS_PSN,HD_LGC_PSN,HEAD_STATUS
//      P380_HD_STATUS_COL_WIDTH                   //          11,        10,         11
//      P380_HD_STATUS_COL_MASK                    //           0,         0,          0
//      P380_HD_STATUS_COL_TYPES                   // *
//      P380_HD_STATUS_TABLE_TYPE                  // V
#define P_BURNISH_SUMMARY_ZN                65134  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,HEATER,PREAMP_MFGR,CURRENT_OP,INTL_OP_MSRD_CNTCT_DAC,INTL_OP_INTRPLTD_CNTCT_DAC,PREV_OP_MSRD_CNTCT_DAC,PREV_OP_INTRPLTD_CNTCT_DAC,CURRENT_OP_MSRD_CNTCT_DAC,CURRENT_OP_INTRPLTD_CNTCT_DAC,DCLR_M2M_PREV,DCLR_M2M_INTL,DCLR_M2I_PREV,DCLR_M2I_INTL,DCLR_I2I_PREV,DCLR_I2I_INTL,MEDN_DCLR_M2M_PREV,MEDN_DCLR_M2M_INTL,MEDN_DCLR_M2I_PREV,MEDN_DCLR_M2I_INTL,MEDN_DCLR_I2I_PREV,MEDN_DCLR_I2I_INTL,THCC_DAC_PREV,THCC_DAC_INTL,DDAC_M2M_PREV,DDAC_M2M_INTL,DDAC_M2I_PREV,DDAC_M2I_INTL,DDAC_I2I_PREV,DDAC_I2I_INTL,MEDN_DDAC_M2M_PREV,MEDN_DDAC_M2M_INTL,MEDN_DDAC_M2I_PREV,MEDN_DDAC_M2I_INTL,MEDN_DDAC_I2I_PREV,MEDN_DDAC_I2I_INTL,BURNISH_CODE,POS_DELTA_LIMIT,NEG_DELTA_LIMIT,PREV_BER,CURRENT_BER,DELTA_BER,ACCMLTD_DDAC_COLD,ACCMLTD_DCLR_COLD,PREV_TEMP,CURRENT_TEMP,DELTA_TEMP,PREV_RES,CURRENT_RES,DELTA_RES,PREV_MIX_RATIO,CURRENT_MIX_RATIO,PREV_RAW_HUMIDITY,CURRENT_RAW_HUMIDITY,HIRP_LCOEF,HIRP_QCOEF,HTR_RES_OTCLR,DETCR_RESISTANCE,NUM_RETRY
//      P_BURNISH_SUMMARY_ZN_COL_WIDTH             //          11,        10,        9,     7,         11,        10,                    22,                        26,                    23,                        26,                       25,                           29,           13,           13,           13,           13,           13,           13,                18,                18,                18,                18,                18,                18,           13,           13,           13,           13,           13,           13,           13,           13,                18,                18,                18,                18,                18,                18,          12,             15,             15,       8,         11,        9,               17,               17,        9,          12,        10,       8,         11,        9,            14,               17,               17,                  20,        10,        10,           13,              16,        9
//      P_BURNISH_SUMMARY_ZN_COL_MASK              //           1,         1,        1,     1,          1,         1,                     1,                         1,                     1,                         1,                        1,                            1,            1,            1,            1,            1,            1,            1,                 1,                 1,                 1,                 1,                 1,                 1,            1,            1,            1,            1,            1,            1,            1,            1,                 1,                 1,                 1,                 1,                 1,                 1,           1,              1,              1,       1,          1,        1,                1,                1,        1,           1,         1,       1,          1,        1,             1,                1,                1,                   1,         1,         1,            1,               1,        1
//      P_BURNISH_SUMMARY_ZN_COL_TYPES             //           N,         N,        N,     V,          V,         V,                     N,                         N,                     N,                         N,                        N,                            N,            N,            N,            N,            N,            N,            N,                 N,                 N,                 N,                 N,                 N,                 N,            N,            N,            N,            N,            N,            N,            N,            N,                 N,                 N,                 N,                 N,                 N,                 N,           N,              N,              N,       N,          N,        N,                N,                N,        N,           N,         N,       N,          N,        N,             N,                N,                N,                   N,         N,         N,            N,               N,        N
//      P_BURNISH_SUMMARY_ZN_TABLE_TYPE            // S
#define P303_DOS_MARGIN_SCRN                65135  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,DOS_THRSHLD,ATI_CYL_OFST,ATI_DOS_MRGN,STE_CYL_OFST,STE_DOS_MRGN
//      P303_DOS_MARGIN_SCRN_COL_WIDTH             //          11,        10,        9,         11,          12,          12,          12,          12
//      P303_DOS_MARGIN_SCRN_COL_MASK              //           0,         0,        0,          0,           0,           0,           0,           0
//      P303_DOS_MARGIN_SCRN_COL_TYPES             // *
//      P303_DOS_MARGIN_SCRN_TABLE_TYPE            // S
#define P_LUL_CURRENT_SUMMARY               65136  // PRE_AVG_CUR,POST_AVG_CUR,POST_MAX_CUR,DELTA_CUR,DELTA_LIMIT
//      P_LUL_CURRENT_SUMMARY_COL_WIDTH            //          11,          12,          12,        9,         11
//      P_LUL_CURRENT_SUMMARY_COL_MASK             //           1,           1,           1,        1,          1
//      P_LUL_CURRENT_SUMMARY_COL_TYPES            //           N,           N,           N,        N,          N
//      P_LUL_CURRENT_SUMMARY_TABLE_TYPE           // S
#define P051_128_400_COMBO_TABLE            65137  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,TRK_INDEX,HARD_ERR_CNT_128,HARD_ERR_CNT_400,BITS_IN_ERROR_BER_128,BITS_IN_ERROR_BER_400,DELTA_BIE_BER
//      P051_128_400_COMBO_TABLE_COL_WIDTH         //          11,        10,        9,        9,              16,              16,                   21,                   21,           13
//      P051_128_400_COMBO_TABLE_COL_MASK          //           0,         0,        0,        0,               0,               0,                    0,                    0,            0
//      P051_128_400_COMBO_TABLE_COL_TYPES         // *
//      P051_128_400_COMBO_TABLE_TABLE_TYPE        // S
#define P_TCC_BY_BER                        65138  // HD_PHYS_PSN,HD_LGC_PSN,SEGMENT,DATA_ZONE,STEP,STEP_SIZE,NEW_TCC1,ORIG_TCC1,TARGET_BER,FINAL_BER,START_BER,SLOPE_TYPE,DIRECTION,REVERT,DELTA_PRE_HEAT,DELTA_WRT_HEAT,DELTA_RD_HEAT
//      P_TCC_BY_BER_COL_WIDTH                     //          11,        10,      7,        9,   4,        9,       8,        9,        10,        9,        9,        10,        9,     6,            14,            14,           13
//      P_TCC_BY_BER_COL_MASK                      //           0,         0,      0,        0,   0,        0,       0,        0,         0,        0,        0,         0,        0,     0,             0,             0,            0
//      P_TCC_BY_BER_COL_TYPES                     // *
//      P_TCC_BY_BER_TABLE_TYPE                    // S
#define P451_MSMR_SWEEP_DATA                65139  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,DATA_ZONE,RGSTR_ID,TEST_ORDER,RGSTR_VAL,RGSTR_BER,RGSTR_BIE,ITERATIONS,CW_FR,AGC0,TAP2_R0,TAP3_R0,TAP4_R0,TAP5_R0,TAP6_R0,AGC1,TAP2_R1,TAP3_R1,TAP4_R1,TAP5_R1,TAP6_R1
//      P451_MSMR_SWEEP_DATA_COL_WIDTH             //          11,        10,          12,         11,        9,       8,        10,        9,        9,        9,        10,    5,   4,      7,      7,      7,      7,      7,   4,      7,      7,      7,      7,      7
//      P451_MSMR_SWEEP_DATA_COL_MASK              //           1,         1,           1,          1,        1,       1,         1,        1,        1,        1,         1,    1,   1,      1,      1,      1,      1,      1,   1,      1,      1,      1,      1,      1
//      P451_MSMR_SWEEP_DATA_COL_TYPES             //           N,         N,           N,          N,        N,       V,         N,        N,        N,        N,         N,    N,   N,      N,      N,      N,      N,      N,   N,      N,      N,      N,      N,      N
//      P451_MSMR_SWEEP_DATA_TABLE_TYPE            // S
#define P451_MSMR_SWEEP_DATA_EXT            65140  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,DATA_ZONE,RGSTR_ID,TEST_ORDER,RGSTR_VAL,RGSTR_BER,RGSTR_BIE,ITERATIONS,CW_FR,AGC0,TAP0_R0,TAP1_R0,TAP2_R0,TAP3_R0,TAP4_R0,TAP5_R0,TAP6_R0,TAP7_R0,TAP8_R0,TAP9_R0,AGC1,TAP0_R1,TAP1_R1,TAP2_R1,TAP3_R1,TAP4_R1,TAP5_R1,TAP6_R1,TAP7_R1,TAP8_R1,TAP9_R1,AUX_VAL
//      P451_MSMR_SWEEP_DATA_EXT_COL_WIDTH         //          11,        10,          12,         11,        9,       8,        10,        9,        9,        9,        10,    5,   4,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,   4,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7,      7
//      P451_MSMR_SWEEP_DATA_EXT_COL_MASK          //           1,         1,           1,          1,        1,       1,         1,        1,        1,        1,         1,    1,   1,      1,      1,      1,      1,      1,      1,      1,      1,      1,      1,   1,      1,      1,      1,      1,      1,      1,      1,      1,      1,      1,      1
//      P451_MSMR_SWEEP_DATA_EXT_COL_TYPES         //           N,         N,           N,          N,        N,       V,         N,        N,        N,        N,         N,    N,   N,      N,      N,      N,      N,      N,      N,      N,      N,      N,      N,   N,      N,      N,      N,      N,      N,      N,      N,      N,      N,      N,      N
//      P451_MSMR_SWEEP_DATA_EXT_TABLE_TYPE        // S
#define P451_MSMR_ATTN_VGA                  65141  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,DATA_ZONE,TEST_ORDER,ATTC_RD,ATT2R,ATT2S,VGAS,VGAR,OPTI_BER,OPTI_BIE,OPTI_ITRTN,HD_STATUS
//      P451_MSMR_ATTN_VGA_COL_WIDTH               //          11,        10,          12,         11,        9,        10,      7,    5,    5,   4,   4,       8,       8,        10,        9
//      P451_MSMR_ATTN_VGA_COL_MASK                //           1,         1,           1,          1,        1,         1,      1,    1,    1,   1,   1,       1,       1,         1,        1
//      P451_MSMR_ATTN_VGA_COL_TYPES               //           N,         N,           N,          N,        N,         N,      N,    N,    N,   N,   N,       N,       N,         N,        N
//      P451_MSMR_ATTN_VGA_TABLE_TYPE              // S
#define P451_MSMR_DERIVED_OPTI              65142  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,DATA_ZONE,SKIPPED_PARAMS,OPTI_PARAMS,ZONE_SKIPPED,INITIAL_BER,FINAL_BER,BER_DELTA,HD_STATUS
//      P451_MSMR_DERIVED_OPTI_COL_WIDTH           //          11,        10,          12,         11,        9,            14,         11,          12,         11,        9,        9,        9
//      P451_MSMR_DERIVED_OPTI_COL_MASK            //           1,         1,           1,          1,        1,             1,          1,           1,          1,        1,        1,        1
//      P451_MSMR_DERIVED_OPTI_COL_TYPES           //           N,         N,           N,          N,        N,             N,          N,           N,          N,        N,        N,        N
//      P451_MSMR_DERIVED_OPTI_TABLE_TYPE          // S
#define P451_MSMR_OPTI_RESULTS              65143  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,DATA_ZONE,TRK_NUM,RGSTR_ID,TEST_ORDER,OPTI_VAL,OPTI_BER,OPTI_BIE,OPTI_ITER,PRIOR_OPTI_VAL,PRIOR_OPTI_BER,CLEARANCE_PCT,SQZ_PCT,PICK_TYPE
//      P451_MSMR_OPTI_RESULTS_COL_WIDTH           //          11,        10,          12,         11,        9,      7,       8,        10,       8,       8,       8,        9,            14,            14,           13,      7,        9
//      P451_MSMR_OPTI_RESULTS_COL_MASK            //           1,         1,           1,          1,        1,      1,       1,         1,       1,       1,       1,        1,             1,             1,            1,      1,        1
//      P451_MSMR_OPTI_RESULTS_COL_TYPES           //           N,         N,           N,          N,        N,      N,       V,         N,       N,       N,       N,        N,             N,             N,            N,      N,        N
//      P451_MSMR_OPTI_RESULTS_TABLE_TYPE          // S
#define P451_MSMR_STATUS                    65144  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,DATA_ZONE,TRK_NUM,INITIAL_BER,FINAL_BER,BER_DELTA,SAVE_OPTI_VAL,HD_STATUS
//      P451_MSMR_STATUS_COL_WIDTH                 //          11,        10,          12,         11,        9,      7,         11,        9,        9,           13,        9
//      P451_MSMR_STATUS_COL_MASK                  //           1,         1,           1,          1,        1,      1,          1,        1,        1,            1,        1
//      P451_MSMR_STATUS_COL_TYPES                 //           N,         N,           N,          N,        N,      N,          N,        N,        N,            N,        N
//      P451_MSMR_STATUS_TABLE_TYPE                // S
#define P_GOTF_TOOL_SUMMARY                 65145  // BSNS_GRP,GRADE_MODE,GRADE_REV,PARAM_GRP,PARAM_NAME,PARAM_ITEM,PARAM_VAL
//      P_GOTF_TOOL_SUMMARY_COL_WIDTH              //        8,        10,        9,        9,        10,        10,        9
//      P_GOTF_TOOL_SUMMARY_COL_MASK               //        1,         1,        1,        1,         1,         1,        1
//      P_GOTF_TOOL_SUMMARY_COL_TYPES              //        V,         V,        N,        V,         V,         V,        V
//      P_GOTF_TOOL_SUMMARY_TABLE_TYPE             // S
#define P061_OVERWRITE_AVG                  65146  // HD_PHYS_PSN,DATA_ZONE,HD_LGC_PSN,AVG_OVERWRITE
//      P061_OVERWRITE_AVG_COL_WIDTH               //          11,        9,        10,           13
//      P061_OVERWRITE_AVG_COL_MASK                //           0,        0,         0,            0
//      P061_OVERWRITE_AVG_COL_TYPES               // *
//      P061_OVERWRITE_AVG_TABLE_TYPE              // S
#define P321_DELTA_MR_01                    65147  // HD_PHYS_PSN,HD_LGC_PSN,ORIGINAL_RES,CURRENT_RES,PCNT_DELTA_RES,HD_STATUS
//      P321_DELTA_MR_01_COL_WIDTH                 //          11,        10,          12,         11,            14,        9
//      P321_DELTA_MR_01_COL_MASK                  //           1,         1,           1,          1,             1,        1
//      P321_DELTA_MR_01_COL_TYPES                 //           N,         N,           N,          N,             N,        N
//      P321_DELTA_MR_01_TABLE_TYPE                // S
#define P321_DELTA_MR_02                    65148  // HD_PHYS_PSN,HD_LGC_PSN,ORIGINAL_RES,CURRENT_RES,PCNT_DELTA_RES,HD_STATUS
//      P321_DELTA_MR_02_COL_WIDTH                 //          11,        10,          12,         11,            14,        9
//      P321_DELTA_MR_02_COL_MASK                  //           1,         1,           1,          1,             1,        1
//      P321_DELTA_MR_02_COL_TYPES                 //           N,         N,           N,          N,             N,        N
//      P321_DELTA_MR_02_TABLE_TYPE                // S
#define P508_SSD_MICRON_INQUIRY             65149  // INQUIRY_0_95,WWN,SECTOR_SIZE
//      P508_SSD_MICRON_INQUIRY_COL_WIDTH          //           96, 32,          8
//      P508_SSD_MICRON_INQUIRY_COL_MASK           //            1,  1,          1
//      P508_SSD_MICRON_INQUIRY_COL_TYPES          //            V,  V,          V
//      P508_SSD_MICRON_INQUIRY_TABLE_TYPE         // S
#define P663_SUMMARY                        65150  // STATE_NAME,HD_PHYS_PSN,HD_LGC_PSN,HEAD_UNSTABLE_FAILURE,TOTAL_BITS_SET_FAIL,FAIL_MODE_0,FAIL_MODE_1,FAIL_MODE_2,FAIL_MODE_3,FAIL_MODE_4,FAIL_MODE_5,FAIL_MODE_6,FAIL_MODE_7,FAIL_MODE_8,T663_FLAG,HIDDEN_ERR_CNT_FINAL,VISIBLE_ERR_CNT_FINAL,NON_REC_ERR_CNT_FINAL,P_F_FLAG,T663_FAIL_MODE,TIME_TO_FAIL,MEDIAN_DELTA_BER
//      P663_SUMMARY_COL_WIDTH                     //         10,         11,        10,                   21,                 19,         40,         40,         40,         40,         40,         40,         40,         40,         40,        9,                  20,                   21,                   21,       8,            14,          12,              16
//      P663_SUMMARY_COL_MASK                      //          1,          1,         1,                    1,                  1,          1,          1,          1,          1,          1,          1,          1,          1,          1,        1,                   1,                    1,                    1,       1,             1,           1,               1
//      P663_SUMMARY_COL_TYPES                     //          V,          N,         N,                    V,                  N,          V,          V,          V,          V,          V,          V,          V,          V,          V,        V,                   N,                    N,                    N,       V,             V,           N,               N
//      P663_SUMMARY_TABLE_TYPE                    // S
#define P_VBAR_ISO_SKIPTRK_CAP              65151  // HD_PHYS_PSN,HD_LGC_PSN,ISO_SKIPTRK_CAP
//      P_VBAR_ISO_SKIPTRK_CAP_COL_WIDTH           //          11,        10,             15
//      P_VBAR_ISO_SKIPTRK_CAP_COL_MASK            //           0,         0,              0
//      P_VBAR_ISO_SKIPTRK_CAP_COL_TYPES           // *
//      P_VBAR_ISO_SKIPTRK_CAP_TABLE_TYPE          // S
#define P_SSD_DRIVE_TEMP_LOG                65152  // LOG_ID,TIME_STAMP,TEMP_1,TEMP_2,TEMP_3,TEMP_4,TEMP_5,CELL_TEMP,VOLTS_5,AMPS_5,WATTS_5,VOLTS_12,AMPS_12,WATTS_12
//      P_SSD_DRIVE_TEMP_LOG_COL_WIDTH             //     20,        10,     6,     6,     6,     6,     6,        9,      7,     6,      7,       8,      7,       8
//      P_SSD_DRIVE_TEMP_LOG_COL_MASK              //      1,         1,     1,     1,     1,     1,     1,        1,      1,     1,      1,       1,      1,       1
//      P_SSD_DRIVE_TEMP_LOG_COL_TYPES             //      V,         V,     N,     N,     N,     N,     N,        N,      N,     N,      N,       N,      N,       N
//      P_SSD_DRIVE_TEMP_LOG_TABLE_TYPE            // S
#define P_SSD_GENERIC_TEST_LOG              65153  // TIME_STAMP,LOG_ID,LOG_LABEL,LOG_VALUE
//      P_SSD_GENERIC_TEST_LOG_COL_WIDTH           //         10,    16,       20,      100
//      P_SSD_GENERIC_TEST_LOG_COL_MASK            //          1,     1,        1,        1
//      P_SSD_GENERIC_TEST_LOG_COL_TYPES           //          V,     N,        V,        V
//      P_SSD_GENERIC_TEST_LOG_TABLE_TYPE          // S
#define P_SSD_NAND_CALIBRATION              65154  // CHANNEL,OPTIMAL_DLL,WINDOW_SIZE
//      P_SSD_NAND_CALIBRATION_COL_WIDTH           //       7,         11,         11
//      P_SSD_NAND_CALIBRATION_COL_MASK            //       1,          1,          1
//      P_SSD_NAND_CALIBRATION_COL_TYPES           //       N,          N,          N
//      P_SSD_NAND_CALIBRATION_TABLE_TYPE          // S
#define P_VBAR_INITIAL_ADC_INFO             65155  // HD_LGC_PSN,HD_PHYS_PSN,INIT_CAPA,NET_CAPA,MEDIA_CACHE,ISO_OVERHEAD,OP_BAND_SIZE,RESERVED_CAPA
//      P_VBAR_INITIAL_ADC_INFO_COL_WIDTH          //         10,         11,        9,       8,         11,          12,          12,           13
//      P_VBAR_INITIAL_ADC_INFO_COL_MASK           //          0,          0,        0,       0,          0,           0,           0,            0
//      P_VBAR_INITIAL_ADC_INFO_COL_TYPES          // *
//      P_VBAR_INITIAL_ADC_INFO_TABLE_TYPE         // S
#define P135_TCS_BY_ZONE                    65156  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,RD_CLR_AFH3,RD_CLR_AFH4,MIXED_RATIO,DELTA_TEMP,HCS_COEFF,CORR_RCLR,PTCS,ACTIVE_HEATER
//      P135_TCS_BY_ZONE_COL_WIDTH                 //          11,        10,        9,         11,         11,         11,        10,        9,        9,  13,           13
//      P135_TCS_BY_ZONE_COL_MASK                  //           0,         0,        0,          0,          0,          0,         0,        0,        0,   0,            0
//      P135_TCS_BY_ZONE_COL_TYPES                 // *
//      P135_TCS_BY_ZONE_TABLE_TYPE                // S
#define P135_TCS_BY_ZONE_ADDER              65157  // HD_PHYS_PSN,HD_LGC_PSN,DATA_ZONE,PTCS_MEAN_WH,PTCS_MEAN_RH,PTCS_ADDER,PTCS_MEAN_WH_CLAMPED,PTCS_MEAN_RH_CLAMPED,PTCS_ADDER_CLAMPED
//      P135_TCS_BY_ZONE_ADDER_COL_WIDTH           //          11,        10,        9,          12,          12,        20,                  20,                  20,                18
//      P135_TCS_BY_ZONE_ADDER_COL_MASK            //           0,         0,        0,           0,           0,         0,                   0,                   0,                 0
//      P135_TCS_BY_ZONE_ADDER_COL_TYPES           // *
//      P135_TCS_BY_ZONE_ADDER_TABLE_TYPE          // S
#define P_FAFH_STATE_MACHINE2               65158  // INTRVL,FRAME,TRIG_CNT,TRIG_TYPE,DIAMETER,HD_PHYS_PSN,HD_LGC_PSN,ITER,RTY_CNT,START_TIME,DAC_IN,DAC_OUT,PRED_INTVL,HIRP_SLOPE,HIRP_SLOPE_DELTA,MSRD_HIRP,AMP_RATIO_PASS,AMP_RATIO_ACT,LF_AMP_PASS,LF_AMP_ACT,HF_AMP_PASS,HF_AMP_ACT,RD_CLR_PASS,RD_CLR_ACT,TARG_CLR_DELTA,FLTR_TARG_CLR_DELTA,TEMP,MIX_RATIO,ALTITUDE,CLR_DELTA_TEMP_R,CLR_DELTA_TEMP_W,CLR_DELTA_HUM,CLR_DELTA_ALT,FAFH_CLR_DELTA,MSRMNT_STATUS,ADJ_STATUS,EXT_STATUS,CONVG_RATE,RES_CHNG,AVG_TIME
//      P_FAFH_STATE_MACHINE2_COL_WIDTH            //      6,    5,       8,        9,       8,         11,        10,   4,      7,        10,     6,      7,        11,        11,              16,       11,            14,           13,         11,        10,         11,        10,         11,        10,            14,                 19,   4,        9,       8,              16,              16,           13,           13,            14,           13,        10,        10,        10,       8,      10
//      P_FAFH_STATE_MACHINE2_COL_MASK             //      0,    0,       0,        0,       0,          0,         0,   0,      0,         0,     0,      0,         0,         0,               0,        0,             0,            0,          0,         0,          0,         0,          0,         0,             0,                  0,   0,        0,       0,               0,               0,            0,            0,             0,            0,         0,         0,         0,       0,       0
//      P_FAFH_STATE_MACHINE2_COL_TYPES            // *
//      P_FAFH_STATE_MACHINE2_TABLE_TYPE           // S
#define P_GENERIC_METRIC                    65159  // DIMENSION0,DIMENSION1,METRIC
//      P_GENERIC_METRIC_COL_WIDTH                 //         10,        10,     6
//      P_GENERIC_METRIC_COL_MASK                  //          0,         0,     0
//      P_GENERIC_METRIC_COL_TYPES                 // *
//      P_GENERIC_METRIC_TABLE_TYPE                // S

#define P_FAFH_STATE_MACHINE                65160  // HD_PHYS_PSN,TRIG_CNT,TRIG_TYPE,DIAM,ITR,RETRY_CNT,PRED_INTVL,ACTIVE_HIRP_SLOPE,HIRP_SLOPE_ERROR,MSRD_HIRP,LF_REF,LF_ACT,HF_REF,HF_ACT,PASSIVE_CLR,ACTIVE_CLR,FAFH_CLR_DELTA,FILTRD_FAFH_CLR_DELTA,TEMP,MIX_RATIO,ALTITUDE,DELTA_CLR_TEMP_R,DELTA_CLR_TEMP_W,DELTA_CLR_HUM_R,DELTA_CLR_HUM_W,DELTA_CLR_ALT_R,DELTA_CLR_ALT_W,RAP_FAFH_DELTA_W,RAP_FAFH_DELTA_R,MSRMNT_STATUS,ADJ_STATUS,EXT_STATUS,CONVRG_RATE,HD_LGC_PSN
//      P_FAFH_STATE_MACHINE_COL_WIDTH             //          11,      10,        9,   4,  3,        9,        10,               17,              16,        9,     6,     6,     6,     6,         11,        10,            14,                   21,   4,        9,       8,              16,              16,             15,             15,             15,             15,              16,              16,           13,        10,        10,         11,        10
//      P_FAFH_STATE_MACHINE_COL_MASK              //           0,       0,        0,   0,  0,        0,         0,                0,               0,        0,     0,     0,     0,     0,          0,         0,             0,                    0,   0,        0,       0,               0,               0,              0,              0,              0,              0,               0,               0,            0,         0,         0,          0,         0
//      P_FAFH_STATE_MACHINE_COL_TYPES             // *
//      P_FAFH_STATE_MACHINE_TABLE_TYPE            // S

#define P_SERVO_READER_FITNESS              65161  // HD_PHYS_PSN,HD_LGC_PSN,RDR_PHYS_PSN,RDR_LGC_PSN,RDR_FITNESS
//      P_SERVO_READER_FITNESS_COL_WIDTH           //          11,        11,          12,         11,         11
//      P_SERVO_READER_FITNESS_COL_MASK            //           0,         0,           0,          0,          0
//      P_SERVO_READER_FITNESS_COL_TYPES           // *
//      P_SERVO_READER_FITNESS_TABLE_TYPE          // S
/****************************************************************************************************************************

 #     #    ##    #####    #    #  ###  #    #   ####
 #  #  #   #  #   #    #   # #  #   #   # #  #  #
 # # # #  ######  #####    #  # #   #   #  # #  #  ###
 ##   ##  #    #  #    #   #   ##   #   #   ##  #    #
 #     #  #    #  #     #  #    #  ###  #    #   ####

 Check the deprecation and modification policies at the top of this file before making changes.

*****************************************************************************************************************************/



// *******************  This table definition is for DBLog reporting system initialization ONLY. ***********
#define P_UNUSED_DBLG_TBL_NAME_CD           65535  // *
//      P_UNUSED_DBLG_TBL_NAME_CD_COL_WIDTH        // 1
//      P_UNUSED_DBLG_TBL_NAME_CD_COL_MASK         // 0
//      P_UNUSED_DBLG_TBL_NAME_CD_COL_TYPES        // *
//      P_UNUSED_DBLG_TBL_NAME_CD_TABLE_TYPE       // S
